{"version":3,"file":"band-BnS7E7gT.js","sources":["../../node_modules/.pnpm/d3-array@3.2.4/node_modules/d3-array/src/range.js","../../node_modules/.pnpm/d3-scale@4.0.2/node_modules/d3-scale/src/band.js"],"sourcesContent":["export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n"],"names":["range","start","stop","step","n","i","band","scale","ordinal","domain","ordinalRange","r0","r1","bandwidth","round","paddingInner","paddingOuter","align","rescale","reverse","values","sequence","_","initRange","pointish","copy","point"],"mappings":"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","x_google_ignoreList":[0,1]}