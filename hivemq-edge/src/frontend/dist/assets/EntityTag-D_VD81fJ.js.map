{"version":3,"file":"EntityTag-D_VD81fJ.js","sources":["../../src/components/MQTT/topic-utils.ts","../../src/components/MQTT/EntityTag.tsx"],"sourcesContent":["const TOPIC_SEPARATOR = ' / '\n\nexport const formatTopicString = (topic: string) => topic.split('/').join(TOPIC_SEPARATOR)\n","import type { FC, ReactNode } from 'react'\nimport type { TagProps } from '@chakra-ui/react'\nimport { Tag, TagLabel } from '@chakra-ui/react'\n\nimport { formatTopicString } from '@/components/MQTT/topic-utils.ts'\nimport { ClientIcon, PLCTagIcon, TopicFilterIcon, TopicIcon } from '@/components/Icons/TopicIcon.tsx'\n\n// TODO[NVL] Not sure adding ReactNode as possible children is a good move.\ninterface CustomTagProps extends TagProps {\n  tagTitle: ReactNode\n}\n\ninterface EntityTagProps extends CustomTagProps {\n  tagIcon: React.ElementType\n  colorScheme?: string\n}\n\nexport const EntityTag: FC<EntityTagProps> = ({ tagTitle, tagIcon: TagIcon, colorScheme, ...rest }) => {\n  const expandedTagTitle = typeof tagTitle === 'string' ? formatTopicString(tagTitle) : tagTitle\n  return (\n    <Tag data-testid=\"topic-wrapper\" {...rest} letterSpacing=\"-0.05rem\" colorScheme={colorScheme}>\n      <TagIcon boxSize=\"12px\" mr={2} />\n      {typeof tagTitle === 'string' ? <TagLabel>{expandedTagTitle}</TagLabel> : tagTitle}\n    </Tag>\n  )\n}\n\nexport const PLCTag: FC<CustomTagProps> = ({ tagTitle }) => (\n  <EntityTag tagIcon={PLCTagIcon} tagTitle={tagTitle} colorScheme=\"blue\" />\n)\n\nexport const ClientTag: FC<CustomTagProps> = ({ tagTitle, ...rest }) => (\n  <EntityTag tagIcon={ClientIcon} tagTitle={tagTitle} {...rest} />\n)\n\nexport const Topic: FC<CustomTagProps> = ({ tagTitle, ...rest }) => (\n  <EntityTag tagIcon={TopicIcon} tagTitle={tagTitle} {...rest} colorScheme=\"gray\" />\n)\n\nexport const TopicFilter: FC<CustomTagProps> = ({ tagTitle, ...rest }) => (\n  <EntityTag tagIcon={TopicFilterIcon} tagTitle={tagTitle} {...rest} colorScheme=\"cyan\" />\n)\n"],"names":["TOPIC_SEPARATOR","formatTopicString","topic","EntityTag","tagTitle","TagIcon","colorScheme","rest","expandedTagTitle","jsxs","Tag","jsx","TagLabel","PLCTag","PLCTagIcon","ClientTag","ClientIcon","Topic","TopicIcon","TopicFilter","TopicFilterIcon"],"mappings":"ybAAA,MAAMA,EAAkB,MAEXC,EAAqBC,GAAkBA,EAAM,MAAM,GAAG,EAAE,KAAKF,CAAe,ECe5EG,EAAgC,CAAC,CAAE,SAAAC,EAAU,QAASC,EAAS,YAAAC,EAAa,GAAGC,KAAW,CACrG,MAAMC,EAAmB,OAAOJ,GAAa,SAAWH,EAAkBG,CAAQ,EAAIA,EAEpF,OAAAK,OAACC,GAAI,cAAY,gBAAiB,GAAGH,EAAM,cAAc,WAAW,YAAAD,EAClE,SAAA,CAAAK,EAAA,IAACN,EAAQ,CAAA,QAAQ,OAAO,GAAI,EAAG,EAC9B,OAAOD,GAAa,SAAYO,EAAA,IAAAC,EAAA,CAAU,WAAiB,EAAcR,CAAA,EAC5E,CAEJ,EAEaS,EAA6B,CAAC,CAAE,SAAAT,CAAS,IACnDO,MAAAR,EAAA,CAAU,QAASW,EAAY,SAAAV,EAAoB,YAAY,MAAO,CAAA,EAG5DW,EAAgC,CAAC,CAAE,SAAAX,EAAU,GAAGG,CAAA,IAC3DI,EAAAA,IAACR,EAAU,CAAA,QAASa,EAAY,SAAAZ,EAAqB,GAAGG,CAAM,CAAA,EAGnDU,EAA4B,CAAC,CAAE,SAAAb,EAAU,GAAGG,CAAK,IAC3DI,EAAAA,IAAAR,EAAA,CAAU,QAASe,EAAW,SAAAd,EAAqB,GAAGG,EAAM,YAAY,MAAO,CAAA,EAGrEY,EAAkC,CAAC,CAAE,SAAAf,EAAU,GAAGG,CAAK,IACjEI,EAAAA,IAAAR,EAAA,CAAU,QAASiB,EAAiB,SAAAhB,EAAqB,GAAGG,EAAM,YAAY,MAAO,CAAA"}