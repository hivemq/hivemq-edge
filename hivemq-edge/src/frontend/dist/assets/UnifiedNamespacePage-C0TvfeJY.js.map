{"version":3,"file":"UnifiedNamespacePage-C0TvfeJY.js","sources":["../../src/modules/UnifiedNamespace/components/panels/InfoPanel.tsx","../../src/modules/UnifiedNamespace/components/panels/RecommendationPanel.tsx","../../src/modules/UnifiedNamespace/components/panels/PrefixPanel.tsx","../../src/api/hooks/useUnifiedNamespace/__handlers__/index.ts","../../src/modules/UnifiedNamespace/UnifiedNamespacePage.tsx"],"sourcesContent":["import type { FC } from 'react'\nimport { Button, Card, CardBody, CardFooter, CardHeader, Heading, Text } from '@chakra-ui/react'\nimport { GoLinkExternal } from 'react-icons/go'\nimport { useTranslation } from 'react-i18next'\nimport { Link as RouterLink } from 'react-router-dom'\nimport config from '@/config'\n\nconst InfoPanel: FC = () => {\n  const { t } = useTranslation()\n  const descriptions = t('unifiedNamespace.container.info.descriptions', { returnObjects: true }) as string[]\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h2\" size=\"md\">\n          {t('unifiedNamespace.container.info.title')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {descriptions.map((e, i) => (\n          <Text key={`description-${i}`}>{e}</Text>\n        ))}\n      </CardBody>\n      <CardFooter>\n        <Button\n          variant=\"link\"\n          as={RouterLink}\n          to={config.documentation.namespace}\n          target=\"hivemq:docs\"\n          leftIcon={<GoLinkExternal />}\n          data-testid=\"namespace-info-documentation\"\n          size=\"lg\"\n          whiteSpace=\"normal\"\n        >\n          {t('unifiedNamespace.container.info.link')}\n        </Button>\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default InfoPanel\n","import { useTranslation } from 'react-i18next'\nimport { Box, Card, CardBody, CardHeader, Flex, Heading, Text } from '@chakra-ui/react'\n\nimport NamespaceDisplay from '@/modules/UnifiedNamespace/components/NamespaceDisplay.tsx'\n\nconst RecommendationPanel = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h2\" size=\"md\">\n          {t('unifiedNamespace.container.recommend.title')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        <Flex flexDirection=\"column\">\n          <Box>\n            <Text as=\"span\"> {t('unifiedNamespace.container.recommend.by')}</Text>{' '}\n            <Text as=\"span\" fontSize=\"2xl\">\n              {t('unifiedNamespace.standard')}\n            </Text>\n          </Box>\n          <NamespaceDisplay\n            namespace={{\n              enterprise: 'Enterprise',\n              site: 'Site',\n              area: 'Area',\n              productionLine: 'Line',\n              workCell: 'Cell',\n            }}\n          />\n        </Flex>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default RecommendationPanel\n","import type { FC } from 'react'\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  Skeleton,\n  Switch,\n} from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\n\nimport type { ApiError, ISA95ApiBean } from '@/api/__generated__'\nimport { useSetUnifiedNamespace } from '@/api/hooks/useUnifiedNamespace/useSetUnifiedNamespace.ts'\nimport NamespaceDisplay from '@/modules/UnifiedNamespace/components/NamespaceDisplay.tsx'\nimport { useEdgeToast } from '@/hooks/useEdgeToast/useEdgeToast.tsx'\n\ninterface PrefixPanelProps {\n  data: ISA95ApiBean\n  isLoading?: boolean\n}\n\nconst PrefixPanel: FC<PrefixPanelProps> = ({ data, isLoading }) => {\n  const { t } = useTranslation()\n  const { mutateAsync } = useSetUnifiedNamespace()\n  const { successToast, errorToast } = useEdgeToast()\n\n  const handleOnChange = () => {\n    const isDisabling = data.enabled\n    mutateAsync({ requestBody: { ...data, enabled: !data.enabled } })\n      .then(() => {\n        successToast({\n          status: isDisabling ? 'info' : 'success',\n          title: t('unifiedNamespace.toast.update.title'),\n          description: !isDisabling\n            ? t('unifiedNamespace.toast.update.description')\n            : t('unifiedNamespace.toast.disabled.description'),\n        })\n      })\n      .catch((err: ApiError) =>\n        errorToast(\n          { title: t('unifiedNamespace.toast.update.title'), description: t('unifiedNamespace.toast.update.error') },\n          err\n        )\n      )\n  }\n  return (\n    <Card>\n      <CardHeader>\n        <Skeleton isLoaded={!isLoading}>\n          <Heading as=\"h2\" size=\"md\">\n            My namespace prefix\n          </Heading>\n        </Skeleton>\n      </CardHeader>\n      <CardBody>\n        <Skeleton isLoaded={!isLoading}>\n          <NamespaceDisplay namespace={data} />\n        </Skeleton>\n      </CardBody>\n      <CardFooter>\n        <Skeleton isLoaded={!isLoading}>\n          <FormControl>\n            <FormLabel htmlFor=\"unifiedNamespace-enabled\">{t('unifiedNamespace.enabled.label')}</FormLabel>\n            <Switch\n              id=\"unifiedNamespace-enabled\"\n              colorScheme=\"brand\"\n              isChecked={data.enabled}\n              onChange={handleOnChange}\n            />\n            <FormHelperText>{t('unifiedNamespace.enabled.helper')}</FormHelperText>\n          </FormControl>\n        </Skeleton>\n      </CardFooter>\n    </Card>\n  )\n}\n\nexport default PrefixPanel\n","import type { ISA95ApiBean } from '@/api/__generated__'\nimport { http, HttpResponse } from 'msw'\n\nexport const mockISA95ApiBean: ISA95ApiBean = {\n  enabled: false,\n  prefixAllTopics: true,\n  enterprise: 'enterprise',\n  site: 'site',\n  area: 'area',\n  productionLine: 'production-line',\n  workCell: 'work-cell',\n}\n\nexport const handlers = [\n  http.get('*/management/uns/isa95', () => {\n    return HttpResponse.json<ISA95ApiBean>(mockISA95ApiBean, { status: 200 })\n  }),\n\n  http.post('*/management/uns/isa95', () => {\n    return HttpResponse.json({}, { status: 200 })\n  }),\n]\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\nimport { Box, Button, Flex, SimpleGrid } from '@chakra-ui/react'\n\nimport { useGetUnifiedNamespace } from '@/api/hooks/useUnifiedNamespace/useGetUnifiedNamespace.ts'\nimport type { ProblemDetails } from '@/api/types/http-problem-details.ts'\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport PageContainer from '@/components/PageContainer.tsx'\nimport InfoPanel from '@/modules/UnifiedNamespace/components/panels/InfoPanel.tsx'\nimport RecommendationPanel from '@/modules/UnifiedNamespace/components/panels/RecommendationPanel.tsx'\nimport PrefixPanel from '@/modules/UnifiedNamespace/components/panels/PrefixPanel.tsx'\nimport { BiPlus } from 'react-icons/bi'\nimport { mockISA95ApiBean } from '@/api/hooks/useUnifiedNamespace/__handlers__'\nimport SuspenseOutlet from '@/components/SuspenseOutlet.tsx'\n\nconst UnifiedNamespacePage: FC = () => {\n  const { t } = useTranslation()\n  const { data, isError, isLoading, error } = useGetUnifiedNamespace()\n  const navigate = useNavigate()\n\n  const safeData = data ? data : mockISA95ApiBean\n\n  // if (isError) {\n  //   return (\n  //     <Box mt={8}>\n  //       <ErrorMessage type={error?.message} message={(error?.body as ProblemDetails)?.title} />\n  //     </Box>\n  //   )\n  // }\n  //\n  // if (isLoading || !data) {\n  //   return (\n  //     <Flex flexDirection={'row'} flexWrap={'wrap'} gap={'20px'}>\n  //       <Skeleton width={250} height={100}></Skeleton>\n  //     </Flex>\n  //   )\n  // }\n\n  return (\n    <PageContainer\n      title={t('unifiedNamespace.title')}\n      subtitle={t('unifiedNamespace.description')}\n      cta={\n        <Flex height=\"100%\" justifyContent=\"flex-end\" alignItems=\"flex-end\" pb={6}>\n          <Button\n            variant=\"primary\"\n            leftIcon={<BiPlus />}\n            onClick={() => navigate('/namespace/edit')}\n            isDisabled={isLoading || isError}\n          >\n            {t('unifiedNamespace.action.define')}\n          </Button>\n        </Flex>\n      }\n    >\n      {isError && (\n        <Box mt=\"20%\" mx=\"20%\" alignItems=\"center\">\n          <ErrorMessage\n            type={error?.message}\n            message={(error?.body as ProblemDetails)?.title || t('unifiedNamespace.error.loading')}\n          />\n        </Box>\n      )}\n      {!isError && (\n        <>\n          <SimpleGrid mt={8} spacing={6} templateColumns={{ base: 'repeat(1, 1fr)', lg: 'repeat(2, 1fr)' }} gap={6}>\n            <InfoPanel />\n            <SimpleGrid spacing={4} templateRows={{ base: 'repeat(1, 1fr)' }} gap={6}>\n              <RecommendationPanel />\n              <PrefixPanel data={safeData} isLoading={isLoading} />\n            </SimpleGrid>\n          </SimpleGrid>\n          <SuspenseOutlet />\n        </>\n      )}\n    </PageContainer>\n  )\n}\n\nexport default UnifiedNamespacePage\n"],"names":["InfoPanel","t","useTranslation","descriptions","Card","jsx","CardHeader","Heading","CardBody","e","i","Text","CardFooter","Button","RouterLink","config","GoLinkExternal","RecommendationPanel","jsxs","Flex","Box","NamespaceDisplay","PrefixPanel","data","isLoading","mutateAsync","useSetUnifiedNamespace","successToast","errorToast","useEdgeToast","handleOnChange","isDisabling","err","Skeleton","FormControl","FormLabel","Switch","FormHelperText","mockISA95ApiBean","http","HttpResponse","UnifiedNamespacePage","isError","error","useGetUnifiedNamespace","navigate","useNavigate","safeData","PageContainer","BiPlus","ErrorMessage","_a","Fragment","SimpleGrid","SuspenseOutlet"],"mappings":"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"}