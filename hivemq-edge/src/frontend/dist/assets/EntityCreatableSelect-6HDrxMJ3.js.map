{"version":3,"file":"EntityCreatableSelect-6HDrxMJ3.js","sources":["../../src/components/MQTT/types.ts","../../src/hooks/useGetEdgeTopics/useGetEdgeTopics.ts","../../src/components/MQTT/EntityCreatableSelect.tsx"],"sourcesContent":["export enum SelectEntityType {\n  TOPIC = 'TOPIC',\n  TOPIC_FILTER = 'TOPIC_FILTER',\n  TAG = 'TAG',\n}\n","import { useMemo } from 'react'\n\nimport type { ApiError } from '@/api/__generated__'\nimport { useGetAdapterTypes } from '@/api/hooks/useProtocolAdapters/useGetAdapterTypes.ts'\nimport { useListProtocolAdapters } from '@/api/hooks/useProtocolAdapters/useListProtocolAdapters.ts'\nimport { useListBridges } from '@/api/hooks/useGetBridges/useListBridges.ts'\n\nimport { mergeAllTopics } from '@/modules/Workspace/utils/topics-utils.ts'\n\ninterface EdgeTopics {\n  data: string[]\n  isLoading: boolean\n  isError: boolean\n  isSuccess: boolean\n  error: ApiError | null\n}\n\nexport interface EdgeTopicsOptions {\n  publishOnly?: boolean\n  branchOnly?: boolean\n  useOrigin?: boolean\n}\n\nconst defaultOptions: EdgeTopicsOptions = { publishOnly: true, branchOnly: false }\n\nexport const reduceTopicsBy = (options: EdgeTopicsOptions) => (prev: string[], cur: string) => {\n  if (options.publishOnly && cur.match(/[+#$]/gi)) return prev\n  if (options.branchOnly) {\n    const branch = cur.split('/')\n    const res = branch.slice(0, -1).join('/')\n    if (res.length) prev.push(res)\n    return prev\n  }\n  prev.push(cur)\n  return prev\n}\n\nexport const useGetEdgeTopics = (options?: EdgeTopicsOptions): EdgeTopics => {\n  const {\n    data: adapterTypes,\n    isLoading: isAdapterTypesLoading,\n    isError: isAdapterTypesError,\n    isSuccess: isAdapterTypeSuccess,\n    error: adapterTypesError,\n  } = useGetAdapterTypes()\n  const {\n    data: adapters,\n    isLoading: isAdapterLoading,\n    isSuccess: isAdapterSuccess,\n    isError: isAdapterError,\n    error: adapterError,\n  } = useListProtocolAdapters()\n  const {\n    data: bridges,\n    isLoading: isBridgeLoading,\n    isSuccess: isBridgeSuccess,\n    isError: isBridgeError,\n    error: bridgeError,\n  } = useListBridges()\n\n  const data = useMemo<string[]>(() => {\n    const _options = { ...defaultOptions, ...options }\n\n    return mergeAllTopics(adapterTypes, adapters, bridges, options?.useOrigin)\n      .reduce<string[]>(reduceTopicsBy(_options), [])\n      .sort()\n  }, [adapterTypes, adapters, bridges, options])\n\n  return {\n    data: data,\n    isSuccess: isAdapterTypeSuccess && isAdapterSuccess && isBridgeSuccess,\n    isLoading: isBridgeLoading || isAdapterLoading || isAdapterTypesLoading,\n    isError: isBridgeError || isAdapterError || isAdapterTypesError,\n    error: adapterTypesError || adapterError || bridgeError,\n  }\n}\n","import type { FC } from 'react'\nimport { useCallback, useMemo } from 'react'\nimport type {\n  GroupBase,\n  OptionBase,\n  SelectComponentsConfig,\n  OnChangeValue,\n  PropsValue,\n  MultiValue,\n  SingleValue,\n} from 'chakra-react-select'\nimport { chakraComponents, CreatableSelect, createFilter, Select } from 'chakra-react-select'\nimport type { IconProps } from '@chakra-ui/react'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\n\nimport { useGetDomainTags } from '@/api/hooks/useProtocolAdapters/useGetDomainTags.ts'\nimport { useListTopicFilters } from '@/api/hooks/useTopicFilters/useListTopicFilters.ts'\nimport { PLCTagIcon, TopicFilterIcon, TopicIcon } from '@/components/Icons/TopicIcon.tsx'\nimport { PLCTag, Topic, TopicFilter } from '@/components/MQTT/EntityTag.tsx'\nimport { SelectEntityType } from '@/components/MQTT/types.ts'\nimport { useGetEdgeTopics } from '@/hooks/useGetEdgeTopics/useGetEdgeTopics.ts'\n\ninterface EntityOption extends OptionBase {\n  label: string\n  value: string\n  description?: string\n  // __isNew__ is not exposed in the OptionBase\n  __isNew__?: boolean\n}\n\nconst customComponents = (\n  isMulti: boolean,\n  type: SelectEntityType\n): SelectComponentsConfig<EntityOption, boolean, GroupBase<EntityOption>> => ({\n  DropdownIndicator: null,\n  Option: ({ children, ...props }) => {\n    const { __isNew__ } = props.data\n    return (\n      <chakraComponents.Option {...props}>\n        <HStack>\n          {type === SelectEntityType.TOPIC && <TopicIcon mr={2} h={5} w={5} data-option-type={type} />}\n          {type === SelectEntityType.TAG && <PLCTagIcon mr={2} h={5} w={5} data-option-type={type} />}\n          {type === SelectEntityType.TOPIC_FILTER && <TopicFilterIcon mr={2} h={5} w={5} data-option-type={type} />}\n          <VStack gap={0} alignItems=\"flex-start\">\n            {!__isNew__ && <code>{props.data.label}</code>}\n            {__isNew__ && <Text>{props.data.label}</Text>}\n            <Text fontSize=\"sm\">{props.data.description}</Text>\n          </VStack>\n        </HStack>\n      </chakraComponents.Option>\n    )\n  },\n\n  Control: ({ children, ...props }) => (\n    <chakraComponents.Control {...props}>\n      {!isMulti && type === SelectEntityType.TOPIC && <TopicIcon mr={0} ml={3} data-option-type={type} />}\n      {!isMulti && type === SelectEntityType.TAG && <PLCTagIcon mr={0} ml={3} data-option-type={type} />}\n      {!isMulti && type === SelectEntityType.TOPIC_FILTER && <TopicFilterIcon mr={0} ml={3} data-option-type={type} />}\n      {children}\n    </chakraComponents.Control>\n  ),\n\n  MultiValueContainer: ({ children, ...props }) => {\n    return (\n      // TODO[NVL] removing the default style might cause side effects\n      <chakraComponents.MultiValueContainer {...props} sx={{}}>\n        {type === SelectEntityType.TOPIC && <Topic tagTitle={children} mr={3} />}\n        {type === SelectEntityType.TAG && <PLCTag tagTitle={children} mr={3} />}\n        {type === SelectEntityType.TOPIC_FILTER && <TopicFilter tagTitle={children} mr={3} />}\n      </chakraComponents.MultiValueContainer>\n    )\n  },\n})\n\ninterface EntitySelectProps {\n  id?: string\n  isCreatable?: boolean\n  isMulti?: boolean\n  type: SelectEntityType\n  isLoading: boolean\n  options: EntityOption[]\n  icon: FC<IconProps>\n  onChange: (newValue: OnChangeValue<string, boolean>) => void\n  value: PropsValue<string>\n}\n\nconst EntityCreatableSelect: FC<EntitySelectProps> = ({\n  type,\n  isCreatable = false,\n  isMulti = false,\n  options,\n  isLoading,\n  id,\n  onChange,\n  value,\n}) => {\n  const { t } = useTranslation('components')\n  const safeValue = useMemo(() => {\n    if (value === null) return null\n    if (isMulti) return (value as MultiValue<string>).map((value: string) => ({ label: value, value }))\n    return { label: value as string, value: value as string }\n  }, [isMulti, value])\n  const safeOnChange = useCallback(\n    (value: MultiValue<EntityOption> | SingleValue<EntityOption>) => {\n      if (value === null) {\n        onChange(null)\n        return\n      }\n      if (isMulti) {\n        onChange((value as MultiValue<EntityOption>).map((option) => option.value))\n        return\n      }\n\n      onChange((value as EntityOption).value)\n    },\n    [isMulti, onChange]\n  )\n\n  const filterConfig = {\n    trim: false,\n  }\n\n  const SelectComponent = isCreatable ? CreatableSelect : Select\n\n  return (\n    <SelectComponent<EntityOption, boolean, GroupBase<EntityOption>>\n      options={options}\n      isMulti={isMulti}\n      isLoading={isLoading}\n      aria-label={t('EntityCreatableSelect.aria-label', { context: type })}\n      placeholder={t('EntityCreatableSelect.placeholder', { context: type })}\n      noOptionsMessage={() => t('EntityCreatableSelect.options.noOptionsMessage', { context: type })}\n      formatCreateLabel={(entity) => t('EntityCreatableSelect.options.createLabel', { context: type, entity: entity })}\n      id={id}\n      instanceId={type}\n      inputId={`react-select-${type}-input`}\n      isClearable\n      isSearchable\n      selectedOptionStyle=\"check\"\n      components={customComponents(isMulti, type)}\n      filterOption={createFilter(filterConfig)}\n      value={safeValue}\n      onChange={safeOnChange}\n    />\n  )\n}\n\nexport default EntityCreatableSelect\n\ninterface CreateSelectableProps {\n  id?: string\n  isCreatable?: boolean\n  isMulti?: boolean\n  onChange: (newValue: OnChangeValue<string, boolean>) => void\n  value: PropsValue<string>\n}\n\nexport const SelectTopic: FC<CreateSelectableProps> = (props) => {\n  const { data, isLoading } = useGetEdgeTopics({ publishOnly: false })\n  const options =\n    data.map<EntityOption>((topic) => ({\n      label: topic,\n      value: topic,\n    })) || []\n\n  return (\n    <EntityCreatableSelect\n      type={SelectEntityType.TOPIC}\n      options={options}\n      isLoading={isLoading}\n      icon={TopicIcon}\n      {...props}\n    />\n  )\n}\n\nexport const SelectTopicFilter: FC<CreateSelectableProps> = (props) => {\n  const { data, isLoading } = useListTopicFilters()\n  const options =\n    data?.items?.map<EntityOption>((filter) => ({\n      label: filter.topicFilter,\n      value: filter.topicFilter,\n      description: filter.description,\n    })) || []\n\n  return (\n    <EntityCreatableSelect\n      type={SelectEntityType.TOPIC_FILTER}\n      options={options}\n      isLoading={isLoading}\n      icon={PLCTagIcon}\n      {...props}\n    />\n  )\n}\n\ninterface TagSelectProps extends CreateSelectableProps {\n  adapterId: string\n}\n\nexport const SelectTag: FC<TagSelectProps> = ({ adapterId, ...rest }) => {\n  const { data, isLoading } = useGetDomainTags(adapterId)\n  const options = data?.items?.map<EntityOption>((tag) => ({ label: tag.name, value: tag.name })) || []\n\n  return (\n    <EntityCreatableSelect\n      type={SelectEntityType.TAG}\n      options={options}\n      isLoading={isLoading}\n      icon={PLCTagIcon}\n      {...rest}\n    />\n  )\n}\n"],"names":["SelectEntityType","defaultOptions","reduceTopicsBy","options","prev","cur","res","useGetEdgeTopics","adapterTypes","isAdapterTypesLoading","isAdapterTypesError","isAdapterTypeSuccess","adapterTypesError","useGetAdapterTypes","adapters","isAdapterLoading","isAdapterSuccess","isAdapterError","adapterError","useListProtocolAdapters","bridges","isBridgeLoading","isBridgeSuccess","isBridgeError","bridgeError","useListBridges","useMemo","_options","mergeAllTopics","customComponents","isMulti","type","children","props","__isNew__","chakraComponents","HStack","jsx","TopicIcon","PLCTagIcon","TopicFilterIcon","jsxs","VStack","Text","Topic","PLCTag","TopicFilter","EntityCreatableSelect","isCreatable","isLoading","id","onChange","value","t","useTranslation","safeValue","safeOnChange","useCallback","option","filterConfig","SelectComponent","CreatableSelect","Select","entity","createFilter","SelectTopic","data","topic","SelectTopicFilter","useListTopicFilters","_a","filter","SelectTag","adapterId","rest","useGetDomainTags","tag"],"mappings":"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"}