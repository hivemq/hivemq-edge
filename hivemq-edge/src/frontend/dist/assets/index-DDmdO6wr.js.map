{"version":3,"file":"index-DDmdO6wr.js","sources":["../../node_modules/.pnpm/@chakra-ui+react-use-focus-effect@2.1.0_react@18.2.0/node_modules/@chakra-ui/react-use-focus-effect/dist/index.mjs","../../node_modules/.pnpm/@chakra-ui+react-use-animation-state@2.1.0_react@18.2.0/node_modules/@chakra-ui/react-use-animation-state/dist/index.mjs","../../node_modules/.pnpm/@chakra-ui+lazy-utils@2.0.5/node_modules/@chakra-ui/lazy-utils/dist/index.mjs"],"sourcesContent":["'use client'\n\n// src/index.ts\nimport {\n  getActiveElement,\n  getAllFocusable,\n  isTabbable\n} from \"@chakra-ui/dom-utils\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallback, useRef } from \"react\";\nfunction preventReturnFocus(containerRef) {\n  const el = containerRef.current;\n  if (!el)\n    return false;\n  const activeElement = getActiveElement(el);\n  if (!activeElement)\n    return false;\n  if (el.contains(activeElement))\n    return false;\n  if (isTabbable(activeElement))\n    return true;\n  return false;\n}\nfunction useFocusOnHide(containerRef, options) {\n  const { shouldFocus: shouldFocusProp, visible, focusRef } = options;\n  const shouldFocus = shouldFocusProp && !visible;\n  useUpdateEffect(() => {\n    if (!shouldFocus)\n      return;\n    if (preventReturnFocus(containerRef)) {\n      return;\n    }\n    const el = (focusRef == null ? void 0 : focusRef.current) || containerRef.current;\n    let rafId;\n    if (el) {\n      rafId = requestAnimationFrame(() => {\n        el.focus({ preventScroll: true });\n      });\n      return () => {\n        cancelAnimationFrame(rafId);\n      };\n    }\n  }, [shouldFocus, containerRef, focusRef]);\n}\nvar defaultOptions = {\n  preventScroll: true,\n  shouldFocus: false\n};\nfunction useFocusOnShow(target, options = defaultOptions) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options;\n  const element = isRefObject(target) ? target.current : target;\n  const autoFocusValue = shouldFocus && visible;\n  const autoFocusRef = useRef(autoFocusValue);\n  const lastVisibleRef = useRef(visible);\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue;\n    }\n    lastVisibleRef.current = visible;\n  }, [visible, autoFocusValue]);\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current)\n      return;\n    autoFocusRef.current = false;\n    if (element.contains(document.activeElement))\n      return;\n    if (focusRef == null ? void 0 : focusRef.current) {\n      requestAnimationFrame(() => {\n        var _a;\n        (_a = focusRef.current) == null ? void 0 : _a.focus({ preventScroll });\n      });\n    } else {\n      const tabbableEls = getAllFocusable(element);\n      if (tabbableEls.length > 0) {\n        requestAnimationFrame(() => {\n          tabbableEls[0].focus({ preventScroll });\n        });\n      }\n    }\n  }, [visible, preventScroll, element, focusRef]);\n  useUpdateEffect(() => {\n    onFocus();\n  }, [onFocus]);\n  useEventListener(element, \"transitionend\", onFocus);\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nexport {\n  useFocusOnHide,\n  useFocusOnShow\n};\n//# sourceMappingURL=index.mjs.map","'use client'\n\n// src/index.ts\nimport { useEffect, useState } from \"react\";\nimport { useEventListener } from \"@chakra-ui/react-use-event-listener\";\nimport { getOwnerWindow } from \"@chakra-ui/dom-utils\";\nfunction useAnimationState(props) {\n  const { isOpen, ref } = props;\n  const [mounted, setMounted] = useState(isOpen);\n  const [once, setOnce] = useState(false);\n  useEffect(() => {\n    if (!once) {\n      setMounted(isOpen);\n      setOnce(true);\n    }\n  }, [isOpen, once, mounted]);\n  useEventListener(\n    () => ref.current,\n    \"animationend\",\n    () => {\n      setMounted(isOpen);\n    }\n  );\n  const hidden = isOpen ? false : !mounted;\n  return {\n    present: !hidden,\n    onComplete() {\n      var _a;\n      const win = getOwnerWindow(ref.current);\n      const evt = new win.CustomEvent(\"animationend\", { bubbles: true });\n      (_a = ref.current) == null ? void 0 : _a.dispatchEvent(evt);\n    }\n  };\n}\nexport {\n  useAnimationState\n};\n//# sourceMappingURL=index.mjs.map","// src/index.ts\nfunction lazyDisclosure(options) {\n  const { wasSelected, enabled, isSelected, mode = \"unmount\" } = options;\n  if (!enabled)\n    return true;\n  if (isSelected)\n    return true;\n  if (mode === \"keepMounted\" && wasSelected)\n    return true;\n  return false;\n}\nexport {\n  lazyDisclosure\n};\n"],"names":["preventReturnFocus","containerRef","el","activeElement","getActiveElement","isTabbable","useFocusOnHide","options","shouldFocusProp","visible","focusRef","shouldFocus","useUpdateEffect","rafId","defaultOptions","useFocusOnShow","target","preventScroll","element","isRefObject","autoFocusValue","autoFocusRef","useRef","lastVisibleRef","useSafeLayoutEffect","onFocus","useCallback","_a","tabbableEls","getAllFocusable","useEventListener","val","useAnimationState","props","isOpen","ref","mounted","setMounted","useState","once","setOnce","useEffect","win","getOwnerWindow","evt","lazyDisclosure","wasSelected","enabled","isSelected","mode"],"mappings":"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","x_google_ignoreList":[0,1,2]}