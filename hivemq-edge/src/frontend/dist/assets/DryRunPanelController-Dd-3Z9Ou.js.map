{"version":3,"file":"DryRunPanelController-Dd-3Z9Ou.js","sources":["../../src/extensions/datahub/components/helpers/PolicySummaryReport.tsx","../../src/extensions/datahub/components/helpers/PolicyErrorReport.tsx","../../src/extensions/datahub/components/controls/DryRunPanelController.tsx"],"sourcesContent":["import type { FC } from 'react'\nimport type { AlertStatus } from '@chakra-ui/react'\nimport { Alert, AlertDescription, AlertIcon, AlertTitle, Box, Text } from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\nimport { PolicyDryRunStatus } from '@datahub/types.ts'\n\ninterface PolicySummaryReportProps {\n  status: PolicyDryRunStatus | undefined\n  onOpenPublish?: () => void\n  onClearPolicy?: () => void\n}\n\nconst PolicySummaryReport: FC<PolicySummaryReportProps> = ({ status }) => {\n  const { t } = useTranslation('datahub')\n  const alertStatus: AlertStatus =\n    status === PolicyDryRunStatus.SUCCESS ? 'success' : status === PolicyDryRunStatus.FAILURE ? 'warning' : 'error'\n\n  return (\n    <Alert status={alertStatus} data-testid=\"toolbox-policy-check-status\">\n      <AlertIcon />\n      <Box whiteSpace=\"normal\">\n        <AlertTitle>\n          <Text as=\"span\">{t('workspace.dryRun.report.success.title', { context: alertStatus })}</Text>\n        </AlertTitle>\n        <AlertDescription>\n          <Text as=\"span\">{t('workspace.dryRun.report.success.description', { context: alertStatus })}</Text>\n        </AlertDescription>\n      </Box>\n    </Alert>\n  )\n}\n\nexport default PolicySummaryReport\n","import type { FC } from 'react'\nimport {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Button,\n  ButtonGroup,\n  Text,\n  VStack,\n} from '@chakra-ui/react'\nimport type { ProblemDetailsExtended } from '@/api/types/http-problem-details.ts'\nimport { useTranslation } from 'react-i18next'\n\ninterface PolicyErrorReportProps {\n  errors: ProblemDetailsExtended[]\n  onFitView?: (id: string) => void\n  onOpenConfig?: (id: string) => void\n}\n\nconst PolicyErrorReport: FC<PolicyErrorReportProps> = ({ errors, onFitView, onOpenConfig }) => {\n  const { t } = useTranslation('datahub')\n\n  return (\n    <Accordion allowMultiple>\n      {errors.map((problem, i) => {\n        const { id, title, detail } = problem\n        // ProblemDetailsExtended doesn't type the extensions!\n        const nodeId = problem.id as string\n        return (\n          <AccordionItem key={`${id}-item${i}`} borderColor=\"blackAlpha.500\">\n            <h2>\n              <AccordionButton>\n                <Box as=\"span\" flex=\"1\" textAlign=\"left\">\n                  {t('workspace.nodes.type', { context: title })}\n                </Box>\n                <AccordionIcon />\n              </AccordionButton>\n            </h2>\n            <AccordionPanel pb={4}>\n              <VStack alignItems=\"flex-start\">\n                <Text whiteSpace=\"normal\">{detail}</Text>\n                <ButtonGroup alignItems=\"flex-start\" size=\"sm\">\n                  <Button onClick={() => onFitView?.(nodeId)} data-testid=\"report-error-fitView\">\n                    {t('workspace.dryRun.report.cta.highlight')}\n                  </Button>\n                  <Button onClick={() => onOpenConfig?.(nodeId)} data-testid=\"report-error-config\">\n                    {t('workspace.dryRun.report.cta.config')}\n                  </Button>\n                </ButtonGroup>\n              </VStack>\n            </AccordionPanel>\n          </AccordionItem>\n        )\n      })}\n    </Accordion>\n  )\n}\n\nexport default PolicyErrorReport\n","import { useCallback, useEffect } from 'react'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport type { Node } from 'reactflow'\nimport { useReactFlow } from 'reactflow'\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  useDisclosure,\n} from '@chakra-ui/react'\n\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport PolicySummaryReport from '@datahub/components/helpers/PolicySummaryReport.tsx'\nimport PolicyErrorReport from '@datahub/components/helpers/PolicyErrorReport.tsx'\nimport { usePolicyChecksStore } from '@datahub/hooks/usePolicyChecksStore.ts'\nimport { PolicyDryRunStatus } from '@datahub/types.ts'\n\nimport { ANIMATION } from '@datahub/utils/datahub.utils.ts'\nimport { ToolbarPublish } from '@datahub/components/toolbar/ToolbarPublish.tsx'\nimport { useTranslation } from 'react-i18next'\n\nconst DryRunPanelController = () => {\n  const { t } = useTranslation('datahub')\n  const { policyType } = useParams()\n  const { state } = useLocation()\n  const navigate = useNavigate()\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const { fitView } = useReactFlow()\n  const { nodes } = useDataHubDraftStore()\n  const { status, getErrors } = usePolicyChecksStore()\n\n  const errorNodeFrom = useCallback((id: string) => nodes.find((node) => node.id === id), [nodes])\n\n  useEffect(() => {\n    if (policyType) {\n      onOpen()\n    }\n  }, [onOpen, policyType])\n\n  const onDrawerClose = useCallback(() => {\n    onClose()\n    navigate(state?.origin || '/datahub')\n  }, [onClose, navigate, state?.origin])\n\n  const onShowNode = (node: Node) => {\n    fitView({ nodes: [node], padding: 3, duration: ANIMATION.FIT_VIEW_DURATION_MS })\n  }\n\n  const onShowEditor = (node: Node) => {\n    navigate(`../node/${node.type}/${node.id}`, { state: { origin: state?.origin } })\n  }\n\n  return (\n    <Drawer size=\"sm\" isOpen={isOpen} placement=\"right\" onClose={onDrawerClose}>\n      <DrawerContent data-testid=\"policy-validity-report\" aria-label={t('workspace.dryRun.report.header')}>\n        <DrawerCloseButton />\n        <DrawerHeader>{t('workspace.dryRun.report.header')}</DrawerHeader>\n\n        <DrawerBody>\n          <Card size=\"sm\">\n            <CardHeader>\n              <PolicySummaryReport status={status} />\n            </CardHeader>\n            <CardBody>\n              <PolicyErrorReport\n                errors={getErrors() || []}\n                onFitView={(id) => {\n                  const errorNode = errorNodeFrom(id)\n                  if (errorNode) onShowNode(errorNode)\n                }}\n                onOpenConfig={(id) => {\n                  const errorNode = errorNodeFrom(id)\n                  if (errorNode) onShowEditor(errorNode)\n                }}\n              />\n            </CardBody>\n          </Card>\n        </DrawerBody>\n        <DrawerFooter justifyContent=\"space-between\">\n          {status === PolicyDryRunStatus.SUCCESS && <ToolbarPublish />}\n          <Button onClick={onDrawerClose}>{t('workspace.dryRun.report.cta.close')}</Button>\n        </DrawerFooter>\n      </DrawerContent>\n    </Drawer>\n  )\n}\n\nexport default DryRunPanelController\n"],"names":["PolicySummaryReport","status","t","useTranslation","alertStatus","PolicyDryRunStatus","jsxs","Alert","jsx","AlertIcon","Box","AlertTitle","Text","AlertDescription","PolicyErrorReport","errors","onFitView","onOpenConfig","Accordion","problem","i","id","title","detail","nodeId","AccordionItem","AccordionButton","AccordionIcon","AccordionPanel","VStack","ButtonGroup","Button","DryRunPanelController","policyType","useParams","state","useLocation","navigate","useNavigate","isOpen","onOpen","onClose","useDisclosure","fitView","useReactFlow","nodes","useDataHubDraftStore","getErrors","usePolicyChecksStore","errorNodeFrom","useCallback","node","useEffect","onDrawerClose","onShowNode","ANIMATION","onShowEditor","Drawer","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","Card","CardHeader","CardBody","errorNode","DrawerFooter","ToolbarPublish"],"mappings":"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"}