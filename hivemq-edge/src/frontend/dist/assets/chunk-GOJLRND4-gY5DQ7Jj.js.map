{"version":3,"file":"chunk-GOJLRND4-gY5DQ7Jj.js","sources":["../../node_modules/.pnpm/@chakra-ui+skeleton@2.1.0_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/skeleton/dist/chunk-AASO4CLC.mjs","../../node_modules/.pnpm/@chakra-ui+react-use-previous@2.1.0_react@18.2.0/node_modules/@chakra-ui/react-use-previous/dist/index.mjs","../../node_modules/.pnpm/@chakra-ui+skeleton@2.1.0_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/skeleton/dist/chunk-GOJLRND4.mjs"],"sourcesContent":["'use client'\n\n// src/use-is-first-render.ts\nimport { useEffect, useRef } from \"react\";\nfunction useIsFirstRender() {\n  const isFirstRender = useRef(true);\n  useEffect(() => {\n    isFirstRender.current = false;\n  }, []);\n  return isFirstRender.current;\n}\n\nexport {\n  useIsFirstRender\n};\n//# sourceMappingURL=chunk-AASO4CLC.mjs.map","'use client'\n\n// src/index.ts\nimport { useRef, useEffect } from \"react\";\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map","'use client'\nimport {\n  useIsFirstRender\n} from \"./chunk-AASO4CLC.mjs\";\n\n// src/skeleton.tsx\nimport { usePrevious } from \"@chakra-ui/react-use-previous\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  cssVar,\n  forwardRef,\n  keyframes,\n  omitThemingProps,\n  useStyleConfig,\n  useToken\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nvar $startColor = cssVar(\"skeleton-start-color\");\nvar $endColor = cssVar(\"skeleton-end-color\");\nvar fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nvar bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nvar Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\nexport {\n  Skeleton\n};\n//# sourceMappingURL=chunk-GOJLRND4.mjs.map"],"names":["useIsFirstRender","isFirstRender","useRef","useEffect","usePrevious","value","ref","StyledSkeleton","chakra","$startColor","cssVar","$endColor","fade","keyframes","bgFade","Skeleton","forwardRef","props","skeletonProps","styles","useStyleConfig","startColor","endColor","isLoaded","fadeDuration","speed","className","fitContent","rest","omitThemingProps","startColorVar","endColorVar","useToken","wasPreviouslyLoaded","_className","cx","cssVarStyles","animation","jsx"],"mappings":"maAIA,SAASA,GAAmB,CAC1B,MAAMC,EAAgBC,EAAM,OAAC,EAAI,EACjCC,OAAAA,EAAAA,UAAU,IAAM,CACdF,EAAc,QAAU,EACzB,EAAE,EAAE,EACEA,EAAc,OACvB,CCNA,SAASG,EAAYC,EAAO,CAC1B,MAAMC,EAAMJ,EAAAA,OAAQ,EACpBC,OAAAA,EAAAA,UAAU,IAAM,CACdG,EAAI,QAAUD,CAClB,EAAK,CAACA,CAAK,CAAC,EACHC,EAAI,OACb,CCQA,IAAIC,EAAiBC,EAAO,MAAO,CACjC,UAAW,CACT,UAAW,OACX,eAAgB,cAChB,OAAQ,UACR,MAAO,cACP,cAAe,OACf,WAAY,OACZ,yBAA0B,CACxB,WAAY,QAClB,CACA,CACA,CAAC,EACGC,EAAcC,EAAO,sBAAsB,EAC3CC,EAAYD,EAAO,oBAAoB,EACvCE,EAAOC,EAAU,CACnB,KAAM,CAAE,QAAS,CAAG,EACpB,GAAI,CAAE,QAAS,CAAC,CAClB,CAAC,EACGC,EAASD,EAAU,CACrB,KAAM,CACJ,YAAaJ,EAAY,UACzB,WAAYA,EAAY,SACzB,EACD,GAAI,CACF,YAAaE,EAAU,UACvB,WAAYA,EAAU,SAC1B,CACA,CAAC,EACGI,EAAWC,EAAW,CAACC,EAAOX,IAAQ,CACxC,MAAMY,EAAgB,CACpB,GAAGD,EACH,aAAc,OAAOA,EAAM,cAAiB,SAAWA,EAAM,aAAe,GAC5E,MAAO,OAAOA,EAAM,OAAU,SAAWA,EAAM,MAAQ,EACxD,EACKE,EAASC,EAAe,WAAYF,CAAa,EACjDjB,EAAgBD,EAAkB,EAClC,CACJ,WAAAqB,EAAa,GACb,SAAAC,EAAW,GACX,SAAAC,EACA,aAAAC,EACA,MAAAC,EACA,UAAAC,EACA,WAAAC,EACA,GAAGC,CACP,EAAMC,EAAiBX,CAAa,EAC5B,CAACY,EAAeC,CAAW,EAAIC,EAAS,SAAU,CACtDX,EACAC,CACJ,CAAG,EACKW,EAAsB7B,EAAYmB,CAAQ,EAC1CW,EAAaC,EAAG,kBAAmBT,CAAS,EAC5CU,EAAe,CACnB,GAAGN,GAAiB,CAAE,CAACrB,EAAY,QAAQ,EAAGqB,CAAe,EAC7D,GAAGC,GAAe,CAAE,CAACpB,EAAU,QAAQ,EAAGoB,CAAW,CACtD,EACD,GAAIR,EAAU,CACZ,MAAMc,EAAYpC,GAAiBgC,EAAsB,OAAS,GAAGrB,CAAI,IAAIY,CAAY,IACzF,OAAuBc,EAAG,IACxB9B,EAAO,IACP,CACE,IAAAF,EACA,UAAW4B,EACX,MAAO,CAAE,UAAAG,CAAW,EACpB,GAAGT,CACX,CACK,CACL,CACE,OAAuBU,EAAG,IACxB/B,EACA,CACE,IAAAD,EACA,UAAW4B,EACX,GAAGN,EACH,MAAO,CACL,MAAOD,EAAa,cAAgB,OACpC,GAAGR,EACH,GAAGiB,EACH,MAAO,CAAE,GAAGjB,EAAO,MAAU,GAAGiB,CAAc,EAC9C,UAAW,GAAGX,CAAK,+BAA+BX,CAAM,EAChE,CACA,CACG,CACH,CAAC,EACDC,EAAS,YAAc","x_google_ignoreList":[0,1,2]}