{"version":3,"file":"SchemaNode.utils-CqHD45U7.js","sources":["../../src/extensions/datahub/components/helpers/NodeIcon.tsx","../../src/extensions/datahub/utils/theme.utils.ts","../../node_modules/.pnpm/@protobufjs+aspromise@1.1.2/node_modules/@protobufjs/aspromise/index.js","../../node_modules/.pnpm/@protobufjs+base64@1.1.2/node_modules/@protobufjs/base64/index.js","../../node_modules/.pnpm/@protobufjs+eventemitter@1.1.0/node_modules/@protobufjs/eventemitter/index.js","../../node_modules/.pnpm/@protobufjs+float@1.0.2/node_modules/@protobufjs/float/index.js","../../node_modules/.pnpm/@protobufjs+inquire@1.1.0/node_modules/@protobufjs/inquire/index.js","../../node_modules/.pnpm/@protobufjs+utf8@1.1.0/node_modules/@protobufjs/utf8/index.js","../../node_modules/.pnpm/@protobufjs+pool@1.1.0/node_modules/@protobufjs/pool/index.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/longbits.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util/minimal.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/writer_buffer.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/reader_buffer.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc/service.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/rpc.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/roots.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/index-minimal.js","../../node_modules/.pnpm/@protobufjs+codegen@2.0.4/node_modules/@protobufjs/codegen/index.js","../../node_modules/.pnpm/@protobufjs+fetch@1.1.0/node_modules/@protobufjs/fetch/index.js","../../node_modules/.pnpm/@protobufjs+path@1.1.2/node_modules/@protobufjs/path/index.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/types.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/field.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/oneof.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/namespace.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/mapfield.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/method.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/service.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/message.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/decoder.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/verifier.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/converter.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/wrappers.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/type.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/root.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/util.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/object.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/enum.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/encoder.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/index-light.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/tokenize.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/parse.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/common.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/src/index.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/index.js","../../node_modules/.pnpm/protobufjs@7.2.6/node_modules/protobufjs/ext/descriptor/index.js","../../src/extensions/datahub/designer/checks.utils.ts","../../src/extensions/datahub/designer/schema/SchemaNode.utils.ts"],"sourcesContent":["import { Icon } from '@chakra-ui/react'\nimport type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport { GrStatusUnknown, GrValidate } from 'react-icons/gr'\nimport { LuFunctionSquare } from 'react-icons/lu'\nimport { MdPolicy, MdSchema } from 'react-icons/md'\nimport { TbTransitionRight } from 'react-icons/tb'\nimport { AiOutlineCloudServer, AiOutlineInteraction } from 'react-icons/ai'\nimport { SiMqtt } from 'react-icons/si'\nimport { PiBridgeThin, PiPlugsConnectedFill } from 'react-icons/pi'\n\nimport { DataHubNodeType } from '../../types.ts'\n\nconst iconMapping: Record<string, (label: string) => JSX.Element> = {\n  [DataHubNodeType.ADAPTOR]: (label) => <Icon as={PiPlugsConnectedFill} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.BRIDGE]: (label) => <Icon as={PiBridgeThin} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.TOPIC_FILTER]: (label) => <Icon as={SiMqtt} boxSize=\"16px\" aria-label={label} />,\n  [DataHubNodeType.CLIENT_FILTER]: (label) => <Icon as={AiOutlineCloudServer} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.DATA_POLICY]: (label) => <Icon as={MdPolicy} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.BEHAVIOR_POLICY]: (label) => <Icon as={MdPolicy} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.VALIDATOR]: (label) => <Icon as={GrValidate} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.SCHEMA]: (label) => <Icon as={MdSchema} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.OPERATION]: (label) => <Icon as={AiOutlineInteraction} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.FUNCTION]: (label) => <Icon as={LuFunctionSquare} boxSize=\"24px\" aria-label={label} />,\n  [DataHubNodeType.TRANSITION]: (label) => <Icon as={TbTransitionRight} boxSize=\"24px\" aria-label={label} />,\n}\n\ninterface NodeIconProps {\n  type: DataHubNodeType | string | undefined\n}\n\nconst NodeIcon: FC<NodeIconProps> = ({ type }) => {\n  const { t } = useTranslation('datahub')\n\n  if (!type || !iconMapping[type]) {\n    return <Icon as={GrStatusUnknown} boxSize=\"24px\" aria-label={t('workspace.nodes.type')} />\n  }\n  return iconMapping[type](t('workspace.nodes.type', { context: type }))\n}\n\nexport default NodeIcon\n","const HEADER_HEIGHT = 'var(--chakra-space-3) + var(--chakra-sizes-12)'\nconst HANDLE_PADDING = '12px'\nconst HANDLE_GAP = 0.5\nconst HANDLE_HEIGHT = 24\n\nexport const CANVAS_GRID = HANDLE_HEIGHT + HANDLE_GAP * 16\n\nexport const getHandlePosition = (index = 0) => {\n  return `calc(${HEADER_HEIGHT} + ${HANDLE_PADDING} + ${index * HANDLE_HEIGHT}px + ${HANDLE_GAP * index}rem)`\n}\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    CustomError.prototype = Object.create(Error.prototype, {\n        constructor: {\n            value: CustomError,\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n        name: {\n            get: function get() { return name; },\n            set: undefined,\n            enumerable: false,\n            // configurable: false would accurately preserve the behavior of\n            // the original, but I'm guessing that was not intentional.\n            // For an actual error subclass, this property would\n            // be configurable.\n            configurable: true,\n        },\n        toString: {\n            value: function value() { return this.name + \": \" + this.message; },\n            writable: true,\n            enumerable: false,\n            configurable: true,\n        },\n    });\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n\n    if (start === end) { // fix for IE 10/Win8 and others' subarray returning array of size 1\n        var nativeBuffer = util.Buffer;\n        return nativeBuffer\n            ? nativeBuffer.alloc(0)\n            : new this.buf.constructor(0);\n    }\n    return this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n","\"use strict\";\r\nmodule.exports = fetch;\r\n\r\nvar asPromise = require(\"@protobufjs/aspromise\"),\r\n    inquire   = require(\"@protobufjs/inquire\");\r\n\r\nvar fs = inquire(\"fs\");\r\n\r\n/**\r\n * Node-style callback as used by {@link util.fetch}.\r\n * @typedef FetchCallback\r\n * @type {function}\r\n * @param {?Error} error Error, if any, otherwise `null`\r\n * @param {string} [contents] File contents, if there hasn't been an error\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Options as used by {@link util.fetch}.\r\n * @typedef FetchOptions\r\n * @type {Object}\r\n * @property {boolean} [binary=false] Whether expecting a binary response\r\n * @property {boolean} [xhr=false] If `true`, forces the use of XMLHttpRequest\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @memberof util\r\n * @param {string} filename File path or url\r\n * @param {FetchOptions} options Fetch options\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n */\r\nfunction fetch(filename, options, callback) {\r\n    if (typeof options === \"function\") {\r\n        callback = options;\r\n        options = {};\r\n    } else if (!options)\r\n        options = {};\r\n\r\n    if (!callback)\r\n        return asPromise(fetch, this, filename, options); // eslint-disable-line no-invalid-this\r\n\r\n    // if a node-like filesystem is present, try it first but fall back to XHR if nothing is found.\r\n    if (!options.xhr && fs && fs.readFile)\r\n        return fs.readFile(filename, function fetchReadFileCallback(err, contents) {\r\n            return err && typeof XMLHttpRequest !== \"undefined\"\r\n                ? fetch.xhr(filename, options, callback)\r\n                : err\r\n                ? callback(err)\r\n                : callback(null, options.binary ? contents : contents.toString(\"utf8\"));\r\n        });\r\n\r\n    // use the XHR version otherwise.\r\n    return fetch.xhr(filename, options, callback);\r\n}\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchCallback} callback Callback function\r\n * @returns {undefined}\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * Fetches the contents of a file.\r\n * @name util.fetch\r\n * @function\r\n * @param {string} path File path or url\r\n * @param {FetchOptions} [options] Fetch options\r\n * @returns {Promise<string|Uint8Array>} Promise\r\n * @variation 3\r\n */\r\n\r\n/**/\r\nfetch.xhr = function fetch_xhr(filename, options, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange /* works everywhere */ = function fetchOnReadyStateChange() {\r\n\r\n        if (xhr.readyState !== 4)\r\n            return undefined;\r\n\r\n        // local cors security errors return status 0 / empty string, too. afaik this cannot be\r\n        // reliably distinguished from an actually empty file for security reasons. feel free\r\n        // to send a pull request if you are aware of a solution.\r\n        if (xhr.status !== 0 && xhr.status !== 200)\r\n            return callback(Error(\"status \" + xhr.status));\r\n\r\n        // if binary data is expected, make sure that some sort of array is returned, even if\r\n        // ArrayBuffers are not supported. the binary string fallback, however, is unsafe.\r\n        if (options.binary) {\r\n            var buffer = xhr.response;\r\n            if (!buffer) {\r\n                buffer = [];\r\n                for (var i = 0; i < xhr.responseText.length; ++i)\r\n                    buffer.push(xhr.responseText.charCodeAt(i) & 255);\r\n            }\r\n            return callback(null, typeof Uint8Array !== \"undefined\" ? new Uint8Array(buffer) : buffer);\r\n        }\r\n        return callback(null, xhr.responseText);\r\n    };\r\n\r\n    if (options.binary) {\r\n        // ref: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data#Receiving_binary_data_in_older_browsers\r\n        if (\"overrideMimeType\" in xhr)\r\n            xhr.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n        xhr.responseType = \"arraybuffer\";\r\n    }\r\n\r\n    xhr.open(\"GET\", filename);\r\n    xhr.send();\r\n};\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal path module to resolve Unix, Windows and URL paths alike.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar path = exports;\r\n\r\nvar isAbsolute =\r\n/**\r\n * Tests if the specified path is absolute.\r\n * @param {string} path Path to test\r\n * @returns {boolean} `true` if path is absolute\r\n */\r\npath.isAbsolute = function isAbsolute(path) {\r\n    return /^(?:\\/|\\w+:)/.test(path);\r\n};\r\n\r\nvar normalize =\r\n/**\r\n * Normalizes the specified path.\r\n * @param {string} path Path to normalize\r\n * @returns {string} Normalized path\r\n */\r\npath.normalize = function normalize(path) {\r\n    path = path.replace(/\\\\/g, \"/\")\r\n               .replace(/\\/{2,}/g, \"/\");\r\n    var parts    = path.split(\"/\"),\r\n        absolute = isAbsolute(path),\r\n        prefix   = \"\";\r\n    if (absolute)\r\n        prefix = parts.shift() + \"/\";\r\n    for (var i = 0; i < parts.length;) {\r\n        if (parts[i] === \"..\") {\r\n            if (i > 0 && parts[i - 1] !== \"..\")\r\n                parts.splice(--i, 2);\r\n            else if (absolute)\r\n                parts.splice(i, 1);\r\n            else\r\n                ++i;\r\n        } else if (parts[i] === \".\")\r\n            parts.splice(i, 1);\r\n        else\r\n            ++i;\r\n    }\r\n    return prefix + parts.join(\"/\");\r\n};\r\n\r\n/**\r\n * Resolves the specified include path against the specified origin path.\r\n * @param {string} originPath Path to the origin file\r\n * @param {string} includePath Include path relative to origin path\r\n * @param {boolean} [alreadyNormalized=false] `true` if both paths are already known to be normalized\r\n * @returns {string} Path to the include file\r\n */\r\npath.resolve = function resolve(originPath, includePath, alreadyNormalized) {\r\n    if (!alreadyNormalized)\r\n        includePath = normalize(includePath);\r\n    if (isAbsolute(includePath))\r\n        return includePath;\r\n    if (!alreadyNormalized)\r\n        originPath = normalize(originPath);\r\n    return (originPath = originPath.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? normalize(originPath + \"/\" + includePath) : includePath;\r\n};\r\n","\"use strict\";\n\n/**\n * Common type constants.\n * @namespace\n */\nvar types = exports;\n\nvar util = require(\"./util\");\n\nvar s = [\n    \"double\",   // 0\n    \"float\",    // 1\n    \"int32\",    // 2\n    \"uint32\",   // 3\n    \"sint32\",   // 4\n    \"fixed32\",  // 5\n    \"sfixed32\", // 6\n    \"int64\",    // 7\n    \"uint64\",   // 8\n    \"sint64\",   // 9\n    \"fixed64\",  // 10\n    \"sfixed64\", // 11\n    \"bool\",     // 12\n    \"string\",   // 13\n    \"bytes\"     // 14\n];\n\nfunction bake(values, offset) {\n    var i = 0, o = {};\n    offset |= 0;\n    while (i < values.length) o[s[i + offset]] = values[i++];\n    return o;\n}\n\n/**\n * Basic type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n * @property {number} bytes=2 Ldelim wire type\n */\ntypes.basic = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2,\n    /* bytes    */ 2\n]);\n\n/**\n * Basic type defaults.\n * @type {Object.<string,*>}\n * @const\n * @property {number} double=0 Double default\n * @property {number} float=0 Float default\n * @property {number} int32=0 Int32 default\n * @property {number} uint32=0 Uint32 default\n * @property {number} sint32=0 Sint32 default\n * @property {number} fixed32=0 Fixed32 default\n * @property {number} sfixed32=0 Sfixed32 default\n * @property {number} int64=0 Int64 default\n * @property {number} uint64=0 Uint64 default\n * @property {number} sint64=0 Sint32 default\n * @property {number} fixed64=0 Fixed64 default\n * @property {number} sfixed64=0 Sfixed64 default\n * @property {boolean} bool=false Bool default\n * @property {string} string=\"\" String default\n * @property {Array.<number>} bytes=Array(0) Bytes default\n * @property {null} message=null Message default\n */\ntypes.defaults = bake([\n    /* double   */ 0,\n    /* float    */ 0,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 0,\n    /* sfixed32 */ 0,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 0,\n    /* sfixed64 */ 0,\n    /* bool     */ false,\n    /* string   */ \"\",\n    /* bytes    */ util.emptyArray,\n    /* message  */ null\n]);\n\n/**\n * Basic long type wire types.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n */\ntypes.long = bake([\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1\n], 7);\n\n/**\n * Allowed types for map keys with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n * @property {number} string=2 Ldelim wire type\n */\ntypes.mapKey = bake([\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0,\n    /* string   */ 2\n], 2);\n\n/**\n * Allowed types for packed repeated fields with their associated wire type.\n * @type {Object.<string,number>}\n * @const\n * @property {number} double=1 Fixed64 wire type\n * @property {number} float=5 Fixed32 wire type\n * @property {number} int32=0 Varint wire type\n * @property {number} uint32=0 Varint wire type\n * @property {number} sint32=0 Varint wire type\n * @property {number} fixed32=5 Fixed32 wire type\n * @property {number} sfixed32=5 Fixed32 wire type\n * @property {number} int64=0 Varint wire type\n * @property {number} uint64=0 Varint wire type\n * @property {number} sint64=0 Varint wire type\n * @property {number} fixed64=1 Fixed64 wire type\n * @property {number} sfixed64=1 Fixed64 wire type\n * @property {number} bool=0 Varint wire type\n */\ntypes.packed = bake([\n    /* double   */ 1,\n    /* float    */ 5,\n    /* int32    */ 0,\n    /* uint32   */ 0,\n    /* sint32   */ 0,\n    /* fixed32  */ 5,\n    /* sfixed32 */ 5,\n    /* int64    */ 0,\n    /* uint64   */ 0,\n    /* sint64   */ 0,\n    /* fixed64  */ 1,\n    /* sfixed64 */ 1,\n    /* bool     */ 0\n]);\n","\"use strict\";\nmodule.exports = Field;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Field.prototype = Object.create(ReflectionObject.prototype)).constructor = Field).className = \"Field\";\n\nvar Enum  = require(\"./enum\"),\n    types = require(\"./types\"),\n    util  = require(\"./util\");\n\nvar Type; // cyclic\n\nvar ruleRe = /^required|optional|repeated$/;\n\n/**\n * Constructs a new message field instance. Note that {@link MapField|map fields} have their own class.\n * @name Field\n * @classdesc Reflected message field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a field from a field descriptor.\n * @param {string} name Field name\n * @param {IField} json Field descriptor\n * @returns {Field} Created field\n * @throws {TypeError} If arguments are invalid\n */\nField.fromJSON = function fromJSON(name, json) {\n    return new Field(name, json.id, json.type, json.rule, json.extend, json.options, json.comment);\n};\n\n/**\n * Not an actual constructor. Use {@link Field} instead.\n * @classdesc Base class of all reflected message fields. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports FieldBase\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} type Value type\n * @param {string|Object.<string,*>} [rule=\"optional\"] Field rule\n * @param {string|Object.<string,*>} [extend] Extended type if different from parent\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction Field(name, id, type, rule, extend, options, comment) {\n\n    if (util.isObject(rule)) {\n        comment = extend;\n        options = rule;\n        rule = extend = undefined;\n    } else if (util.isObject(extend)) {\n        comment = options;\n        options = extend;\n        extend = undefined;\n    }\n\n    ReflectionObject.call(this, name, options);\n\n    if (!util.isInteger(id) || id < 0)\n        throw TypeError(\"id must be a non-negative integer\");\n\n    if (!util.isString(type))\n        throw TypeError(\"type must be a string\");\n\n    if (rule !== undefined && !ruleRe.test(rule = rule.toString().toLowerCase()))\n        throw TypeError(\"rule must be a string rule\");\n\n    if (extend !== undefined && !util.isString(extend))\n        throw TypeError(\"extend must be a string\");\n\n    /**\n     * Field rule, if any.\n     * @type {string|undefined}\n     */\n    if (rule === \"proto3_optional\") {\n        rule = \"optional\";\n    }\n    this.rule = rule && rule !== \"optional\" ? rule : undefined; // toJSON\n\n    /**\n     * Field type.\n     * @type {string}\n     */\n    this.type = type; // toJSON\n\n    /**\n     * Unique field id.\n     * @type {number}\n     */\n    this.id = id; // toJSON, marker\n\n    /**\n     * Extended type if different from parent.\n     * @type {string|undefined}\n     */\n    this.extend = extend || undefined; // toJSON\n\n    /**\n     * Whether this field is required.\n     * @type {boolean}\n     */\n    this.required = rule === \"required\";\n\n    /**\n     * Whether this field is optional.\n     * @type {boolean}\n     */\n    this.optional = !this.required;\n\n    /**\n     * Whether this field is repeated.\n     * @type {boolean}\n     */\n    this.repeated = rule === \"repeated\";\n\n    /**\n     * Whether this field is a map or not.\n     * @type {boolean}\n     */\n    this.map = false;\n\n    /**\n     * Message this field belongs to.\n     * @type {Type|null}\n     */\n    this.message = null;\n\n    /**\n     * OneOf this field belongs to, if any,\n     * @type {OneOf|null}\n     */\n    this.partOf = null;\n\n    /**\n     * The field type's default value.\n     * @type {*}\n     */\n    this.typeDefault = null;\n\n    /**\n     * The field's default value on prototypes.\n     * @type {*}\n     */\n    this.defaultValue = null;\n\n    /**\n     * Whether this field's value should be treated as a long.\n     * @type {boolean}\n     */\n    this.long = util.Long ? types.long[type] !== undefined : /* istanbul ignore next */ false;\n\n    /**\n     * Whether this field's value is a buffer.\n     * @type {boolean}\n     */\n    this.bytes = type === \"bytes\";\n\n    /**\n     * Resolved type if not a basic type.\n     * @type {Type|Enum|null}\n     */\n    this.resolvedType = null;\n\n    /**\n     * Sister-field within the extended type if a declaring extension field.\n     * @type {Field|null}\n     */\n    this.extensionField = null;\n\n    /**\n     * Sister-field within the declaring namespace if an extended field.\n     * @type {Field|null}\n     */\n    this.declaringField = null;\n\n    /**\n     * Internally remembers whether this field is packed.\n     * @type {boolean|null}\n     * @private\n     */\n    this._packed = null;\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Determines whether this field is packed. Only relevant when repeated and working with proto2.\n * @name Field#packed\n * @type {boolean}\n * @readonly\n */\nObject.defineProperty(Field.prototype, \"packed\", {\n    get: function() {\n        // defaults to packed=true if not explicity set to false\n        if (this._packed === null)\n            this._packed = this.getOption(\"packed\") !== false;\n        return this._packed;\n    }\n});\n\n/**\n * @override\n */\nField.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (name === \"packed\") // clear cached before setting\n        this._packed = null;\n    return ReflectionObject.prototype.setOption.call(this, name, value, ifNotSet);\n};\n\n/**\n * Field descriptor.\n * @interface IField\n * @property {string} [rule=\"optional\"] Field rule\n * @property {string} type Field type\n * @property {number} id Field id\n * @property {Object.<string,*>} [options] Field options\n */\n\n/**\n * Extension field descriptor.\n * @interface IExtensionField\n * @extends IField\n * @property {string} extend Extended type\n */\n\n/**\n * Converts this field to a field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IField} Field descriptor\n */\nField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"rule\"    , this.rule !== \"optional\" && this.rule || undefined,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Resolves this field's type references.\n * @returns {Field} `this`\n * @throws {Error} If any reference cannot be resolved\n */\nField.prototype.resolve = function resolve() {\n\n    if (this.resolved)\n        return this;\n\n    if ((this.typeDefault = types.defaults[this.type]) === undefined) { // if not a basic type, resolve it\n        this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type);\n        if (this.resolvedType instanceof Type)\n            this.typeDefault = null;\n        else // instanceof Enum\n            this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]; // first defined\n    } else if (this.options && this.options.proto3_optional) {\n        // proto3 scalar value marked optional; should default to null\n        this.typeDefault = null;\n    }\n\n    // use explicitly set default value if present\n    if (this.options && this.options[\"default\"] != null) {\n        this.typeDefault = this.options[\"default\"];\n        if (this.resolvedType instanceof Enum && typeof this.typeDefault === \"string\")\n            this.typeDefault = this.resolvedType.values[this.typeDefault];\n    }\n\n    // remove unnecessary options\n    if (this.options) {\n        if (this.options.packed === true || this.options.packed !== undefined && this.resolvedType && !(this.resolvedType instanceof Enum))\n            delete this.options.packed;\n        if (!Object.keys(this.options).length)\n            this.options = undefined;\n    }\n\n    // convert to internal data type if necesssary\n    if (this.long) {\n        this.typeDefault = util.Long.fromNumber(this.typeDefault, this.type.charAt(0) === \"u\");\n\n        /* istanbul ignore else */\n        if (Object.freeze)\n            Object.freeze(this.typeDefault); // long instances are meant to be immutable anyway (i.e. use small int cache that even requires it)\n\n    } else if (this.bytes && typeof this.typeDefault === \"string\") {\n        var buf;\n        if (util.base64.test(this.typeDefault))\n            util.base64.decode(this.typeDefault, buf = util.newBuffer(util.base64.length(this.typeDefault)), 0);\n        else\n            util.utf8.write(this.typeDefault, buf = util.newBuffer(util.utf8.length(this.typeDefault)), 0);\n        this.typeDefault = buf;\n    }\n\n    // take special care of maps and repeated fields\n    if (this.map)\n        this.defaultValue = util.emptyObject;\n    else if (this.repeated)\n        this.defaultValue = util.emptyArray;\n    else\n        this.defaultValue = this.typeDefault;\n\n    // ensure proper value on prototype\n    if (this.parent instanceof Type)\n        this.parent.ctor.prototype[this.name] = this.defaultValue;\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n\n/**\n * Decorator function as returned by {@link Field.d} and {@link MapField.d} (TypeScript).\n * @typedef FieldDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} fieldName Field name\n * @returns {undefined}\n */\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"string\"|\"bool\"|\"bytes\"|Object} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @param {T} [defaultValue] Default value\n * @returns {FieldDecorator} Decorator function\n * @template T extends number | number[] | Long | Long[] | string | string[] | boolean | boolean[] | Uint8Array | Uint8Array[] | Buffer | Buffer[]\n */\nField.d = function decorateField(fieldId, fieldType, fieldRule, defaultValue) {\n\n    // submessage: decorate the submessage and use its name as the type\n    if (typeof fieldType === \"function\")\n        fieldType = util.decorateType(fieldType).name;\n\n    // enum reference: create a reflected copy of the enum and keep reuseing it\n    else if (fieldType && typeof fieldType === \"object\")\n        fieldType = util.decorateEnum(fieldType).name;\n\n    return function fieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new Field(fieldName, fieldId, fieldType, fieldRule, { \"default\": defaultValue }));\n    };\n};\n\n/**\n * Field decorator (TypeScript).\n * @name Field.d\n * @function\n * @param {number} fieldId Field id\n * @param {Constructor<T>|string} fieldType Field type\n * @param {\"optional\"|\"required\"|\"repeated\"} [fieldRule=\"optional\"] Field rule\n * @returns {FieldDecorator} Decorator function\n * @template T extends Message<T>\n * @variation 2\n */\n// like Field.d but without a default value\n\n// Sets up cyclic dependencies (called in index-light)\nField._configure = function configure(Type_) {\n    Type = Type_;\n};\n","\"use strict\";\nmodule.exports = OneOf;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((OneOf.prototype = Object.create(ReflectionObject.prototype)).constructor = OneOf).className = \"OneOf\";\n\nvar Field = require(\"./field\"),\n    util  = require(\"./util\");\n\n/**\n * Constructs a new oneof instance.\n * @classdesc Reflected oneof.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Oneof name\n * @param {string[]|Object.<string,*>} [fieldNames] Field names\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction OneOf(name, fieldNames, options, comment) {\n    if (!Array.isArray(fieldNames)) {\n        options = fieldNames;\n        fieldNames = undefined;\n    }\n    ReflectionObject.call(this, name, options);\n\n    /* istanbul ignore if */\n    if (!(fieldNames === undefined || Array.isArray(fieldNames)))\n        throw TypeError(\"fieldNames must be an Array\");\n\n    /**\n     * Field names that belong to this oneof.\n     * @type {string[]}\n     */\n    this.oneof = fieldNames || []; // toJSON, marker\n\n    /**\n     * Fields that belong to this oneof as an array for iteration.\n     * @type {Field[]}\n     * @readonly\n     */\n    this.fieldsArray = []; // declared readonly for conformance, possibly not yet added to parent\n\n    /**\n     * Comment for this field.\n     * @type {string|null}\n     */\n    this.comment = comment;\n}\n\n/**\n * Oneof descriptor.\n * @interface IOneOf\n * @property {Array.<string>} oneof Oneof field names\n * @property {Object.<string,*>} [options] Oneof options\n */\n\n/**\n * Constructs a oneof from a oneof descriptor.\n * @param {string} name Oneof name\n * @param {IOneOf} json Oneof descriptor\n * @returns {OneOf} Created oneof\n * @throws {TypeError} If arguments are invalid\n */\nOneOf.fromJSON = function fromJSON(name, json) {\n    return new OneOf(name, json.oneof, json.options, json.comment);\n};\n\n/**\n * Converts this oneof to a oneof descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IOneOf} Oneof descriptor\n */\nOneOf.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , this.options,\n        \"oneof\"   , this.oneof,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Adds the fields of the specified oneof to the parent if not already done so.\n * @param {OneOf} oneof The oneof\n * @returns {undefined}\n * @inner\n * @ignore\n */\nfunction addFieldsToParent(oneof) {\n    if (oneof.parent)\n        for (var i = 0; i < oneof.fieldsArray.length; ++i)\n            if (!oneof.fieldsArray[i].parent)\n                oneof.parent.add(oneof.fieldsArray[i]);\n}\n\n/**\n * Adds a field to this oneof and removes it from its current parent, if any.\n * @param {Field} field Field to add\n * @returns {OneOf} `this`\n */\nOneOf.prototype.add = function add(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    if (field.parent && field.parent !== this.parent)\n        field.parent.remove(field);\n    this.oneof.push(field.name);\n    this.fieldsArray.push(field);\n    field.partOf = this; // field.parent remains null\n    addFieldsToParent(this);\n    return this;\n};\n\n/**\n * Removes a field from this oneof and puts it back to the oneof's parent.\n * @param {Field} field Field to remove\n * @returns {OneOf} `this`\n */\nOneOf.prototype.remove = function remove(field) {\n\n    /* istanbul ignore if */\n    if (!(field instanceof Field))\n        throw TypeError(\"field must be a Field\");\n\n    var index = this.fieldsArray.indexOf(field);\n\n    /* istanbul ignore if */\n    if (index < 0)\n        throw Error(field + \" is not a member of \" + this);\n\n    this.fieldsArray.splice(index, 1);\n    index = this.oneof.indexOf(field.name);\n\n    /* istanbul ignore else */\n    if (index > -1) // theoretical\n        this.oneof.splice(index, 1);\n\n    field.partOf = null;\n    return this;\n};\n\n/**\n * @override\n */\nOneOf.prototype.onAdd = function onAdd(parent) {\n    ReflectionObject.prototype.onAdd.call(this, parent);\n    var self = this;\n    // Collect present fields\n    for (var i = 0; i < this.oneof.length; ++i) {\n        var field = parent.get(this.oneof[i]);\n        if (field && !field.partOf) {\n            field.partOf = self;\n            self.fieldsArray.push(field);\n        }\n    }\n    // Add not yet present fields\n    addFieldsToParent(this);\n};\n\n/**\n * @override\n */\nOneOf.prototype.onRemove = function onRemove(parent) {\n    for (var i = 0, field; i < this.fieldsArray.length; ++i)\n        if ((field = this.fieldsArray[i]).parent)\n            field.parent.remove(field);\n    ReflectionObject.prototype.onRemove.call(this, parent);\n};\n\n/**\n * Decorator function as returned by {@link OneOf.d} (TypeScript).\n * @typedef OneOfDecorator\n * @type {function}\n * @param {Object} prototype Target prototype\n * @param {string} oneofName OneOf name\n * @returns {undefined}\n */\n\n/**\n * OneOf decorator (TypeScript).\n * @function\n * @param {...string} fieldNames Field names\n * @returns {OneOfDecorator} Decorator function\n * @template T extends string\n */\nOneOf.d = function decorateOneOf() {\n    var fieldNames = new Array(arguments.length),\n        index = 0;\n    while (index < arguments.length)\n        fieldNames[index] = arguments[index++];\n    return function oneOfDecorator(prototype, oneofName) {\n        util.decorateType(prototype.constructor)\n            .add(new OneOf(oneofName, fieldNames));\n        Object.defineProperty(prototype, oneofName, {\n            get: util.oneOfGetter(fieldNames),\n            set: util.oneOfSetter(fieldNames)\n        });\n    };\n};\n","\"use strict\";\nmodule.exports = Namespace;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Namespace.prototype = Object.create(ReflectionObject.prototype)).constructor = Namespace).className = \"Namespace\";\n\nvar Field    = require(\"./field\"),\n    util     = require(\"./util\"),\n    OneOf    = require(\"./oneof\");\n\nvar Type,    // cyclic\n    Service,\n    Enum;\n\n/**\n * Constructs a new namespace instance.\n * @name Namespace\n * @classdesc Reflected namespace.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n */\n\n/**\n * Constructs a namespace from JSON.\n * @memberof Namespace\n * @function\n * @param {string} name Namespace name\n * @param {Object.<string,*>} json JSON object\n * @returns {Namespace} Created namespace\n * @throws {TypeError} If arguments are invalid\n */\nNamespace.fromJSON = function fromJSON(name, json) {\n    return new Namespace(name, json.options).addJSON(json.nested);\n};\n\n/**\n * Converts an array of reflection objects to JSON.\n * @memberof Namespace\n * @param {ReflectionObject[]} array Object array\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {Object.<string,*>|undefined} JSON object or `undefined` when array is empty\n */\nfunction arrayToJSON(array, toJSONOptions) {\n    if (!(array && array.length))\n        return undefined;\n    var obj = {};\n    for (var i = 0; i < array.length; ++i)\n        obj[array[i].name] = array[i].toJSON(toJSONOptions);\n    return obj;\n}\n\nNamespace.arrayToJSON = arrayToJSON;\n\n/**\n * Tests if the specified id is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedId = function isReservedId(reserved, id) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (typeof reserved[i] !== \"string\" && reserved[i][0] <= id && reserved[i][1] > id)\n                return true;\n    return false;\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {Array.<number[]|string>|undefined} reserved Array of reserved ranges and names\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nNamespace.isReservedName = function isReservedName(reserved, name) {\n    if (reserved)\n        for (var i = 0; i < reserved.length; ++i)\n            if (reserved[i] === name)\n                return true;\n    return false;\n};\n\n/**\n * Not an actual constructor. Use {@link Namespace} instead.\n * @classdesc Base class of all reflection objects containing nested objects. This is not an actual class but here for the sake of having consistent type definitions.\n * @exports NamespaceBase\n * @extends ReflectionObject\n * @abstract\n * @constructor\n * @param {string} name Namespace name\n * @param {Object.<string,*>} [options] Declared options\n * @see {@link Namespace}\n */\nfunction Namespace(name, options) {\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Nested objects by name.\n     * @type {Object.<string,ReflectionObject>|undefined}\n     */\n    this.nested = undefined; // toJSON\n\n    /**\n     * Cached nested objects as an array.\n     * @type {ReflectionObject[]|null}\n     * @private\n     */\n    this._nestedArray = null;\n}\n\nfunction clearCache(namespace) {\n    namespace._nestedArray = null;\n    return namespace;\n}\n\n/**\n * Nested objects of this namespace as an array for iteration.\n * @name NamespaceBase#nestedArray\n * @type {ReflectionObject[]}\n * @readonly\n */\nObject.defineProperty(Namespace.prototype, \"nestedArray\", {\n    get: function() {\n        return this._nestedArray || (this._nestedArray = util.toArray(this.nested));\n    }\n});\n\n/**\n * Namespace descriptor.\n * @interface INamespace\n * @property {Object.<string,*>} [options] Namespace options\n * @property {Object.<string,AnyNestedObject>} [nested] Nested object descriptors\n */\n\n/**\n * Any extension field descriptor.\n * @typedef AnyExtensionField\n * @type {IExtensionField|IExtensionMapField}\n */\n\n/**\n * Any nested object descriptor.\n * @typedef AnyNestedObject\n * @type {IEnum|IType|IService|AnyExtensionField|INamespace|IOneOf}\n */\n\n/**\n * Converts this namespace to a namespace descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {INamespace} Namespace descriptor\n */\nNamespace.prototype.toJSON = function toJSON(toJSONOptions) {\n    return util.toObject([\n        \"options\" , this.options,\n        \"nested\"  , arrayToJSON(this.nestedArray, toJSONOptions)\n    ]);\n};\n\n/**\n * Adds nested objects to this namespace from nested object descriptors.\n * @param {Object.<string,AnyNestedObject>} nestedJson Any nested object descriptors\n * @returns {Namespace} `this`\n */\nNamespace.prototype.addJSON = function addJSON(nestedJson) {\n    var ns = this;\n    /* istanbul ignore else */\n    if (nestedJson) {\n        for (var names = Object.keys(nestedJson), i = 0, nested; i < names.length; ++i) {\n            nested = nestedJson[names[i]];\n            ns.add( // most to least likely\n                ( nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : nested.id !== undefined\n                ? Field.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    }\n    return this;\n};\n\n/**\n * Gets the nested object of the specified name.\n * @param {string} name Nested object name\n * @returns {ReflectionObject|null} The reflection object or `null` if it doesn't exist\n */\nNamespace.prototype.get = function get(name) {\n    return this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Gets the values of the nested {@link Enum|enum} of the specified name.\n * This methods differs from {@link Namespace#get|get} in that it returns an enum's values directly and throws instead of returning `null`.\n * @param {string} name Nested enum name\n * @returns {Object.<string,number>} Enum values\n * @throws {Error} If there is no such enum\n */\nNamespace.prototype.getEnum = function getEnum(name) {\n    if (this.nested && this.nested[name] instanceof Enum)\n        return this.nested[name].values;\n    throw Error(\"no such enum: \" + name);\n};\n\n/**\n * Adds a nested object to this namespace.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name\n */\nNamespace.prototype.add = function add(object) {\n\n    if (!(object instanceof Field && object.extend !== undefined || object instanceof Type  || object instanceof OneOf || object instanceof Enum || object instanceof Service || object instanceof Namespace))\n        throw TypeError(\"object must be a valid nested object\");\n\n    if (!this.nested)\n        this.nested = {};\n    else {\n        var prev = this.get(object.name);\n        if (prev) {\n            if (prev instanceof Namespace && object instanceof Namespace && !(prev instanceof Type || prev instanceof Service)) {\n                // replace plain namespace but keep existing nested elements and options\n                var nested = prev.nestedArray;\n                for (var i = 0; i < nested.length; ++i)\n                    object.add(nested[i]);\n                this.remove(prev);\n                if (!this.nested)\n                    this.nested = {};\n                object.setOptions(prev.options, true);\n\n            } else\n                throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n        }\n    }\n    this.nested[object.name] = object;\n    object.onAdd(this);\n    return clearCache(this);\n};\n\n/**\n * Removes a nested object from this namespace.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Namespace} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this namespace\n */\nNamespace.prototype.remove = function remove(object) {\n\n    if (!(object instanceof ReflectionObject))\n        throw TypeError(\"object must be a ReflectionObject\");\n    if (object.parent !== this)\n        throw Error(object + \" is not a member of \" + this);\n\n    delete this.nested[object.name];\n    if (!Object.keys(this.nested).length)\n        this.nested = undefined;\n\n    object.onRemove(this);\n    return clearCache(this);\n};\n\n/**\n * Defines additial namespaces within this one if not yet existing.\n * @param {string|string[]} path Path to create\n * @param {*} [json] Nested types to create from JSON\n * @returns {Namespace} Pointer to the last namespace created or `this` if path is empty\n */\nNamespace.prototype.define = function define(path, json) {\n\n    if (util.isString(path))\n        path = path.split(\".\");\n    else if (!Array.isArray(path))\n        throw TypeError(\"illegal path\");\n    if (path && path.length && path[0] === \"\")\n        throw Error(\"path must be relative\");\n\n    var ptr = this;\n    while (path.length > 0) {\n        var part = path.shift();\n        if (ptr.nested && ptr.nested[part]) {\n            ptr = ptr.nested[part];\n            if (!(ptr instanceof Namespace))\n                throw Error(\"path conflicts with non-namespace objects\");\n        } else\n            ptr.add(ptr = new Namespace(part));\n    }\n    if (json)\n        ptr.addJSON(json);\n    return ptr;\n};\n\n/**\n * Resolves this namespace's and all its nested objects' type references. Useful to validate a reflection tree, but comes at a cost.\n * @returns {Namespace} `this`\n */\nNamespace.prototype.resolveAll = function resolveAll() {\n    var nested = this.nestedArray, i = 0;\n    while (i < nested.length)\n        if (nested[i] instanceof Namespace)\n            nested[i++].resolveAll();\n        else\n            nested[i++].resolve();\n    return this.resolve();\n};\n\n/**\n * Recursively looks up the reflection object matching the specified path in the scope of this namespace.\n * @param {string|string[]} path Path to look up\n * @param {*|Array.<*>} filterTypes Filter types, any combination of the constructors of `protobuf.Type`, `protobuf.Enum`, `protobuf.Service` etc.\n * @param {boolean} [parentAlreadyChecked=false] If known, whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n */\nNamespace.prototype.lookup = function lookup(path, filterTypes, parentAlreadyChecked) {\n\n    /* istanbul ignore next */\n    if (typeof filterTypes === \"boolean\") {\n        parentAlreadyChecked = filterTypes;\n        filterTypes = undefined;\n    } else if (filterTypes && !Array.isArray(filterTypes))\n        filterTypes = [ filterTypes ];\n\n    if (util.isString(path) && path.length) {\n        if (path === \".\")\n            return this.root;\n        path = path.split(\".\");\n    } else if (!path.length)\n        return this;\n\n    // Start at root if path is absolute\n    if (path[0] === \"\")\n        return this.root.lookup(path.slice(1), filterTypes);\n\n    // Test if the first part matches any nested object, and if so, traverse if path contains more\n    var found = this.get(path[0]);\n    if (found) {\n        if (path.length === 1) {\n            if (!filterTypes || filterTypes.indexOf(found.constructor) > -1)\n                return found;\n        } else if (found instanceof Namespace && (found = found.lookup(path.slice(1), filterTypes, true)))\n            return found;\n\n    // Otherwise try each nested namespace\n    } else\n        for (var i = 0; i < this.nestedArray.length; ++i)\n            if (this._nestedArray[i] instanceof Namespace && (found = this._nestedArray[i].lookup(path, filterTypes, true)))\n                return found;\n\n    // If there hasn't been a match, try again at the parent\n    if (this.parent === null || parentAlreadyChecked)\n        return null;\n    return this.parent.lookup(path, filterTypes);\n};\n\n/**\n * Looks up the reflection object at the specified path, relative to this namespace.\n * @name NamespaceBase#lookup\n * @function\n * @param {string|string[]} path Path to look up\n * @param {boolean} [parentAlreadyChecked=false] Whether the parent has already been checked\n * @returns {ReflectionObject|null} Looked up object or `null` if none could be found\n * @variation 2\n */\n// lookup(path: string, [parentAlreadyChecked: boolean])\n\n/**\n * Looks up the {@link Type|type} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type\n * @throws {Error} If `path` does not point to a type\n */\nNamespace.prototype.lookupType = function lookupType(path) {\n    var found = this.lookup(path, [ Type ]);\n    if (!found)\n        throw Error(\"no such type: \" + path);\n    return found;\n};\n\n/**\n * Looks up the values of the {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Enum} Looked up enum\n * @throws {Error} If `path` does not point to an enum\n */\nNamespace.prototype.lookupEnum = function lookupEnum(path) {\n    var found = this.lookup(path, [ Enum ]);\n    if (!found)\n        throw Error(\"no such Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Type|type} or {@link Enum|enum} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Type} Looked up type or enum\n * @throws {Error} If `path` does not point to a type or enum\n */\nNamespace.prototype.lookupTypeOrEnum = function lookupTypeOrEnum(path) {\n    var found = this.lookup(path, [ Type, Enum ]);\n    if (!found)\n        throw Error(\"no such Type or Enum '\" + path + \"' in \" + this);\n    return found;\n};\n\n/**\n * Looks up the {@link Service|service} at the specified path, relative to this namespace.\n * Besides its signature, this methods differs from {@link Namespace#lookup|lookup} in that it throws instead of returning `null`.\n * @param {string|string[]} path Path to look up\n * @returns {Service} Looked up service\n * @throws {Error} If `path` does not point to a service\n */\nNamespace.prototype.lookupService = function lookupService(path) {\n    var found = this.lookup(path, [ Service ]);\n    if (!found)\n        throw Error(\"no such Service '\" + path + \"' in \" + this);\n    return found;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nNamespace._configure = function(Type_, Service_, Enum_) {\n    Type    = Type_;\n    Service = Service_;\n    Enum    = Enum_;\n};\n","\"use strict\";\nmodule.exports = MapField;\n\n// extends Field\nvar Field = require(\"./field\");\n((MapField.prototype = Object.create(Field.prototype)).constructor = MapField).className = \"MapField\";\n\nvar types   = require(\"./types\"),\n    util    = require(\"./util\");\n\n/**\n * Constructs a new map field instance.\n * @classdesc Reflected map field.\n * @extends FieldBase\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {number} id Unique id within its namespace\n * @param {string} keyType Key type\n * @param {string} type Value type\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] Comment associated with this field\n */\nfunction MapField(name, id, keyType, type, options, comment) {\n    Field.call(this, name, id, type, undefined, undefined, options, comment);\n\n    /* istanbul ignore if */\n    if (!util.isString(keyType))\n        throw TypeError(\"keyType must be a string\");\n\n    /**\n     * Key type.\n     * @type {string}\n     */\n    this.keyType = keyType; // toJSON, marker\n\n    /**\n     * Resolved key type if not a basic type.\n     * @type {ReflectionObject|null}\n     */\n    this.resolvedKeyType = null;\n\n    // Overrides Field#map\n    this.map = true;\n}\n\n/**\n * Map field descriptor.\n * @interface IMapField\n * @extends {IField}\n * @property {string} keyType Key type\n */\n\n/**\n * Extension map field descriptor.\n * @interface IExtensionMapField\n * @extends IMapField\n * @property {string} extend Extended type\n */\n\n/**\n * Constructs a map field from a map field descriptor.\n * @param {string} name Field name\n * @param {IMapField} json Map field descriptor\n * @returns {MapField} Created map field\n * @throws {TypeError} If arguments are invalid\n */\nMapField.fromJSON = function fromJSON(name, json) {\n    return new MapField(name, json.id, json.keyType, json.type, json.options, json.comment);\n};\n\n/**\n * Converts this map field to a map field descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMapField} Map field descriptor\n */\nMapField.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"keyType\" , this.keyType,\n        \"type\"    , this.type,\n        \"id\"      , this.id,\n        \"extend\"  , this.extend,\n        \"options\" , this.options,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nMapField.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n\n    // Besides a value type, map fields have a key type that may be \"any scalar type except for floating point types and bytes\"\n    if (types.mapKey[this.keyType] === undefined)\n        throw Error(\"invalid key type: \" + this.keyType);\n\n    return Field.prototype.resolve.call(this);\n};\n\n/**\n * Map field decorator (TypeScript).\n * @name MapField.d\n * @function\n * @param {number} fieldId Field id\n * @param {\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"} fieldKeyType Field key type\n * @param {\"double\"|\"float\"|\"int32\"|\"uint32\"|\"sint32\"|\"fixed32\"|\"sfixed32\"|\"int64\"|\"uint64\"|\"sint64\"|\"fixed64\"|\"sfixed64\"|\"bool\"|\"string\"|\"bytes\"|Object|Constructor<{}>} fieldValueType Field value type\n * @returns {FieldDecorator} Decorator function\n * @template T extends { [key: string]: number | Long | string | boolean | Uint8Array | Buffer | number[] | Message<{}> }\n */\nMapField.d = function decorateMapField(fieldId, fieldKeyType, fieldValueType) {\n\n    // submessage value: decorate the submessage and use its name as the type\n    if (typeof fieldValueType === \"function\")\n        fieldValueType = util.decorateType(fieldValueType).name;\n\n    // enum reference value: create a reflected copy of the enum and keep reuseing it\n    else if (fieldValueType && typeof fieldValueType === \"object\")\n        fieldValueType = util.decorateEnum(fieldValueType).name;\n\n    return function mapFieldDecorator(prototype, fieldName) {\n        util.decorateType(prototype.constructor)\n            .add(new MapField(fieldName, fieldId, fieldKeyType, fieldValueType));\n    };\n};\n","\"use strict\";\nmodule.exports = Method;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Method.prototype = Object.create(ReflectionObject.prototype)).constructor = Method).className = \"Method\";\n\nvar util = require(\"./util\");\n\n/**\n * Constructs a new service method instance.\n * @classdesc Reflected service method.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Method name\n * @param {string|undefined} type Method type, usually `\"rpc\"`\n * @param {string} requestType Request message type\n * @param {string} responseType Response message type\n * @param {boolean|Object.<string,*>} [requestStream] Whether the request is streamed\n * @param {boolean|Object.<string,*>} [responseStream] Whether the response is streamed\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this method\n * @param {Object.<string,*>} [parsedOptions] Declared options, properly parsed into an object\n */\nfunction Method(name, type, requestType, responseType, requestStream, responseStream, options, comment, parsedOptions) {\n\n    /* istanbul ignore next */\n    if (util.isObject(requestStream)) {\n        options = requestStream;\n        requestStream = responseStream = undefined;\n    } else if (util.isObject(responseStream)) {\n        options = responseStream;\n        responseStream = undefined;\n    }\n\n    /* istanbul ignore if */\n    if (!(type === undefined || util.isString(type)))\n        throw TypeError(\"type must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(requestType))\n        throw TypeError(\"requestType must be a string\");\n\n    /* istanbul ignore if */\n    if (!util.isString(responseType))\n        throw TypeError(\"responseType must be a string\");\n\n    ReflectionObject.call(this, name, options);\n\n    /**\n     * Method type.\n     * @type {string}\n     */\n    this.type = type || \"rpc\"; // toJSON\n\n    /**\n     * Request type.\n     * @type {string}\n     */\n    this.requestType = requestType; // toJSON, marker\n\n    /**\n     * Whether requests are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.requestStream = requestStream ? true : undefined; // toJSON\n\n    /**\n     * Response type.\n     * @type {string}\n     */\n    this.responseType = responseType; // toJSON\n\n    /**\n     * Whether responses are streamed or not.\n     * @type {boolean|undefined}\n     */\n    this.responseStream = responseStream ? true : undefined; // toJSON\n\n    /**\n     * Resolved request type.\n     * @type {Type|null}\n     */\n    this.resolvedRequestType = null;\n\n    /**\n     * Resolved response type.\n     * @type {Type|null}\n     */\n    this.resolvedResponseType = null;\n\n    /**\n     * Comment for this method\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Options properly parsed into an object\n     */\n    this.parsedOptions = parsedOptions;\n}\n\n/**\n * Method descriptor.\n * @interface IMethod\n * @property {string} [type=\"rpc\"] Method type\n * @property {string} requestType Request type\n * @property {string} responseType Response type\n * @property {boolean} [requestStream=false] Whether requests are streamed\n * @property {boolean} [responseStream=false] Whether responses are streamed\n * @property {Object.<string,*>} [options] Method options\n * @property {string} comment Method comments\n * @property {Object.<string,*>} [parsedOptions] Method options properly parsed into an object\n */\n\n/**\n * Constructs a method from a method descriptor.\n * @param {string} name Method name\n * @param {IMethod} json Method descriptor\n * @returns {Method} Created method\n * @throws {TypeError} If arguments are invalid\n */\nMethod.fromJSON = function fromJSON(name, json) {\n    return new Method(name, json.type, json.requestType, json.responseType, json.requestStream, json.responseStream, json.options, json.comment, json.parsedOptions);\n};\n\n/**\n * Converts this method to a method descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IMethod} Method descriptor\n */\nMethod.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"type\"           , this.type !== \"rpc\" && /* istanbul ignore next */ this.type || undefined,\n        \"requestType\"    , this.requestType,\n        \"requestStream\"  , this.requestStream,\n        \"responseType\"   , this.responseType,\n        \"responseStream\" , this.responseStream,\n        \"options\"        , this.options,\n        \"comment\"        , keepComments ? this.comment : undefined,\n        \"parsedOptions\"  , this.parsedOptions,\n    ]);\n};\n\n/**\n * @override\n */\nMethod.prototype.resolve = function resolve() {\n\n    /* istanbul ignore if */\n    if (this.resolved)\n        return this;\n\n    this.resolvedRequestType = this.parent.lookupType(this.requestType);\n    this.resolvedResponseType = this.parent.lookupType(this.responseType);\n\n    return ReflectionObject.prototype.resolve.call(this);\n};\n","\"use strict\";\nmodule.exports = Service;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Service.prototype = Object.create(Namespace.prototype)).constructor = Service).className = \"Service\";\n\nvar Method = require(\"./method\"),\n    util   = require(\"./util\"),\n    rpc    = require(\"./rpc\");\n\n/**\n * Constructs a new service instance.\n * @classdesc Reflected service.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Service name\n * @param {Object.<string,*>} [options] Service options\n * @throws {TypeError} If arguments are invalid\n */\nfunction Service(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Service methods.\n     * @type {Object.<string,Method>}\n     */\n    this.methods = {}; // toJSON, marker\n\n    /**\n     * Cached methods as an array.\n     * @type {Method[]|null}\n     * @private\n     */\n    this._methodsArray = null;\n}\n\n/**\n * Service descriptor.\n * @interface IService\n * @extends INamespace\n * @property {Object.<string,IMethod>} methods Method descriptors\n */\n\n/**\n * Constructs a service from a service descriptor.\n * @param {string} name Service name\n * @param {IService} json Service descriptor\n * @returns {Service} Created service\n * @throws {TypeError} If arguments are invalid\n */\nService.fromJSON = function fromJSON(name, json) {\n    var service = new Service(name, json.options);\n    /* istanbul ignore else */\n    if (json.methods)\n        for (var names = Object.keys(json.methods), i = 0; i < names.length; ++i)\n            service.add(Method.fromJSON(names[i], json.methods[names[i]]));\n    if (json.nested)\n        service.addJSON(json.nested);\n    service.comment = json.comment;\n    return service;\n};\n\n/**\n * Converts this service to a service descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IService} Service descriptor\n */\nService.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\" , inherited && inherited.options || undefined,\n        \"methods\" , Namespace.arrayToJSON(this.methodsArray, toJSONOptions) || /* istanbul ignore next */ {},\n        \"nested\"  , inherited && inherited.nested || undefined,\n        \"comment\" , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * Methods of this service as an array for iteration.\n * @name Service#methodsArray\n * @type {Method[]}\n * @readonly\n */\nObject.defineProperty(Service.prototype, \"methodsArray\", {\n    get: function() {\n        return this._methodsArray || (this._methodsArray = util.toArray(this.methods));\n    }\n});\n\nfunction clearCache(service) {\n    service._methodsArray = null;\n    return service;\n}\n\n/**\n * @override\n */\nService.prototype.get = function get(name) {\n    return this.methods[name]\n        || Namespace.prototype.get.call(this, name);\n};\n\n/**\n * @override\n */\nService.prototype.resolveAll = function resolveAll() {\n    var methods = this.methodsArray;\n    for (var i = 0; i < methods.length; ++i)\n        methods[i].resolve();\n    return Namespace.prototype.resolve.call(this);\n};\n\n/**\n * @override\n */\nService.prototype.add = function add(object) {\n\n    /* istanbul ignore if */\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Method) {\n        this.methods[object.name] = object;\n        object.parent = this;\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * @override\n */\nService.prototype.remove = function remove(object) {\n    if (object instanceof Method) {\n\n        /* istanbul ignore if */\n        if (this.methods[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.methods[object.name];\n        object.parent = null;\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Creates a runtime service using the specified rpc implementation.\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n * @returns {rpc.Service} RPC service. Useful where requests and/or responses are streamed.\n */\nService.prototype.create = function create(rpcImpl, requestDelimited, responseDelimited) {\n    var rpcService = new rpc.Service(rpcImpl, requestDelimited, responseDelimited);\n    for (var i = 0, method; i < /* initializes */ this.methodsArray.length; ++i) {\n        var methodName = util.lcFirst((method = this._methodsArray[i]).resolve().name).replace(/[^$\\w_]/g, \"\");\n        rpcService[methodName] = util.codegen([\"r\",\"c\"], util.isReserved(methodName) ? methodName + \"_\" : methodName)(\"return this.rpcCall(m,q,s,r,c)\")({\n            m: method,\n            q: method.resolvedRequestType.ctor,\n            s: method.resolvedResponseType.ctor\n        });\n    }\n    return rpcService;\n};\n","\"use strict\";\nmodule.exports = Message;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new message instance.\n * @classdesc Abstract runtime message.\n * @constructor\n * @param {Properties<T>} [properties] Properties to set\n * @template T extends object = object\n */\nfunction Message(properties) {\n    // not used internally\n    if (properties)\n        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n            this[keys[i]] = properties[keys[i]];\n}\n\n/**\n * Reference to the reflected type.\n * @name Message.$type\n * @type {Type}\n * @readonly\n */\n\n/**\n * Reference to the reflected type.\n * @name Message#$type\n * @type {Type}\n * @readonly\n */\n\n/*eslint-disable valid-jsdoc*/\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<T>} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.create = function create(properties) {\n    return this.$type.create(properties);\n};\n\n/**\n * Encodes a message of this type.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encode = function encode(message, writer) {\n    return this.$type.encode(message, writer);\n};\n\n/**\n * Encodes a message of this type preceeded by its length as a varint.\n * @param {T|Object.<string,*>} message Message to encode\n * @param {Writer} [writer] Writer to use\n * @returns {Writer} Writer\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.$type.encodeDelimited(message, writer);\n};\n\n/**\n * Decodes a message of this type.\n * @name Message.decode\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decode = function decode(reader) {\n    return this.$type.decode(reader);\n};\n\n/**\n * Decodes a message of this type preceeded by its length as a varint.\n * @name Message.decodeDelimited\n * @function\n * @param {Reader|Uint8Array} reader Reader or buffer to decode\n * @returns {T} Decoded message\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.decodeDelimited = function decodeDelimited(reader) {\n    return this.$type.decodeDelimited(reader);\n};\n\n/**\n * Verifies a message of this type.\n * @name Message.verify\n * @function\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {string|null} `null` if valid, otherwise the reason why it is not\n */\nMessage.verify = function verify(message) {\n    return this.$type.verify(message);\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object\n * @returns {T} Message instance\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.fromObject = function fromObject(object) {\n    return this.$type.fromObject(object);\n};\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {T} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @template T extends Message<T>\n * @this Constructor<T>\n */\nMessage.toObject = function toObject(message, options) {\n    return this.$type.toObject(message, options);\n};\n\n/**\n * Converts this message to JSON.\n * @returns {Object.<string,*>} JSON object\n */\nMessage.prototype.toJSON = function toJSON() {\n    return this.$type.toObject(this, util.toJSONOptions);\n};\n\n/*eslint-enable valid-jsdoc*/","\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i: {\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\")\n            (\"}\");\n        // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n","\"use strict\";\nmodule.exports = verifier;\n\nvar Enum      = require(\"./enum\"),\n    util      = require(\"./util\");\n\nfunction invalid(field, expected) {\n    return field.name + \": \" + expected + (field.repeated && expected !== \"array\" ? \"[]\" : field.map && expected !== \"object\" ? \"{k:\"+field.keyType+\"}\" : \"\") + \" expected\";\n}\n\n/**\n * Generates a partial value verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyValue(gen, field, fieldIndex, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(%s){\", ref)\n                (\"default:\")\n                    (\"return%j\", invalid(field, \"enum value\"));\n            for (var keys = Object.keys(field.resolvedType.values), j = 0; j < keys.length; ++j) gen\n                (\"case %i:\", field.resolvedType.values[keys[j]]);\n            gen\n                    (\"break\")\n            (\"}\");\n        } else {\n            gen\n            (\"{\")\n                (\"var e=types[%i].verify(%s);\", fieldIndex, ref)\n                (\"if(e)\")\n                    (\"return%j+e\", field.name + \".\")\n            (\"}\");\n        }\n    } else {\n        switch (field.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\": gen\n                (\"if(!util.isInteger(%s))\", ref)\n                    (\"return%j\", invalid(field, \"integer\"));\n                break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(!util.isInteger(%s)&&!(%s&&util.isInteger(%s.low)&&util.isInteger(%s.high)))\", ref, ref, ref, ref)\n                    (\"return%j\", invalid(field, \"integer|Long\"));\n                break;\n            case \"float\":\n            case \"double\": gen\n                (\"if(typeof %s!==\\\"number\\\")\", ref)\n                    (\"return%j\", invalid(field, \"number\"));\n                break;\n            case \"bool\": gen\n                (\"if(typeof %s!==\\\"boolean\\\")\", ref)\n                    (\"return%j\", invalid(field, \"boolean\"));\n                break;\n            case \"string\": gen\n                (\"if(!util.isString(%s))\", ref)\n                    (\"return%j\", invalid(field, \"string\"));\n                break;\n            case \"bytes\": gen\n                (\"if(!(%s&&typeof %s.length===\\\"number\\\"||util.isString(%s)))\", ref, ref, ref)\n                    (\"return%j\", invalid(field, \"buffer\"));\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a partial key verifier.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genVerifyKey(gen, field, ref) {\n    /* eslint-disable no-unexpected-multiline */\n    switch (field.keyType) {\n        case \"int32\":\n        case \"uint32\":\n        case \"sint32\":\n        case \"fixed32\":\n        case \"sfixed32\": gen\n            (\"if(!util.key32Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"integer key\"));\n            break;\n        case \"int64\":\n        case \"uint64\":\n        case \"sint64\":\n        case \"fixed64\":\n        case \"sfixed64\": gen\n            (\"if(!util.key64Re.test(%s))\", ref) // see comment above: x is ok, d is not\n                (\"return%j\", invalid(field, \"integer|Long key\"));\n            break;\n        case \"bool\": gen\n            (\"if(!util.key2Re.test(%s))\", ref)\n                (\"return%j\", invalid(field, \"boolean key\"));\n            break;\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline */\n}\n\n/**\n * Generates a verifier specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction verifier(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n\n    var gen = util.codegen([\"m\"], mtype.name + \"$verify\")\n    (\"if(typeof m!==\\\"object\\\"||m===null)\")\n        (\"return%j\", \"object expected\");\n    var oneofs = mtype.oneofsArray,\n        seenFirstField = {};\n    if (oneofs.length) gen\n    (\"var p={}\");\n\n    for (var i = 0; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            ref   = \"m\" + util.safeProp(field.name);\n\n        if (field.optional) gen\n        (\"if(%s!=null&&m.hasOwnProperty(%j)){\", ref, field.name); // !== undefined && !== null\n\n        // map fields\n        if (field.map) { gen\n            (\"if(!util.isObject(%s))\", ref)\n                (\"return%j\", invalid(field, \"object\"))\n            (\"var k=Object.keys(%s)\", ref)\n            (\"for(var i=0;i<k.length;++i){\");\n                genVerifyKey(gen, field, \"k[i]\");\n                genVerifyValue(gen, field, i, ref + \"[k[i]]\")\n            (\"}\");\n\n        // repeated fields\n        } else if (field.repeated) { gen\n            (\"if(!Array.isArray(%s))\", ref)\n                (\"return%j\", invalid(field, \"array\"))\n            (\"for(var i=0;i<%s.length;++i){\", ref);\n                genVerifyValue(gen, field, i, ref + \"[i]\")\n            (\"}\");\n\n        // required or present fields\n        } else {\n            if (field.partOf) {\n                var oneofProp = util.safeProp(field.partOf.name);\n                if (seenFirstField[field.partOf.name] === 1) gen\n            (\"if(p%s===1)\", oneofProp)\n                (\"return%j\", field.partOf.name + \": multiple values\");\n                seenFirstField[field.partOf.name] = 1;\n                gen\n            (\"p%s=1\", oneofProp);\n            }\n            genVerifyValue(gen, field, i, ref);\n        }\n        if (field.optional) gen\n        (\"}\");\n    }\n    return gen\n    (\"return null\");\n    /* eslint-enable no-unexpected-multiline */\n}","\"use strict\";\n/**\n * Runtime message from/to plain object converters.\n * @namespace\n */\nvar converter = exports;\n\nvar Enum = require(\"./enum\"),\n    util = require(\"./util\");\n\n/**\n * Generates a partial value fromObject conveter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_fromObject(gen, field, fieldIndex, prop) {\n    var defaultAlreadyEmitted = false;\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) { gen\n            (\"switch(d%s){\", prop);\n            for (var values = field.resolvedType.values, keys = Object.keys(values), i = 0; i < keys.length; ++i) {\n                // enum unknown values passthrough\n                if (values[keys[i]] === field.typeDefault && !defaultAlreadyEmitted) { gen\n                    (\"default:\")\n                        (\"if(typeof(d%s)===\\\"number\\\"){m%s=d%s;break}\", prop, prop, prop);\n                    if (!field.repeated) gen // fallback to default value only for\n                                             // arrays, to avoid leaving holes.\n                        (\"break\");           // for non-repeated fields, just ignore\n                    defaultAlreadyEmitted = true;\n                }\n                gen\n                (\"case%j:\", keys[i])\n                (\"case %i:\", values[keys[i]])\n                    (\"m%s=%j\", prop, values[keys[i]])\n                    (\"break\");\n            } gen\n            (\"}\");\n        } else gen\n            (\"if(typeof d%s!==\\\"object\\\")\", prop)\n                (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n            (\"m%s=types[%i].fromObject(d%s)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n                (\"m%s=Number(d%s)\", prop, prop); // also catches \"NaN\", \"Infinity\"\n                break;\n            case \"uint32\":\n            case \"fixed32\": gen\n                (\"m%s=d%s>>>0\", prop, prop);\n                break;\n            case \"int32\":\n            case \"sint32\":\n            case \"sfixed32\": gen\n                (\"m%s=d%s|0\", prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n                (\"if(util.Long)\")\n                    (\"(m%s=util.Long.fromValue(d%s)).unsigned=%j\", prop, prop, isUnsigned)\n                (\"else if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"m%s=parseInt(d%s,10)\", prop, prop)\n                (\"else if(typeof d%s===\\\"number\\\")\", prop)\n                    (\"m%s=d%s\", prop, prop)\n                (\"else if(typeof d%s===\\\"object\\\")\", prop)\n                    (\"m%s=new util.LongBits(d%s.low>>>0,d%s.high>>>0).toNumber(%s)\", prop, prop, prop, isUnsigned ? \"true\" : \"\");\n                break;\n            case \"bytes\": gen\n                (\"if(typeof d%s===\\\"string\\\")\", prop)\n                    (\"util.base64.decode(d%s,m%s=util.newBuffer(util.base64.length(d%s)),0)\", prop, prop, prop)\n                (\"else if(d%s.length >= 0)\", prop)\n                    (\"m%s=d%s\", prop, prop);\n                break;\n            case \"string\": gen\n                (\"m%s=String(d%s)\", prop, prop);\n                break;\n            case \"bool\": gen\n                (\"m%s=Boolean(d%s)\", prop, prop);\n                break;\n            /* default: gen\n                (\"m%s=d%s\", prop, prop);\n                break; */\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a plain object to runtime message converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.fromObject = function fromObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray;\n    var gen = util.codegen([\"d\"], mtype.name + \"$fromObject\")\n    (\"if(d instanceof this.ctor)\")\n        (\"return d\");\n    if (!fields.length) return gen\n    (\"return new this.ctor\");\n    gen\n    (\"var m=new this.ctor\");\n    for (var i = 0; i < fields.length; ++i) {\n        var field  = fields[i].resolve(),\n            prop   = util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) { gen\n    (\"if(d%s){\", prop)\n        (\"if(typeof d%s!==\\\"object\\\")\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": object expected\")\n        (\"m%s={}\", prop)\n        (\"for(var ks=Object.keys(d%s),i=0;i<ks.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[ks[i]]\")\n        (\"}\")\n    (\"}\");\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(d%s){\", prop)\n        (\"if(!Array.isArray(d%s))\", prop)\n            (\"throw TypeError(%j)\", field.fullName + \": array expected\")\n        (\"m%s=[]\", prop)\n        (\"for(var i=0;i<d%s.length;++i){\", prop);\n            genValuePartial_fromObject(gen, field, /* not sorted */ i, prop + \"[i]\")\n        (\"}\")\n    (\"}\");\n\n        // Non-repeated fields\n        } else {\n            if (!(field.resolvedType instanceof Enum)) gen // no need to test for null/undefined if an enum (uses switch)\n    (\"if(d%s!=null){\", prop); // !== undefined && !== null\n        genValuePartial_fromObject(gen, field, /* not sorted */ i, prop);\n            if (!(field.resolvedType instanceof Enum)) gen\n    (\"}\");\n        }\n    } return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n\n/**\n * Generates a partial value toObject converter.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} prop Property reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genValuePartial_toObject(gen, field, fieldIndex, prop) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    if (field.resolvedType) {\n        if (field.resolvedType instanceof Enum) gen\n            (\"d%s=o.enums===String?(types[%i].values[m%s]===undefined?m%s:types[%i].values[m%s]):m%s\", prop, fieldIndex, prop, prop, fieldIndex, prop, prop);\n        else gen\n            (\"d%s=types[%i].toObject(m%s,o)\", prop, fieldIndex, prop);\n    } else {\n        var isUnsigned = false;\n        switch (field.type) {\n            case \"double\":\n            case \"float\": gen\n            (\"d%s=o.json&&!isFinite(m%s)?String(m%s):m%s\", prop, prop, prop, prop);\n                break;\n            case \"uint64\":\n                isUnsigned = true;\n                // eslint-disable-next-line no-fallthrough\n            case \"int64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\": gen\n            (\"if(typeof m%s===\\\"number\\\")\", prop)\n                (\"d%s=o.longs===String?String(m%s):m%s\", prop, prop, prop)\n            (\"else\") // Long-like\n                (\"d%s=o.longs===String?util.Long.prototype.toString.call(m%s):o.longs===Number?new util.LongBits(m%s.low>>>0,m%s.high>>>0).toNumber(%s):m%s\", prop, prop, prop, prop, isUnsigned ? \"true\": \"\", prop);\n                break;\n            case \"bytes\": gen\n            (\"d%s=o.bytes===String?util.base64.encode(m%s,0,m%s.length):o.bytes===Array?Array.prototype.slice.call(m%s):m%s\", prop, prop, prop, prop, prop);\n                break;\n            default: gen\n            (\"d%s=m%s\", prop, prop);\n                break;\n        }\n    }\n    return gen;\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n\n/**\n * Generates a runtime message to plain object converter specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nconverter.toObject = function toObject(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var fields = mtype.fieldsArray.slice().sort(util.compareFieldsById);\n    if (!fields.length)\n        return util.codegen()(\"return {}\");\n    var gen = util.codegen([\"m\", \"o\"], mtype.name + \"$toObject\")\n    (\"if(!o)\")\n        (\"o={}\")\n    (\"var d={}\");\n\n    var repeatedFields = [],\n        mapFields = [],\n        normalFields = [],\n        i = 0;\n    for (; i < fields.length; ++i)\n        if (!fields[i].partOf)\n            ( fields[i].resolve().repeated ? repeatedFields\n            : fields[i].map ? mapFields\n            : normalFields).push(fields[i]);\n\n    if (repeatedFields.length) { gen\n    (\"if(o.arrays||o.defaults){\");\n        for (i = 0; i < repeatedFields.length; ++i) gen\n        (\"d%s=[]\", util.safeProp(repeatedFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (mapFields.length) { gen\n    (\"if(o.objects||o.defaults){\");\n        for (i = 0; i < mapFields.length; ++i) gen\n        (\"d%s={}\", util.safeProp(mapFields[i].name));\n        gen\n    (\"}\");\n    }\n\n    if (normalFields.length) { gen\n    (\"if(o.defaults){\");\n        for (i = 0; i < normalFields.length; ++i) {\n            var field = normalFields[i],\n                prop  = util.safeProp(field.name);\n            if (field.resolvedType instanceof Enum) gen\n        (\"d%s=o.enums===String?%j:%j\", prop, field.resolvedType.valuesById[field.typeDefault], field.typeDefault);\n            else if (field.long) gen\n        (\"if(util.Long){\")\n            (\"var n=new util.Long(%i,%i,%j)\", field.typeDefault.low, field.typeDefault.high, field.typeDefault.unsigned)\n            (\"d%s=o.longs===String?n.toString():o.longs===Number?n.toNumber():n\", prop)\n        (\"}else\")\n            (\"d%s=o.longs===String?%j:%i\", prop, field.typeDefault.toString(), field.typeDefault.toNumber());\n            else if (field.bytes) {\n                var arrayDefault = \"[\" + Array.prototype.slice.call(field.typeDefault).join(\",\") + \"]\";\n                gen\n        (\"if(o.bytes===String)d%s=%j\", prop, String.fromCharCode.apply(String, field.typeDefault))\n        (\"else{\")\n            (\"d%s=%s\", prop, arrayDefault)\n            (\"if(o.bytes!==Array)d%s=util.newBuffer(d%s)\", prop, prop)\n        (\"}\");\n            } else gen\n        (\"d%s=%j\", prop, field.typeDefault); // also messages (=null)\n        } gen\n    (\"}\");\n    }\n    var hasKs2 = false;\n    for (i = 0; i < fields.length; ++i) {\n        var field = fields[i],\n            index = mtype._fieldsArray.indexOf(field),\n            prop  = util.safeProp(field.name);\n        if (field.map) {\n            if (!hasKs2) { hasKs2 = true; gen\n    (\"var ks2\");\n            } gen\n    (\"if(m%s&&(ks2=Object.keys(m%s)).length){\", prop, prop)\n        (\"d%s={}\", prop)\n        (\"for(var j=0;j<ks2.length;++j){\");\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[ks2[j]]\")\n        (\"}\");\n        } else if (field.repeated) { gen\n    (\"if(m%s&&m%s.length){\", prop, prop)\n        (\"d%s=[]\", prop)\n        (\"for(var j=0;j<m%s.length;++j){\", prop);\n            genValuePartial_toObject(gen, field, /* sorted */ index, prop + \"[j]\")\n        (\"}\");\n        } else { gen\n    (\"if(m%s!=null&&m.hasOwnProperty(%j)){\", prop, field.name); // !== undefined && !== null\n        genValuePartial_toObject(gen, field, /* sorted */ index, prop);\n        if (field.partOf) gen\n        (\"if(o.oneofs)\")\n            (\"d%s=%j\", util.safeProp(field.partOf.name), field.name);\n        }\n        gen\n    (\"}\");\n    }\n    return gen\n    (\"return d\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n};\n","\"use strict\";\n\n/**\n * Wrappers for common types.\n * @type {Object.<string,IWrapper>}\n * @const\n */\nvar wrappers = exports;\n\nvar Message = require(\"./message\");\n\n/**\n * From object converter part of an {@link IWrapper}.\n * @typedef WrapperFromObjectConverter\n * @type {function}\n * @param {Object.<string,*>} object Plain object\n * @returns {Message<{}>} Message instance\n * @this Type\n */\n\n/**\n * To object converter part of an {@link IWrapper}.\n * @typedef WrapperToObjectConverter\n * @type {function}\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n * @this Type\n */\n\n/**\n * Common type wrapper part of {@link wrappers}.\n * @interface IWrapper\n * @property {WrapperFromObjectConverter} [fromObject] From object converter\n * @property {WrapperToObjectConverter} [toObject] To object converter\n */\n\n// Custom wrapper for Any\nwrappers[\".google.protobuf.Any\"] = {\n\n    fromObject: function(object) {\n\n        // unwrap value type if mapped\n        if (object && object[\"@type\"]) {\n             // Only use fully qualified type name after the last '/'\n            var name = object[\"@type\"].substring(object[\"@type\"].lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type) {\n                // type_url does not accept leading \".\"\n                var type_url = object[\"@type\"].charAt(0) === \".\" ?\n                    object[\"@type\"].slice(1) : object[\"@type\"];\n                // type_url prefix is optional, but path seperator is required\n                if (type_url.indexOf(\"/\") === -1) {\n                    type_url = \"/\" + type_url;\n                }\n                return this.create({\n                    type_url: type_url,\n                    value: type.encode(type.fromObject(object)).finish()\n                });\n            }\n        }\n\n        return this.fromObject(object);\n    },\n\n    toObject: function(message, options) {\n\n        // Default prefix\n        var googleApi = \"type.googleapis.com/\";\n        var prefix = \"\";\n        var name = \"\";\n\n        // decode value if requested and unmapped\n        if (options && options.json && message.type_url && message.value) {\n            // Only use fully qualified type name after the last '/'\n            name = message.type_url.substring(message.type_url.lastIndexOf(\"/\") + 1);\n            // Separate the prefix used\n            prefix = message.type_url.substring(0, message.type_url.lastIndexOf(\"/\") + 1);\n            var type = this.lookup(name);\n            /* istanbul ignore else */\n            if (type)\n                message = type.decode(message.value);\n        }\n\n        // wrap value if unmapped\n        if (!(message instanceof this.ctor) && message instanceof Message) {\n            var object = message.$type.toObject(message, options);\n            var messageName = message.$type.fullName[0] === \".\" ?\n                message.$type.fullName.slice(1) : message.$type.fullName;\n            // Default to type.googleapis.com prefix if no prefix is used\n            if (prefix === \"\") {\n                prefix = googleApi;\n            }\n            name = prefix + messageName;\n            object[\"@type\"] = name;\n            return object;\n        }\n\n        return this.toObject(message, options);\n    }\n};\n","\"use strict\";\nmodule.exports = Type;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Type.prototype = Object.create(Namespace.prototype)).constructor = Type).className = \"Type\";\n\nvar Enum      = require(\"./enum\"),\n    OneOf     = require(\"./oneof\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    Service   = require(\"./service\"),\n    Message   = require(\"./message\"),\n    Reader    = require(\"./reader\"),\n    Writer    = require(\"./writer\"),\n    util      = require(\"./util\"),\n    encoder   = require(\"./encoder\"),\n    decoder   = require(\"./decoder\"),\n    verifier  = require(\"./verifier\"),\n    converter = require(\"./converter\"),\n    wrappers  = require(\"./wrappers\");\n\n/**\n * Constructs a new reflected message type instance.\n * @classdesc Reflected message type.\n * @extends NamespaceBase\n * @constructor\n * @param {string} name Message name\n * @param {Object.<string,*>} [options] Declared options\n */\nfunction Type(name, options) {\n    Namespace.call(this, name, options);\n\n    /**\n     * Message fields.\n     * @type {Object.<string,Field>}\n     */\n    this.fields = {};  // toJSON, marker\n\n    /**\n     * Oneofs declared within this namespace, if any.\n     * @type {Object.<string,OneOf>}\n     */\n    this.oneofs = undefined; // toJSON\n\n    /**\n     * Extension ranges, if any.\n     * @type {number[][]}\n     */\n    this.extensions = undefined; // toJSON\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    /*?\n     * Whether this type is a legacy group.\n     * @type {boolean|undefined}\n     */\n    this.group = undefined; // toJSON\n\n    /**\n     * Cached fields by id.\n     * @type {Object.<number,Field>|null}\n     * @private\n     */\n    this._fieldsById = null;\n\n    /**\n     * Cached fields as an array.\n     * @type {Field[]|null}\n     * @private\n     */\n    this._fieldsArray = null;\n\n    /**\n     * Cached oneofs as an array.\n     * @type {OneOf[]|null}\n     * @private\n     */\n    this._oneofsArray = null;\n\n    /**\n     * Cached constructor.\n     * @type {Constructor<{}>}\n     * @private\n     */\n    this._ctor = null;\n}\n\nObject.defineProperties(Type.prototype, {\n\n    /**\n     * Message fields by id.\n     * @name Type#fieldsById\n     * @type {Object.<number,Field>}\n     * @readonly\n     */\n    fieldsById: {\n        get: function() {\n\n            /* istanbul ignore if */\n            if (this._fieldsById)\n                return this._fieldsById;\n\n            this._fieldsById = {};\n            for (var names = Object.keys(this.fields), i = 0; i < names.length; ++i) {\n                var field = this.fields[names[i]],\n                    id = field.id;\n\n                /* istanbul ignore if */\n                if (this._fieldsById[id])\n                    throw Error(\"duplicate id \" + id + \" in \" + this);\n\n                this._fieldsById[id] = field;\n            }\n            return this._fieldsById;\n        }\n    },\n\n    /**\n     * Fields of this message as an array for iteration.\n     * @name Type#fieldsArray\n     * @type {Field[]}\n     * @readonly\n     */\n    fieldsArray: {\n        get: function() {\n            return this._fieldsArray || (this._fieldsArray = util.toArray(this.fields));\n        }\n    },\n\n    /**\n     * Oneofs of this message as an array for iteration.\n     * @name Type#oneofsArray\n     * @type {OneOf[]}\n     * @readonly\n     */\n    oneofsArray: {\n        get: function() {\n            return this._oneofsArray || (this._oneofsArray = util.toArray(this.oneofs));\n        }\n    },\n\n    /**\n     * The registered constructor, if any registered, otherwise a generic constructor.\n     * Assigning a function replaces the internal constructor. If the function does not extend {@link Message} yet, its prototype will be setup accordingly and static methods will be populated. If it already extends {@link Message}, it will just replace the internal constructor.\n     * @name Type#ctor\n     * @type {Constructor<{}>}\n     */\n    ctor: {\n        get: function() {\n            return this._ctor || (this.ctor = Type.generateConstructor(this)());\n        },\n        set: function(ctor) {\n\n            // Ensure proper prototype\n            var prototype = ctor.prototype;\n            if (!(prototype instanceof Message)) {\n                (ctor.prototype = new Message()).constructor = ctor;\n                util.merge(ctor.prototype, prototype);\n            }\n\n            // Classes and messages reference their reflected type\n            ctor.$type = ctor.prototype.$type = this;\n\n            // Mix in static methods\n            util.merge(ctor, Message, true);\n\n            this._ctor = ctor;\n\n            // Messages have non-enumerable default values on their prototype\n            var i = 0;\n            for (; i < /* initializes */ this.fieldsArray.length; ++i)\n                this._fieldsArray[i].resolve(); // ensures a proper value\n\n            // Messages have non-enumerable getters and setters for each virtual oneof field\n            var ctorProperties = {};\n            for (i = 0; i < /* initializes */ this.oneofsArray.length; ++i)\n                ctorProperties[this._oneofsArray[i].resolve().name] = {\n                    get: util.oneOfGetter(this._oneofsArray[i].oneof),\n                    set: util.oneOfSetter(this._oneofsArray[i].oneof)\n                };\n            if (i)\n                Object.defineProperties(ctor.prototype, ctorProperties);\n        }\n    }\n});\n\n/**\n * Generates a constructor function for the specified type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nType.generateConstructor = function generateConstructor(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"p\"], mtype.name);\n    // explicitly initialize mutable object/array fields so that these aren't just inherited from the prototype\n    for (var i = 0, field; i < mtype.fieldsArray.length; ++i)\n        if ((field = mtype._fieldsArray[i]).map) gen\n            (\"this%s={}\", util.safeProp(field.name));\n        else if (field.repeated) gen\n            (\"this%s=[]\", util.safeProp(field.name));\n    return gen\n    (\"if(p)for(var ks=Object.keys(p),i=0;i<ks.length;++i)if(p[ks[i]]!=null)\") // omit undefined or null\n        (\"this[ks[i]]=p[ks[i]]\");\n    /* eslint-enable no-unexpected-multiline */\n};\n\nfunction clearCache(type) {\n    type._fieldsById = type._fieldsArray = type._oneofsArray = null;\n    delete type.encode;\n    delete type.decode;\n    delete type.verify;\n    return type;\n}\n\n/**\n * Message type descriptor.\n * @interface IType\n * @extends INamespace\n * @property {Object.<string,IOneOf>} [oneofs] Oneof descriptors\n * @property {Object.<string,IField>} fields Field descriptors\n * @property {number[][]} [extensions] Extension ranges\n * @property {number[][]} [reserved] Reserved ranges\n * @property {boolean} [group=false] Whether a legacy group or not\n */\n\n/**\n * Creates a message type from a message type descriptor.\n * @param {string} name Message name\n * @param {IType} json Message type descriptor\n * @returns {Type} Created message type\n */\nType.fromJSON = function fromJSON(name, json) {\n    var type = new Type(name, json.options);\n    type.extensions = json.extensions;\n    type.reserved = json.reserved;\n    var names = Object.keys(json.fields),\n        i = 0;\n    for (; i < names.length; ++i)\n        type.add(\n            ( typeof json.fields[names[i]].keyType !== \"undefined\"\n            ? MapField.fromJSON\n            : Field.fromJSON )(names[i], json.fields[names[i]])\n        );\n    if (json.oneofs)\n        for (names = Object.keys(json.oneofs), i = 0; i < names.length; ++i)\n            type.add(OneOf.fromJSON(names[i], json.oneofs[names[i]]));\n    if (json.nested)\n        for (names = Object.keys(json.nested), i = 0; i < names.length; ++i) {\n            var nested = json.nested[names[i]];\n            type.add( // most to least likely\n                ( nested.id !== undefined\n                ? Field.fromJSON\n                : nested.fields !== undefined\n                ? Type.fromJSON\n                : nested.values !== undefined\n                ? Enum.fromJSON\n                : nested.methods !== undefined\n                ? Service.fromJSON\n                : Namespace.fromJSON )(names[i], nested)\n            );\n        }\n    if (json.extensions && json.extensions.length)\n        type.extensions = json.extensions;\n    if (json.reserved && json.reserved.length)\n        type.reserved = json.reserved;\n    if (json.group)\n        type.group = true;\n    if (json.comment)\n        type.comment = json.comment;\n    return type;\n};\n\n/**\n * Converts this message type to a message type descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IType} Message type descriptor\n */\nType.prototype.toJSON = function toJSON(toJSONOptions) {\n    var inherited = Namespace.prototype.toJSON.call(this, toJSONOptions);\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"    , inherited && inherited.options || undefined,\n        \"oneofs\"     , Namespace.arrayToJSON(this.oneofsArray, toJSONOptions),\n        \"fields\"     , Namespace.arrayToJSON(this.fieldsArray.filter(function(obj) { return !obj.declaringField; }), toJSONOptions) || {},\n        \"extensions\" , this.extensions && this.extensions.length ? this.extensions : undefined,\n        \"reserved\"   , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"group\"      , this.group || undefined,\n        \"nested\"     , inherited && inherited.nested || undefined,\n        \"comment\"    , keepComments ? this.comment : undefined\n    ]);\n};\n\n/**\n * @override\n */\nType.prototype.resolveAll = function resolveAll() {\n    var fields = this.fieldsArray, i = 0;\n    while (i < fields.length)\n        fields[i++].resolve();\n    var oneofs = this.oneofsArray; i = 0;\n    while (i < oneofs.length)\n        oneofs[i++].resolve();\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n/**\n * @override\n */\nType.prototype.get = function get(name) {\n    return this.fields[name]\n        || this.oneofs && this.oneofs[name]\n        || this.nested && this.nested[name]\n        || null;\n};\n\n/**\n * Adds a nested object to this type.\n * @param {ReflectionObject} object Nested object to add\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a nested object with this name or, if a field, when there is already a field with this id\n */\nType.prototype.add = function add(object) {\n\n    if (this.get(object.name))\n        throw Error(\"duplicate name '\" + object.name + \"' in \" + this);\n\n    if (object instanceof Field && object.extend === undefined) {\n        // NOTE: Extension fields aren't actual fields on the declaring type, but nested objects.\n        // The root object takes care of adding distinct sister-fields to the respective extended\n        // type instead.\n\n        // avoids calling the getter if not absolutely necessary because it's called quite frequently\n        if (this._fieldsById ? /* istanbul ignore next */ this._fieldsById[object.id] : this.fieldsById[object.id])\n            throw Error(\"duplicate id \" + object.id + \" in \" + this);\n        if (this.isReservedId(object.id))\n            throw Error(\"id \" + object.id + \" is reserved in \" + this);\n        if (this.isReservedName(object.name))\n            throw Error(\"name '\" + object.name + \"' is reserved in \" + this);\n\n        if (object.parent)\n            object.parent.remove(object);\n        this.fields[object.name] = object;\n        object.message = this;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n        if (!this.oneofs)\n            this.oneofs = {};\n        this.oneofs[object.name] = object;\n        object.onAdd(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.add.call(this, object);\n};\n\n/**\n * Removes a nested object from this type.\n * @param {ReflectionObject} object Nested object to remove\n * @returns {Type} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `object` is not a member of this type\n */\nType.prototype.remove = function remove(object) {\n    if (object instanceof Field && object.extend === undefined) {\n        // See Type#add for the reason why extension fields are excluded here.\n\n        /* istanbul ignore if */\n        if (!this.fields || this.fields[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.fields[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    if (object instanceof OneOf) {\n\n        /* istanbul ignore if */\n        if (!this.oneofs || this.oneofs[object.name] !== object)\n            throw Error(object + \" is not a member of \" + this);\n\n        delete this.oneofs[object.name];\n        object.parent = null;\n        object.onRemove(this);\n        return clearCache(this);\n    }\n    return Namespace.prototype.remove.call(this, object);\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nType.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n\n/**\n * Creates a new message of this type using the specified properties.\n * @param {Object.<string,*>} [properties] Properties to set\n * @returns {Message<{}>} Message instance\n */\nType.prototype.create = function create(properties) {\n    return new this.ctor(properties);\n};\n\n/**\n * Sets up {@link Type#encode|encode}, {@link Type#decode|decode} and {@link Type#verify|verify}.\n * @returns {Type} `this`\n */\nType.prototype.setup = function setup() {\n    // Sets up everything at once so that the prototype chain does not have to be re-evaluated\n    // multiple times (V8, soft-deopt prototype-check).\n\n    var fullName = this.fullName,\n        types    = [];\n    for (var i = 0; i < /* initializes */ this.fieldsArray.length; ++i)\n        types.push(this._fieldsArray[i].resolve().resolvedType);\n\n    // Replace setup methods with type-specific generated functions\n    this.encode = encoder(this)({\n        Writer : Writer,\n        types  : types,\n        util   : util\n    });\n    this.decode = decoder(this)({\n        Reader : Reader,\n        types  : types,\n        util   : util\n    });\n    this.verify = verifier(this)({\n        types : types,\n        util  : util\n    });\n    this.fromObject = converter.fromObject(this)({\n        types : types,\n        util  : util\n    });\n    this.toObject = converter.toObject(this)({\n        types : types,\n        util  : util\n    });\n\n    // Inject custom wrappers for common types\n    var wrapper = wrappers[fullName];\n    if (wrapper) {\n        var originalThis = Object.create(this);\n        // if (wrapper.fromObject) {\n            originalThis.fromObject = this.fromObject;\n            this.fromObject = wrapper.fromObject.bind(originalThis);\n        // }\n        // if (wrapper.toObject) {\n            originalThis.toObject = this.toObject;\n            this.toObject = wrapper.toObject.bind(originalThis);\n        // }\n    }\n\n    return this;\n};\n\n/**\n * Encodes a message of this type. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encode = function encode_setup(message, writer) {\n    return this.setup().encode(message, writer); // overrides this method\n};\n\n/**\n * Encodes a message of this type preceeded by its byte length as a varint. Does not implicitly {@link Type#verify|verify} messages.\n * @param {Message<{}>|Object.<string,*>} message Message instance or plain object\n * @param {Writer} [writer] Writer to encode to\n * @returns {Writer} writer\n */\nType.prototype.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer && writer.len ? writer.fork() : writer).ldelim();\n};\n\n/**\n * Decodes a message of this type.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @param {number} [length] Length of the message, if known beforehand\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError<{}>} If required fields are missing\n */\nType.prototype.decode = function decode_setup(reader, length) {\n    return this.setup().decode(reader, length); // overrides this method\n};\n\n/**\n * Decodes a message of this type preceeded by its byte length as a varint.\n * @param {Reader|Uint8Array} reader Reader or buffer to decode from\n * @returns {Message<{}>} Decoded message\n * @throws {Error} If the payload is not a reader or valid buffer\n * @throws {util.ProtocolError} If required fields are missing\n */\nType.prototype.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof Reader))\n        reader = Reader.create(reader);\n    return this.decode(reader, reader.uint32());\n};\n\n/**\n * Verifies that field values are valid and that required fields are present.\n * @param {Object.<string,*>} message Plain object to verify\n * @returns {null|string} `null` if valid, otherwise the reason why it is not\n */\nType.prototype.verify = function verify_setup(message) {\n    return this.setup().verify(message); // overrides this method\n};\n\n/**\n * Creates a new message of this type from a plain object. Also converts values to their respective internal types.\n * @param {Object.<string,*>} object Plain object to convert\n * @returns {Message<{}>} Message instance\n */\nType.prototype.fromObject = function fromObject(object) {\n    return this.setup().fromObject(object);\n};\n\n/**\n * Conversion options as used by {@link Type#toObject} and {@link Message.toObject}.\n * @interface IConversionOptions\n * @property {Function} [longs] Long conversion type.\n * Valid values are `String` and `Number` (the global types).\n * Defaults to copy the present value, which is a possibly unsafe number without and a {@link Long} with a long library.\n * @property {Function} [enums] Enum value conversion type.\n * Only valid value is `String` (the global type).\n * Defaults to copy the present value, which is the numeric id.\n * @property {Function} [bytes] Bytes value conversion type.\n * Valid values are `Array` and (a base64 encoded) `String` (the global types).\n * Defaults to copy the present value, which usually is a Buffer under node and an Uint8Array in the browser.\n * @property {boolean} [defaults=false] Also sets default values on the resulting object\n * @property {boolean} [arrays=false] Sets empty arrays for missing repeated fields even if `defaults=false`\n * @property {boolean} [objects=false] Sets empty objects for missing map fields even if `defaults=false`\n * @property {boolean} [oneofs=false] Includes virtual oneof properties set to the present field's name, if any\n * @property {boolean} [json=false] Performs additional JSON compatibility conversions, i.e. NaN and Infinity to strings\n */\n\n/**\n * Creates a plain object from a message of this type. Also converts values to other types if specified.\n * @param {Message<{}>} message Message instance\n * @param {IConversionOptions} [options] Conversion options\n * @returns {Object.<string,*>} Plain object\n */\nType.prototype.toObject = function toObject(message, options) {\n    return this.setup().toObject(message, options);\n};\n\n/**\n * Decorator function as returned by {@link Type.d} (TypeScript).\n * @typedef TypeDecorator\n * @type {function}\n * @param {Constructor<T>} target Target constructor\n * @returns {undefined}\n * @template T extends Message<T>\n */\n\n/**\n * Type decorator (TypeScript).\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {TypeDecorator<T>} Decorator function\n * @template T extends Message<T>\n */\nType.d = function decorateType(typeName) {\n    return function typeDecorator(target) {\n        util.decorateType(target, typeName);\n    };\n};\n","\"use strict\";\nmodule.exports = Root;\n\n// extends Namespace\nvar Namespace = require(\"./namespace\");\n((Root.prototype = Object.create(Namespace.prototype)).constructor = Root).className = \"Root\";\n\nvar Field   = require(\"./field\"),\n    Enum    = require(\"./enum\"),\n    OneOf   = require(\"./oneof\"),\n    util    = require(\"./util\");\n\nvar Type,   // cyclic\n    parse,  // might be excluded\n    common; // \"\n\n/**\n * Constructs a new root namespace instance.\n * @classdesc Root namespace wrapping all types, enums, services, sub-namespaces etc. that belong together.\n * @extends NamespaceBase\n * @constructor\n * @param {Object.<string,*>} [options] Top level options\n */\nfunction Root(options) {\n    Namespace.call(this, \"\", options);\n\n    /**\n     * Deferred extension fields.\n     * @type {Field[]}\n     */\n    this.deferred = [];\n\n    /**\n     * Resolved file names of loaded files.\n     * @type {string[]}\n     */\n    this.files = [];\n}\n\n/**\n * Loads a namespace descriptor into a root namespace.\n * @param {INamespace} json Nameespace descriptor\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted\n * @returns {Root} Root namespace\n */\nRoot.fromJSON = function fromJSON(json, root) {\n    if (!root)\n        root = new Root();\n    if (json.options)\n        root.setOptions(json.options);\n    return root.addJSON(json.nested);\n};\n\n/**\n * Resolves the path of an imported file, relative to the importing origin.\n * This method exists so you can override it with your own logic in case your imports are scattered over multiple directories.\n * @function\n * @param {string} origin The file name of the importing file\n * @param {string} target The file name being imported\n * @returns {string|null} Resolved path to `target` or `null` to skip the file\n */\nRoot.prototype.resolvePath = util.path.resolve;\n\n/**\n * Fetch content from file path or url\n * This method exists so you can override it with your own logic.\n * @function\n * @param {string} path File path or url\n * @param {FetchCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.fetch = util.fetch;\n\n// A symbol-like function to safely signal synchronous loading\n/* istanbul ignore next */\nfunction SYNC() {} // eslint-disable-line no-empty-function\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} options Parse options\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n */\nRoot.prototype.load = function load(filename, options, callback) {\n    if (typeof options === \"function\") {\n        callback = options;\n        options = undefined;\n    }\n    var self = this;\n    if (!callback)\n        return util.asPromise(load, self, filename, options);\n\n    var sync = callback === SYNC; // undocumented\n\n    // Finishes loading by calling the callback (exactly once)\n    function finish(err, root) {\n        /* istanbul ignore if */\n        if (!callback)\n            return;\n        if (sync)\n            throw err;\n        var cb = callback;\n        callback = null;\n        cb(err, root);\n    }\n\n    // Bundled definition existence checking\n    function getBundledFileName(filename) {\n        var idx = filename.lastIndexOf(\"google/protobuf/\");\n        if (idx > -1) {\n            var altname = filename.substring(idx);\n            if (altname in common) return altname;\n        }\n        return null;\n    }\n\n    // Processes a single file\n    function process(filename, source) {\n        try {\n            if (util.isString(source) && source.charAt(0) === \"{\")\n                source = JSON.parse(source);\n            if (!util.isString(source))\n                self.setOptions(source.options).addJSON(source.nested);\n            else {\n                parse.filename = filename;\n                var parsed = parse(source, self, options),\n                    resolved,\n                    i = 0;\n                if (parsed.imports)\n                    for (; i < parsed.imports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.imports[i]) || self.resolvePath(filename, parsed.imports[i]))\n                            fetch(resolved);\n                if (parsed.weakImports)\n                    for (i = 0; i < parsed.weakImports.length; ++i)\n                        if (resolved = getBundledFileName(parsed.weakImports[i]) || self.resolvePath(filename, parsed.weakImports[i]))\n                            fetch(resolved, true);\n            }\n        } catch (err) {\n            finish(err);\n        }\n        if (!sync && !queued)\n            finish(null, self); // only once anyway\n    }\n\n    // Fetches a single file\n    function fetch(filename, weak) {\n        filename = getBundledFileName(filename) || filename;\n\n        // Skip if already loaded / attempted\n        if (self.files.indexOf(filename) > -1)\n            return;\n        self.files.push(filename);\n\n        // Shortcut bundled definitions\n        if (filename in common) {\n            if (sync)\n                process(filename, common[filename]);\n            else {\n                ++queued;\n                setTimeout(function() {\n                    --queued;\n                    process(filename, common[filename]);\n                });\n            }\n            return;\n        }\n\n        // Otherwise fetch from disk or network\n        if (sync) {\n            var source;\n            try {\n                source = util.fs.readFileSync(filename).toString(\"utf8\");\n            } catch (err) {\n                if (!weak)\n                    finish(err);\n                return;\n            }\n            process(filename, source);\n        } else {\n            ++queued;\n            self.fetch(filename, function(err, source) {\n                --queued;\n                /* istanbul ignore if */\n                if (!callback)\n                    return; // terminated meanwhile\n                if (err) {\n                    /* istanbul ignore else */\n                    if (!weak)\n                        finish(err);\n                    else if (!queued) // can't be covered reliably\n                        finish(null, self);\n                    return;\n                }\n                process(filename, source);\n            });\n        }\n    }\n    var queued = 0;\n\n    // Assembling the root namespace doesn't require working type\n    // references anymore, so we can load everything in parallel\n    if (util.isString(filename))\n        filename = [ filename ];\n    for (var i = 0, resolved; i < filename.length; ++i)\n        if (resolved = self.resolvePath(\"\", filename[i]))\n            fetch(resolved);\n\n    if (sync)\n        return self;\n    if (!queued)\n        finish(null, self);\n    return undefined;\n};\n// function load(filename:string, options:IParseOptions, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and calls the callback.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into this root namespace and returns a promise.\n * @function Root#load\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Promise<Root>} Promise\n * @variation 3\n */\n// function load(filename:string, [options:IParseOptions]):Promise<Root>\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into this root namespace (node only).\n * @function Root#loadSync\n * @param {string|string[]} filename Names of one or multiple files to load\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n */\nRoot.prototype.loadSync = function loadSync(filename, options) {\n    if (!util.isNode)\n        throw Error(\"not supported\");\n    return this.load(filename, options, SYNC);\n};\n\n/**\n * @override\n */\nRoot.prototype.resolveAll = function resolveAll() {\n    if (this.deferred.length)\n        throw Error(\"unresolvable extensions: \" + this.deferred.map(function(field) {\n            return \"'extend \" + field.extend + \"' in \" + field.parent.fullName;\n        }).join(\", \"));\n    return Namespace.prototype.resolveAll.call(this);\n};\n\n// only uppercased (and thus conflict-free) children are exposed, see below\nvar exposeRe = /^[A-Z]/;\n\n/**\n * Handles a deferred declaring extension field by creating a sister field to represent it within its extended type.\n * @param {Root} root Root instance\n * @param {Field} field Declaring extension field witin the declaring type\n * @returns {boolean} `true` if successfully added to the extended type, `false` otherwise\n * @inner\n * @ignore\n */\nfunction tryHandleExtension(root, field) {\n    var extendedType = field.parent.lookup(field.extend);\n    if (extendedType) {\n        var sisterField = new Field(field.fullName, field.id, field.type, field.rule, undefined, field.options);\n        //do not allow to extend same field twice to prevent the error\n        if (extendedType.get(sisterField.name)) {\n            return true;\n        }\n        sisterField.declaringField = field;\n        field.extensionField = sisterField;\n        extendedType.add(sisterField);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Called when any object is added to this root or its sub-namespaces.\n * @param {ReflectionObject} object Object added\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleAdd = function _handleAdd(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field (implies not part of a oneof) */ object.extend !== undefined && /* not already handled */ !object.extensionField)\n            if (!tryHandleExtension(this, object))\n                this.deferred.push(object);\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object.values; // expose enum values as property of its parent\n\n    } else if (!(object instanceof OneOf)) /* everything else is a namespace */ {\n\n        if (object instanceof Type) // Try to handle any deferred extensions\n            for (var i = 0; i < this.deferred.length;)\n                if (tryHandleExtension(this, this.deferred[i]))\n                    this.deferred.splice(i, 1);\n                else\n                    ++i;\n        for (var j = 0; j < /* initializes */ object.nestedArray.length; ++j) // recurse into the namespace\n            this._handleAdd(object._nestedArray[j]);\n        if (exposeRe.test(object.name))\n            object.parent[object.name] = object; // expose namespace as property of its parent\n    }\n\n    // The above also adds uppercased (and thus conflict-free) nested types, services and enums as\n    // properties of namespaces just like static code does. This allows using a .d.ts generated for\n    // a static module with reflection-based solutions where the condition is met.\n};\n\n/**\n * Called when any object is removed from this root or its sub-namespaces.\n * @param {ReflectionObject} object Object removed\n * @returns {undefined}\n * @private\n */\nRoot.prototype._handleRemove = function _handleRemove(object) {\n    if (object instanceof Field) {\n\n        if (/* an extension field */ object.extend !== undefined) {\n            if (/* already handled */ object.extensionField) { // remove its sister field\n                object.extensionField.parent.remove(object.extensionField);\n                object.extensionField = null;\n            } else { // cancel the extension\n                var index = this.deferred.indexOf(object);\n                /* istanbul ignore else */\n                if (index > -1)\n                    this.deferred.splice(index, 1);\n            }\n        }\n\n    } else if (object instanceof Enum) {\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose enum values\n\n    } else if (object instanceof Namespace) {\n\n        for (var i = 0; i < /* initializes */ object.nestedArray.length; ++i) // recurse into the namespace\n            this._handleRemove(object._nestedArray[i]);\n\n        if (exposeRe.test(object.name))\n            delete object.parent[object.name]; // unexpose namespaces\n\n    }\n};\n\n// Sets up cyclic dependencies (called in index-light)\nRoot._configure = function(Type_, parse_, common_) {\n    Type   = Type_;\n    parse  = parse_;\n    common = common_;\n};\n","\"use strict\";\n\n/**\n * Various utility functions.\n * @namespace\n */\nvar util = module.exports = require(\"./util/minimal\");\n\nvar roots = require(\"./roots\");\n\nvar Type, // cyclic\n    Enum;\n\nutil.codegen = require(\"@protobufjs/codegen\");\nutil.fetch   = require(\"@protobufjs/fetch\");\nutil.path    = require(\"@protobufjs/path\");\n\n/**\n * Node's fs module if available.\n * @type {Object.<string,*>}\n */\nutil.fs = util.inquire(\"fs\");\n\n/**\n * Converts an object's values to an array.\n * @param {Object.<string,*>} object Object to convert\n * @returns {Array.<*>} Converted array\n */\nutil.toArray = function toArray(object) {\n    if (object) {\n        var keys  = Object.keys(object),\n            array = new Array(keys.length),\n            index = 0;\n        while (index < keys.length)\n            array[index] = object[keys[index++]];\n        return array;\n    }\n    return [];\n};\n\n/**\n * Converts an array of keys immediately followed by their respective value to an object, omitting undefined values.\n * @param {Array.<*>} array Array to convert\n * @returns {Object.<string,*>} Converted object\n */\nutil.toObject = function toObject(array) {\n    var object = {},\n        index  = 0;\n    while (index < array.length) {\n        var key = array[index++],\n            val = array[index++];\n        if (val !== undefined)\n            object[key] = val;\n    }\n    return object;\n};\n\nvar safePropBackslashRe = /\\\\/g,\n    safePropQuoteRe     = /\"/g;\n\n/**\n * Tests whether the specified name is a reserved word in JS.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nutil.isReserved = function isReserved(name) {\n    return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(name);\n};\n\n/**\n * Returns a safe property accessor for the specified property name.\n * @param {string} prop Property name\n * @returns {string} Safe accessor\n */\nutil.safeProp = function safeProp(prop) {\n    if (!/^[$\\w_]+$/.test(prop) || util.isReserved(prop))\n        return \"[\\\"\" + prop.replace(safePropBackslashRe, \"\\\\\\\\\").replace(safePropQuoteRe, \"\\\\\\\"\") + \"\\\"]\";\n    return \".\" + prop;\n};\n\n/**\n * Converts the first character of a string to upper case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.ucFirst = function ucFirst(str) {\n    return str.charAt(0).toUpperCase() + str.substring(1);\n};\n\nvar camelCaseRe = /_([a-z])/g;\n\n/**\n * Converts a string to camel case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.camelCase = function camelCase(str) {\n    return str.substring(0, 1)\n         + str.substring(1)\n               .replace(camelCaseRe, function($0, $1) { return $1.toUpperCase(); });\n};\n\n/**\n * Compares reflected fields by id.\n * @param {Field} a First field\n * @param {Field} b Second field\n * @returns {number} Comparison value\n */\nutil.compareFieldsById = function compareFieldsById(a, b) {\n    return a.id - b.id;\n};\n\n/**\n * Decorator helper for types (TypeScript).\n * @param {Constructor<T>} ctor Constructor function\n * @param {string} [typeName] Type name, defaults to the constructor's name\n * @returns {Type} Reflected type\n * @template T extends Message<T>\n * @property {Root} root Decorators root\n */\nutil.decorateType = function decorateType(ctor, typeName) {\n\n    /* istanbul ignore if */\n    if (ctor.$type) {\n        if (typeName && ctor.$type.name !== typeName) {\n            util.decorateRoot.remove(ctor.$type);\n            ctor.$type.name = typeName;\n            util.decorateRoot.add(ctor.$type);\n        }\n        return ctor.$type;\n    }\n\n    /* istanbul ignore next */\n    if (!Type)\n        Type = require(\"./type\");\n\n    var type = new Type(typeName || ctor.name);\n    util.decorateRoot.add(type);\n    type.ctor = ctor; // sets up .encode, .decode etc.\n    Object.defineProperty(ctor, \"$type\", { value: type, enumerable: false });\n    Object.defineProperty(ctor.prototype, \"$type\", { value: type, enumerable: false });\n    return type;\n};\n\nvar decorateEnumIndex = 0;\n\n/**\n * Decorator helper for enums (TypeScript).\n * @param {Object} object Enum object\n * @returns {Enum} Reflected enum\n */\nutil.decorateEnum = function decorateEnum(object) {\n\n    /* istanbul ignore if */\n    if (object.$type)\n        return object.$type;\n\n    /* istanbul ignore next */\n    if (!Enum)\n        Enum = require(\"./enum\");\n\n    var enm = new Enum(\"Enum\" + decorateEnumIndex++, object);\n    util.decorateRoot.add(enm);\n    Object.defineProperty(object, \"$type\", { value: enm, enumerable: false });\n    return enm;\n};\n\n\n/**\n * Sets the value of a property by property path. If a value already exists, it is turned to an array\n * @param {Object.<string,*>} dst Destination object\n * @param {string} path dot '.' delimited path of the property to set\n * @param {Object} value the value to set\n * @returns {Object.<string,*>} Destination object\n */\nutil.setProperty = function setProperty(dst, path, value) {\n    function setProp(dst, path, value) {\n        var part = path.shift();\n        if (part === \"__proto__\" || part === \"prototype\") {\n          return dst;\n        }\n        if (path.length > 0) {\n            dst[part] = setProp(dst[part] || {}, path, value);\n        } else {\n            var prevValue = dst[part];\n            if (prevValue)\n                value = [].concat(prevValue).concat(value);\n            dst[part] = value;\n        }\n        return dst;\n    }\n\n    if (typeof dst !== \"object\")\n        throw TypeError(\"dst must be an object\");\n    if (!path)\n        throw TypeError(\"path must be specified\");\n\n    path = path.split(\".\");\n    return setProp(dst, path, value);\n};\n\n/**\n * Decorator root (TypeScript).\n * @name util.decorateRoot\n * @type {Root}\n * @readonly\n */\nObject.defineProperty(util, \"decorateRoot\", {\n    get: function() {\n        return roots[\"decorated\"] || (roots[\"decorated\"] = new (require(\"./root\"))());\n    }\n});\n","\"use strict\";\nmodule.exports = ReflectionObject;\n\nReflectionObject.className = \"ReflectionObject\";\n\nvar util = require(\"./util\");\n\nvar Root; // cyclic\n\n/**\n * Constructs a new reflection object instance.\n * @classdesc Base class of all reflection objects.\n * @constructor\n * @param {string} name Object name\n * @param {Object.<string,*>} [options] Declared options\n * @abstract\n */\nfunction ReflectionObject(name, options) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (options && !util.isObject(options))\n        throw TypeError(\"options must be an object\");\n\n    /**\n     * Options.\n     * @type {Object.<string,*>|undefined}\n     */\n    this.options = options; // toJSON\n\n    /**\n     * Parsed Options.\n     * @type {Array.<Object.<string,*>>|undefined}\n     */\n    this.parsedOptions = null;\n\n    /**\n     * Unique name within its namespace.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Parent namespace.\n     * @type {Namespace|null}\n     */\n    this.parent = null;\n\n    /**\n     * Whether already resolved or not.\n     * @type {boolean}\n     */\n    this.resolved = false;\n\n    /**\n     * Comment text, if any.\n     * @type {string|null}\n     */\n    this.comment = null;\n\n    /**\n     * Defining file name.\n     * @type {string|null}\n     */\n    this.filename = null;\n}\n\nObject.defineProperties(ReflectionObject.prototype, {\n\n    /**\n     * Reference to the root namespace.\n     * @name ReflectionObject#root\n     * @type {Root}\n     * @readonly\n     */\n    root: {\n        get: function() {\n            var ptr = this;\n            while (ptr.parent !== null)\n                ptr = ptr.parent;\n            return ptr;\n        }\n    },\n\n    /**\n     * Full name including leading dot.\n     * @name ReflectionObject#fullName\n     * @type {string}\n     * @readonly\n     */\n    fullName: {\n        get: function() {\n            var path = [ this.name ],\n                ptr = this.parent;\n            while (ptr) {\n                path.unshift(ptr.name);\n                ptr = ptr.parent;\n            }\n            return path.join(\".\");\n        }\n    }\n});\n\n/**\n * Converts this reflection object to its descriptor representation.\n * @returns {Object.<string,*>} Descriptor\n * @abstract\n */\nReflectionObject.prototype.toJSON = /* istanbul ignore next */ function toJSON() {\n    throw Error(); // not implemented, shouldn't happen\n};\n\n/**\n * Called when this object is added to a parent.\n * @param {ReflectionObject} parent Parent added to\n * @returns {undefined}\n */\nReflectionObject.prototype.onAdd = function onAdd(parent) {\n    if (this.parent && this.parent !== parent)\n        this.parent.remove(this);\n    this.parent = parent;\n    this.resolved = false;\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleAdd(this);\n};\n\n/**\n * Called when this object is removed from a parent.\n * @param {ReflectionObject} parent Parent removed from\n * @returns {undefined}\n */\nReflectionObject.prototype.onRemove = function onRemove(parent) {\n    var root = parent.root;\n    if (root instanceof Root)\n        root._handleRemove(this);\n    this.parent = null;\n    this.resolved = false;\n};\n\n/**\n * Resolves this objects type references.\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.resolve = function resolve() {\n    if (this.resolved)\n        return this;\n    if (this.root instanceof Root)\n        this.resolved = true; // only if part of a root\n    return this;\n};\n\n/**\n * Gets an option value.\n * @param {string} name Option name\n * @returns {*} Option value or `undefined` if not set\n */\nReflectionObject.prototype.getOption = function getOption(name) {\n    if (this.options)\n        return this.options[name];\n    return undefined;\n};\n\n/**\n * Sets an option.\n * @param {string} name Option name\n * @param {*} value Option value\n * @param {boolean} [ifNotSet] Sets the option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOption = function setOption(name, value, ifNotSet) {\n    if (!ifNotSet || !this.options || this.options[name] === undefined)\n        (this.options || (this.options = {}))[name] = value;\n    return this;\n};\n\n/**\n * Sets a parsed option.\n * @param {string} name parsed Option name\n * @param {*} value Option value\n * @param {string} propName dot '.' delimited full path of property within the option to set. if undefined\\empty, will add a new option with that value\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setParsedOption = function setParsedOption(name, value, propName) {\n    if (!this.parsedOptions) {\n        this.parsedOptions = [];\n    }\n    var parsedOptions = this.parsedOptions;\n    if (propName) {\n        // If setting a sub property of an option then try to merge it\n        // with an existing option\n        var opt = parsedOptions.find(function (opt) {\n            return Object.prototype.hasOwnProperty.call(opt, name);\n        });\n        if (opt) {\n            // If we found an existing option - just merge the property value\n            var newValue = opt[name];\n            util.setProperty(newValue, propName, value);\n        } else {\n            // otherwise, create a new option, set it's property and add it to the list\n            opt = {};\n            opt[name] = util.setProperty({}, propName, value);\n            parsedOptions.push(opt);\n        }\n    } else {\n        // Always create a new option when setting the value of the option itself\n        var newOpt = {};\n        newOpt[name] = value;\n        parsedOptions.push(newOpt);\n    }\n    return this;\n};\n\n/**\n * Sets multiple options.\n * @param {Object.<string,*>} options Options to set\n * @param {boolean} [ifNotSet] Sets an option only if it isn't currently set\n * @returns {ReflectionObject} `this`\n */\nReflectionObject.prototype.setOptions = function setOptions(options, ifNotSet) {\n    if (options)\n        for (var keys = Object.keys(options), i = 0; i < keys.length; ++i)\n            this.setOption(keys[i], options[keys[i]], ifNotSet);\n    return this;\n};\n\n/**\n * Converts this instance to its string representation.\n * @returns {string} Class name[, space, full name]\n */\nReflectionObject.prototype.toString = function toString() {\n    var className = this.constructor.className,\n        fullName  = this.fullName;\n    if (fullName.length)\n        return className + \" \" + fullName;\n    return className;\n};\n\n// Sets up cyclic dependencies (called in index-light)\nReflectionObject._configure = function(Root_) {\n    Root = Root_;\n};\n","\"use strict\";\nmodule.exports = Enum;\n\n// extends ReflectionObject\nvar ReflectionObject = require(\"./object\");\n((Enum.prototype = Object.create(ReflectionObject.prototype)).constructor = Enum).className = \"Enum\";\n\nvar Namespace = require(\"./namespace\"),\n    util = require(\"./util\");\n\n/**\n * Constructs a new enum instance.\n * @classdesc Reflected enum.\n * @extends ReflectionObject\n * @constructor\n * @param {string} name Unique name within its namespace\n * @param {Object.<string,number>} [values] Enum values as an object, by name\n * @param {Object.<string,*>} [options] Declared options\n * @param {string} [comment] The comment for this enum\n * @param {Object.<string,string>} [comments] The value comments for this enum\n * @param {Object.<string,Object<string,*>>|undefined} [valuesOptions] The value options for this enum\n */\nfunction Enum(name, values, options, comment, comments, valuesOptions) {\n    ReflectionObject.call(this, name, options);\n\n    if (values && typeof values !== \"object\")\n        throw TypeError(\"values must be an object\");\n\n    /**\n     * Enum values by id.\n     * @type {Object.<number,string>}\n     */\n    this.valuesById = {};\n\n    /**\n     * Enum values by name.\n     * @type {Object.<string,number>}\n     */\n    this.values = Object.create(this.valuesById); // toJSON, marker\n\n    /**\n     * Enum comment text.\n     * @type {string|null}\n     */\n    this.comment = comment;\n\n    /**\n     * Value comment texts, if any.\n     * @type {Object.<string,string>}\n     */\n    this.comments = comments || {};\n\n    /**\n     * Values options, if any\n     * @type {Object<string, Object<string, *>>|undefined}\n     */\n    this.valuesOptions = valuesOptions;\n\n    /**\n     * Reserved ranges, if any.\n     * @type {Array.<number[]|string>}\n     */\n    this.reserved = undefined; // toJSON\n\n    // Note that values inherit valuesById on their prototype which makes them a TypeScript-\n    // compatible enum. This is used by pbts to write actual enum definitions that work for\n    // static and reflection code alike instead of emitting generic object definitions.\n\n    if (values)\n        for (var keys = Object.keys(values), i = 0; i < keys.length; ++i)\n            if (typeof values[keys[i]] === \"number\") // use forward entries only\n                this.valuesById[ this.values[keys[i]] = values[keys[i]] ] = keys[i];\n}\n\n/**\n * Enum descriptor.\n * @interface IEnum\n * @property {Object.<string,number>} values Enum values\n * @property {Object.<string,*>} [options] Enum options\n */\n\n/**\n * Constructs an enum from an enum descriptor.\n * @param {string} name Enum name\n * @param {IEnum} json Enum descriptor\n * @returns {Enum} Created enum\n * @throws {TypeError} If arguments are invalid\n */\nEnum.fromJSON = function fromJSON(name, json) {\n    var enm = new Enum(name, json.values, json.options, json.comment, json.comments);\n    enm.reserved = json.reserved;\n    return enm;\n};\n\n/**\n * Converts this enum to an enum descriptor.\n * @param {IToJSONOptions} [toJSONOptions] JSON conversion options\n * @returns {IEnum} Enum descriptor\n */\nEnum.prototype.toJSON = function toJSON(toJSONOptions) {\n    var keepComments = toJSONOptions ? Boolean(toJSONOptions.keepComments) : false;\n    return util.toObject([\n        \"options\"       , this.options,\n        \"valuesOptions\" , this.valuesOptions,\n        \"values\"        , this.values,\n        \"reserved\"      , this.reserved && this.reserved.length ? this.reserved : undefined,\n        \"comment\"       , keepComments ? this.comment : undefined,\n        \"comments\"      , keepComments ? this.comments : undefined\n    ]);\n};\n\n/**\n * Adds a value to this enum.\n * @param {string} name Value name\n * @param {number} id Value id\n * @param {string} [comment] Comment, if any\n * @param {Object.<string, *>|undefined} [options] Options, if any\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If there is already a value with this name or id\n */\nEnum.prototype.add = function add(name, id, comment, options) {\n    // utilized by the parser but not by .fromJSON\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    if (!util.isInteger(id))\n        throw TypeError(\"id must be an integer\");\n\n    if (this.values[name] !== undefined)\n        throw Error(\"duplicate name '\" + name + \"' in \" + this);\n\n    if (this.isReservedId(id))\n        throw Error(\"id \" + id + \" is reserved in \" + this);\n\n    if (this.isReservedName(name))\n        throw Error(\"name '\" + name + \"' is reserved in \" + this);\n\n    if (this.valuesById[id] !== undefined) {\n        if (!(this.options && this.options.allow_alias))\n            throw Error(\"duplicate id \" + id + \" in \" + this);\n        this.values[name] = id;\n    } else\n        this.valuesById[this.values[name] = id] = name;\n\n    if (options) {\n        if (this.valuesOptions === undefined)\n            this.valuesOptions = {};\n        this.valuesOptions[name] = options || null;\n    }\n\n    this.comments[name] = comment || null;\n    return this;\n};\n\n/**\n * Removes a value from this enum\n * @param {string} name Value name\n * @returns {Enum} `this`\n * @throws {TypeError} If arguments are invalid\n * @throws {Error} If `name` is not a name of this enum\n */\nEnum.prototype.remove = function remove(name) {\n\n    if (!util.isString(name))\n        throw TypeError(\"name must be a string\");\n\n    var val = this.values[name];\n    if (val == null)\n        throw Error(\"name '\" + name + \"' does not exist in \" + this);\n\n    delete this.valuesById[val];\n    delete this.values[name];\n    delete this.comments[name];\n    if (this.valuesOptions)\n        delete this.valuesOptions[name];\n\n    return this;\n};\n\n/**\n * Tests if the specified id is reserved.\n * @param {number} id Id to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedId = function isReservedId(id) {\n    return Namespace.isReservedId(this.reserved, id);\n};\n\n/**\n * Tests if the specified name is reserved.\n * @param {string} name Name to test\n * @returns {boolean} `true` if reserved, otherwise `false`\n */\nEnum.prototype.isReservedName = function isReservedName(name) {\n    return Namespace.isReservedName(this.reserved, name);\n};\n","\"use strict\";\nmodule.exports = encoder;\n\nvar Enum     = require(\"./enum\"),\n    types    = require(\"./types\"),\n    util     = require(\"./util\");\n\n/**\n * Generates a partial message type encoder.\n * @param {Codegen} gen Codegen instance\n * @param {Field} field Reflected field\n * @param {number} fieldIndex Field index\n * @param {string} ref Variable reference\n * @returns {Codegen} Codegen instance\n * @ignore\n */\nfunction genTypePartial(gen, field, fieldIndex, ref) {\n    return field.resolvedType.group\n        ? gen(\"types[%i].encode(%s,w.uint32(%i)).uint32(%i)\", fieldIndex, ref, (field.id << 3 | 3) >>> 0, (field.id << 3 | 4) >>> 0)\n        : gen(\"types[%i].encode(%s,w.uint32(%i).fork()).ldelim()\", fieldIndex, ref, (field.id << 3 | 2) >>> 0);\n}\n\n/**\n * Generates an encoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction encoder(mtype) {\n    /* eslint-disable no-unexpected-multiline, block-scoped-var, no-redeclare */\n    var gen = util.codegen([\"m\", \"w\"], mtype.name + \"$encode\")\n    (\"if(!w)\")\n        (\"w=Writer.create()\");\n\n    var i, ref;\n\n    // \"when a message is serialized its known fields should be written sequentially by field number\"\n    var fields = /* initializes */ mtype.fieldsArray.slice().sort(util.compareFieldsById);\n\n    for (var i = 0; i < fields.length; ++i) {\n        var field    = fields[i].resolve(),\n            index    = mtype._fieldsArray.indexOf(field),\n            type     = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            wireType = types.basic[type];\n            ref      = \"m\" + util.safeProp(field.name);\n\n        // Map fields\n        if (field.map) {\n            gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j)){\", ref, field.name) // !== undefined && !== null\n        (\"for(var ks=Object.keys(%s),i=0;i<ks.length;++i){\", ref)\n            (\"w.uint32(%i).fork().uint32(%i).%s(ks[i])\", (field.id << 3 | 2) >>> 0, 8 | types.mapKey[field.keyType], field.keyType);\n            if (wireType === undefined) gen\n            (\"types[%i].encode(%s[ks[i]],w.uint32(18).fork()).ldelim().ldelim()\", index, ref); // can't be groups\n            else gen\n            (\".uint32(%i).%s(%s[ks[i]]).ldelim()\", 16 | wireType, type, ref);\n            gen\n        (\"}\")\n    (\"}\");\n\n            // Repeated fields\n        } else if (field.repeated) { gen\n    (\"if(%s!=null&&%s.length){\", ref, ref); // !== undefined && !== null\n\n            // Packed repeated\n            if (field.packed && types.packed[type] !== undefined) { gen\n\n        (\"w.uint32(%i).fork()\", (field.id << 3 | 2) >>> 0)\n        (\"for(var i=0;i<%s.length;++i)\", ref)\n            (\"w.%s(%s[i])\", type, ref)\n        (\"w.ldelim()\");\n\n            // Non-packed\n            } else { gen\n\n        (\"for(var i=0;i<%s.length;++i)\", ref);\n                if (wireType === undefined)\n            genTypePartial(gen, field, index, ref + \"[i]\");\n                else gen\n            (\"w.uint32(%i).%s(%s[i])\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n            } gen\n    (\"}\");\n\n        // Non-repeated\n        } else {\n            if (field.optional) gen\n    (\"if(%s!=null&&Object.hasOwnProperty.call(m,%j))\", ref, field.name); // !== undefined && !== null\n\n            if (wireType === undefined)\n        genTypePartial(gen, field, index, ref);\n            else gen\n        (\"w.uint32(%i).%s(%s)\", (field.id << 3 | wireType) >>> 0, type, ref);\n\n        }\n    }\n\n    return gen\n    (\"return w\");\n    /* eslint-enable no-unexpected-multiline, block-scoped-var, no-redeclare */\n}\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-minimal\");\n\nprotobuf.build = \"light\";\n\n/**\n * A node-style callback as used by {@link load} and {@link Root#load}.\n * @typedef LoadCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Root} [root] Root, if there hasn't been an error\n * @returns {undefined}\n */\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} root Root namespace, defaults to create a new one if omitted.\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n */\nfunction load(filename, root, callback) {\n    if (typeof root === \"function\") {\n        callback = root;\n        root = new protobuf.Root();\n    } else if (!root)\n        root = new protobuf.Root();\n    return root.load(filename, callback);\n}\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and calls the callback.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {LoadCallback} callback Callback function\n * @returns {undefined}\n * @see {@link Root#load}\n * @variation 2\n */\n// function load(filename:string, callback:LoadCallback):undefined\n\n/**\n * Loads one or multiple .proto or preprocessed .json files into a common root namespace and returns a promise.\n * @name load\n * @function\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Promise<Root>} Promise\n * @see {@link Root#load}\n * @variation 3\n */\n// function load(filename:string, [root:Root]):Promise<Root>\n\nprotobuf.load = load;\n\n/**\n * Synchronously loads one or multiple .proto or preprocessed .json files into a common root namespace (node only).\n * @param {string|string[]} filename One or multiple files to load\n * @param {Root} [root] Root namespace, defaults to create a new one if omitted.\n * @returns {Root} Root namespace\n * @throws {Error} If synchronous fetching is not supported (i.e. in browsers) or if a file's syntax is invalid\n * @see {@link Root#loadSync}\n */\nfunction loadSync(filename, root) {\n    if (!root)\n        root = new protobuf.Root();\n    return root.loadSync(filename);\n}\n\nprotobuf.loadSync = loadSync;\n\n// Serialization\nprotobuf.encoder          = require(\"./encoder\");\nprotobuf.decoder          = require(\"./decoder\");\nprotobuf.verifier         = require(\"./verifier\");\nprotobuf.converter        = require(\"./converter\");\n\n// Reflection\nprotobuf.ReflectionObject = require(\"./object\");\nprotobuf.Namespace        = require(\"./namespace\");\nprotobuf.Root             = require(\"./root\");\nprotobuf.Enum             = require(\"./enum\");\nprotobuf.Type             = require(\"./type\");\nprotobuf.Field            = require(\"./field\");\nprotobuf.OneOf            = require(\"./oneof\");\nprotobuf.MapField         = require(\"./mapfield\");\nprotobuf.Service          = require(\"./service\");\nprotobuf.Method           = require(\"./method\");\n\n// Runtime\nprotobuf.Message          = require(\"./message\");\nprotobuf.wrappers         = require(\"./wrappers\");\n\n// Utility\nprotobuf.types            = require(\"./types\");\nprotobuf.util             = require(\"./util\");\n\n// Set up possibly cyclic reflection dependencies\nprotobuf.ReflectionObject._configure(protobuf.Root);\nprotobuf.Namespace._configure(protobuf.Type, protobuf.Service, protobuf.Enum);\nprotobuf.Root._configure(protobuf.Type);\nprotobuf.Field._configure(protobuf.Type);\n","\"use strict\";\nmodule.exports = tokenize;\n\nvar delimRe        = /[\\s{}=;:[\\],'\"()<>]/g,\n    stringDoubleRe = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n    stringSingleRe = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g;\n\nvar setCommentRe = /^ *[*/]+ */,\n    setCommentAltRe = /^\\s*\\*?\\/*/,\n    setCommentSplitRe = /\\n/g,\n    whitespaceRe = /\\s/,\n    unescapeRe = /\\\\(.?)/g;\n\nvar unescapeMap = {\n    \"0\": \"\\0\",\n    \"r\": \"\\r\",\n    \"n\": \"\\n\",\n    \"t\": \"\\t\"\n};\n\n/**\n * Unescapes a string.\n * @param {string} str String to unescape\n * @returns {string} Unescaped string\n * @property {Object.<string,string>} map Special characters map\n * @memberof tokenize\n */\nfunction unescape(str) {\n    return str.replace(unescapeRe, function($0, $1) {\n        switch ($1) {\n            case \"\\\\\":\n            case \"\":\n                return $1;\n            default:\n                return unescapeMap[$1] || \"\";\n        }\n    });\n}\n\ntokenize.unescape = unescape;\n\n/**\n * Gets the next token and advances.\n * @typedef TokenizerHandleNext\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Peeks for the next token.\n * @typedef TokenizerHandlePeek\n * @type {function}\n * @returns {string|null} Next token or `null` on eof\n */\n\n/**\n * Pushes a token back to the stack.\n * @typedef TokenizerHandlePush\n * @type {function}\n * @param {string} token Token\n * @returns {undefined}\n */\n\n/**\n * Skips the next token.\n * @typedef TokenizerHandleSkip\n * @type {function}\n * @param {string} expected Expected token\n * @param {boolean} [optional=false] If optional\n * @returns {boolean} Whether the token matched\n * @throws {Error} If the token didn't match and is not optional\n */\n\n/**\n * Gets the comment on the previous line or, alternatively, the line comment on the specified line.\n * @typedef TokenizerHandleCmnt\n * @type {function}\n * @param {number} [line] Line number\n * @returns {string|null} Comment text or `null` if none\n */\n\n/**\n * Handle object returned from {@link tokenize}.\n * @interface ITokenizerHandle\n * @property {TokenizerHandleNext} next Gets the next token and advances (`null` on eof)\n * @property {TokenizerHandlePeek} peek Peeks for the next token (`null` on eof)\n * @property {TokenizerHandlePush} push Pushes a token back to the stack\n * @property {TokenizerHandleSkip} skip Skips a token, returns its presence and advances or, if non-optional and not present, throws\n * @property {TokenizerHandleCmnt} cmnt Gets the comment on the previous line or the line comment on the specified line, if any\n * @property {number} line Current line number\n */\n\n/**\n * Tokenizes the given .proto source and returns an object with useful utility functions.\n * @param {string} source Source contents\n * @param {boolean} alternateCommentMode Whether we should activate alternate comment parsing mode.\n * @returns {ITokenizerHandle} Tokenizer handle\n */\nfunction tokenize(source, alternateCommentMode) {\n    /* eslint-disable callback-return */\n    source = source.toString();\n\n    var offset = 0,\n        length = source.length,\n        line = 1,\n        lastCommentLine = 0,\n        comments = {};\n\n    var stack = [];\n\n    var stringDelim = null;\n\n    /* istanbul ignore next */\n    /**\n     * Creates an error for illegal syntax.\n     * @param {string} subject Subject\n     * @returns {Error} Error created\n     * @inner\n     */\n    function illegal(subject) {\n        return Error(\"illegal \" + subject + \" (line \" + line + \")\");\n    }\n\n    /**\n     * Reads a string till its end.\n     * @returns {string} String read\n     * @inner\n     */\n    function readString() {\n        var re = stringDelim === \"'\" ? stringSingleRe : stringDoubleRe;\n        re.lastIndex = offset - 1;\n        var match = re.exec(source);\n        if (!match)\n            throw illegal(\"string\");\n        offset = re.lastIndex;\n        push(stringDelim);\n        stringDelim = null;\n        return unescape(match[1]);\n    }\n\n    /**\n     * Gets the character at `pos` within the source.\n     * @param {number} pos Position\n     * @returns {string} Character\n     * @inner\n     */\n    function charAt(pos) {\n        return source.charAt(pos);\n    }\n\n    /**\n     * Sets the current comment text.\n     * @param {number} start Start offset\n     * @param {number} end End offset\n     * @param {boolean} isLeading set if a leading comment\n     * @returns {undefined}\n     * @inner\n     */\n    function setComment(start, end, isLeading) {\n        var comment = {\n            type: source.charAt(start++),\n            lineEmpty: false,\n            leading: isLeading,\n        };\n        var lookback;\n        if (alternateCommentMode) {\n            lookback = 2;  // alternate comment parsing: \"//\" or \"/*\"\n        } else {\n            lookback = 3;  // \"///\" or \"/**\"\n        }\n        var commentOffset = start - lookback,\n            c;\n        do {\n            if (--commentOffset < 0 ||\n                    (c = source.charAt(commentOffset)) === \"\\n\") {\n                comment.lineEmpty = true;\n                break;\n            }\n        } while (c === \" \" || c === \"\\t\");\n        var lines = source\n            .substring(start, end)\n            .split(setCommentSplitRe);\n        for (var i = 0; i < lines.length; ++i)\n            lines[i] = lines[i]\n                .replace(alternateCommentMode ? setCommentAltRe : setCommentRe, \"\")\n                .trim();\n        comment.text = lines\n            .join(\"\\n\")\n            .trim();\n\n        comments[line] = comment;\n        lastCommentLine = line;\n    }\n\n    function isDoubleSlashCommentLine(startOffset) {\n        var endOffset = findEndOfLine(startOffset);\n\n        // see if remaining line matches comment pattern\n        var lineText = source.substring(startOffset, endOffset);\n        var isComment = /^\\s*\\/\\//.test(lineText);\n        return isComment;\n    }\n\n    function findEndOfLine(cursor) {\n        // find end of cursor's line\n        var endOffset = cursor;\n        while (endOffset < length && charAt(endOffset) !== \"\\n\") {\n            endOffset++;\n        }\n        return endOffset;\n    }\n\n    /**\n     * Obtains the next token.\n     * @returns {string|null} Next token or `null` on eof\n     * @inner\n     */\n    function next() {\n        if (stack.length > 0)\n            return stack.shift();\n        if (stringDelim)\n            return readString();\n        var repeat,\n            prev,\n            curr,\n            start,\n            isDoc,\n            isLeadingComment = offset === 0;\n        do {\n            if (offset === length)\n                return null;\n            repeat = false;\n            while (whitespaceRe.test(curr = charAt(offset))) {\n                if (curr === \"\\n\") {\n                    isLeadingComment = true;\n                    ++line;\n                }\n                if (++offset === length)\n                    return null;\n            }\n\n            if (charAt(offset) === \"/\") {\n                if (++offset === length) {\n                    throw illegal(\"comment\");\n                }\n                if (charAt(offset) === \"/\") { // Line\n                    if (!alternateCommentMode) {\n                        // check for triple-slash comment\n                        isDoc = charAt(start = offset + 1) === \"/\";\n\n                        while (charAt(++offset) !== \"\\n\") {\n                            if (offset === length) {\n                                return null;\n                            }\n                        }\n                        ++offset;\n                        if (isDoc) {\n                            setComment(start, offset - 1, isLeadingComment);\n                            // Trailing comment cannot not be multi-line,\n                            // so leading comment state should be reset to handle potential next comments\n                            isLeadingComment = true;\n                        }\n                        ++line;\n                        repeat = true;\n                    } else {\n                        // check for double-slash comments, consolidating consecutive lines\n                        start = offset;\n                        isDoc = false;\n                        if (isDoubleSlashCommentLine(offset - 1)) {\n                            isDoc = true;\n                            do {\n                                offset = findEndOfLine(offset);\n                                if (offset === length) {\n                                    break;\n                                }\n                                offset++;\n                                if (!isLeadingComment) {\n                                    // Trailing comment cannot not be multi-line\n                                    break;\n                                }\n                            } while (isDoubleSlashCommentLine(offset));\n                        } else {\n                            offset = Math.min(length, findEndOfLine(offset) + 1);\n                        }\n                        if (isDoc) {\n                            setComment(start, offset, isLeadingComment);\n                            isLeadingComment = true;\n                        }\n                        line++;\n                        repeat = true;\n                    }\n                } else if ((curr = charAt(offset)) === \"*\") { /* Block */\n                    // check for /** (regular comment mode) or /* (alternate comment mode)\n                    start = offset + 1;\n                    isDoc = alternateCommentMode || charAt(start) === \"*\";\n                    do {\n                        if (curr === \"\\n\") {\n                            ++line;\n                        }\n                        if (++offset === length) {\n                            throw illegal(\"comment\");\n                        }\n                        prev = curr;\n                        curr = charAt(offset);\n                    } while (prev !== \"*\" || curr !== \"/\");\n                    ++offset;\n                    if (isDoc) {\n                        setComment(start, offset - 2, isLeadingComment);\n                        isLeadingComment = true;\n                    }\n                    repeat = true;\n                } else {\n                    return \"/\";\n                }\n            }\n        } while (repeat);\n\n        // offset !== length if we got here\n\n        var end = offset;\n        delimRe.lastIndex = 0;\n        var delim = delimRe.test(charAt(end++));\n        if (!delim)\n            while (end < length && !delimRe.test(charAt(end)))\n                ++end;\n        var token = source.substring(offset, offset = end);\n        if (token === \"\\\"\" || token === \"'\")\n            stringDelim = token;\n        return token;\n    }\n\n    /**\n     * Pushes a token back to the stack.\n     * @param {string} token Token\n     * @returns {undefined}\n     * @inner\n     */\n    function push(token) {\n        stack.push(token);\n    }\n\n    /**\n     * Peeks for the next token.\n     * @returns {string|null} Token or `null` on eof\n     * @inner\n     */\n    function peek() {\n        if (!stack.length) {\n            var token = next();\n            if (token === null)\n                return null;\n            push(token);\n        }\n        return stack[0];\n    }\n\n    /**\n     * Skips a token.\n     * @param {string} expected Expected token\n     * @param {boolean} [optional=false] Whether the token is optional\n     * @returns {boolean} `true` when skipped, `false` if not\n     * @throws {Error} When a required token is not present\n     * @inner\n     */\n    function skip(expected, optional) {\n        var actual = peek(),\n            equals = actual === expected;\n        if (equals) {\n            next();\n            return true;\n        }\n        if (!optional)\n            throw illegal(\"token '\" + actual + \"', '\" + expected + \"' expected\");\n        return false;\n    }\n\n    /**\n     * Gets a comment.\n     * @param {number} [trailingLine] Line number if looking for a trailing comment\n     * @returns {string|null} Comment text\n     * @inner\n     */\n    function cmnt(trailingLine) {\n        var ret = null;\n        var comment;\n        if (trailingLine === undefined) {\n            comment = comments[line - 1];\n            delete comments[line - 1];\n            if (comment && (alternateCommentMode || comment.type === \"*\" || comment.lineEmpty)) {\n                ret = comment.leading ? comment.text : null;\n            }\n        } else {\n            /* istanbul ignore else */\n            if (lastCommentLine < trailingLine) {\n                peek();\n            }\n            comment = comments[trailingLine];\n            delete comments[trailingLine];\n            if (comment && !comment.lineEmpty && (alternateCommentMode || comment.type === \"/\")) {\n                ret = comment.leading ? null : comment.text;\n            }\n        }\n        return ret;\n    }\n\n    return Object.defineProperty({\n        next: next,\n        peek: peek,\n        push: push,\n        skip: skip,\n        cmnt: cmnt\n    }, \"line\", {\n        get: function() { return line; }\n    });\n    /* eslint-enable callback-return */\n}\n","\"use strict\";\nmodule.exports = parse;\n\nparse.filename = null;\nparse.defaults = { keepCase: false };\n\nvar tokenize  = require(\"./tokenize\"),\n    Root      = require(\"./root\"),\n    Type      = require(\"./type\"),\n    Field     = require(\"./field\"),\n    MapField  = require(\"./mapfield\"),\n    OneOf     = require(\"./oneof\"),\n    Enum      = require(\"./enum\"),\n    Service   = require(\"./service\"),\n    Method    = require(\"./method\"),\n    types     = require(\"./types\"),\n    util      = require(\"./util\");\n\nvar base10Re    = /^[1-9][0-9]*$/,\n    base10NegRe = /^-?[1-9][0-9]*$/,\n    base16Re    = /^0[x][0-9a-fA-F]+$/,\n    base16NegRe = /^-?0[x][0-9a-fA-F]+$/,\n    base8Re     = /^0[0-7]+$/,\n    base8NegRe  = /^-?0[0-7]+$/,\n    numberRe    = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n    nameRe      = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n    typeRefRe   = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)*$/,\n    fqTypeRefRe = /^(?:\\.[a-zA-Z_][a-zA-Z_0-9]*)+$/;\n\n/**\n * Result object returned from {@link parse}.\n * @interface IParserResult\n * @property {string|undefined} package Package name, if declared\n * @property {string[]|undefined} imports Imports, if any\n * @property {string[]|undefined} weakImports Weak imports, if any\n * @property {string|undefined} syntax Syntax, if specified (either `\"proto2\"` or `\"proto3\"`)\n * @property {Root} root Populated root instance\n */\n\n/**\n * Options modifying the behavior of {@link parse}.\n * @interface IParseOptions\n * @property {boolean} [keepCase=false] Keeps field casing instead of converting to camel case\n * @property {boolean} [alternateCommentMode=false] Recognize double-slash comments in addition to doc-block comments.\n * @property {boolean} [preferTrailingComment=false] Use trailing comment when both leading comment and trailing comment exist.\n */\n\n/**\n * Options modifying the behavior of JSON serialization.\n * @interface IToJSONOptions\n * @property {boolean} [keepComments=false] Serializes comments.\n */\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @param {string} source Source contents\n * @param {Root} root Root to populate\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n */\nfunction parse(source, root, options) {\n    /* eslint-disable callback-return */\n    if (!(root instanceof Root)) {\n        options = root;\n        root = new Root();\n    }\n    if (!options)\n        options = parse.defaults;\n\n    var preferTrailingComment = options.preferTrailingComment || false;\n    var tn = tokenize(source, options.alternateCommentMode || false),\n        next = tn.next,\n        push = tn.push,\n        peek = tn.peek,\n        skip = tn.skip,\n        cmnt = tn.cmnt;\n\n    var head = true,\n        pkg,\n        imports,\n        weakImports,\n        syntax,\n        isProto3 = false;\n\n    var ptr = root;\n\n    var applyCase = options.keepCase ? function(name) { return name; } : util.camelCase;\n\n    /* istanbul ignore next */\n    function illegal(token, name, insideTryCatch) {\n        var filename = parse.filename;\n        if (!insideTryCatch)\n            parse.filename = null;\n        return Error(\"illegal \" + (name || \"token\") + \" '\" + token + \"' (\" + (filename ? filename + \", \" : \"\") + \"line \" + tn.line + \")\");\n    }\n\n    function readString() {\n        var values = [],\n            token;\n        do {\n            /* istanbul ignore if */\n            if ((token = next()) !== \"\\\"\" && token !== \"'\")\n                throw illegal(token);\n\n            values.push(next());\n            skip(token);\n            token = peek();\n        } while (token === \"\\\"\" || token === \"'\");\n        return values.join(\"\");\n    }\n\n    function readValue(acceptTypeRef) {\n        var token = next();\n        switch (token) {\n            case \"'\":\n            case \"\\\"\":\n                push(token);\n                return readString();\n            case \"true\": case \"TRUE\":\n                return true;\n            case \"false\": case \"FALSE\":\n                return false;\n        }\n        try {\n            return parseNumber(token, /* insideTryCatch */ true);\n        } catch (e) {\n\n            /* istanbul ignore else */\n            if (acceptTypeRef && typeRefRe.test(token))\n                return token;\n\n            /* istanbul ignore next */\n            throw illegal(token, \"value\");\n        }\n    }\n\n    function readRanges(target, acceptStrings) {\n        var token, start;\n        do {\n            if (acceptStrings && ((token = peek()) === \"\\\"\" || token === \"'\"))\n                target.push(readString());\n            else\n                target.push([ start = parseId(next()), skip(\"to\", true) ? parseId(next()) : start ]);\n        } while (skip(\",\", true));\n        skip(\";\");\n    }\n\n    function parseNumber(token, insideTryCatch) {\n        var sign = 1;\n        if (token.charAt(0) === \"-\") {\n            sign = -1;\n            token = token.substring(1);\n        }\n        switch (token) {\n            case \"inf\": case \"INF\": case \"Inf\":\n                return sign * Infinity;\n            case \"nan\": case \"NAN\": case \"Nan\": case \"NaN\":\n                return NaN;\n            case \"0\":\n                return 0;\n        }\n        if (base10Re.test(token))\n            return sign * parseInt(token, 10);\n        if (base16Re.test(token))\n            return sign * parseInt(token, 16);\n        if (base8Re.test(token))\n            return sign * parseInt(token, 8);\n\n        /* istanbul ignore else */\n        if (numberRe.test(token))\n            return sign * parseFloat(token);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"number\", insideTryCatch);\n    }\n\n    function parseId(token, acceptNegative) {\n        switch (token) {\n            case \"max\": case \"MAX\": case \"Max\":\n                return 536870911;\n            case \"0\":\n                return 0;\n        }\n\n        /* istanbul ignore if */\n        if (!acceptNegative && token.charAt(0) === \"-\")\n            throw illegal(token, \"id\");\n\n        if (base10NegRe.test(token))\n            return parseInt(token, 10);\n        if (base16NegRe.test(token))\n            return parseInt(token, 16);\n\n        /* istanbul ignore else */\n        if (base8NegRe.test(token))\n            return parseInt(token, 8);\n\n        /* istanbul ignore next */\n        throw illegal(token, \"id\");\n    }\n\n    function parsePackage() {\n\n        /* istanbul ignore if */\n        if (pkg !== undefined)\n            throw illegal(\"package\");\n\n        pkg = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(pkg))\n            throw illegal(pkg, \"name\");\n\n        ptr = ptr.define(pkg);\n        skip(\";\");\n    }\n\n    function parseImport() {\n        var token = peek();\n        var whichImports;\n        switch (token) {\n            case \"weak\":\n                whichImports = weakImports || (weakImports = []);\n                next();\n                break;\n            case \"public\":\n                next();\n                // eslint-disable-next-line no-fallthrough\n            default:\n                whichImports = imports || (imports = []);\n                break;\n        }\n        token = readString();\n        skip(\";\");\n        whichImports.push(token);\n    }\n\n    function parseSyntax() {\n        skip(\"=\");\n        syntax = readString();\n        isProto3 = syntax === \"proto3\";\n\n        /* istanbul ignore if */\n        if (!isProto3 && syntax !== \"proto2\")\n            throw illegal(syntax, \"syntax\");\n\n        skip(\";\");\n    }\n\n    function parseCommon(parent, token) {\n        switch (token) {\n\n            case \"option\":\n                parseOption(parent, token);\n                skip(\";\");\n                return true;\n\n            case \"message\":\n                parseType(parent, token);\n                return true;\n\n            case \"enum\":\n                parseEnum(parent, token);\n                return true;\n\n            case \"service\":\n                parseService(parent, token);\n                return true;\n\n            case \"extend\":\n                parseExtension(parent, token);\n                return true;\n        }\n        return false;\n    }\n\n    function ifBlock(obj, fnIf, fnElse) {\n        var trailingLine = tn.line;\n        if (obj) {\n            if(typeof obj.comment !== \"string\") {\n              obj.comment = cmnt(); // try block-type comment\n            }\n            obj.filename = parse.filename;\n        }\n        if (skip(\"{\", true)) {\n            var token;\n            while ((token = next()) !== \"}\")\n                fnIf(token);\n            skip(\";\", true);\n        } else {\n            if (fnElse)\n                fnElse();\n            skip(\";\");\n            if (obj && (typeof obj.comment !== \"string\" || preferTrailingComment))\n                obj.comment = cmnt(trailingLine) || obj.comment; // try line-type comment\n        }\n    }\n\n    function parseType(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"type name\");\n\n        var type = new Type(token);\n        ifBlock(type, function parseType_block(token) {\n            if (parseCommon(type, token))\n                return;\n\n            switch (token) {\n\n                case \"map\":\n                    parseMapField(type, token);\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"oneof\":\n                    parseOneOf(type, token);\n                    break;\n\n                case \"extensions\":\n                    readRanges(type.extensions || (type.extensions = []));\n                    break;\n\n                case \"reserved\":\n                    readRanges(type.reserved || (type.reserved = []), true);\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n\n                    push(token);\n                    parseField(type, \"optional\");\n                    break;\n            }\n        });\n        parent.add(type);\n    }\n\n    function parseField(parent, rule, extend) {\n        var type = next();\n        if (type === \"group\") {\n            parseGroup(parent, rule);\n            return;\n        }\n        // Type names can consume multiple tokens, in multiple variants:\n        //    package.subpackage   field       tokens: \"package.subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package . subpackage field       tokens: \"package\" \".\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package.  subpackage field       tokens: \"package.\" \"subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        //    package  .subpackage field       tokens: \"package\" \".subpackage\" [TYPE NAME ENDS HERE] \"field\"\n        // Keep reading tokens until we get a type name with no period at the end,\n        // and the next token does not start with a period.\n        while (type.endsWith(\".\") || peek().startsWith(\".\")) {\n            type += next();\n        }\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(type))\n            throw illegal(type, \"type\");\n\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        name = applyCase(name);\n        skip(\"=\");\n\n        var field = new Field(name, parseId(next()), type, rule, extend);\n        ifBlock(field, function parseField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseField_line() {\n            parseInlineOptions(field);\n        });\n\n        if (rule === \"proto3_optional\") {\n            // for proto3 optional fields, we create a single-member Oneof to mimic \"optional\" behavior\n            var oneof = new OneOf(\"_\" + name);\n            field.setOption(\"proto3_optional\", true);\n            oneof.add(field);\n            parent.add(oneof);\n        } else {\n            parent.add(field);\n        }\n\n        // JSON defaults to packed=true if not set so we have to set packed=false explicity when\n        // parsing proto2 descriptors without the option, where applicable. This must be done for\n        // all known packable types and anything that could be an enum (= is not a basic type).\n        if (!isProto3 && field.repeated && (types.packed[type] !== undefined || types.basic[type] === undefined))\n            field.setOption(\"packed\", false, /* ifNotSet */ true);\n    }\n\n    function parseGroup(parent, rule) {\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        var fieldName = util.lcFirst(name);\n        if (name === fieldName)\n            name = util.ucFirst(name);\n        skip(\"=\");\n        var id = parseId(next());\n        var type = new Type(name);\n        type.group = true;\n        var field = new Field(fieldName, id, name, rule);\n        field.filename = parse.filename;\n        ifBlock(type, function parseGroup_block(token) {\n            switch (token) {\n\n                case \"option\":\n                    parseOption(type, token);\n                    skip(\";\");\n                    break;\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(type, token);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(type, \"proto3_optional\");\n                    } else {\n                        parseField(type, \"optional\");\n                    }\n                    break;\n\n                case \"message\":\n                    parseType(type, token);\n                    break;\n\n                case \"enum\":\n                    parseEnum(type, token);\n                    break;\n\n                /* istanbul ignore next */\n                default:\n                    throw illegal(token); // there are no groups with proto3 semantics\n            }\n        });\n        parent.add(type)\n              .add(field);\n    }\n\n    function parseMapField(parent) {\n        skip(\"<\");\n        var keyType = next();\n\n        /* istanbul ignore if */\n        if (types.mapKey[keyType] === undefined)\n            throw illegal(keyType, \"type\");\n\n        skip(\",\");\n        var valueType = next();\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(valueType))\n            throw illegal(valueType, \"type\");\n\n        skip(\">\");\n        var name = next();\n\n        /* istanbul ignore if */\n        if (!nameRe.test(name))\n            throw illegal(name, \"name\");\n\n        skip(\"=\");\n        var field = new MapField(applyCase(name), parseId(next()), keyType, valueType);\n        ifBlock(field, function parseMapField_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(field, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseMapField_line() {\n            parseInlineOptions(field);\n        });\n        parent.add(field);\n    }\n\n    function parseOneOf(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var oneof = new OneOf(applyCase(token));\n        ifBlock(oneof, function parseOneOf_block(token) {\n            if (token === \"option\") {\n                parseOption(oneof, token);\n                skip(\";\");\n            } else {\n                push(token);\n                parseField(oneof, \"optional\");\n            }\n        });\n        parent.add(oneof);\n    }\n\n    function parseEnum(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var enm = new Enum(token);\n        ifBlock(enm, function parseEnum_block(token) {\n          switch(token) {\n            case \"option\":\n              parseOption(enm, token);\n              skip(\";\");\n              break;\n\n            case \"reserved\":\n              readRanges(enm.reserved || (enm.reserved = []), true);\n              break;\n\n            default:\n              parseEnumValue(enm, token);\n          }\n        });\n        parent.add(enm);\n    }\n\n    function parseEnumValue(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token))\n            throw illegal(token, \"name\");\n\n        skip(\"=\");\n        var value = parseId(next(), true),\n            dummy = {\n                options: undefined\n            };\n        dummy.setOption = function(name, value) {\n            if (this.options === undefined)\n                this.options = {};\n            this.options[name] = value;\n        };\n        ifBlock(dummy, function parseEnumValue_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(dummy, token); // skip\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        }, function parseEnumValue_line() {\n            parseInlineOptions(dummy); // skip\n        });\n        parent.add(token, value, dummy.comment, dummy.options);\n    }\n\n    function parseOption(parent, token) {\n        var isCustom = skip(\"(\", true);\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token;\n        var option = name;\n        var propName;\n\n        if (isCustom) {\n            skip(\")\");\n            name = \"(\" + name + \")\";\n            option = name;\n            token = peek();\n            if (fqTypeRefRe.test(token)) {\n                propName = token.slice(1); //remove '.' before property name\n                name += token;\n                next();\n            }\n        }\n        skip(\"=\");\n        var optionValue = parseOptionValue(parent, name);\n        setParsedOption(parent, option, optionValue, propName);\n    }\n\n    function parseOptionValue(parent, name) {\n        // { a: \"foo\" b { c: \"bar\" } }\n        if (skip(\"{\", true)) {\n            var objectResult = {};\n\n            while (!skip(\"}\", true)) {\n                /* istanbul ignore if */\n                if (!nameRe.test(token = next())) {\n                    throw illegal(token, \"name\");\n                }\n                if (token === null) {\n                  throw illegal(token, \"end of input\");\n                }\n\n                var value;\n                var propName = token;\n\n                skip(\":\", true);\n\n                if (peek() === \"{\")\n                    value = parseOptionValue(parent, name + \".\" + token);\n                else if (peek() === \"[\") {\n                    // option (my_option) = {\n                    //     repeated_value: [ \"foo\", \"bar\" ]\n                    // };\n                    value = [];\n                    var lastValue;\n                    if (skip(\"[\", true)) {\n                        do {\n                            lastValue = readValue(true);\n                            value.push(lastValue);\n                        } while (skip(\",\", true));\n                        skip(\"]\");\n                        if (typeof lastValue !== \"undefined\") {\n                            setOption(parent, name + \".\" + token, lastValue);\n                        }\n                    }\n                } else {\n                    value = readValue(true);\n                    setOption(parent, name + \".\" + token, value);\n                }\n\n                var prevValue = objectResult[propName];\n\n                if (prevValue)\n                    value = [].concat(prevValue).concat(value);\n\n                objectResult[propName] = value;\n\n                // Semicolons and commas can be optional\n                skip(\",\", true);\n                skip(\";\", true);\n            }\n\n            return objectResult;\n        }\n\n        var simpleValue = readValue(true);\n        setOption(parent, name, simpleValue);\n        return simpleValue;\n        // Does not enforce a delimiter to be universal\n    }\n\n    function setOption(parent, name, value) {\n        if (parent.setOption)\n            parent.setOption(name, value);\n    }\n\n    function setParsedOption(parent, name, value, propName) {\n        if (parent.setParsedOption)\n            parent.setParsedOption(name, value, propName);\n    }\n\n    function parseInlineOptions(parent) {\n        if (skip(\"[\", true)) {\n            do {\n                parseOption(parent, \"option\");\n            } while (skip(\",\", true));\n            skip(\"]\");\n        }\n        return parent;\n    }\n\n    function parseService(parent, token) {\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"service name\");\n\n        var service = new Service(token);\n        ifBlock(service, function parseService_block(token) {\n            if (parseCommon(service, token))\n                return;\n\n            /* istanbul ignore else */\n            if (token === \"rpc\")\n                parseMethod(service, token);\n            else\n                throw illegal(token);\n        });\n        parent.add(service);\n    }\n\n    function parseMethod(parent, token) {\n        // Get the comment of the preceding line now (if one exists) in case the\n        // method is defined across multiple lines.\n        var commentText = cmnt();\n\n        var type = token;\n\n        /* istanbul ignore if */\n        if (!nameRe.test(token = next()))\n            throw illegal(token, \"name\");\n\n        var name = token,\n            requestType, requestStream,\n            responseType, responseStream;\n\n        skip(\"(\");\n        if (skip(\"stream\", true))\n            requestStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        requestType = token;\n        skip(\")\"); skip(\"returns\"); skip(\"(\");\n        if (skip(\"stream\", true))\n            responseStream = true;\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token);\n\n        responseType = token;\n        skip(\")\");\n\n        var method = new Method(name, type, requestType, responseType, requestStream, responseStream);\n        method.comment = commentText;\n        ifBlock(method, function parseMethod_block(token) {\n\n            /* istanbul ignore else */\n            if (token === \"option\") {\n                parseOption(method, token);\n                skip(\";\");\n            } else\n                throw illegal(token);\n\n        });\n        parent.add(method);\n    }\n\n    function parseExtension(parent, token) {\n\n        /* istanbul ignore if */\n        if (!typeRefRe.test(token = next()))\n            throw illegal(token, \"reference\");\n\n        var reference = token;\n        ifBlock(null, function parseExtension_block(token) {\n            switch (token) {\n\n                case \"required\":\n                case \"repeated\":\n                    parseField(parent, token, reference);\n                    break;\n\n                case \"optional\":\n                    /* istanbul ignore if */\n                    if (isProto3) {\n                        parseField(parent, \"proto3_optional\", reference);\n                    } else {\n                        parseField(parent, \"optional\", reference);\n                    }\n                    break;\n\n                default:\n                    /* istanbul ignore if */\n                    if (!isProto3 || !typeRefRe.test(token))\n                        throw illegal(token);\n                    push(token);\n                    parseField(parent, \"optional\", reference);\n                    break;\n            }\n        });\n    }\n\n    var token;\n    while ((token = next()) !== null) {\n        switch (token) {\n\n            case \"package\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parsePackage();\n                break;\n\n            case \"import\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseImport();\n                break;\n\n            case \"syntax\":\n\n                /* istanbul ignore if */\n                if (!head)\n                    throw illegal(token);\n\n                parseSyntax();\n                break;\n\n            case \"option\":\n\n                parseOption(ptr, token);\n                skip(\";\");\n                break;\n\n            default:\n\n                /* istanbul ignore else */\n                if (parseCommon(ptr, token)) {\n                    head = false;\n                    continue;\n                }\n\n                /* istanbul ignore next */\n                throw illegal(token);\n        }\n    }\n\n    parse.filename = null;\n    return {\n        \"package\"     : pkg,\n        \"imports\"     : imports,\n         weakImports  : weakImports,\n         syntax       : syntax,\n         root         : root\n    };\n}\n\n/**\n * Parses the given .proto source and returns an object with the parsed contents.\n * @name parse\n * @function\n * @param {string} source Source contents\n * @param {IParseOptions} [options] Parse options. Defaults to {@link parse.defaults} when omitted.\n * @returns {IParserResult} Parser result\n * @property {string} filename=null Currently processing file name for error reporting, if known\n * @property {IParseOptions} defaults Default {@link IParseOptions}\n * @variation 2\n */\n","\"use strict\";\nmodule.exports = common;\n\nvar commonRe = /\\/|\\./;\n\n/**\n * Provides common type definitions.\n * Can also be used to provide additional google types or your own custom types.\n * @param {string} name Short name as in `google/protobuf/[name].proto` or full file name\n * @param {Object.<string,*>} json JSON definition within `google.protobuf` if a short name, otherwise the file's root definition\n * @returns {undefined}\n * @property {INamespace} google/protobuf/any.proto Any\n * @property {INamespace} google/protobuf/duration.proto Duration\n * @property {INamespace} google/protobuf/empty.proto Empty\n * @property {INamespace} google/protobuf/field_mask.proto FieldMask\n * @property {INamespace} google/protobuf/struct.proto Struct, Value, NullValue and ListValue\n * @property {INamespace} google/protobuf/timestamp.proto Timestamp\n * @property {INamespace} google/protobuf/wrappers.proto Wrappers\n * @example\n * // manually provides descriptor.proto (assumes google/protobuf/ namespace and .proto extension)\n * protobuf.common(\"descriptor\", descriptorJson);\n *\n * // manually provides a custom definition (uses my.foo namespace)\n * protobuf.common(\"my/foo/bar.proto\", myFooBarJson);\n */\nfunction common(name, json) {\n    if (!commonRe.test(name)) {\n        name = \"google/protobuf/\" + name + \".proto\";\n        json = { nested: { google: { nested: { protobuf: { nested: json } } } } };\n    }\n    common[name] = json;\n}\n\n// Not provided because of limited use (feel free to discuss or to provide yourself):\n//\n// google/protobuf/descriptor.proto\n// google/protobuf/source_context.proto\n// google/protobuf/type.proto\n//\n// Stripped and pre-parsed versions of these non-bundled files are instead available as part of\n// the repository or package within the google/protobuf directory.\n\ncommon(\"any\", {\n\n    /**\n     * Properties of a google.protobuf.Any message.\n     * @interface IAny\n     * @type {Object}\n     * @property {string} [typeUrl]\n     * @property {Uint8Array} [bytes]\n     * @memberof common\n     */\n    Any: {\n        fields: {\n            type_url: {\n                type: \"string\",\n                id: 1\n            },\n            value: {\n                type: \"bytes\",\n                id: 2\n            }\n        }\n    }\n});\n\nvar timeType;\n\ncommon(\"duration\", {\n\n    /**\n     * Properties of a google.protobuf.Duration message.\n     * @interface IDuration\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Duration: timeType = {\n        fields: {\n            seconds: {\n                type: \"int64\",\n                id: 1\n            },\n            nanos: {\n                type: \"int32\",\n                id: 2\n            }\n        }\n    }\n});\n\ncommon(\"timestamp\", {\n\n    /**\n     * Properties of a google.protobuf.Timestamp message.\n     * @interface ITimestamp\n     * @type {Object}\n     * @property {number|Long} [seconds]\n     * @property {number} [nanos]\n     * @memberof common\n     */\n    Timestamp: timeType\n});\n\ncommon(\"empty\", {\n\n    /**\n     * Properties of a google.protobuf.Empty message.\n     * @interface IEmpty\n     * @memberof common\n     */\n    Empty: {\n        fields: {}\n    }\n});\n\ncommon(\"struct\", {\n\n    /**\n     * Properties of a google.protobuf.Struct message.\n     * @interface IStruct\n     * @type {Object}\n     * @property {Object.<string,IValue>} [fields]\n     * @memberof common\n     */\n    Struct: {\n        fields: {\n            fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Value message.\n     * @interface IValue\n     * @type {Object}\n     * @property {string} [kind]\n     * @property {0} [nullValue]\n     * @property {number} [numberValue]\n     * @property {string} [stringValue]\n     * @property {boolean} [boolValue]\n     * @property {IStruct} [structValue]\n     * @property {IListValue} [listValue]\n     * @memberof common\n     */\n    Value: {\n        oneofs: {\n            kind: {\n                oneof: [\n                    \"nullValue\",\n                    \"numberValue\",\n                    \"stringValue\",\n                    \"boolValue\",\n                    \"structValue\",\n                    \"listValue\"\n                ]\n            }\n        },\n        fields: {\n            nullValue: {\n                type: \"NullValue\",\n                id: 1\n            },\n            numberValue: {\n                type: \"double\",\n                id: 2\n            },\n            stringValue: {\n                type: \"string\",\n                id: 3\n            },\n            boolValue: {\n                type: \"bool\",\n                id: 4\n            },\n            structValue: {\n                type: \"Struct\",\n                id: 5\n            },\n            listValue: {\n                type: \"ListValue\",\n                id: 6\n            }\n        }\n    },\n\n    NullValue: {\n        values: {\n            NULL_VALUE: 0\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.ListValue message.\n     * @interface IListValue\n     * @type {Object}\n     * @property {Array.<IValue>} [values]\n     * @memberof common\n     */\n    ListValue: {\n        fields: {\n            values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"wrappers\", {\n\n    /**\n     * Properties of a google.protobuf.DoubleValue message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    DoubleValue: {\n        fields: {\n            value: {\n                type: \"double\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.FloatValue message.\n     * @interface IFloatValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FloatValue: {\n        fields: {\n            value: {\n                type: \"float\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int64Value message.\n     * @interface IInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    Int64Value: {\n        fields: {\n            value: {\n                type: \"int64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt64Value message.\n     * @interface IUInt64Value\n     * @type {Object}\n     * @property {number|Long} [value]\n     * @memberof common\n     */\n    UInt64Value: {\n        fields: {\n            value: {\n                type: \"uint64\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.Int32Value message.\n     * @interface IInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    Int32Value: {\n        fields: {\n            value: {\n                type: \"int32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.UInt32Value message.\n     * @interface IUInt32Value\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    UInt32Value: {\n        fields: {\n            value: {\n                type: \"uint32\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BoolValue message.\n     * @interface IBoolValue\n     * @type {Object}\n     * @property {boolean} [value]\n     * @memberof common\n     */\n    BoolValue: {\n        fields: {\n            value: {\n                type: \"bool\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.StringValue message.\n     * @interface IStringValue\n     * @type {Object}\n     * @property {string} [value]\n     * @memberof common\n     */\n    StringValue: {\n        fields: {\n            value: {\n                type: \"string\",\n                id: 1\n            }\n        }\n    },\n\n    /**\n     * Properties of a google.protobuf.BytesValue message.\n     * @interface IBytesValue\n     * @type {Object}\n     * @property {Uint8Array} [value]\n     * @memberof common\n     */\n    BytesValue: {\n        fields: {\n            value: {\n                type: \"bytes\",\n                id: 1\n            }\n        }\n    }\n});\n\ncommon(\"field_mask\", {\n\n    /**\n     * Properties of a google.protobuf.FieldMask message.\n     * @interface IDoubleValue\n     * @type {Object}\n     * @property {number} [value]\n     * @memberof common\n     */\n    FieldMask: {\n        fields: {\n            paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n            }\n        }\n    }\n});\n\n/**\n * Gets the root definition of the specified common proto file.\n *\n * Bundled definitions are:\n * - google/protobuf/any.proto\n * - google/protobuf/duration.proto\n * - google/protobuf/empty.proto\n * - google/protobuf/field_mask.proto\n * - google/protobuf/struct.proto\n * - google/protobuf/timestamp.proto\n * - google/protobuf/wrappers.proto\n *\n * @param {string} file Proto file name\n * @returns {INamespace|null} Root definition or `null` if not defined\n */\ncommon.get = function get(file) {\n    return common[file] || null;\n};\n","\"use strict\";\nvar protobuf = module.exports = require(\"./index-light\");\n\nprotobuf.build = \"full\";\n\n// Parser\nprotobuf.tokenize         = require(\"./tokenize\");\nprotobuf.parse            = require(\"./parse\");\nprotobuf.common           = require(\"./common\");\n\n// Configure parser\nprotobuf.Root._configure(protobuf.Type, protobuf.parse, protobuf.common);\n","// full library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index\");\n","\"use strict\";\nvar $protobuf = require(\"../..\");\nmodule.exports = exports = $protobuf.descriptor = $protobuf.Root.fromJSON(require(\"../../google/protobuf/descriptor.json\")).lookup(\".google.protobuf\");\n\nvar Namespace = $protobuf.Namespace,\n    Root      = $protobuf.Root,\n    Enum      = $protobuf.Enum,\n    Type      = $protobuf.Type,\n    Field     = $protobuf.Field,\n    MapField  = $protobuf.MapField,\n    OneOf     = $protobuf.OneOf,\n    Service   = $protobuf.Service,\n    Method    = $protobuf.Method;\n\n// --- Root ---\n\n/**\n * Properties of a FileDescriptorSet message.\n * @interface IFileDescriptorSet\n * @property {IFileDescriptorProto[]} file Files\n */\n\n/**\n * Properties of a FileDescriptorProto message.\n * @interface IFileDescriptorProto\n * @property {string} [name] File name\n * @property {string} [package] Package\n * @property {*} [dependency] Not supported\n * @property {*} [publicDependency] Not supported\n * @property {*} [weakDependency] Not supported\n * @property {IDescriptorProto[]} [messageType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IServiceDescriptorProto[]} [service] Nested services\n * @property {IFieldDescriptorProto[]} [extension] Nested extension fields\n * @property {IFileOptions} [options] Options\n * @property {*} [sourceCodeInfo] Not supported\n * @property {string} [syntax=\"proto2\"] Syntax\n */\n\n/**\n * Properties of a FileOptions message.\n * @interface IFileOptions\n * @property {string} [javaPackage]\n * @property {string} [javaOuterClassname]\n * @property {boolean} [javaMultipleFiles]\n * @property {boolean} [javaGenerateEqualsAndHash]\n * @property {boolean} [javaStringCheckUtf8]\n * @property {IFileOptionsOptimizeMode} [optimizeFor=1]\n * @property {string} [goPackage]\n * @property {boolean} [ccGenericServices]\n * @property {boolean} [javaGenericServices]\n * @property {boolean} [pyGenericServices]\n * @property {boolean} [deprecated]\n * @property {boolean} [ccEnableArenas]\n * @property {string} [objcClassPrefix]\n * @property {string} [csharpNamespace]\n */\n\n/**\n * Values of he FileOptions.OptimizeMode enum.\n * @typedef IFileOptionsOptimizeMode\n * @type {number}\n * @property {number} SPEED=1\n * @property {number} CODE_SIZE=2\n * @property {number} LITE_RUNTIME=3\n */\n\n/**\n * Creates a root from a descriptor set.\n * @param {IFileDescriptorSet|Reader|Uint8Array} descriptor Descriptor\n * @returns {Root} Root instance\n */\nRoot.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.FileDescriptorSet.decode(descriptor);\n\n    var root = new Root();\n\n    if (descriptor.file) {\n        var fileDescriptor,\n            filePackage;\n        for (var j = 0, i; j < descriptor.file.length; ++j) {\n            filePackage = root;\n            if ((fileDescriptor = descriptor.file[j])[\"package\"] && fileDescriptor[\"package\"].length)\n                filePackage = root.define(fileDescriptor[\"package\"]);\n            if (fileDescriptor.name && fileDescriptor.name.length)\n                root.files.push(filePackage.filename = fileDescriptor.name);\n            if (fileDescriptor.messageType)\n                for (i = 0; i < fileDescriptor.messageType.length; ++i)\n                    filePackage.add(Type.fromDescriptor(fileDescriptor.messageType[i], fileDescriptor.syntax));\n            if (fileDescriptor.enumType)\n                for (i = 0; i < fileDescriptor.enumType.length; ++i)\n                    filePackage.add(Enum.fromDescriptor(fileDescriptor.enumType[i]));\n            if (fileDescriptor.extension)\n                for (i = 0; i < fileDescriptor.extension.length; ++i)\n                    filePackage.add(Field.fromDescriptor(fileDescriptor.extension[i]));\n            if (fileDescriptor.service)\n                for (i = 0; i < fileDescriptor.service.length; ++i)\n                    filePackage.add(Service.fromDescriptor(fileDescriptor.service[i]));\n            var opts = fromDescriptorOptions(fileDescriptor.options, exports.FileOptions);\n            if (opts) {\n                var ks = Object.keys(opts);\n                for (i = 0; i < ks.length; ++i)\n                    filePackage.setOption(ks[i], opts[ks[i]]);\n            }\n        }\n    }\n\n    return root;\n};\n\n/**\n * Converts a root to a descriptor set.\n * @returns {Message<IFileDescriptorSet>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nRoot.prototype.toDescriptor = function toDescriptor(syntax) {\n    var set = exports.FileDescriptorSet.create();\n    Root_toDescriptorRecursive(this, set.file, syntax);\n    return set;\n};\n\n// Traverses a namespace and assembles the descriptor set\nfunction Root_toDescriptorRecursive(ns, files, syntax) {\n\n    // Create a new file\n    var file = exports.FileDescriptorProto.create({ name: ns.filename || (ns.fullName.substring(1).replace(/\\./g, \"_\") || \"root\") + \".proto\" });\n    if (syntax)\n        file.syntax = syntax;\n    if (!(ns instanceof Root))\n        file[\"package\"] = ns.fullName.substring(1);\n\n    // Add nested types\n    for (var i = 0, nested; i < ns.nestedArray.length; ++i)\n        if ((nested = ns._nestedArray[i]) instanceof Type)\n            file.messageType.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Enum)\n            file.enumType.push(nested.toDescriptor());\n        else if (nested instanceof Field)\n            file.extension.push(nested.toDescriptor(syntax));\n        else if (nested instanceof Service)\n            file.service.push(nested.toDescriptor());\n        else if (nested instanceof /* plain */ Namespace)\n            Root_toDescriptorRecursive(nested, files, syntax); // requires new file\n\n    // Keep package-level options\n    file.options = toDescriptorOptions(ns.options, exports.FileOptions);\n\n    // And keep the file only if there is at least one nested object\n    if (file.messageType.length + file.enumType.length + file.extension.length + file.service.length)\n        files.push(file);\n}\n\n// --- Type ---\n\n/**\n * Properties of a DescriptorProto message.\n * @interface IDescriptorProto\n * @property {string} [name] Message type name\n * @property {IFieldDescriptorProto[]} [field] Fields\n * @property {IFieldDescriptorProto[]} [extension] Extension fields\n * @property {IDescriptorProto[]} [nestedType] Nested message types\n * @property {IEnumDescriptorProto[]} [enumType] Nested enums\n * @property {IDescriptorProtoExtensionRange[]} [extensionRange] Extension ranges\n * @property {IOneofDescriptorProto[]} [oneofDecl] Oneofs\n * @property {IMessageOptions} [options] Not supported\n * @property {IDescriptorProtoReservedRange[]} [reservedRange] Reserved ranges\n * @property {string[]} [reservedName] Reserved names\n */\n\n/**\n * Properties of a MessageOptions message.\n * @interface IMessageOptions\n * @property {boolean} [mapEntry=false] Whether this message is a map entry\n */\n\n/**\n * Properties of an ExtensionRange message.\n * @interface IDescriptorProtoExtensionRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\n/**\n * Properties of a ReservedRange message.\n * @interface IDescriptorProtoReservedRange\n * @property {number} [start] Start field id\n * @property {number} [end] End field id\n */\n\nvar unnamedMessageIndex = 0;\n\n/**\n * Creates a type from a descriptor.\n * @param {IDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Type} Type instance\n */\nType.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    // Create the message type\n    var type = new Type(descriptor.name.length ? descriptor.name : \"Type\" + unnamedMessageIndex++, fromDescriptorOptions(descriptor.options, exports.MessageOptions)),\n        i;\n\n    /* Oneofs */ if (descriptor.oneofDecl)\n        for (i = 0; i < descriptor.oneofDecl.length; ++i)\n            type.add(OneOf.fromDescriptor(descriptor.oneofDecl[i]));\n    /* Fields */ if (descriptor.field)\n        for (i = 0; i < descriptor.field.length; ++i) {\n            var field = Field.fromDescriptor(descriptor.field[i], syntax);\n            type.add(field);\n            if (descriptor.field[i].hasOwnProperty(\"oneofIndex\")) // eslint-disable-line no-prototype-builtins\n                type.oneofsArray[descriptor.field[i].oneofIndex].add(field);\n        }\n    /* Extension fields */ if (descriptor.extension)\n        for (i = 0; i < descriptor.extension.length; ++i)\n            type.add(Field.fromDescriptor(descriptor.extension[i], syntax));\n    /* Nested types */ if (descriptor.nestedType)\n        for (i = 0; i < descriptor.nestedType.length; ++i) {\n            type.add(Type.fromDescriptor(descriptor.nestedType[i], syntax));\n            if (descriptor.nestedType[i].options && descriptor.nestedType[i].options.mapEntry)\n                type.setOption(\"map_entry\", true);\n        }\n    /* Nested enums */ if (descriptor.enumType)\n        for (i = 0; i < descriptor.enumType.length; ++i)\n            type.add(Enum.fromDescriptor(descriptor.enumType[i]));\n    /* Extension ranges */ if (descriptor.extensionRange && descriptor.extensionRange.length) {\n        type.extensions = [];\n        for (i = 0; i < descriptor.extensionRange.length; ++i)\n            type.extensions.push([ descriptor.extensionRange[i].start, descriptor.extensionRange[i].end ]);\n    }\n    /* Reserved... */ if (descriptor.reservedRange && descriptor.reservedRange.length || descriptor.reservedName && descriptor.reservedName.length) {\n        type.reserved = [];\n        /* Ranges */ if (descriptor.reservedRange)\n            for (i = 0; i < descriptor.reservedRange.length; ++i)\n                type.reserved.push([ descriptor.reservedRange[i].start, descriptor.reservedRange[i].end ]);\n        /* Names */ if (descriptor.reservedName)\n            for (i = 0; i < descriptor.reservedName.length; ++i)\n                type.reserved.push(descriptor.reservedName[i]);\n    }\n\n    return type;\n};\n\n/**\n * Converts a type to a descriptor.\n * @returns {Message<IDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nType.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.DescriptorProto.create({ name: this.name }),\n        i;\n\n    /* Fields */ for (i = 0; i < this.fieldsArray.length; ++i) {\n        var fieldDescriptor;\n        descriptor.field.push(fieldDescriptor = this._fieldsArray[i].toDescriptor(syntax));\n        if (this._fieldsArray[i] instanceof MapField) { // map fields are repeated FieldNameEntry\n            var keyType = toDescriptorType(this._fieldsArray[i].keyType, this._fieldsArray[i].resolvedKeyType),\n                valueType = toDescriptorType(this._fieldsArray[i].type, this._fieldsArray[i].resolvedType),\n                valueTypeName = valueType === /* type */ 11 || valueType === /* enum */ 14\n                    ? this._fieldsArray[i].resolvedType && shortname(this.parent, this._fieldsArray[i].resolvedType) || this._fieldsArray[i].type\n                    : undefined;\n            descriptor.nestedType.push(exports.DescriptorProto.create({\n                name: fieldDescriptor.typeName,\n                field: [\n                    exports.FieldDescriptorProto.create({ name: \"key\", number: 1, label: 1, type: keyType }), // can't reference a type or enum\n                    exports.FieldDescriptorProto.create({ name: \"value\", number: 2, label: 1, type: valueType, typeName: valueTypeName })\n                ],\n                options: exports.MessageOptions.create({ mapEntry: true })\n            }));\n        }\n    }\n    /* Oneofs */ for (i = 0; i < this.oneofsArray.length; ++i)\n        descriptor.oneofDecl.push(this._oneofsArray[i].toDescriptor());\n    /* Nested... */ for (i = 0; i < this.nestedArray.length; ++i) {\n        /* Extension fields */ if (this._nestedArray[i] instanceof Field)\n            descriptor.field.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Types */ else if (this._nestedArray[i] instanceof Type)\n            descriptor.nestedType.push(this._nestedArray[i].toDescriptor(syntax));\n        /* Enums */ else if (this._nestedArray[i] instanceof Enum)\n            descriptor.enumType.push(this._nestedArray[i].toDescriptor());\n        // plain nested namespaces become packages instead in Root#toDescriptor\n    }\n    /* Extension ranges */ if (this.extensions)\n        for (i = 0; i < this.extensions.length; ++i)\n            descriptor.extensionRange.push(exports.DescriptorProto.ExtensionRange.create({ start: this.extensions[i][0], end: this.extensions[i][1] }));\n    /* Reserved... */ if (this.reserved)\n        for (i = 0; i < this.reserved.length; ++i)\n            /* Names */ if (typeof this.reserved[i] === \"string\")\n                descriptor.reservedName.push(this.reserved[i]);\n            /* Ranges */ else\n                descriptor.reservedRange.push(exports.DescriptorProto.ReservedRange.create({ start: this.reserved[i][0], end: this.reserved[i][1] }));\n\n    descriptor.options = toDescriptorOptions(this.options, exports.MessageOptions);\n\n    return descriptor;\n};\n\n// --- Field ---\n\n/**\n * Properties of a FieldDescriptorProto message.\n * @interface IFieldDescriptorProto\n * @property {string} [name] Field name\n * @property {number} [number] Field id\n * @property {IFieldDescriptorProtoLabel} [label] Field rule\n * @property {IFieldDescriptorProtoType} [type] Field basic type\n * @property {string} [typeName] Field type name\n * @property {string} [extendee] Extended type name\n * @property {string} [defaultValue] Literal default value\n * @property {number} [oneofIndex] Oneof index if part of a oneof\n * @property {*} [jsonName] Not supported\n * @property {IFieldOptions} [options] Field options\n */\n\n/**\n * Values of the FieldDescriptorProto.Label enum.\n * @typedef IFieldDescriptorProtoLabel\n * @type {number}\n * @property {number} LABEL_OPTIONAL=1\n * @property {number} LABEL_REQUIRED=2\n * @property {number} LABEL_REPEATED=3\n */\n\n/**\n * Values of the FieldDescriptorProto.Type enum.\n * @typedef IFieldDescriptorProtoType\n * @type {number}\n * @property {number} TYPE_DOUBLE=1\n * @property {number} TYPE_FLOAT=2\n * @property {number} TYPE_INT64=3\n * @property {number} TYPE_UINT64=4\n * @property {number} TYPE_INT32=5\n * @property {number} TYPE_FIXED64=6\n * @property {number} TYPE_FIXED32=7\n * @property {number} TYPE_BOOL=8\n * @property {number} TYPE_STRING=9\n * @property {number} TYPE_GROUP=10\n * @property {number} TYPE_MESSAGE=11\n * @property {number} TYPE_BYTES=12\n * @property {number} TYPE_UINT32=13\n * @property {number} TYPE_ENUM=14\n * @property {number} TYPE_SFIXED32=15\n * @property {number} TYPE_SFIXED64=16\n * @property {number} TYPE_SINT32=17\n * @property {number} TYPE_SINT64=18\n */\n\n/**\n * Properties of a FieldOptions message.\n * @interface IFieldOptions\n * @property {boolean} [packed] Whether packed or not (defaults to `false` for proto2 and `true` for proto3)\n * @property {IFieldOptionsJSType} [jstype] JavaScript value type (not used by protobuf.js)\n */\n\n/**\n * Values of the FieldOptions.JSType enum.\n * @typedef IFieldOptionsJSType\n * @type {number}\n * @property {number} JS_NORMAL=0\n * @property {number} JS_STRING=1\n * @property {number} JS_NUMBER=2\n */\n\n// copied here from parse.js\nvar numberRe = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/;\n\n/**\n * Creates a field from a descriptor.\n * @param {IFieldDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n * @returns {Field} Field instance\n */\nField.fromDescriptor = function fromDescriptor(descriptor, syntax) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.DescriptorProto.decode(descriptor);\n\n    if (typeof descriptor.number !== \"number\")\n        throw Error(\"missing field id\");\n\n    // Rewire field type\n    var fieldType;\n    if (descriptor.typeName && descriptor.typeName.length)\n        fieldType = descriptor.typeName;\n    else\n        fieldType = fromDescriptorType(descriptor.type);\n\n    // Rewire field rule\n    var fieldRule;\n    switch (descriptor.label) {\n        // 0 is reserved for errors\n        case 1: fieldRule = undefined; break;\n        case 2: fieldRule = \"required\"; break;\n        case 3: fieldRule = \"repeated\"; break;\n        default: throw Error(\"illegal label: \" + descriptor.label);\n    }\n\n\tvar extendee = descriptor.extendee;\n\tif (descriptor.extendee !== undefined) {\n\t\textendee = extendee.length ? extendee : undefined;\n\t}\n    var field = new Field(\n        descriptor.name.length ? descriptor.name : \"field\" + descriptor.number,\n        descriptor.number,\n        fieldType,\n        fieldRule,\n        extendee\n    );\n\n    field.options = fromDescriptorOptions(descriptor.options, exports.FieldOptions);\n\n    if (descriptor.defaultValue && descriptor.defaultValue.length) {\n        var defaultValue = descriptor.defaultValue;\n        switch (defaultValue) {\n            case \"true\": case \"TRUE\":\n                defaultValue = true;\n                break;\n            case \"false\": case \"FALSE\":\n                defaultValue = false;\n                break;\n            default:\n                var match = numberRe.exec(defaultValue);\n                if (match)\n                    defaultValue = parseInt(defaultValue); // eslint-disable-line radix\n                break;\n        }\n        field.setOption(\"default\", defaultValue);\n    }\n\n    if (packableDescriptorType(descriptor.type)) {\n        if (syntax === \"proto3\") { // defaults to packed=true (internal preset is packed=true)\n            if (descriptor.options && !descriptor.options.packed)\n                field.setOption(\"packed\", false);\n        } else if (!(descriptor.options && descriptor.options.packed)) // defaults to packed=false\n            field.setOption(\"packed\", false);\n    }\n\n    return field;\n};\n\n/**\n * Converts a field to a descriptor.\n * @returns {Message<IFieldDescriptorProto>} Descriptor\n * @param {string} [syntax=\"proto2\"] Syntax\n */\nField.prototype.toDescriptor = function toDescriptor(syntax) {\n    var descriptor = exports.FieldDescriptorProto.create({ name: this.name, number: this.id });\n\n    if (this.map) {\n\n        descriptor.type = 11; // message\n        descriptor.typeName = $protobuf.util.ucFirst(this.name); // fieldName -> FieldNameEntry (built in Type#toDescriptor)\n        descriptor.label = 3; // repeated\n\n    } else {\n\n        // Rewire field type\n        switch (descriptor.type = toDescriptorType(this.type, this.resolve().resolvedType)) {\n            case 10: // group\n            case 11: // type\n            case 14: // enum\n                descriptor.typeName = this.resolvedType ? shortname(this.parent, this.resolvedType) : this.type;\n                break;\n        }\n\n        // Rewire field rule\n        switch (this.rule) {\n            case \"repeated\": descriptor.label = 3; break;\n            case \"required\": descriptor.label = 2; break;\n            default: descriptor.label = 1; break;\n        }\n\n    }\n\n    // Handle extension field\n    descriptor.extendee = this.extensionField ? this.extensionField.parent.fullName : this.extend;\n\n    // Handle part of oneof\n    if (this.partOf)\n        if ((descriptor.oneofIndex = this.parent.oneofsArray.indexOf(this.partOf)) < 0)\n            throw Error(\"missing oneof\");\n\n    if (this.options) {\n        descriptor.options = toDescriptorOptions(this.options, exports.FieldOptions);\n        if (this.options[\"default\"] != null)\n            descriptor.defaultValue = String(this.options[\"default\"]);\n    }\n\n    if (syntax === \"proto3\") { // defaults to packed=true\n        if (!this.packed)\n            (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = false;\n    } else if (this.packed) // defaults to packed=false\n        (descriptor.options || (descriptor.options = exports.FieldOptions.create())).packed = true;\n\n    return descriptor;\n};\n\n// --- Enum ---\n\n/**\n * Properties of an EnumDescriptorProto message.\n * @interface IEnumDescriptorProto\n * @property {string} [name] Enum name\n * @property {IEnumValueDescriptorProto[]} [value] Enum values\n * @property {IEnumOptions} [options] Enum options\n */\n\n/**\n * Properties of an EnumValueDescriptorProto message.\n * @interface IEnumValueDescriptorProto\n * @property {string} [name] Name\n * @property {number} [number] Value\n * @property {*} [options] Not supported\n */\n\n/**\n * Properties of an EnumOptions message.\n * @interface IEnumOptions\n * @property {boolean} [allowAlias] Whether aliases are allowed\n * @property {boolean} [deprecated]\n */\n\nvar unnamedEnumIndex = 0;\n\n/**\n * Creates an enum from a descriptor.\n * @param {IEnumDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Enum} Enum instance\n */\nEnum.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.EnumDescriptorProto.decode(descriptor);\n\n    // Construct values object\n    var values = {};\n    if (descriptor.value)\n        for (var i = 0; i < descriptor.value.length; ++i) {\n            var name  = descriptor.value[i].name,\n                value = descriptor.value[i].number || 0;\n            values[name && name.length ? name : \"NAME\" + value] = value;\n        }\n\n    return new Enum(\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Enum\" + unnamedEnumIndex++,\n        values,\n        fromDescriptorOptions(descriptor.options, exports.EnumOptions)\n    );\n};\n\n/**\n * Converts an enum to a descriptor.\n * @returns {Message<IEnumDescriptorProto>} Descriptor\n */\nEnum.prototype.toDescriptor = function toDescriptor() {\n\n    // Values\n    var values = [];\n    for (var i = 0, ks = Object.keys(this.values); i < ks.length; ++i)\n        values.push(exports.EnumValueDescriptorProto.create({ name: ks[i], number: this.values[ks[i]] }));\n\n    return exports.EnumDescriptorProto.create({\n        name: this.name,\n        value: values,\n        options: toDescriptorOptions(this.options, exports.EnumOptions)\n    });\n};\n\n// --- OneOf ---\n\n/**\n * Properties of a OneofDescriptorProto message.\n * @interface IOneofDescriptorProto\n * @property {string} [name] Oneof name\n * @property {*} [options] Not supported\n */\n\nvar unnamedOneofIndex = 0;\n\n/**\n * Creates a oneof from a descriptor.\n * @param {IOneofDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {OneOf} OneOf instance\n */\nOneOf.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.OneofDescriptorProto.decode(descriptor);\n\n    return new OneOf(\n        // unnamedOneOfIndex is global, not per type, because we have no ref to a type here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"oneof\" + unnamedOneofIndex++\n        // fromDescriptorOptions(descriptor.options, exports.OneofOptions) - only uninterpreted_option\n    );\n};\n\n/**\n * Converts a oneof to a descriptor.\n * @returns {Message<IOneofDescriptorProto>} Descriptor\n */\nOneOf.prototype.toDescriptor = function toDescriptor() {\n    return exports.OneofDescriptorProto.create({\n        name: this.name\n        // options: toDescriptorOptions(this.options, exports.OneofOptions) - only uninterpreted_option\n    });\n};\n\n// --- Service ---\n\n/**\n * Properties of a ServiceDescriptorProto message.\n * @interface IServiceDescriptorProto\n * @property {string} [name] Service name\n * @property {IMethodDescriptorProto[]} [method] Methods\n * @property {IServiceOptions} [options] Options\n */\n\n/**\n * Properties of a ServiceOptions message.\n * @interface IServiceOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedServiceIndex = 0;\n\n/**\n * Creates a service from a descriptor.\n * @param {IServiceDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Service} Service instance\n */\nService.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.ServiceDescriptorProto.decode(descriptor);\n\n    var service = new Service(descriptor.name && descriptor.name.length ? descriptor.name : \"Service\" + unnamedServiceIndex++, fromDescriptorOptions(descriptor.options, exports.ServiceOptions));\n    if (descriptor.method)\n        for (var i = 0; i < descriptor.method.length; ++i)\n            service.add(Method.fromDescriptor(descriptor.method[i]));\n\n    return service;\n};\n\n/**\n * Converts a service to a descriptor.\n * @returns {Message<IServiceDescriptorProto>} Descriptor\n */\nService.prototype.toDescriptor = function toDescriptor() {\n\n    // Methods\n    var methods = [];\n    for (var i = 0; i < this.methodsArray.length; ++i)\n        methods.push(this._methodsArray[i].toDescriptor());\n\n    return exports.ServiceDescriptorProto.create({\n        name: this.name,\n        method: methods,\n        options: toDescriptorOptions(this.options, exports.ServiceOptions)\n    });\n};\n\n// --- Method ---\n\n/**\n * Properties of a MethodDescriptorProto message.\n * @interface IMethodDescriptorProto\n * @property {string} [name] Method name\n * @property {string} [inputType] Request type name\n * @property {string} [outputType] Response type name\n * @property {IMethodOptions} [options] Not supported\n * @property {boolean} [clientStreaming=false] Whether requests are streamed\n * @property {boolean} [serverStreaming=false] Whether responses are streamed\n */\n\n/**\n * Properties of a MethodOptions message.\n * @interface IMethodOptions\n * @property {boolean} [deprecated]\n */\n\nvar unnamedMethodIndex = 0;\n\n/**\n * Creates a method from a descriptor.\n * @param {IMethodDescriptorProto|Reader|Uint8Array} descriptor Descriptor\n * @returns {Method} Reflected method instance\n */\nMethod.fromDescriptor = function fromDescriptor(descriptor) {\n\n    // Decode the descriptor message if specified as a buffer:\n    if (typeof descriptor.length === \"number\")\n        descriptor = exports.MethodDescriptorProto.decode(descriptor);\n\n    return new Method(\n        // unnamedMethodIndex is global, not per service, because we have no ref to a service here\n        descriptor.name && descriptor.name.length ? descriptor.name : \"Method\" + unnamedMethodIndex++,\n        \"rpc\",\n        descriptor.inputType,\n        descriptor.outputType,\n        Boolean(descriptor.clientStreaming),\n        Boolean(descriptor.serverStreaming),\n        fromDescriptorOptions(descriptor.options, exports.MethodOptions)\n    );\n};\n\n/**\n * Converts a method to a descriptor.\n * @returns {Message<IMethodDescriptorProto>} Descriptor\n */\nMethod.prototype.toDescriptor = function toDescriptor() {\n    return exports.MethodDescriptorProto.create({\n        name: this.name,\n        inputType: this.resolvedRequestType ? this.resolvedRequestType.fullName : this.requestType,\n        outputType: this.resolvedResponseType ? this.resolvedResponseType.fullName : this.responseType,\n        clientStreaming: this.requestStream,\n        serverStreaming: this.responseStream,\n        options: toDescriptorOptions(this.options, exports.MethodOptions)\n    });\n};\n\n// --- utility ---\n\n// Converts a descriptor type to a protobuf.js basic type\nfunction fromDescriptorType(type) {\n    switch (type) {\n        // 0 is reserved for errors\n        case 1: return \"double\";\n        case 2: return \"float\";\n        case 3: return \"int64\";\n        case 4: return \"uint64\";\n        case 5: return \"int32\";\n        case 6: return \"fixed64\";\n        case 7: return \"fixed32\";\n        case 8: return \"bool\";\n        case 9: return \"string\";\n        case 12: return \"bytes\";\n        case 13: return \"uint32\";\n        case 15: return \"sfixed32\";\n        case 16: return \"sfixed64\";\n        case 17: return \"sint32\";\n        case 18: return \"sint64\";\n    }\n    throw Error(\"illegal type: \" + type);\n}\n\n// Tests if a descriptor type is packable\nfunction packableDescriptorType(type) {\n    switch (type) {\n        case 1: // double\n        case 2: // float\n        case 3: // int64\n        case 4: // uint64\n        case 5: // int32\n        case 6: // fixed64\n        case 7: // fixed32\n        case 8: // bool\n        case 13: // uint32\n        case 14: // enum (!)\n        case 15: // sfixed32\n        case 16: // sfixed64\n        case 17: // sint32\n        case 18: // sint64\n            return true;\n    }\n    return false;\n}\n\n// Converts a protobuf.js basic type to a descriptor type\nfunction toDescriptorType(type, resolvedType) {\n    switch (type) {\n        // 0 is reserved for errors\n        case \"double\": return 1;\n        case \"float\": return 2;\n        case \"int64\": return 3;\n        case \"uint64\": return 4;\n        case \"int32\": return 5;\n        case \"fixed64\": return 6;\n        case \"fixed32\": return 7;\n        case \"bool\": return 8;\n        case \"string\": return 9;\n        case \"bytes\": return 12;\n        case \"uint32\": return 13;\n        case \"sfixed32\": return 15;\n        case \"sfixed64\": return 16;\n        case \"sint32\": return 17;\n        case \"sint64\": return 18;\n    }\n    if (resolvedType instanceof Enum)\n        return 14;\n    if (resolvedType instanceof Type)\n        return resolvedType.group ? 10 : 11;\n    throw Error(\"illegal type: \" + type);\n}\n\n// Converts descriptor options to an options object\nfunction fromDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, field, key, val; i < type.fieldsArray.length; ++i)\n        if ((key = (field = type._fieldsArray[i]).name) !== \"uninterpretedOption\")\n            if (options.hasOwnProperty(key)) { // eslint-disable-line no-prototype-builtins\n                val = options[key];\n                if (field.resolvedType instanceof Enum && typeof val === \"number\" && field.resolvedType.valuesById[val] !== undefined)\n                    val = field.resolvedType.valuesById[val];\n                out.push(underScore(key), val);\n            }\n    return out.length ? $protobuf.util.toObject(out) : undefined;\n}\n\n// Converts an options object to descriptor options\nfunction toDescriptorOptions(options, type) {\n    if (!options)\n        return undefined;\n    var out = [];\n    for (var i = 0, ks = Object.keys(options), key, val; i < ks.length; ++i) {\n        val = options[key = ks[i]];\n        if (key === \"default\")\n            continue;\n        var field = type.fields[key];\n        if (!field && !(field = type.fields[key = $protobuf.util.camelCase(key)]))\n            continue;\n        out.push(key, val);\n    }\n    return out.length ? type.fromObject($protobuf.util.toObject(out)) : undefined;\n}\n\n// Calculates the shortest relative path from `from` to `to`.\nfunction shortname(from, to) {\n    var fromPath = from.fullName.split(\".\"),\n        toPath = to.fullName.split(\".\"),\n        i = 0,\n        j = 0,\n        k = toPath.length - 1;\n    if (!(from instanceof Root) && to instanceof Namespace)\n        while (i < fromPath.length && j < k && fromPath[i] === toPath[j]) {\n            var other = to.lookup(fromPath[i++], true);\n            if (other !== null && other !== to)\n                break;\n            ++j;\n        }\n    else\n        for (; i < fromPath.length && j < k && fromPath[i] === toPath[j]; ++i, ++j);\n    return toPath.slice(j).join(\".\");\n}\n\n// copied here from cli/targets/proto.js\nfunction underScore(str) {\n    return str.substring(0,1)\n         + str.substring(1)\n               .replace(/([A-Z])(?=[a-z]|$)/g, function($0, $1) { return \"_\" + $1.toLowerCase(); });\n}\n\n// --- exports ---\n\n/**\n * Reflected file descriptor set.\n * @name FileDescriptorSet\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file descriptor proto.\n * @name FileDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected descriptor proto.\n * @name DescriptorProto\n * @type {Type}\n * @property {Type} ExtensionRange\n * @property {Type} ReservedRange\n * @const\n * @tstype $protobuf.Type & {\n *     ExtensionRange: $protobuf.Type,\n *     ReservedRange: $protobuf.Type\n * }\n */\n\n/**\n * Reflected field descriptor proto.\n * @name FieldDescriptorProto\n * @type {Type}\n * @property {Enum} Label\n * @property {Enum} Type\n * @const\n * @tstype $protobuf.Type & {\n *     Label: $protobuf.Enum,\n *     Type: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof descriptor proto.\n * @name OneofDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum descriptor proto.\n * @name EnumDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service descriptor proto.\n * @name ServiceDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value descriptor proto.\n * @name EnumValueDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method descriptor proto.\n * @name MethodDescriptorProto\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected file options.\n * @name FileOptions\n * @type {Type}\n * @property {Enum} OptimizeMode\n * @const\n * @tstype $protobuf.Type & {\n *     OptimizeMode: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected message options.\n * @name MessageOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected field options.\n * @name FieldOptions\n * @type {Type}\n * @property {Enum} CType\n * @property {Enum} JSType\n * @const\n * @tstype $protobuf.Type & {\n *     CType: $protobuf.Enum,\n *     JSType: $protobuf.Enum\n * }\n */\n\n/**\n * Reflected oneof options.\n * @name OneofOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum options.\n * @name EnumOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected enum value options.\n * @name EnumValueOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected service options.\n * @name ServiceOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected method options.\n * @name MethodOptions\n * @type {Type}\n * @const\n * @tstype $protobuf.Type\n */\n\n/**\n * Reflected uninterpretet option.\n * @name UninterpretedOption\n * @type {Type}\n * @property {Type} NamePart\n * @const\n * @tstype $protobuf.Type & {\n *     NamePart: $protobuf.Type\n * }\n */\n\n/**\n * Reflected source code info.\n * @name SourceCodeInfo\n * @type {Type}\n * @property {Type} Location\n * @const\n * @tstype $protobuf.Type & {\n *     Location: $protobuf.Type\n * }\n */\n\n/**\n * Reflected generated code info.\n * @name GeneratedCodeInfo\n * @type {Type}\n * @property {Type} Annotation\n * @const\n * @tstype $protobuf.Type & {\n *     Annotation: $protobuf.Type\n * }\n */\n","import type { XYPosition } from 'reactflow'\nimport { CANVAS_GRID } from '@datahub/utils/theme.utils.ts'\n\nexport const CANVAS_DROP_DELTA: XYPosition = {\n  x: -CANVAS_GRID * 8,\n  y: -CANVAS_GRID * 2,\n}\n\n// The delta positions used to locate nodes on the canvas at loading time, as position is not serialised\nexport const CANVAS_POSITION = {\n  Client: { x: -10 * CANVAS_GRID, y: 0 } as XYPosition,\n  Topic: { x: -10 * CANVAS_GRID, y: 0 } as XYPosition,\n  Function: { x: -10 * CANVAS_GRID, y: CANVAS_GRID * 5 } as XYPosition,\n  Transition: { x: 10 * CANVAS_GRID, y: 4 * CANVAS_GRID } as XYPosition,\n  PolicySchema: { x: -10 * CANVAS_GRID, y: CANVAS_GRID * 10 } as XYPosition,\n  SchemaOperation: { x: -10 * CANVAS_GRID, y: CANVAS_GRID * 5 } as XYPosition,\n  Validator: { x: -10 * CANVAS_GRID, y: CANVAS_GRID * 5 } as XYPosition,\n  OperationSuccess: { x: 10 * CANVAS_GRID, y: 0 } as XYPosition,\n  OperationError: { x: 10 * CANVAS_GRID, y: CANVAS_GRID * 4 } as XYPosition,\n}\n","import type { Connection, Node, NodeAddChange } from 'reactflow'\nimport { parse, util as protobufUtils } from 'protobufjs'\nimport descriptor from 'protobufjs/ext/descriptor'\n\nimport i18n from '@/config/i18n.config.ts'\n\nimport type { PolicySchema, SchemaReference, Script } from '@/api/__generated__'\nimport type { DataHubNodeData, DryRunResults, ResourceFamily, SchemaData } from '@datahub/types.ts'\nimport { DataHubNodeType, ResourceWorkingVersion, SchemaType } from '@datahub/types.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport { enumFromStringValue } from '@/utils/types.utils.ts'\nimport { CANVAS_POSITION } from '@datahub/designer/checks.utils.ts'\n\nexport const getScriptFamilies = (items: Script[]) => {\n  return items.reduce<Record<string, ResourceFamily>>((acc, script) => {\n    if (acc[script.id]) {\n      if (script.version) acc[script.id].versions.push(script.version)\n    } else {\n      acc[script.id] = { name: script.id, versions: [], type: script.functionType }\n      if (script.version) acc[script.id].versions.push(script.version)\n    }\n    return acc\n  }, {})\n}\n\nexport const getSchemaFamilies = (items: PolicySchema[]) => {\n  return items.reduce<Record<string, ResourceFamily>>((acc, schema) => {\n    if (acc[schema.id]) {\n      if (schema.version) acc[schema.id].versions.push(schema.version)\n    } else {\n      let description: string | undefined\n      try {\n        const schemaDefinition = JSON.parse(atob(schema.schemaDefinition))\n        description = schemaDefinition.description\n      } catch (e) {\n        /* empty */\n      }\n      acc[schema.id] = { name: schema.id, versions: [], type: schema.type, description }\n      if (schema.version) acc[schema.id].versions.push(schema.version)\n    }\n    return acc\n  }, {})\n}\n\nexport function checkValiditySchema(schemaNode: Node<SchemaData>): DryRunResults<PolicySchema> {\n  if (!schemaNode.data.type || !schemaNode.data.version || !schemaNode.data.schemaSource) {\n    return {\n      node: schemaNode,\n      error: PolicyCheckErrors.notConfigured(schemaNode, 'type, version, schemaSource'),\n    }\n  }\n\n  if (schemaNode.data.type === SchemaType.JSON) {\n    const jsonSchema: PolicySchema = {\n      id: schemaNode.data.name,\n      type: schemaNode.data.type,\n      schemaDefinition: btoa(schemaNode.data.schemaSource),\n    }\n    return { data: jsonSchema, node: schemaNode }\n  }\n\n  if (schemaNode.data.type === SchemaType.PROTOBUF) {\n    // TODO[DATAHUB] Compilation of descriptor a very experimental and outdated solution.\n    //    See https://github.com/protobufjs/protobuf.js/tree/master/ext/descriptor\n    if (!schemaNode.data.messageType)\n      return {\n        node: schemaNode,\n        error: PolicyCheckErrors.notConfigured(schemaNode, 'messageType'),\n      }\n\n    try {\n      const root = parse(schemaNode.data.schemaSource).root\n      // @ts-ignore No typescript definition\n      const MyMessage = root.toDescriptor('proto3')\n      const buffer = descriptor.FileDescriptorSet.encode(MyMessage).finish()\n      const encoded = protobufUtils.base64.encode(buffer, 0, buffer.length)\n\n      // verifying the double encoding\n      const encodedGraphBytes = new Uint8Array(protobufUtils.base64.length(encoded))\n      protobufUtils.base64.decode(encoded, encodedGraphBytes, 0)\n      const decodedMessage = descriptor.FileDescriptorSet.decode(encodedGraphBytes)\n      if (JSON.stringify(MyMessage) !== JSON.stringify(decodedMessage))\n        return {\n          node: schemaNode,\n          error: PolicyCheckErrors.internal(\n            schemaNode,\n            new Error(i18n.t('datahub:error.validation.protobuf.encoding') as string)\n          ),\n        }\n\n      const schema: PolicySchema = {\n        id: schemaNode.data.name,\n        type: schemaNode.data.type,\n        schemaDefinition: encoded,\n        // TODO[20139] No definition of arguments in OpenAPI!\n        arguments: { messageType: schemaNode.data.messageType },\n      }\n      return { data: schema, node: schemaNode }\n    } catch (e) {\n      console.log(e)\n      return {\n        node: schemaNode,\n        error: PolicyCheckErrors.internal(schemaNode, e),\n      }\n    }\n  }\n\n  return {\n    node: schemaNode,\n    error: PolicyCheckErrors.notConfigured(schemaNode, 'schemaSource'),\n  }\n}\n\nexport function loadSchema(\n  parentNode: Node<DataHubNodeData>,\n  targetHandle: string | null,\n  positionInGroup: number,\n  schemaRef: SchemaReference,\n  schemas: PolicySchema[]\n): (NodeAddChange | Connection)[] {\n  const schema = schemas.find((schema) => schema.id === schemaRef.schemaId)\n  if (!schema)\n    throw new Error(i18n.t('datahub:error.loading.connection.notFound', { type: DataHubNodeType.SCHEMA }) as string)\n\n  if (schema.type === SchemaType.JSON) {\n    const schemaNode: Node<SchemaData> = {\n      id: schemaRef.schemaId,\n      type: DataHubNodeType.SCHEMA,\n      position: {\n        x: parentNode.position.x + CANVAS_POSITION.PolicySchema.x,\n        y: parentNode.position.y + positionInGroup * CANVAS_POSITION.SchemaOperation.y,\n      },\n      data: {\n        name: schema.id,\n        // @ts-ignore force undefined\n        type: enumFromStringValue(SchemaType, schema.type),\n        schemaSource: atob(schema.schemaDefinition),\n        version: schema.version || ResourceWorkingVersion.DRAFT,\n        internalVersions: schema.version ? [schema.version] : undefined,\n      },\n    }\n\n    return [\n      { item: schemaNode, type: 'add' },\n      {\n        source: schemaNode.id,\n        target: parentNode.id,\n        sourceHandle: null,\n        targetHandle: targetHandle,\n      },\n    ]\n  }\n\n  if (schema.type === SchemaType.PROTOBUF) {\n    const encodedGraphBytes = new Uint8Array(protobufUtils.base64.length(schema.schemaDefinition))\n    protobufUtils.base64.decode(schema.schemaDefinition, encodedGraphBytes, 0)\n    const decodedMessage = descriptor.FileDescriptorSet.decode(encodedGraphBytes)\n    // @ts-ignore\n    const messageTypeDecoded = decodedMessage.file[0].messageType[0].name\n\n    const schemaNode: Node<SchemaData> = {\n      id: schemaRef.schemaId,\n      type: DataHubNodeType.SCHEMA,\n      position: {\n        x: parentNode.position.x + positionInGroup,\n        y: parentNode.position.y + CANVAS_POSITION.PolicySchema.y,\n      },\n      data: {\n        // @ts-ignore force undefined\n        type: enumFromStringValue(SchemaType, schema.type),\n        schemaSource: i18n.t('datahub:error.validation.protobuf.template', { source: messageTypeDecoded }) as string,\n        version: 1,\n      },\n    }\n\n    return [\n      { item: schemaNode, type: 'add' },\n      {\n        source: schemaNode.id,\n        target: parentNode.id,\n        sourceHandle: null,\n        targetHandle: targetHandle,\n      },\n    ]\n  }\n\n  throw new Error(i18n.t('datahub:error.loading.schema.unknown', { type: schema.type }) as string)\n}\n"],"names":["label","jsx","type","t","index","asPromise","fn","ctx","params","offset","pending","resolve","reject","err","base64","exports","string","p","n","b64","s64","i","buffer","start","end","parts","chunk","j","b","invalidEncoding","c","EventEmitter","evt","listeners","args","factory","f32","f8b","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloat_ieee754","writeUint","sign","exponent","mantissa","writeUintLE","writeUintBE","readFloat_ieee754","readUint","uint","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","e","utf8","len","c1","c2","pool","alloc","slice","size","SIZE","MAX","slab","LongBits","util","require$$0","zero","zeroHash","value","unsigned","charCodeAt","hash","mask","part0","part1","part2","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","global","this","obj","prop","Buffer","sizeOrArray","bits","merge","dst","src","ifNotSet","keys","str","newError","name","CustomError","message","properties","fieldNames","fieldMap","encoding","Writer","BufferWriter","Op","noop","State","writer","create","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","writeBytes","head","tail","BufferWriter_","writeStringBuffer","Reader","BufferReader","indexOutOfRange","reader","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","length","nativeBuffer","bytes","wireType","BufferReader_","service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","callback","self","response","endedByRPC","rpc","protobuf","configure","codegen","functionParams","functionName","body","Codegen","formatStringOrScope","source","toString","scopeKeys","scopeParams","scopeValues","scopeOffset","formatParams","formatOffset","$0","$1","functionNameOverride","fetch","inquire","fs","filename","options","contents","xhr","path","isAbsolute","normalize","absolute","prefix","originPath","includePath","alreadyNormalized","types","s","bake","values","o","Field","ReflectionObject","Enum","Type","ruleRe","json","id","rule","extend","comment","toJSONOptions","keepComments","fieldId","fieldType","fieldRule","defaultValue","prototype","fieldName","Type_","OneOf","addFieldsToParent","oneof","field","parent","oneofName","Namespace","arrayToJSON","array","reserved","clearCache","namespace","nestedJson","ns","names","nested","object","prev","ptr","part","filterTypes","parentAlreadyChecked","found","Service_","Enum_","MapField","keyType","fieldKeyType","fieldValueType","Method","requestType","responseType","requestStream","responseStream","parsedOptions","inherited","methods","rpcService","methodName","Message","decoder","missing","mtype","gen","ref","rfield","verifier","invalid","expected","genVerifyValue","fieldIndex","genVerifyKey","oneofs","seenFirstField","oneofProp","converter","genValuePartial_fromObject","defaultAlreadyEmitted","isUnsigned","fields","genValuePartial_toObject","repeatedFields","mapFields","normalFields","arrayDefault","hasKs2","wrappers","type_url","googleApi","messageName","require$$8","require$$9","encoder","require$$10","require$$11","require$$12","require$$13","require$$14","ctor","ctorProperties","fullName","wrapper","originalThis","typeName","target","Root","parse","common","root","SYNC","load","sync","finish","cb","getBundledFileName","idx","altname","process","parsed","resolved","queued","weak","exposeRe","tryHandleExtension","extendedType","sisterField","parse_","common_","utilModule","roots","key","safePropBackslashRe","safePropQuoteRe","camelCaseRe","a","decorateEnumIndex","enm","setProp","prevValue","propName","opt","newValue","newOpt","className","Root_","comments","valuesOptions","genTypePartial","indexLightModule","loadSync","require$$15","require$$16","require$$17","require$$18","tokenize","delimRe","stringDoubleRe","stringSingleRe","setCommentRe","setCommentAltRe","setCommentSplitRe","whitespaceRe","unescapeRe","unescapeMap","unescape","alternateCommentMode","line","lastCommentLine","stack","stringDelim","illegal","subject","readString","re","match","push","charAt","setComment","isLeading","lookback","commentOffset","lines","isDoubleSlashCommentLine","startOffset","endOffset","findEndOfLine","lineText","isComment","cursor","next","repeat","curr","isDoc","isLeadingComment","delim","token","peek","skip","optional","actual","equals","cmnt","trailingLine","ret","base10Re","base10NegRe","base16Re","base16NegRe","base8Re","base8NegRe","numberRe","nameRe","typeRefRe","fqTypeRefRe","preferTrailingComment","tn","pkg","imports","weakImports","syntax","isProto3","applyCase","insideTryCatch","readValue","acceptTypeRef","parseNumber","readRanges","acceptStrings","parseId","acceptNegative","parsePackage","parseImport","whichImports","parseSyntax","parseCommon","parseOption","parseType","parseEnum","parseService","parseExtension","ifBlock","fnIf","fnElse","parseMapField","parseField","parseOneOf","parseGroup","parseInlineOptions","valueType","parseEnumValue","dummy","isCustom","option","optionValue","parseOptionValue","setParsedOption","objectResult","lastValue","setOption","simpleValue","parseMethod","commentText","reference","commonRe","timeType","file","srcModule","$protobuf","module","descriptor","fileDescriptor","filePackage","opts","fromDescriptorOptions","ks","set","Root_toDescriptorRecursive","files","toDescriptorOptions","unnamedMessageIndex","fieldDescriptor","toDescriptorType","valueTypeName","shortname","fromDescriptorType","extendee","packableDescriptorType","unnamedEnumIndex","unnamedOneofIndex","unnamedServiceIndex","unnamedMethodIndex","resolvedType","out","underScore","from","to","fromPath","toPath","k","other","items","acc","script","schema","description","schemaNode","MyMessage","encoded","protobufUtils","encodedGraphBytes","decodedMessage","i18n","parentNode","targetHandle","positionInGroup","schemaRef","schemas","messageTypeDecoded"],"mappings":"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","x_google_ignoreList":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46]}