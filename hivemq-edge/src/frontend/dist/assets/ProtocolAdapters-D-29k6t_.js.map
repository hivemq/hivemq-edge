{"version":3,"file":"ProtocolAdapters-D-29k6t_.js","sources":["../../node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_framer-motion@10.12.21_react@18.2.0/node_modules/@chakra-ui/menu/dist/chunk-6MF6NSK4.mjs","../../node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_framer-motion@10.12.21_react@18.2.0/node_modules/@chakra-ui/menu/dist/chunk-PTXXWAJU.mjs","../../node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_framer-motion@10.12.21_react@18.2.0/node_modules/@chakra-ui/menu/dist/chunk-Z3VR2BFQ.mjs","../../node_modules/.pnpm/@chakra-ui+menu@2.2.1_@chakra-ui+system@2.6.2_framer-motion@10.12.21_react@18.2.0/node_modules/@chakra-ui/menu/dist/chunk-H43S3DLB.mjs","../../src/api/hooks/useProtocolAdapters/useDeleteProtocolAdapter.ts","../../src/modules/ProtocolAdapters/components/adapters/AdapterActionMenu.tsx","../../src/modules/ProtocolAdapters/components/panels/ProtocolAdapters.tsx"],"sourcesContent":["'use client'\nimport {\n  useMenuStyles\n} from \"./chunk-UZJ3TPNQ.mjs\";\nimport {\n  useMenuContext,\n  useMenuList,\n  useMenuPositioner\n} from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu-list.tsx\nimport { callAll, cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { motion } from \"framer-motion\";\nimport { jsx } from \"react/jsx-runtime\";\nvar motionVariants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1]\n    }\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\"\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\"\n    }\n  }\n};\nvar MenuTransition = chakra(motion.div);\nvar MenuList = forwardRef(function MenuList2(props, ref) {\n  var _a, _b;\n  const { rootProps, motionProps, ...rest } = props;\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated\n  } = useMenuContext();\n  const listProps = useMenuList(rest, ref);\n  const positionerProps = useMenuPositioner(rootProps);\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ...positionerProps,\n      __css: { zIndex: (_b = props.zIndex) != null ? _b : (_a = styles.list) == null ? void 0 : _a.zIndex },\n      children: /* @__PURE__ */ jsx(\n        MenuTransition,\n        {\n          variants: motionVariants,\n          initial: false,\n          animate: isOpen ? \"enter\" : \"exit\",\n          __css: { outline: 0, ...styles.list },\n          ...motionProps,\n          className: cx(\"chakra-menu__menu-list\", listProps.className),\n          ...listProps,\n          onUpdate: onTransitionEnd,\n          onAnimationComplete: callAll(\n            animated.onComplete,\n            listProps.onAnimationComplete\n          )\n        }\n      )\n    }\n  );\n});\nMenuList.displayName = \"MenuList\";\n\nexport {\n  MenuList\n};\n//# sourceMappingURL=chunk-6MF6NSK4.mjs.map","'use client'\nimport {\n  useMenuStyles\n} from \"./chunk-UZJ3TPNQ.mjs\";\n\n// src/menu-group.tsx\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuGroup = forwardRef((props, ref) => {\n  const { title, children, className, ...rest } = props;\n  const _className = cx(\"chakra-menu__group__title\", className);\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsxs(\"div\", { ref, className: \"chakra-menu__group\", role: \"group\", children: [\n    title && /* @__PURE__ */ jsx(chakra.p, { className: _className, ...rest, __css: styles.groupTitle, children: title }),\n    children\n  ] });\n});\nMenuGroup.displayName = \"MenuGroup\";\n\nexport {\n  MenuGroup\n};\n//# sourceMappingURL=chunk-PTXXWAJU.mjs.map","'use client'\nimport {\n  useMenuStyles\n} from \"./chunk-UZJ3TPNQ.mjs\";\nimport {\n  useMenuButton\n} from \"./chunk-SANI5SUM.mjs\";\n\n// src/menu-button.tsx\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StyledMenuButton = forwardRef((props, ref) => {\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.button,\n    {\n      ref,\n      ...props,\n      __css: {\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button\n      }\n    }\n  );\n});\nvar MenuButton = forwardRef(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props;\n    const buttonProps = useMenuButton(rest, ref);\n    const Element = As || StyledMenuButton;\n    return /* @__PURE__ */ jsx(\n      Element,\n      {\n        ...buttonProps,\n        className: cx(\"chakra-menu__menu-button\", props.className),\n        children: /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            __css: { pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 },\n            children: props.children\n          }\n        )\n      }\n    );\n  }\n);\nMenuButton.displayName = \"MenuButton\";\n\nexport {\n  MenuButton\n};\n//# sourceMappingURL=chunk-Z3VR2BFQ.mjs.map","'use client'\nimport {\n  useMenuStyles\n} from \"./chunk-UZJ3TPNQ.mjs\";\n\n// src/menu-divider.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar MenuDivider = (props) => {\n  const { className, ...rest } = props;\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      \"aria-orientation\": \"horizontal\",\n      className: cx(\"chakra-menu__divider\", className),\n      ...rest,\n      __css: styles.divider\n    }\n  );\n};\nMenuDivider.displayName = \"MenuDivider\";\n\nexport {\n  MenuDivider\n};\n//# sourceMappingURL=chunk-H43S3DLB.mjs.map","import { useMutation, useQueryClient } from '@tanstack/react-query'\nimport type { ApiError } from '../../__generated__'\n\nimport { useHttpClient } from '@/api/hooks/useHttpClient/useHttpClient.ts'\nimport { QUERY_KEYS } from '@/api/utils.ts'\n\nexport const useDeleteProtocolAdapter = () => {\n  const appClient = useHttpClient()\n  const queryClient = useQueryClient()\n\n  const deleteAdapter = (adapterId: string) => {\n    return appClient.protocolAdapters.deleteAdapter(adapterId)\n  }\n\n  return useMutation<string, ApiError, string>({\n    mutationFn: deleteAdapter,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [QUERY_KEYS.ADAPTERS] })\n    },\n  })\n}\n","import type { FC } from 'react'\nimport { Icon, IconButton, Menu, MenuButton, MenuDivider, MenuGroup, MenuItem, MenuList, Text } from '@chakra-ui/react'\nimport { ChevronDownIcon } from '@chakra-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport type { Adapter, ProtocolAdapter } from '@/api/__generated__'\nimport { DeviceTypes } from '@/api/types/api-devices.ts'\n\nimport ConnectionController from '@/components/ConnectionController/ConnectionController.tsx'\nimport { PLCTagIcon, TopicIcon, WorkspaceIcon } from '@/components/Icons/TopicIcon.tsx'\nimport { deviceCapabilityIcon } from '@/modules/Workspace/utils/adapter.utils.ts'\nimport { WorkspaceAdapterCommand } from '@/modules/ProtocolAdapters/types.ts'\n\ninterface AdapterActionMenuProps {\n  adapter: Adapter\n  protocol?: ProtocolAdapter\n  onCreate?: (type: string | undefined) => void\n  onEdit?: (id: string, type: string) => void\n  onDelete?: (id: string) => void\n  onViewWorkspace?: (id: string, type: string, command: WorkspaceAdapterCommand) => void\n  onExport?: (id: string, type: string) => void\n}\n\nconst AdapterActionMenu: FC<AdapterActionMenuProps> = ({\n  adapter,\n  protocol,\n  onCreate,\n  onEdit,\n  onDelete,\n  onViewWorkspace,\n  onExport,\n}) => {\n  const { t } = useTranslation()\n\n  const { type, id, status } = adapter\n  const { capabilities } = protocol || {}\n\n  return (\n    <Menu>\n      <MenuButton\n        variant=\"outline\"\n        size=\"sm\"\n        // Cannot have tooltip because of the popup menu\n        as={IconButton}\n        icon={<ChevronDownIcon />}\n        aria-label={t('protocolAdapter.table.actions.label')}\n      />\n      <MenuList>\n        <ConnectionController type={DeviceTypes.ADAPTER} id={id} status={status} variant=\"menuItem\" />\n        <MenuDivider />\n        <MenuGroup title={t('protocolAdapter.table.actions.workspace.group')}>\n          <MenuItem\n            data-testid=\"adapter-action-tags\"\n            onClick={() => onViewWorkspace?.(id, type as string, WorkspaceAdapterCommand.TAGS)}\n            icon={<PLCTagIcon />}\n          >\n            {t('protocolAdapter.table.actions.workspace.tags')}\n          </MenuItem>\n          <MenuItem\n            data-testid=\"adapter-action-filters\"\n            onClick={() => onViewWorkspace?.(id, type as string, WorkspaceAdapterCommand.TOPIC_FILTERS)}\n            icon={<Icon as={TopicIcon} />}\n          >\n            {t('protocolAdapter.table.actions.workspace.topicFilters')}\n          </MenuItem>\n          {capabilities?.includes('READ') && (\n            <MenuItem\n              data-testid=\"adapter-action-mappings-northbound\"\n              onClick={() => onViewWorkspace?.(id, type as string, WorkspaceAdapterCommand.MAPPINGS)}\n              icon={<Icon as={deviceCapabilityIcon['READ']} />}\n            >\n              {t('protocolAdapter.table.actions.workspace.mappings.north')}\n            </MenuItem>\n          )}\n          {capabilities?.includes('WRITE') && (\n            <MenuItem\n              data-testid=\"adapter-action-mappings-southbound\"\n              onClick={() => onViewWorkspace?.(id, type as string, WorkspaceAdapterCommand.MAPPINGS)}\n              icon={<Icon as={deviceCapabilityIcon['WRITE']} />}\n            >\n              {t('protocolAdapter.table.actions.workspace.mappings.south')}\n            </MenuItem>\n          )}\n          <MenuItem\n            data-testid=\"adapter-action-workspace\"\n            onClick={() => onViewWorkspace?.(id, type as string, WorkspaceAdapterCommand.VIEW)}\n            icon={<WorkspaceIcon />}\n          >\n            {t('protocolAdapter.table.actions.workspace.view')}\n          </MenuItem>\n        </MenuGroup>\n        <MenuDivider />\n        <MenuItem data-testid=\"adapter-action-export\" onClick={() => onExport?.(id, type as string)}>\n          {t('protocolAdapter.table.actions.export')}\n        </MenuItem>\n        <MenuDivider />\n        <MenuItem data-testid=\"adapter-action-create\" onClick={() => onCreate?.(type as string)}>\n          {t('protocolAdapter.table.actions.create')}\n        </MenuItem>\n        <MenuItem data-testid=\"adapter-action-edit\" onClick={() => onEdit?.(id, type as string)}>\n          {t('protocolAdapter.table.actions.edit')}\n        </MenuItem>\n        <MenuItem\n          data-testid=\"adapter-action-delete\"\n          onClick={() => onDelete?.(id)}\n          sx={{\n            color: 'red.500',\n            _dark: { color: 'red.200' },\n          }}\n        >\n          <Text>{t('protocolAdapter.table.actions.delete')}</Text>\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  )\n}\n\nexport default AdapterActionMenu\n","import type { FC } from 'react'\nimport { useMemo, useState } from 'react'\nimport {\n  Box,\n  Flex,\n  Heading,\n  HStack,\n  Image,\n  Skeleton,\n  Text,\n  useColorModeValue,\n  useDisclosure,\n  useToken,\n} from '@chakra-ui/react'\nimport type { ColumnDef, Row } from '@tanstack/react-table'\nimport { useTranslation } from 'react-i18next'\nimport { DateTime } from 'luxon'\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nimport type { Adapter, ApiError, ProtocolAdapter } from '@/api/__generated__'\nimport { useListProtocolAdapters } from '@/api/hooks/useProtocolAdapters/useListProtocolAdapters.ts'\nimport { useDeleteProtocolAdapter } from '@/api/hooks/useProtocolAdapters/useDeleteProtocolAdapter.ts'\nimport type { ProblemDetails } from '@/api/types/http-problem-details.ts'\nimport { useGetAdapterTypes } from '@/api/hooks/useProtocolAdapters/useGetAdapterTypes.ts'\nimport { mockAdapter } from '@/api/hooks/useProtocolAdapters/__handlers__'\n\nimport AdapterEmptyLogo from '@/assets/app/adaptor-empty.svg'\n\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport WarningMessage from '@/components/WarningMessage.tsx'\nimport ConfirmationDialog from '@/components/Modal/ConfirmationDialog.tsx'\nimport PaginatedTable from '@/components/PaginatedTable/PaginatedTable.tsx'\nimport { WorkspaceIcon } from '@/components/Icons/TopicIcon.tsx'\nimport DateTimeRenderer from '@/components/DateTime/DateTimeRenderer.tsx'\n\nimport type { AdapterNavigateState } from '@/modules/ProtocolAdapters/types.ts'\nimport { ProtocolAdapterTabIndex, WorkspaceAdapterCommand } from '@/modules/ProtocolAdapters/types.ts'\nimport useWorkspaceStore from '@/modules/Workspace/hooks/useWorkspaceStore.ts'\nimport { NodeTypes } from '@/modules/Workspace/types.ts'\n\nimport { useEdgeToast } from '@/hooks/useEdgeToast/useEdgeToast.tsx'\n\nimport AdapterActionMenu from '../adapters/AdapterActionMenu.tsx'\nimport { compareStatus } from '../../utils/pagination-utils.ts'\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport SuspenseOutlet from '@/components/SuspenseOutlet.tsx'\nimport { AdapterStatusContainer } from '@/modules/ProtocolAdapters/components/adapters/AdapterStatusContainer.tsx'\n\nconst DEFAULT_PER_PAGE = 10\n\nconst AdapterTypeContainer: FC<ProtocolAdapter> = (adapter) => {\n  return (\n    <HStack>\n      <Image boxSize=\"30px\" objectFit=\"scale-down\" src={adapter.logoUrl} aria-label={adapter.id} />\n      <Text fontSize=\"md\" fontWeight=\"500\">\n        {adapter.name}\n      </Text>\n    </HStack>\n  )\n}\n\nconst ProtocolAdapters: FC = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { state } = useLocation()\n  const { successToast, errorToast } = useEdgeToast()\n  const selectedActiveAdapterColor = useToken('colors', useColorModeValue('blue.50', 'blue.900'))\n\n  const { data: allAdapters, isError: isErrorAllAdapters, error: errorAllAdapters } = useGetAdapterTypes()\n  const { data: adapters, isLoading, isError, error } = useListProtocolAdapters()\n  const [deleteAdapter, setDeleteAdapter] = useState<string | undefined>(undefined)\n  const deleteProtocolAdapter = useDeleteProtocolAdapter()\n  const { isOpen: isConfirmDeleteOpen, onOpen: onConfirmDeleteOpen, onClose: onConfirmDeleteClose } = useDisclosure()\n  const { onDeleteNode } = useWorkspaceStore()\n\n  const safeData: Adapter[] = adapters ? adapters : [mockAdapter, mockAdapter, mockAdapter, mockAdapter]\n\n  const columns = useMemo<ColumnDef<Adapter>[]>(() => {\n    const handleCreateInstance = (type: string | undefined) => {\n      const adapterNavigateState: AdapterNavigateState = {\n        protocolAdapterTabIndex: ProtocolAdapterTabIndex.ADAPTERS,\n        protocolAdapterType: type,\n      }\n      navigate(`/protocol-adapters/catalog/new/${type}`, { state: adapterNavigateState })\n    }\n\n    const handleEditInstance = (adapterId: string, type: string) => {\n      const adapterNavigateState: AdapterNavigateState = {\n        protocolAdapterTabIndex: ProtocolAdapterTabIndex.ADAPTERS,\n        protocolAdapterType: type,\n      }\n      if (adapterId) navigate(`/protocol-adapters/edit/${type}/${adapterId}`, { state: adapterNavigateState })\n    }\n\n    const handleOnDelete = (adapterId: string) => {\n      setDeleteAdapter(adapterId)\n      onConfirmDeleteOpen()\n    }\n\n    const handleViewWorkspace = (adapterId: string, type: string, command: WorkspaceAdapterCommand) => {\n      if (adapterId) navigate(`/workspace`, { state: { selectedAdapter: { adapterId, type, command } } })\n    }\n\n    const handleExport = (adapterId: string, type: string) => {\n      if (adapterId) navigate(`/protocol-adapters/edit/${type}/${adapterId}/export`)\n    }\n\n    return [\n      {\n        accessorKey: 'id',\n        header: t('protocolAdapter.table.header.name'),\n        cell: (info) => {\n          return <Skeleton isLoaded={!isLoading}>{info.row.original.id}</Skeleton>\n        },\n      },\n      {\n        accessorKey: 'type',\n        cell: (info) => {\n          const adapter = allAdapters?.items?.find((e) => e.id === info.row.original.type)\n          return (\n            <Skeleton isLoaded={!isLoading}>\n              {adapter ? <AdapterTypeContainer {...adapter} /> : <>info.getValue()</>}\n            </Skeleton>\n          )\n        },\n        header: t('protocolAdapter.table.header.type'),\n      },\n      {\n        accessorFn: (row) => row.status?.connection,\n        id: 'status',\n        cell: (info) => (\n          <Skeleton isLoaded={!isLoading}>\n            <AdapterStatusContainer id={info.row.original.id} />\n          </Skeleton>\n        ),\n        sortingFn: (rowA, rowB) => compareStatus(rowA.original.status?.connection, rowB.original.status?.connection),\n      },\n      {\n        accessorFn: (row) => row.status?.startedAt,\n        id: 'lastStartedAttemptTime',\n        cell: (info) => (\n          <Skeleton isLoaded={!isLoading}>\n            <DateTimeRenderer date={DateTime.fromISO(info.getValue() as string)} isApprox />\n          </Skeleton>\n        ),\n        header: t('protocolAdapter.table.header.lastStarted'),\n      },\n      {\n        id: 'actions',\n        header: t('protocolAdapter.table.header.actions'),\n        sortingFn: undefined,\n        cell: (info) => {\n          const { id, type } = info.row.original\n          const { selectedActiveAdapter } = (state || {}) as AdapterNavigateState\n          const protocol = allAdapters?.items?.find((e) => e.id === info.row.original.type)\n          return (\n            <Skeleton isLoaded={!isLoading}>\n              <AdapterActionMenu\n                protocol={protocol}\n                adapter={info.row.original}\n                onCreate={handleCreateInstance}\n                onEdit={handleEditInstance}\n                onDelete={handleOnDelete}\n                onViewWorkspace={handleViewWorkspace}\n                onExport={handleExport}\n              />\n              {id === selectedActiveAdapter?.adapterId && (\n                <IconButton\n                  size=\"sm\"\n                  ml={2}\n                  onClick={() => handleViewWorkspace(id, type as string, WorkspaceAdapterCommand.VIEW)}\n                  aria-label={t('protocolAdapter.table.actions.workspace.view')}\n                  icon={<WorkspaceIcon />}\n                />\n              )}\n            </Skeleton>\n          )\n        },\n      },\n    ]\n  }, [t, navigate, onConfirmDeleteOpen, isLoading, allAdapters?.items, state])\n\n  const handleConfirmOnClose = () => {\n    onConfirmDeleteClose()\n    setDeleteAdapter(undefined)\n  }\n\n  const handleConfirmOnSubmit = () => {\n    if (!deleteAdapter) return\n\n    deleteProtocolAdapter\n      .mutateAsync(deleteAdapter)\n      .then(() => {\n        onDeleteNode(NodeTypes.ADAPTER_NODE, deleteAdapter)\n        successToast({\n          title: t('protocolAdapter.toast.delete.title'),\n          description: t('protocolAdapter.toast.delete.description'),\n        })\n      })\n      .catch((err: ApiError) =>\n        errorToast(\n          {\n            title: t('protocolAdapter.toast.delete.title'),\n            description: t('protocolAdapter.toast.create.error'),\n          },\n          err\n        )\n      )\n  }\n\n  if (isError || isErrorAllAdapters) {\n    return (\n      <Box mt=\"20%\" mx=\"20%\" alignItems=\"center\">\n        <ErrorMessage\n          type={errorAllAdapters ? errorAllAdapters.message : error?.message}\n          message={(error?.body as ProblemDetails)?.title || t('protocolAdapter.error.loading')}\n        />\n      </Box>\n    )\n  }\n\n  if (safeData.length === 0)\n    return (\n      <WarningMessage\n        image={AdapterEmptyLogo}\n        title={t('protocolAdapter.noDataWarning.title')}\n        prompt={t('protocolAdapter.noDataWarning.description')}\n        alt={t('protocolAdapter.title')}\n        mt={10}\n      />\n    )\n\n  return (\n    <Flex flexDirection=\"column\" gap={4}>\n      <Box data-testid=\"heading-adapters-list\">\n        <Heading size=\"md\">{t('protocolAdapter.tabs.adapters')}</Heading>\n        <Text>\n          {!isLoading\n            ? t('protocolAdapter.table.pagination.summary', {\n                count: Math.min(DEFAULT_PER_PAGE, safeData.length),\n                total: safeData.length,\n              })\n            : t('protocolAdapter.loading.activeAdapters')}\n        </Text>\n      </Box>\n      <PaginatedTable<Adapter>\n        aria-label={t('protocolAdapter.tabs.adapters')}\n        data={safeData}\n        columns={columns}\n        getRowStyles={(row: Row<Adapter>) => {\n          const { selectedActiveAdapter } = (state || {}) as AdapterNavigateState\n          return row.original.id === selectedActiveAdapter?.adapterId\n            ? { backgroundColor: selectedActiveAdapterColor }\n            : {}\n        }}\n      />\n\n      <ConfirmationDialog\n        isOpen={isConfirmDeleteOpen}\n        onClose={handleConfirmOnClose}\n        onSubmit={handleConfirmOnSubmit}\n        message={t('modals.generics.confirmation')}\n        header={t('modals.deleteProtocolAdapterDialog.header')}\n      />\n      <SuspenseOutlet />\n    </Flex>\n  )\n}\n\nexport default ProtocolAdapters\n"],"names":["motionVariants","MenuTransition","chakra","motion","MenuList","forwardRef","props","ref","_a","_b","rootProps","motionProps","rest","isOpen","onTransitionEnd","animated","useMenuContext","listProps","useMenuList","positionerProps","useMenuPositioner","styles","useMenuStyles","jsx","cx","callAll","MenuGroup","title","children","className","_className","jsxs","StyledMenuButton","MenuButton","As","buttonProps","useMenuButton","Element","MenuDivider","useDeleteProtocolAdapter","appClient","useHttpClient","queryClient","useQueryClient","useMutation","adapterId","QUERY_KEYS","AdapterActionMenu","adapter","protocol","onCreate","onEdit","onDelete","onViewWorkspace","onExport","t","useTranslation","type","id","status","capabilities","Menu","IconButton","ChevronDownIcon","ConnectionController","DeviceTypes","MenuItem","WorkspaceAdapterCommand","PLCTagIcon","Icon","TopicIcon","deviceCapabilityIcon","WorkspaceIcon","Text","DEFAULT_PER_PAGE","AdapterTypeContainer","HStack","Image","ProtocolAdapters","navigate","useNavigate","state","useLocation","successToast","errorToast","useEdgeToast","selectedActiveAdapterColor","useToken","useColorModeValue","allAdapters","isErrorAllAdapters","errorAllAdapters","useGetAdapterTypes","adapters","isLoading","isError","error","useListProtocolAdapters","deleteAdapter","setDeleteAdapter","useState","deleteProtocolAdapter","isConfirmDeleteOpen","onConfirmDeleteOpen","onConfirmDeleteClose","useDisclosure","onDeleteNode","useWorkspaceStore","safeData","mockAdapter","columns","useMemo","handleCreateInstance","adapterNavigateState","ProtocolAdapterTabIndex","handleEditInstance","handleOnDelete","handleViewWorkspace","command","handleExport","info","Skeleton","e","Fragment","row","AdapterStatusContainer","rowA","rowB","compareStatus","DateTimeRenderer","DateTime","selectedActiveAdapter","handleConfirmOnClose","handleConfirmOnSubmit","NodeTypes","err","Box","ErrorMessage","WarningMessage","AdapterEmptyLogo","Flex","Heading","PaginatedTable","ConfirmationDialog","SuspenseOutlet"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}