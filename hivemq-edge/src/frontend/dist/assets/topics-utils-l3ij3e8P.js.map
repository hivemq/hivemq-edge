{"version":3,"file":"topics-utils-l3ij3e8P.js","sources":["../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/count.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/each.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/find.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/sum.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/sort.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/path.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/descendants.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/leaves.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/links.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/iterator.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/hierarchy/index.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/accessors.js","../../node_modules/.pnpm/d3-hierarchy@3.1.2/node_modules/d3-hierarchy/src/stratify.js","../../src/api/types/json-schema.ts","../../src/modules/Workspace/utils/topics-utils.ts"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","import {optional} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {},\n    imputed = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId,\n      path;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        currentId = id,\n        currentParentId = parentId,\n        n,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    if (path != null) {\n      const I = nodes.map((d, i) => normalize(path(d, i, data)));\n      const P = I.map(parentof);\n      const S = new Set(I).add(\"\");\n      for (const i of P) {\n        if (!S.has(i)) {\n          S.add(i);\n          I.push(i);\n          P.push(parentof(i));\n          nodes.push(imputed);\n        }\n      }\n      currentId = (_, i) => I[i];\n      currentParentId = (_, i) => P[i];\n    }\n\n    for (i = 0, n = nodes.length; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = currentId(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = currentParentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n\n    // When imputing internal nodes, only introduce roots if needed.\n    // Then replace the imputed marker data with null.\n    if (path != null) {\n      while (root.data === imputed && root.children.length === 1) {\n        root = root.children[0], --n;\n      }\n      for (let i = nodes.length - 1; i >= 0; --i) {\n        node = nodes[i];\n        if (node.data !== imputed) break;\n        node.data = null;\n      }\n    }\n\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = optional(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = optional(x), stratify) : parentId;\n  };\n\n  stratify.path = function(x) {\n    return arguments.length ? (path = optional(x), stratify) : path;\n  };\n\n  return stratify;\n}\n\n// To normalize a path, we coerce to a string, strip the trailing slash if any\n// (as long as the trailing slash is not immediately preceded by another slash),\n// and add leading slash if missing.\nfunction normalize(path) {\n  path = `${path}`;\n  let i = path.length;\n  if (slash(path, i - 1) && !slash(path, i - 2)) path = path.slice(0, -1);\n  return path[0] === \"/\" ? path : `/${path}`;\n}\n\n// Walk backwards to find the first slash that is not the leading slash, e.g.:\n// \"/foo/bar\" ⇥ \"/foo\", \"/foo\" ⇥ \"/\", \"/\" ↦ \"\". (The root is special-cased\n// because the id of the root must be a truthy value.)\nfunction parentof(path) {\n  let i = path.length;\n  if (i < 2) return \"\";\n  while (--i > 1) if (slash(path, i)) break;\n  return path.slice(0, i);\n}\n\n// Slashes can be escaped; to determine whether a slash is a path delimiter, we\n// count the number of preceding backslashes escaping the forward slash: an odd\n// number indicates an escaped forward slash.\nfunction slash(path, i) {\n  if (path[i] === \"/\") {\n    let k = 0;\n    while (i > 0 && path[--i] === \"\\\\\") ++k;\n    if ((k & 1) === 0) return true;\n  }\n  return false;\n}\n","export enum CustomFormat {\n  MQTT_TOPIC = 'mqtt-topic',\n  MQTT_TOPIC_FILTER = 'mqtt-topic-filter',\n  MQTT_TAG = 'mqtt-tag',\n}\n","import type { GenericObjectType, RJSFSchema } from '@rjsf/utils'\nimport type { JSONSchema7 } from 'json-schema'\nimport { stratify } from 'd3-hierarchy'\n\nimport type { Adapter, Bridge, BridgeSubscription, ProtocolAdapter, ProtocolAdaptersList } from '@/api/__generated__'\nimport { CustomFormat } from '@/api/types/json-schema.ts'\nimport type { TopicFilter } from '../types.ts'\nimport { type TopicTreeMetadata } from '../types.ts'\n\nexport const MQTT_WILDCARD_MULTI = '#'\nexport const MQTT_WILDCARD_SINGLE = '+'\nexport const TOPIC_PATH_ITEMS_TOKEN = '*'\n\nconst subsToTopics = (subs: BridgeSubscription[] | undefined): TopicFilter[] => {\n  return (\n    subs?.reduce<TopicFilter[]>((acc, cur) => {\n      const topics = cur.filters.map<TopicFilter>((w) => ({ topic: w }))\n      acc.push(...topics)\n      return acc\n    }, []) || []\n  )\n}\n\nexport const getBridgeTopics = (bridge: Bridge): { local: TopicFilter[]; remote: TopicFilter[] } => {\n  return {\n    local: subsToTopics(bridge.localSubscriptions),\n    remote: subsToTopics(bridge.remoteSubscriptions),\n  }\n}\n\nexport const flattenObject = (input: RJSFSchema, root = '') => {\n  let result: Record<string, unknown> = {}\n  for (const key in input) {\n    const newKey = root ? `${root}.${key}` : key\n    if (typeof input[key] === 'object' && !Array.isArray(input[key])) {\n      result = { ...result, ...flattenObject(input[key], newKey) }\n    } else {\n      result[newKey] = input[key]\n    }\n  }\n  return result\n}\n\nexport const getMainRootFromPath = (paths: string[]): string | undefined => {\n  const firstPath = paths.shift()\n  if (!firstPath) return undefined\n\n  const root = firstPath.split('.').shift()\n  if (!root) return undefined\n  return root\n}\n\nexport const getTopicPaths = (configSchema: RJSFSchema, format = CustomFormat.MQTT_TOPIC) => {\n  const flattenSchema = flattenObject(configSchema)\n  return (\n    Object.entries(flattenSchema)\n      // Only interested in topics, internally defined by the string format `format: 'mqtt-topic'`\n      .filter(([k, v]) => k.endsWith('format') && v === format)\n      .map(([path]) =>\n        path\n          // A `type: 'array'` property will have a `items: { properties: {}}` pattern [?]\n          .replace(/items\\.properties/gi, TOPIC_PATH_ITEMS_TOKEN)\n          // The root of the path will always be \"properties\" [?]\n          .replaceAll('properties.', '')\n          // The leaf of the path will always be \"format\"\n          .replace('.format', '')\n      )\n  )\n}\n\nexport const getValuesFromPath = (p: string, o: GenericObjectType) => p.split('.').reduce((a, v) => a?.[v], o)\n\nexport const getPropertiesFromPath = (path: string, instance: JSONSchema7 | undefined): JSONSchema7 | undefined => {\n  const [property, ...rest] = path.split('.')\n\n  if (!instance) return undefined\n  if (!rest.length) {\n    // TODO[NVL] should we test that the path is a property of instance?\n    return instance\n  }\n\n  if (property === TOPIC_PATH_ITEMS_TOKEN) {\n    const { properties } = instance.items as JSONSchema7\n    return getPropertiesFromPath(rest.join('.'), properties)\n  }\n  const { properties } = instance as JSONSchema7\n  return getPropertiesFromPath(rest.join('.'), properties?.[property] as JSONSchema7)\n}\n\nconst getTopicsFromPath = (path: string, instance: GenericObjectType): string[] => {\n  /* istanbul ignore next -- @preserve */\n  if (!path.length || !instance) {\n    console.log('Warning! Is this really happening?')\n    return []\n  }\n  const [property, ...rest] = path.split('.')\n\n  if (!rest.length) {\n    return instance[property] ? [instance[property]] : []\n  }\n\n  if (property === TOPIC_PATH_ITEMS_TOKEN) {\n    const res: string[] = []\n    for (const item of instance as GenericObjectType[]) {\n      const topicsFromPath = getTopicsFromPath(rest.join('.'), item)\n      res.push(...topicsFromPath)\n    }\n    return res\n  }\n\n  return getTopicsFromPath(rest.join('.'), instance?.[property])\n}\n\n/**\n * @deprecated This is not in use anymore; check the north and south mappings\n */\nexport const discoverAdapterTopics = (\n  protocol: ProtocolAdapter,\n  instance: GenericObjectType,\n  format = CustomFormat.MQTT_TOPIC\n): string[] => {\n  // TODO[138] review nullable for protocol\n  const paths = getTopicPaths(protocol?.configSchema || {}, format)\n  const topics: string[] = []\n\n  paths.forEach((path) => {\n    const topicsFromPath = getTopicsFromPath(path, instance)\n    topics.push(...topicsFromPath)\n  })\n\n  return topics\n}\n\nexport const mergeAllTopics = (\n  types: ProtocolAdaptersList | undefined,\n  adapters: Adapter[] | undefined,\n  bridges: Bridge[] | undefined,\n  withOrigin = false\n) => {\n  const data: string[] = []\n  if (bridges) {\n    const bridgeTopics = bridges.reduce<string[]>((acc, cur) => {\n      const { local, remote } = getBridgeTopics(cur)\n      acc.push(...local.map((topicFilter) => topicFilter.topic))\n      acc.push(...remote.map((topicFilter) => topicFilter.topic))\n      // TODO[25055] The  data structure needs refactoring\n      return withOrigin ? acc.map((e) => `${cur.id}/${e}`) : acc\n    }, [])\n    data.push(...bridgeTopics)\n  }\n  if (adapters) {\n    const adapterTopics = adapters.reduce<string[]>((acc, cur) => {\n      const type = types?.items?.find((protocolAdapter) => protocolAdapter.id === cur.type)\n      /* istanbul ignore next -- @preserve */\n      if (!type) return acc\n      const topics = discoverAdapterTopics(type, cur.config as GenericObjectType)\n      acc.push(...(withOrigin ? topics.map((e) => `${e} @ ${cur.id}`) : topics))\n      return acc\n    }, [])\n    data.push(...adapterTopics)\n  }\n\n  return Array.from(new Set(data))\n}\n\nexport const toTreeMetadata = (\n  topics: string[],\n  unsPrefix?: string,\n  sum?: (t: string) => number\n): TopicTreeMetadata[] => {\n  return topics.map<TopicTreeMetadata>((topic) => {\n    let label = topic\n    // TODO This might not be the only wildcard to take care ofß\n    if (unsPrefix && !topic.includes('#')) {\n      label = unsPrefix.concat(topic)\n    }\n    return { label: label, count: sum ? sum(topic) : 1 }\n  })\n}\n\nexport const stratifyTopicTree = (topics: TopicTreeMetadata[]) => {\n  // TODO[NVL] The path() stratify creates a leading / - needs removal\n  return stratify<TopicTreeMetadata>().path((d) => d.label)(topics)\n}\n"],"names":["count","node","sum","children","i","node_count","node_each","callback","that","index","node_eachBefore","nodes","node_eachAfter","next","n","node_find","node_sum","value","node_sort","compare","node_path","end","start","ancestor","leastCommonAncestor","k","a","b","aNodes","bNodes","c","node_ancestors","node_descendants","node_leaves","leaves","node_links","root","links","node_iterator","current","hierarchy","data","mapChildren","objectChildren","Node","child","childs","computeHeight","node_copy","copyData","d","height","optional","f","required","preroot","ambiguous","imputed","defaultId","defaultParentId","stratify","id","parentId","path","currentId","currentParentId","parent","nodeId","nodeKey","nodeByKey","I","normalize","P","parentof","S","_","x","slash","CustomFormat","TOPIC_PATH_ITEMS_TOKEN","subsToTopics","subs","acc","cur","topics","w","getBridgeTopics","bridge","flattenObject","input","result","key","newKey","getTopicPaths","configSchema","format","flattenSchema","v","getValuesFromPath","p","o","getPropertiesFromPath","instance","property","rest","properties","getTopicsFromPath","res","item","topicsFromPath","discoverAdapterTopics","protocol","paths","mergeAllTopics","types","adapters","bridges","withOrigin","bridgeTopics","local","remote","topicFilter","e","adapterTopics","type","_a","protocolAdapter","toTreeMetadata","unsPrefix","topic","stratifyTopicTree"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]}