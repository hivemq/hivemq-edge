{"version":3,"file":"chunk-VTV6N5LE-DWhDJEfB.js","sources":["../../node_modules/.pnpm/@chakra-ui+switch@2.1.2_@chakra-ui+system@2.6.2_framer-motion@10.12.21_react@18.2.0/node_modules/@chakra-ui/switch/dist/chunk-VTV6N5LE.mjs"],"sourcesContent":["'use client'\n\n// src/switch.tsx\nimport { useCheckbox } from \"@chakra-ui/checkbox\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Switch = forwardRef(function Switch2(props, ref) {\n  const styles = useMultiStyleConfig(\"Switch\", props);\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props);\n  const {\n    getIndicatorProps,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps\n  } = useCheckbox(ownProps);\n  const containerStyles = useMemo(\n    () => ({\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      lineHeight: 0,\n      ...styles.container\n    }),\n    [styles.container]\n  );\n  const trackStyles = useMemo(\n    () => ({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\",\n      ...styles.track\n    }),\n    [styles.track]\n  );\n  const labelStyles = useMemo(\n    () => ({\n      userSelect: \"none\",\n      marginStart: spacing,\n      ...styles.label\n    }),\n    [spacing, styles.label]\n  );\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...getRootProps(),\n      className: cx(\"chakra-switch\", props.className),\n      __css: containerStyles,\n      children: [\n        /* @__PURE__ */ jsx(\"input\", { className: \"chakra-switch__input\", ...getInputProps({}, ref) }),\n        /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            ...getCheckboxProps(),\n            className: \"chakra-switch__track\",\n            __css: trackStyles,\n            children: /* @__PURE__ */ jsx(\n              chakra.span,\n              {\n                __css: styles.thumb,\n                className: \"chakra-switch__thumb\",\n                ...getIndicatorProps()\n              }\n            )\n          }\n        ),\n        children && /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            className: \"chakra-switch__label\",\n            ...getLabelProps(),\n            __css: labelStyles,\n            children\n          }\n        )\n      ]\n    }\n  );\n});\nSwitch.displayName = \"Switch\";\n\nexport {\n  Switch\n};\n//# sourceMappingURL=chunk-VTV6N5LE.mjs.map"],"names":["Switch","forwardRef","props","ref","styles","useMultiStyleConfig","spacing","children","ownProps","omitThemingProps","getIndicatorProps","getInputProps","getCheckboxProps","getRootProps","getLabelProps","useCheckbox","containerStyles","useMemo","trackStyles","labelStyles","jsxs","chakra","cx","jsx"],"mappings":"kZAaG,IAACA,EAASC,EAAW,SAAiBC,EAAOC,EAAK,CACnD,MAAMC,EAASC,EAAoB,SAAUH,CAAK,EAC5C,CAAE,QAAAI,EAAU,SAAU,SAAAC,EAAU,GAAGC,CAAU,EAAGC,EAAiBP,CAAK,EACtE,CACJ,kBAAAQ,EACA,cAAAC,EACA,iBAAAC,EACA,aAAAC,EACA,cAAAC,CACJ,EAAMC,EAAYP,CAAQ,EAClBQ,EAAkBC,EAAO,QAC7B,KAAO,CACL,QAAS,eACT,SAAU,WACV,cAAe,SACf,WAAY,EACZ,GAAGb,EAAO,SAChB,GACI,CAACA,EAAO,SAAS,CAClB,EACKc,EAAcD,EAAO,QACzB,KAAO,CACL,QAAS,cACT,WAAY,EACZ,eAAgB,aAChB,UAAW,cACX,OAAQ,UACR,GAAGb,EAAO,KAChB,GACI,CAACA,EAAO,KAAK,CACd,EACKe,EAAcF,EAAO,QACzB,KAAO,CACL,WAAY,OACZ,YAAaX,EACb,GAAGF,EAAO,KAChB,GACI,CAACE,EAASF,EAAO,KAAK,CACvB,EACD,OAAuBgB,EAAI,KACzBC,EAAO,MACP,CACE,GAAGR,EAAc,EACjB,UAAWS,EAAG,gBAAiBpB,EAAM,SAAS,EAC9C,MAAOc,EACP,SAAU,CACQO,MAAI,QAAS,CAAE,UAAW,uBAAwB,GAAGZ,EAAc,CAAA,EAAIR,CAAG,EAAG,EAC7EoB,EAAG,IACjBF,EAAO,KACP,CACE,GAAGT,EAAkB,EACrB,UAAW,uBACX,MAAOM,EACP,SAA0BK,EAAG,IAC3BF,EAAO,KACP,CACE,MAAOjB,EAAO,MACd,UAAW,uBACX,GAAGM,EAAiB,CACpC,CACA,CACA,CACS,EACDH,GAA4BgB,EAAG,IAC7BF,EAAO,KACP,CACE,UAAW,uBACX,GAAGP,EAAe,EAClB,MAAOK,EACP,SAAAZ,CACZ,CACA,CACA,CACA,CACG,CACH,CAAC,EACDP,EAAO,YAAc","x_google_ignoreList":[0]}