{"version":3,"file":"PolicyEditorLoader-_0_3yusk.js","sources":["../../node_modules/.pnpm/@chakra-ui+layout@2.3.1_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/layout/dist/chunk-EBIU6VW7.mjs","../../node_modules/.pnpm/@chakra-ui+icons@2.1.1_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/icons/dist/chunk-6RTX462E.mjs","../../node_modules/.pnpm/@chakra-ui+icons@2.1.1_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/icons/dist/chunk-BTVB6U66.mjs","../../src/utils/user-agent.utils.ts","../../src/components/Chakra/ShortcutRenderer.tsx","../../src/extensions/datahub/components/controls/DesignerCheatSheet.tsx","../../src/extensions/datahub/components/controls/CanvasControls.tsx","../../src/extensions/datahub/components/helpers/NodeParams.tsx","../../src/extensions/datahub/components/controls/ToolItem.tsx","../../src/extensions/datahub/components/controls/ToolGroup.tsx","../../src/extensions/datahub/components/controls/ToolboxNodes.tsx","../../src/extensions/datahub/components/helpers/DraftStatus.tsx","../../src/extensions/datahub/components/controls/DesignerToolbox.tsx","../../src/extensions/datahub/components/controls/DesignerMiniMap.tsx","../../src/extensions/datahub/components/controls/ToolboxSelectionListener.tsx","../../node_modules/.pnpm/react-hotkeys-hook@4.5.0_react-dom@18.2.0_react@18.2.0/node_modules/react-hotkeys-hook/dist/react-hotkeys-hook.esm.js","../../src/extensions/datahub/components/controls/CopyPasteListener.tsx","../../src/extensions/datahub/components/controls/CopyPasteStatus.tsx","../../src/extensions/datahub/components/controls/DeleteListener.tsx","../../src/extensions/datahub/components/nodes/ConnectionLine.tsx","../../src/extensions/datahub/components/nodes/CustomHandle.tsx","../../src/extensions/datahub/components/toolbar/NodeDatahubToolbar.tsx","../../src/extensions/datahub/utils/hotkeys.utils.ts","../../src/extensions/datahub/components/nodes/NodeWrapper.tsx","../../src/extensions/datahub/designer/topic_filter/TopicFilterNode.tsx","../../src/extensions/datahub/designer/client_filter/ClientFilterNode.tsx","../../src/extensions/datahub/designer/data_policy/DataPolicyNode.utils.ts","../../src/extensions/datahub/designer/validator/ValidatorNode.utils.ts","../../src/extensions/datahub/designer/client_filter/ClientFilterNode.utils.ts","../../src/extensions/datahub/designer/behavior_policy/BehaviorPolicyNode.utils.ts","../../src/extensions/datahub/designer/script/FunctionNode.utils.ts","../../src/extensions/datahub/designer/operation/OperationNode.utils.ts","../../src/extensions/datahub/designer/transition/TransitionNode.utils.ts","../../src/extensions/datahub/hooks/usePolicyDryRun.ts","../../src/extensions/datahub/components/toolbar/ToolbarDryRun.tsx","../../src/extensions/datahub/components/toolbar/ToolbarClear.tsx","../../src/extensions/datahub/components/toolbar/ToolbarShowReport.tsx","../../src/extensions/datahub/components/toolbar/PolicyToolbar.tsx","../../src/extensions/datahub/designer/data_policy/DataPolicyNode.tsx","../../src/extensions/datahub/designer/validator/ValidatorNode.tsx","../../src/extensions/datahub/designer/schema/SchemaNode.tsx","../../src/extensions/datahub/designer/operation/OperationNode.tsx","../../src/extensions/datahub/designer/script/FunctionNode.tsx","../../src/extensions/datahub/designer/behavior_policy/BehaviorPolicyNode.tsx","../../src/extensions/datahub/designer/transition/TransitionNode.tsx","../../src/extensions/datahub/components/edges/DataHubPolicyEdge.tsx","../../src/extensions/datahub/config/nodes.config.tsx","../../src/extensions/datahub/components/pages/PolicyEditor.tsx","../../src/extensions/datahub/api/hooks/DataHubDataPoliciesService/useGetDataPolicy.ts","../../src/extensions/datahub/api/hooks/DataHubBehaviorPoliciesService/useGetBehaviorPolicy.ts","../../src/extensions/datahub/designer/topic_filter/TopicFilterNode.utils.ts","../../src/extensions/datahub/components/pages/PolicyEditorLoader.tsx"],"sourcesContent":["'use client'\n\n// src/kbd.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Kbd = forwardRef(function Kbd2(props, ref) {\n  const styles = useStyleConfig(\"Kbd\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.kbd,\n    {\n      ref,\n      className: cx(\"chakra-kbd\", className),\n      ...rest,\n      __css: {\n        fontFamily: \"mono\",\n        ...styles\n      }\n    }\n  );\n});\nKbd.displayName = \"Kbd\";\n\nexport {\n  Kbd\n};\n//# sourceMappingURL=chunk-EBIU6VW7.mjs.map","'use client'\n\n// src/ChevronRight.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport {\n  ChevronRightIcon\n};\n//# sourceMappingURL=chunk-6RTX462E.mjs.map","'use client'\n\n// src/Close.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar CloseIcon = createIcon({\n  displayName: \"CloseIcon\",\n  d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n});\n\nexport {\n  CloseIcon\n};\n//# sourceMappingURL=chunk-BTVB6U66.mjs.map","/* istanbul ignore file -- @preserve */\nexport const PLATFORM_MACOS = 'MacOS'\nexport const PLATFORM_OTHERS = 'Others'\n\n/**\n * TODO[NVL] This is unsafe, navigator.platform is deprecated\n */\nexport const getUserAgentPlatform = () => {\n  const { platform, userAgent } = navigator\n  let os = platform\n  if (!os) {\n    os = userAgent\n  }\n  os = os.toLowerCase()\n  return os.includes('mac') ? PLATFORM_MACOS : PLATFORM_OTHERS\n}\n","import type { FC } from 'react'\nimport { Fragment } from 'react'\nimport { chakra, Kbd, Text } from '@chakra-ui/react'\n\nimport i18n from '@/config/i18n.config.ts'\nimport { getUserAgentPlatform } from '@/utils/user-agent.utils.ts'\n\ninterface ShortcutRendererProps {\n  hotkeys: string\n  description?: string\n}\n\nconst ShortcutRenderer: FC<ShortcutRendererProps> = ({ hotkeys, description }) => {\n  const listHotkeys = hotkeys.split(',')\n  const shortcuts = listHotkeys.map((hotkey) => hotkey.split('+'))\n\n  const localiseKeyboard = (shortcut: string[]) => {\n    const [modifier, ...rest] = shortcut\n\n    if (modifier === 'Meta') {\n      const modifier = i18n.t('shortcuts.modifier.META', { ns: 'components', context: getUserAgentPlatform() })\n      return [modifier, ...rest]\n    }\n    return shortcut\n  }\n\n  return (\n    <>\n      <span role=\"term\" aria-label={hotkeys}>\n        {shortcuts.map((shortcut, indexShortcut) => {\n          const localisedShortcut = localiseKeyboard(shortcut)\n          return (\n            <Fragment key={`${shortcut}-${indexShortcut}`}>\n              {indexShortcut !== 0 && ' , '}\n              {localisedShortcut.map((element, indexElement) => (\n                <chakra.span key={`$${shortcut}-${indexShortcut}-${indexElement}`} aria-hidden=\"true\">\n                  {indexElement !== 0 && ' + '}\n                  <Kbd fontSize=\"md\">{element}</Kbd>\n                </chakra.span>\n              ))}\n            </Fragment>\n          )\n        })}\n      </span>\n      {description && (\n        <>\n          <Text ml={4} as={chakra.span} role=\"definition\">\n            {' '}\n            {description}\n          </Text>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ShortcutRenderer\n","import type { FC } from 'react'\nimport { useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  HStack,\n  List,\n  ListItem,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useDisclosure,\n} from '@chakra-ui/react'\nimport { LuBadgeHelp } from 'react-icons/lu'\n\nimport ShortcutRenderer from '@/components/Chakra/ShortcutRenderer.tsx'\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport { DATAHUB_HOTKEY_CONTEXT } from '@datahub/utils/datahub.utils.ts'\nimport type { HotKeyItem } from '@datahub/types.ts'\n\nconst DesignerCheatSheet: FC = () => {\n  const { t } = useTranslation('datahub')\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const groupedKeys = useMemo(() => {\n    return DATAHUB_HOTKEY_CONTEXT.reduce<Record<string, HotKeyItem[]>>((acc, item) => {\n      if (!acc[item.category]) {\n        acc[item.category] = []\n      }\n\n      acc[item.category].push(item)\n      return acc\n    }, {})\n  }, [])\n\n  return (\n    <>\n      <IconButton\n        icon={<LuBadgeHelp />}\n        onClick={onOpen}\n        aria-label={t('workspace.controls.shortcuts')}\n        data-testid=\"canvas-control-help\"\n      />\n      <Modal isOpen={isOpen} onClose={onClose} size=\"2xl\" isCentered motionPreset=\"scale\" scrollBehavior=\"inside\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            <Text fontSize=\"md\">{t(`shortcuts.header`)}</Text>\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody overflowY=\"scroll\" tabIndex={0}>\n            <HStack gap={4} alignItems=\"flex-start\">\n              {Object.entries(groupedKeys).map(([group, keys]) => (\n                <Card key={group} role=\"group\" aria-labelledby={`group-${group}`} flex={1}>\n                  <CardHeader id={`group-${group}`} p={2} borderBottomWidth={1}>\n                    {t(`shortcuts.categories.${group}`)}\n                  </CardHeader>\n                  <CardBody p={2}>\n                    <List spacing={3}>\n                      {keys.map((item) => (\n                        <ListItem key={`${group}-${item.key}`}>\n                          <ShortcutRenderer\n                            hotkeys={item.key}\n                            description={t(`shortcuts.keys.${item.key}`, { context: item.category })}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </CardBody>\n                </Card>\n              ))}\n            </HStack>\n          </ModalBody>\n          <ModalFooter />\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}\n\nexport default DesignerCheatSheet\n","import type { FC } from 'react'\nimport type { ControlProps, ReactFlowState } from 'reactflow'\nimport { useReactFlow, useStore, useStoreApi } from 'reactflow'\nimport { useTranslation } from 'react-i18next'\nimport { ButtonGroup } from '@chakra-ui/react'\nimport { FaLock, FaLockOpen, FaMinus, FaPlus } from 'react-icons/fa6'\nimport { LuBoxSelect } from 'react-icons/lu'\n\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport Panel from '@/components/react-flow/Panel.tsx'\nimport DesignerCheatSheet from '@datahub/components/controls/DesignerCheatSheet.tsx'\n\nimport 'reactflow/dist/style.css'\n\nconst CanvasControls: FC<ControlProps> = ({ onInteractiveChange }) => {\n  const { t } = useTranslation('datahub')\n  const store = useStoreApi()\n  const { zoomIn, zoomOut, fitView } = useReactFlow()\n  const { isInteractive } = useStore((s: ReactFlowState) => ({\n    isInteractive: s.nodesDraggable || s.nodesConnectable || s.elementsSelectable,\n  }))\n\n  const onToggleInteractivity = () => {\n    store.setState({\n      nodesDraggable: !isInteractive,\n      nodesConnectable: !isInteractive,\n      elementsSelectable: !isInteractive,\n    })\n\n    onInteractiveChange?.(!isInteractive)\n  }\n\n  return (\n    <Panel position=\"bottom-left\">\n      <ButtonGroup variant=\"outline\" isAttached size=\"sm\" aria-label={t('workspace.controls.aria-label')}>\n        <IconButton icon={<FaPlus />} onClick={() => zoomIn()} aria-label={t('workspace.controls.zoomIn')} />\n        <IconButton icon={<FaMinus />} onClick={() => zoomOut()} aria-label={t('workspace.controls.zoomIOut')} />\n        <IconButton icon={<LuBoxSelect />} onClick={() => fitView()} aria-label={t('workspace.controls.fitView')} />\n        <IconButton\n          icon={isInteractive ? <FaLock /> : <FaLockOpen />}\n          onClick={onToggleInteractivity}\n          aria-label={t('workspace.controls.toggleInteractivity')}\n        />\n        <DesignerCheatSheet />\n      </ButtonGroup>\n    </Panel>\n  )\n}\n\nexport default CanvasControls\n","import type { FC } from 'react'\nimport type { TagProps } from '@chakra-ui/react'\nimport { Tag, TagLabel } from '@chakra-ui/react'\n\ninterface NodeParamsProps extends TagProps {\n  value: string\n}\n\nconst NodeParams: FC<NodeParamsProps> = ({ value, ...tagProps }) => {\n  return (\n    <Tag as=\"p\" letterSpacing=\"-0.05rem\" fontFamily=\"monospace\" {...tagProps}>\n      <TagLabel>{value}</TagLabel>\n    </Tag>\n  )\n}\n\nexport default NodeParams\n","import type { FC } from 'react'\nimport { useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport type { ButtonProps } from '@chakra-ui/react'\n\nimport IconButton from '@/components/Chakra/IconButton.tsx'\n\nimport type { DataHubNodeType } from '@datahub/types.ts'\nimport { NodeIcon } from '@datahub/components/helpers'\n\ninterface ToolProps extends ButtonProps {\n  nodeType: DataHubNodeType\n}\n\nconst ToolItem: FC<ToolProps> = ({ nodeType, isDisabled }) => {\n  const { t } = useTranslation('datahub')\n\n  const onButtonDragStart = useCallback(\n    (event: React.DragEvent<HTMLButtonElement>) => {\n      if (isDisabled) {\n        event.preventDefault()\n      } else if (event && !isDisabled) {\n        event.dataTransfer.setData('application/reactflow', nodeType.toString())\n        event.dataTransfer.effectAllowed = 'move'\n      }\n    },\n    [nodeType, isDisabled]\n  )\n\n  return (\n    <IconButton\n      size=\"lg\"\n      onDragStart={onButtonDragStart}\n      draggable\n      isDisabled={isDisabled}\n      icon={<NodeIcon type={nodeType} />}\n      aria-label={t('workspace.nodes.type', { context: nodeType })}\n    />\n  )\n}\n\nexport default ToolItem\n","import type { FC, ReactNode } from 'react'\nimport { ButtonGroup, type ButtonGroupProps, Heading, HStack, VStack } from '@chakra-ui/react'\n\ninterface ToolProps extends ButtonGroupProps {\n  title: string\n  id: string\n  children: ReactNode\n}\n\nconst ToolGroup: FC<ToolProps> = ({ title, id, children, ...props }) => {\n  return (\n    <ButtonGroup variant=\"outline\" size=\"sm\" aria-labelledby={id} {...props}>\n      <VStack alignItems=\"flex-start\">\n        <Heading as=\"h2\" size=\"sm\" id={id} data-testid=\"toolbox-group-title\">\n          {title}\n        </Heading>\n        <HStack data-testid=\"toolbox-group-container\">{children}</HStack>\n      </VStack>\n    </ButtonGroup>\n  )\n}\n\nexport default ToolGroup\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { HStack, VStack } from '@chakra-ui/react'\n\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport ToolItem from '@datahub/components/controls/ToolItem.tsx'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport ToolGroup from '@datahub/components/controls/ToolGroup.tsx'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\n\ninterface ToolboxNodesProps {\n  direction?: 'horizontal' | 'vertical'\n}\n\nexport const ToolboxNodes: FC<ToolboxNodesProps> = ({ direction = 'horizontal' }) => {\n  const { t } = useTranslation('datahub')\n  const { nodes, isPolicyInDraft } = useDataHubDraftStore()\n  const { isPolicyEditable } = usePolicyGuards()\n\n  const isDraftEmpty = nodes.length === 0\n\n  const Wrapper = direction === 'horizontal' ? HStack : VStack\n\n  return (\n    <Wrapper\n      pb={2}\n      gap={5}\n      role=\"group\"\n      aria-label={t('workspace.toolbox.aria-label')}\n      backgroundColor=\"var(--chakra-colors-chakra-body-bg)\"\n      alignItems={direction === 'horizontal' ? 'center' : 'flex-start'}\n    >\n      <ToolGroup title={t('workspace.toolbox.group.integration.edge')} id=\"group-integrations\">\n        <ToolItem nodeType={DataHubNodeType.TOPIC_FILTER} isDisabled={isDraftEmpty || !isPolicyEditable} />\n        <ToolItem nodeType={DataHubNodeType.CLIENT_FILTER} isDisabled={isDraftEmpty || !isPolicyEditable} />\n      </ToolGroup>\n      <ToolGroup title={t('workspace.toolbox.group.dataPolicy')} id=\"group-dataPolicy\">\n        <ToolItem nodeType={DataHubNodeType.DATA_POLICY} isDisabled={!isPolicyEditable || isPolicyInDraft()} />\n        <ToolItem nodeType={DataHubNodeType.VALIDATOR} isDisabled={isDraftEmpty || !isPolicyEditable} />\n        <ToolItem nodeType={DataHubNodeType.SCHEMA} isDisabled={isDraftEmpty || !isPolicyEditable} />\n      </ToolGroup>\n      <ToolGroup title={t('workspace.toolbox.group.behaviorPolicy')} id=\"group-behaviorPolicy\">\n        <ToolItem nodeType={DataHubNodeType.BEHAVIOR_POLICY} isDisabled={!isPolicyEditable || isPolicyInDraft()} />\n        <ToolItem nodeType={DataHubNodeType.TRANSITION} isDisabled={isDraftEmpty || !isPolicyEditable} />\n      </ToolGroup>\n      <ToolGroup title={t('workspace.toolbox.group.operation')} id=\"group-operation\">\n        <ToolItem nodeType={DataHubNodeType.OPERATION} isDisabled={isDraftEmpty || !isPolicyEditable} />\n        <ToolItem nodeType={DataHubNodeType.FUNCTION} isDisabled={isDraftEmpty || !isPolicyEditable} />\n      </ToolGroup>\n    </Wrapper>\n  )\n}\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useNavigate } from 'react-router-dom'\nimport { Breadcrumb, BreadcrumbItem, ButtonGroup, HStack, Icon, Text, useDisclosure } from '@chakra-ui/react'\nimport { LuBookCopy, LuTrash2 } from 'react-icons/lu'\nimport { PiPencilSimpleLineFill } from 'react-icons/pi'\n\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport { NodeIcon } from '@datahub/components/helpers/index.ts'\nimport { DataHubNodeType, DesignerStatus, PolicyType } from '@datahub/types.ts'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport ConfirmationDialog from '@/components/Modal/ConfirmationDialog.tsx'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\n\nconst DraftStatus: FC = () => {\n  const { t } = useTranslation('datahub')\n  const { status, name, type, reset, setStatus } = useDataHubDraftStore()\n  const { isPolicyEditable } = usePolicyGuards()\n  const navigate = useNavigate()\n  const { isOpen: isConfirmDeleteOpen, onOpen: onConfirmDeleteOpen, onClose: onConfirmDeleteClose } = useDisclosure()\n\n  function onHandleClear() {\n    onConfirmDeleteOpen()\n  }\n\n  function onHandleEdit() {\n    setStatus(DesignerStatus.MODIFIED)\n  }\n\n  function onHandleClone() {\n    setStatus(DesignerStatus.DRAFT, { name: '' })\n    navigate(`/datahub/${PolicyType.CREATE_POLICY}`)\n    // TODO[NVL] This is not enough, we should \"clean\" the id of protected elements\n  }\n\n  function handleConfirmOnClose() {\n    onConfirmDeleteClose()\n  }\n\n  function handleConfirmOnSubmit() {\n    reset()\n    navigate(`/datahub/${PolicyType.CREATE_POLICY}`)\n  }\n\n  return (\n    <HStack alignItems=\"center\" sx={{ textWrap: 'nowrap' }} gap={4}>\n      <HStack role=\"group\" aria-label={t('workspace.toolbars.status.aria-label')}>\n        <NodeIcon type={DataHubNodeType.DATA_POLICY} />\n        <Breadcrumb separator=\"|\">\n          <BreadcrumbItem>\n            <Text data-testid=\"status-container-type\">\n              {t('policy.type', { context: type || PolicyType.CREATE_POLICY })}\n            </Text>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Text data-testid=\"status-container-name\">{name || t('policy.unnamed')}</Text>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Text data-testid=\"status-container-status\">\n              {t('workspace.toolbox.draft.status', { context: status })}\n            </Text>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      </HStack>\n      <ButtonGroup role=\"group\" aria-label={t('workspace.toolbars.edit.aria-label')}>\n        <IconButton\n          isDisabled={isPolicyEditable}\n          data-testid=\"designer-edit-modify\"\n          onClick={onHandleEdit}\n          aria-label={t('workspace.controls.modify')}\n          icon={<Icon as={PiPencilSimpleLineFill} boxSize=\"18px\" />}\n        />\n\n        <IconButton\n          isDisabled={isPolicyEditable}\n          data-testid=\"designer-edit-clone\"\n          onClick={onHandleClone}\n          aria-label={t('workspace.controls.clone')}\n          icon={<Icon as={LuBookCopy} boxSize=\"18px\" />}\n        />\n\n        <IconButton\n          data-testid=\"designer-edit-clear\"\n          onClick={onHandleClear}\n          aria-label={t('workspace.controls.clear')}\n          icon={<LuTrash2 />}\n        />\n      </ButtonGroup>\n      <ConfirmationDialog\n        isOpen={isConfirmDeleteOpen}\n        onClose={handleConfirmOnClose}\n        onSubmit={handleConfirmOnSubmit}\n        message={t('workspace.toolbars.modal.clear.confirmation')}\n        header={t('workspace.toolbars.modal.clear.header')}\n        action={t('workspace.controls.clear')}\n      />\n    </HStack>\n  )\n}\n\nexport default DraftStatus\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n  Text,\n  VStack,\n  IconButton,\n  Icon,\n  HStack,\n} from '@chakra-ui/react'\nimport { ChevronDownIcon, ChevronRightIcon } from '@chakra-ui/icons'\nimport { FaTools } from 'react-icons/fa'\n\nimport Panel from '@/components/react-flow/Panel.tsx'\nimport { ToolboxNodes } from '@datahub/components/controls/ToolboxNodes.tsx'\nimport DraftStatus from '@datahub/components/helpers/DraftStatus.tsx'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\n\nconst DesignerToolbox: FC = () => {\n  const { t } = useTranslation('datahub')\n  const { isPolicyEditable } = usePolicyGuards()\n\n  return (\n    <Panel position=\"top-left\">\n      <HStack role=\"group\" aria-label={t('workspace.toolbars.draft.aria-label')} p={1}>\n        <Popover>\n          {({ isOpen }) => (\n            <>\n              <PopoverTrigger>\n                <IconButton\n                  isDisabled={!isPolicyEditable}\n                  data-testid=\"toolbox-trigger\"\n                  aria-label={t('workspace.toolbox.trigger', { context: !isOpen ? 'open' : 'close' })}\n                  aria-controls=\"toolbox-content\"\n                  icon={\n                    <>\n                      <Icon as={FaTools} />\n                      <Icon as={isOpen ? ChevronDownIcon : ChevronRightIcon} ml={2} boxSize=\"24px\" />\n                    </>\n                  }\n                  px={2}\n                />\n              </PopoverTrigger>\n              <PopoverContent width=\"unset\" id=\"toolbox-content\" data-testid=\"toolbox-container\">\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader>{t('workspace.toolbox.panel.aria-label')}</PopoverHeader>\n                <PopoverBody as={VStack} alignItems=\"flex-start\" maxWidth=\"12rem\">\n                  <Text fontSize=\"sm\">{t('workspace.toolbox.panel.helper')}</Text>\n                  <ToolboxNodes direction=\"vertical\" />\n                </PopoverBody>\n              </PopoverContent>\n            </>\n          )}\n        </Popover>\n        <DraftStatus />\n      </HStack>\n    </Panel>\n  )\n}\n\nexport default DesignerToolbox\n","import MiniMap from '@/components/react-flow/MiniMap.tsx'\nimport type { FC } from 'react'\nimport { useColorModeValue, useTheme } from '@chakra-ui/react'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { getColor } from '@chakra-ui/theme-tools'\n\nconst DesignerMiniMap: FC = () => {\n  const headerBackgroundColor = useColorModeValue('blue.100', 'blue.700')\n  const headerPolicyBackgroundColor = useColorModeValue('orange.300', 'orange.500')\n  const headerResourceBackgroundColor = useColorModeValue('pink.100', 'pink.700')\n  const theme = useTheme()\n\n  const backgroundColor = (type: string) =>\n    getColor(\n      theme,\n      type === DataHubNodeType.DATA_POLICY || type === DataHubNodeType.BEHAVIOR_POLICY\n        ? headerPolicyBackgroundColor\n        : type === DataHubNodeType.SCHEMA || type === DataHubNodeType.FUNCTION\n          ? headerResourceBackgroundColor\n          : headerBackgroundColor\n    )\n\n  return (\n    <MiniMap\n      zoomable\n      pannable\n      nodeClassName={(node) => node.type || ''}\n      nodeComponent={(miniMapNode) => {\n        return (\n          <rect\n            x={miniMapNode.x}\n            y={miniMapNode.y}\n            width={miniMapNode.width}\n            height={miniMapNode.height}\n            fill={backgroundColor(miniMapNode.className)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nexport default DesignerMiniMap\n","import type { FC } from 'react'\nimport { useOnSelectionChange } from 'reactflow'\n\nimport { usePolicyChecksStore } from '@datahub/hooks/usePolicyChecksStore.ts'\nimport { isBehaviorPolicyNodeType, isDataPolicyNodeType } from '@datahub/utils/node.utils.ts'\n\nconst ToolboxSelectionListener: FC = () => {\n  const { setNode } = usePolicyChecksStore()\n\n  useOnSelectionChange({\n    onChange: ({ nodes }) => {\n      if (nodes.length === 1) {\n        const [node] = nodes\n        if (isDataPolicyNodeType(node) || isBehaviorPolicyNodeType(node)) {\n          setNode(node)\n          return\n        }\n      }\n      setNode(undefined)\n    },\n  })\n\n  return <div></div>\n}\n\nexport default ToolboxSelectionListener\n","import { useContext, createContext, useState, useCallback, useRef, useLayoutEffect, useEffect } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nvar reservedModifierKeywords = ['shift', 'alt', 'meta', 'mod', 'ctrl'];\nvar mappedKeys = {\n  esc: 'escape',\n  \"return\": 'enter',\n  '.': 'period',\n  ',': 'comma',\n  '-': 'slash',\n  ' ': 'space',\n  '`': 'backquote',\n  '#': 'backslash',\n  '+': 'bracketright',\n  ShiftLeft: 'shift',\n  ShiftRight: 'shift',\n  AltLeft: 'alt',\n  AltRight: 'alt',\n  MetaLeft: 'meta',\n  MetaRight: 'meta',\n  OSLeft: 'meta',\n  OSRight: 'meta',\n  ControlLeft: 'ctrl',\n  ControlRight: 'ctrl'\n};\nfunction mapKey(key) {\n  return (mappedKeys[key] || key).trim().toLowerCase().replace(/key|digit|numpad|arrow/, '');\n}\nfunction isHotkeyModifier(key) {\n  return reservedModifierKeywords.includes(key);\n}\nfunction parseKeysHookInput(keys, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  return keys.split(splitKey);\n}\nfunction parseHotkey(hotkey, combinationKey, description) {\n  if (combinationKey === void 0) {\n    combinationKey = '+';\n  }\n  var keys = hotkey.toLocaleLowerCase().split(combinationKey).map(function (k) {\n    return mapKey(k);\n  });\n  var modifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl') || keys.includes('control'),\n    shift: keys.includes('shift'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod')\n  };\n  var singleCharKeys = keys.filter(function (k) {\n    return !reservedModifierKeywords.includes(k);\n  });\n  return _extends({}, modifiers, {\n    keys: singleCharKeys,\n    description: description\n  });\n}\n\n(function () {\n  if (typeof document !== 'undefined') {\n    document.addEventListener('keydown', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n    document.addEventListener('keyup', function (e) {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)]);\n    });\n  }\n  if (typeof window !== 'undefined') {\n    window.addEventListener('blur', function () {\n      currentlyPressedKeys.clear();\n    });\n  }\n})();\nvar currentlyPressedKeys = /*#__PURE__*/new Set();\n// https://github.com/microsoft/TypeScript/issues/17002\nfunction isReadonlyArray(value) {\n  return Array.isArray(value);\n}\nfunction isHotkeyPressed(key, splitKey) {\n  if (splitKey === void 0) {\n    splitKey = ',';\n  }\n  var hotkeyArray = isReadonlyArray(key) ? key : key.split(splitKey);\n  return hotkeyArray.every(function (hotkey) {\n    return currentlyPressedKeys.has(hotkey.trim().toLowerCase());\n  });\n}\nfunction pushToCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (currentlyPressedKeys.has('meta')) {\n    currentlyPressedKeys.forEach(function (key) {\n      return !isHotkeyModifier(key) && currentlyPressedKeys[\"delete\"](key.toLowerCase());\n    });\n  }\n  hotkeyArray.forEach(function (hotkey) {\n    return currentlyPressedKeys.add(hotkey.toLowerCase());\n  });\n}\nfunction removeFromCurrentlyPressedKeys(key) {\n  var hotkeyArray = Array.isArray(key) ? key : [key];\n  /*\r\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\r\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\r\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\r\n   */\n  if (key === 'meta') {\n    currentlyPressedKeys.clear();\n  } else {\n    hotkeyArray.forEach(function (hotkey) {\n      return currentlyPressedKeys[\"delete\"](hotkey.toLowerCase());\n    });\n  }\n}\n\nfunction maybePreventDefault(e, hotkey, preventDefault) {\n  if (typeof preventDefault === 'function' && preventDefault(e, hotkey) || preventDefault === true) {\n    e.preventDefault();\n  }\n}\nfunction isHotkeyEnabled(e, hotkey, enabled) {\n  if (typeof enabled === 'function') {\n    return enabled(e, hotkey);\n  }\n  return enabled === true || enabled === undefined;\n}\nfunction isKeyboardEventTriggeredByInput(ev) {\n  return isHotkeyEnabledOnTag(ev, ['input', 'textarea', 'select']);\n}\nfunction isHotkeyEnabledOnTag(_ref, enabledOnTags) {\n  var target = _ref.target;\n  if (enabledOnTags === void 0) {\n    enabledOnTags = false;\n  }\n  var targetTagName = target && target.tagName;\n  if (isReadonlyArray(enabledOnTags)) {\n    return Boolean(targetTagName && enabledOnTags && enabledOnTags.some(function (tag) {\n      return tag.toLowerCase() === targetTagName.toLowerCase();\n    }));\n  }\n  return Boolean(targetTagName && enabledOnTags && enabledOnTags === true);\n}\nfunction isScopeActive(activeScopes, scopes) {\n  if (activeScopes.length === 0 && scopes) {\n    console.warn('A hotkey has the \"scopes\" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>');\n    return true;\n  }\n  if (!scopes) {\n    return true;\n  }\n  return activeScopes.some(function (scope) {\n    return scopes.includes(scope);\n  }) || activeScopes.includes('*');\n}\nvar isHotkeyMatchingKeyboardEvent = function isHotkeyMatchingKeyboardEvent(e, hotkey, ignoreModifiers) {\n  if (ignoreModifiers === void 0) {\n    ignoreModifiers = false;\n  }\n  var alt = hotkey.alt,\n    meta = hotkey.meta,\n    mod = hotkey.mod,\n    shift = hotkey.shift,\n    ctrl = hotkey.ctrl,\n    keys = hotkey.keys;\n  var pressedKeyUppercase = e.key,\n    code = e.code,\n    ctrlKey = e.ctrlKey,\n    metaKey = e.metaKey,\n    shiftKey = e.shiftKey,\n    altKey = e.altKey;\n  var keyCode = mapKey(code);\n  var pressedKey = pressedKeyUppercase.toLowerCase();\n  if (!(keys != null && keys.includes(keyCode)) && !(keys != null && keys.includes(pressedKey)) && !['ctrl', 'control', 'unknown', 'meta', 'alt', 'shift', 'os'].includes(keyCode)) {\n    return false;\n  }\n  if (!ignoreModifiers) {\n    // We check the pressed keys for compatibility with the keyup event. In keyup events the modifier flags are not set.\n    if (alt === !altKey && pressedKey !== 'alt') {\n      return false;\n    }\n    if (shift === !shiftKey && pressedKey !== 'shift') {\n      return false;\n    }\n    // Mod is a special key name that is checking for meta on macOS and ctrl on other platforms\n    if (mod) {\n      if (!metaKey && !ctrlKey) {\n        return false;\n      }\n    } else {\n      if (meta === !metaKey && pressedKey !== 'meta' && pressedKey !== 'os') {\n        return false;\n      }\n      if (ctrl === !ctrlKey && pressedKey !== 'ctrl' && pressedKey !== 'control') {\n        return false;\n      }\n    }\n  }\n  // All modifiers are correct, now check the key\n  // If the key is set, we check for the key\n  if (keys && keys.length === 1 && (keys.includes(pressedKey) || keys.includes(keyCode))) {\n    return true;\n  } else if (keys) {\n    // Check if all keys are present in pressedDownKeys set\n    return isHotkeyPressed(keys);\n  } else if (!keys) {\n    // If the key is not set, we only listen for modifiers, that check went alright, so we return true\n    return true;\n  }\n  // There is nothing that matches.\n  return false;\n};\n\nvar BoundHotkeysProxyProvider = /*#__PURE__*/createContext(undefined);\nvar useBoundHotkeysProxy = function useBoundHotkeysProxy() {\n  return useContext(BoundHotkeysProxyProvider);\n};\nfunction BoundHotkeysProxyProviderProvider(_ref) {\n  var addHotkey = _ref.addHotkey,\n    removeHotkey = _ref.removeHotkey,\n    children = _ref.children;\n  return /*#__PURE__*/jsx(BoundHotkeysProxyProvider.Provider, {\n    value: {\n      addHotkey: addHotkey,\n      removeHotkey: removeHotkey\n    },\n    children: children\n  });\n}\n\nfunction deepEqual(x, y) {\n  //@ts-ignore\n  return x && y && typeof x === 'object' && typeof y === 'object' ? Object.keys(x).length === Object.keys(y).length &&\n  //@ts-ignore\n  Object.keys(x).reduce(function (isEqual, key) {\n    return isEqual && deepEqual(x[key], y[key]);\n  }, true) : x === y;\n}\n\nvar HotkeysContext = /*#__PURE__*/createContext({\n  hotkeys: [],\n  enabledScopes: [],\n  toggleScope: function toggleScope() {},\n  enableScope: function enableScope() {},\n  disableScope: function disableScope() {}\n});\nvar useHotkeysContext = function useHotkeysContext() {\n  return useContext(HotkeysContext);\n};\nvar HotkeysProvider = function HotkeysProvider(_ref) {\n  var _ref$initiallyActiveS = _ref.initiallyActiveScopes,\n    initiallyActiveScopes = _ref$initiallyActiveS === void 0 ? ['*'] : _ref$initiallyActiveS,\n    children = _ref.children;\n  var _useState = useState((initiallyActiveScopes == null ? void 0 : initiallyActiveScopes.length) > 0 ? initiallyActiveScopes : ['*']),\n    internalActiveScopes = _useState[0],\n    setInternalActiveScopes = _useState[1];\n  var _useState2 = useState([]),\n    boundHotkeys = _useState2[0],\n    setBoundHotkeys = _useState2[1];\n  var enableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes('*')) {\n        return [scope];\n      }\n      return Array.from(new Set([].concat(prev, [scope])));\n    });\n  }, []);\n  var disableScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.filter(function (s) {\n        return s !== scope;\n      }).length === 0) {\n        return ['*'];\n      } else {\n        return prev.filter(function (s) {\n          return s !== scope;\n        });\n      }\n    });\n  }, []);\n  var toggleScope = useCallback(function (scope) {\n    setInternalActiveScopes(function (prev) {\n      if (prev.includes(scope)) {\n        if (prev.filter(function (s) {\n          return s !== scope;\n        }).length === 0) {\n          return ['*'];\n        } else {\n          return prev.filter(function (s) {\n            return s !== scope;\n          });\n        }\n      } else {\n        if (prev.includes('*')) {\n          return [scope];\n        }\n        return Array.from(new Set([].concat(prev, [scope])));\n      }\n    });\n  }, []);\n  var addBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return [].concat(prev, [hotkey]);\n    });\n  }, []);\n  var removeBoundHotkey = useCallback(function (hotkey) {\n    setBoundHotkeys(function (prev) {\n      return prev.filter(function (h) {\n        return !deepEqual(h, hotkey);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/jsx(HotkeysContext.Provider, {\n    value: {\n      enabledScopes: internalActiveScopes,\n      hotkeys: boundHotkeys,\n      enableScope: enableScope,\n      disableScope: disableScope,\n      toggleScope: toggleScope\n    },\n    children: /*#__PURE__*/jsx(BoundHotkeysProxyProviderProvider, {\n      addHotkey: addBoundHotkey,\n      removeHotkey: removeBoundHotkey,\n      children: children\n    })\n  });\n};\n\nfunction useDeepEqualMemo(value) {\n  var ref = useRef(undefined);\n  if (!deepEqual(ref.current, value)) {\n    ref.current = value;\n  }\n  return ref.current;\n}\n\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n  e.stopImmediatePropagation();\n};\nvar useSafeLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\nfunction useHotkeys(keys, callback, options, dependencies) {\n  var ref = useRef(null);\n  var hasTriggeredRef = useRef(false);\n  var _options = !(options instanceof Array) ? options : !(dependencies instanceof Array) ? dependencies : undefined;\n  var _keys = isReadonlyArray(keys) ? keys.join(_options == null ? void 0 : _options.splitKey) : keys;\n  var _deps = options instanceof Array ? options : dependencies instanceof Array ? dependencies : undefined;\n  var memoisedCB = useCallback(callback, _deps != null ? _deps : []);\n  var cbRef = useRef(memoisedCB);\n  if (_deps) {\n    cbRef.current = memoisedCB;\n  } else {\n    cbRef.current = callback;\n  }\n  var memoisedOptions = useDeepEqualMemo(_options);\n  var _useHotkeysContext = useHotkeysContext(),\n    enabledScopes = _useHotkeysContext.enabledScopes;\n  var proxy = useBoundHotkeysProxy();\n  useSafeLayoutEffect(function () {\n    if ((memoisedOptions == null ? void 0 : memoisedOptions.enabled) === false || !isScopeActive(enabledScopes, memoisedOptions == null ? void 0 : memoisedOptions.scopes)) {\n      return;\n    }\n    var listener = function listener(e, isKeyUp) {\n      var _e$target;\n      if (isKeyUp === void 0) {\n        isKeyUp = false;\n      }\n      if (isKeyboardEventTriggeredByInput(e) && !isHotkeyEnabledOnTag(e, memoisedOptions == null ? void 0 : memoisedOptions.enableOnFormTags)) {\n        return;\n      }\n      // TODO: SINCE THE EVENT IS NOW ATTACHED TO THE REF, THE ACTIVE ELEMENT CAN NEVER BE INSIDE THE REF. THE HOTKEY ONLY TRIGGERS IF THE\n      // REF IS THE ACTIVE ELEMENT. THIS IS A PROBLEM SINCE FOCUSED SUB COMPONENTS WON'T TRIGGER THE HOTKEY.\n      if (ref.current !== null) {\n        var rootNode = ref.current.getRootNode();\n        if ((rootNode instanceof Document || rootNode instanceof ShadowRoot) && rootNode.activeElement !== ref.current && !ref.current.contains(rootNode.activeElement)) {\n          stopPropagation(e);\n          return;\n        }\n      }\n      if ((_e$target = e.target) != null && _e$target.isContentEditable && !(memoisedOptions != null && memoisedOptions.enableOnContentEditable)) {\n        return;\n      }\n      parseKeysHookInput(_keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        var _hotkey$keys;\n        var hotkey = parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey);\n        if (isHotkeyMatchingKeyboardEvent(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.ignoreModifiers) || (_hotkey$keys = hotkey.keys) != null && _hotkey$keys.includes('*')) {\n          if (memoisedOptions != null && memoisedOptions.ignoreEventWhen != null && memoisedOptions.ignoreEventWhen(e)) {\n            return;\n          }\n          if (isKeyUp && hasTriggeredRef.current) {\n            return;\n          }\n          maybePreventDefault(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.preventDefault);\n          if (!isHotkeyEnabled(e, hotkey, memoisedOptions == null ? void 0 : memoisedOptions.enabled)) {\n            stopPropagation(e);\n            return;\n          }\n          // Execute the user callback for that hotkey\n          cbRef.current(e, hotkey);\n          if (!isKeyUp) {\n            hasTriggeredRef.current = true;\n          }\n        }\n      });\n    };\n    var handleKeyDown = function handleKeyDown(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      pushToCurrentlyPressedKeys(mapKey(event.code));\n      if ((memoisedOptions == null ? void 0 : memoisedOptions.keydown) === undefined && (memoisedOptions == null ? void 0 : memoisedOptions.keyup) !== true || memoisedOptions != null && memoisedOptions.keydown) {\n        listener(event);\n      }\n    };\n    var handleKeyUp = function handleKeyUp(event) {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return;\n      }\n      removeFromCurrentlyPressedKeys(mapKey(event.code));\n      hasTriggeredRef.current = false;\n      if (memoisedOptions != null && memoisedOptions.keyup) {\n        listener(event, true);\n      }\n    };\n    var domNode = ref.current || (_options == null ? void 0 : _options.document) || document;\n    // @ts-ignore\n    domNode.addEventListener('keyup', handleKeyUp);\n    // @ts-ignore\n    domNode.addEventListener('keydown', handleKeyDown);\n    if (proxy) {\n      parseKeysHookInput(_keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n        return proxy.addHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey, memoisedOptions == null ? void 0 : memoisedOptions.description));\n      });\n    }\n    return function () {\n      // @ts-ignore\n      domNode.removeEventListener('keyup', handleKeyUp);\n      // @ts-ignore\n      domNode.removeEventListener('keydown', handleKeyDown);\n      if (proxy) {\n        parseKeysHookInput(_keys, memoisedOptions == null ? void 0 : memoisedOptions.splitKey).forEach(function (key) {\n          return proxy.removeHotkey(parseHotkey(key, memoisedOptions == null ? void 0 : memoisedOptions.combinationKey, memoisedOptions == null ? void 0 : memoisedOptions.description));\n        });\n      }\n    };\n  }, [_keys, memoisedOptions, enabledScopes]);\n  return ref;\n}\n\nfunction useRecordHotkeys() {\n  var _useState = useState(new Set()),\n    keys = _useState[0],\n    setKeys = _useState[1];\n  var _useState2 = useState(false),\n    isRecording = _useState2[0],\n    setIsRecording = _useState2[1];\n  var handler = useCallback(function (event) {\n    if (event.key === undefined) {\n      // Synthetic event (e.g., Chrome autofill).  Ignore.\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    setKeys(function (prev) {\n      var newKeys = new Set(prev);\n      newKeys.add(mapKey(event.code));\n      return newKeys;\n    });\n  }, []);\n  var stop = useCallback(function () {\n    if (typeof document !== 'undefined') {\n      document.removeEventListener('keydown', handler);\n      setIsRecording(false);\n    }\n  }, [handler]);\n  var start = useCallback(function () {\n    setKeys(new Set());\n    if (typeof document !== 'undefined') {\n      stop();\n      document.addEventListener('keydown', handler);\n      setIsRecording(true);\n    }\n  }, [handler, stop]);\n  var resetKeys = useCallback(function () {\n    setKeys(new Set());\n  }, []);\n  return [keys, {\n    start: start,\n    stop: stop,\n    resetKeys: resetKeys,\n    isRecording: isRecording\n  }];\n}\n\nexport { HotkeysProvider, isHotkeyPressed, useHotkeys, useHotkeysContext, useRecordHotkeys };\n//# sourceMappingURL=react-hotkeys-hook.esm.js.map\n","import type { FC, ReactElement } from 'react'\nimport { useState } from 'react'\nimport type { Edge, EdgeAddChange, Node, NodeAddChange, NodeSelectionChange, XYPosition } from 'reactflow'\nimport { getConnectedEdges } from 'reactflow'\nimport { v4 as uuidv4 } from 'uuid'\nimport { useHotkeys } from 'react-hotkeys-hook'\n\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport { DATAHUB_HOTKEY } from '@datahub/utils/datahub.utils.ts'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\n\nconst DEFAULT_POSITION_DELTA: XYPosition = { x: 100, y: 75 }\n\ninterface CopyPasteListenerProps {\n  render?: (nodes: Node[]) => ReactElement\n}\n\nexport const CopyPasteListener: FC<CopyPasteListenerProps> = ({ render }) => {\n  const { nodes, edges, onNodesChange, onEdgesChange } = useDataHubDraftStore()\n  const [copiedNodes, setCopiedNodes] = useState<Node[]>([])\n  const [delta, setDelta] = useState<XYPosition>(DEFAULT_POSITION_DELTA)\n  const { isPolicyEditable } = usePolicyGuards()\n\n  useHotkeys(DATAHUB_HOTKEY.ESCAPE, () => {\n    setCopiedNodes([])\n    setDelta(DEFAULT_POSITION_DELTA)\n    onNodesChange(nodes.map<NodeSelectionChange>((node) => ({ id: node.id, type: 'select', selected: false })))\n  })\n\n  useHotkeys(DATAHUB_HOTKEY.COPY, () => {\n    if (!copiedNodes.length && !isPolicyEditable) return\n\n    const selectedNodes = nodes.filter((node) => node.selected)\n    if (selectedNodes.length) {\n      setCopiedNodes(selectedNodes)\n    } else setCopiedNodes([])\n    setDelta(DEFAULT_POSITION_DELTA)\n  })\n\n  useHotkeys(DATAHUB_HOTKEY.PASTE, () => {\n    if (!copiedNodes.length && !isPolicyEditable) return\n\n    const ids = copiedNodes.map((node) => node.id)\n    const newIds = copiedNodes.reduce<Record<string, string>>((acc, node) => {\n      acc[node.id] = uuidv4()\n      return acc\n    }, {})\n\n    const selectedEdges = getConnectedEdges(copiedNodes, edges).filter(\n      (edge) => ids.includes(edge.source) && ids.includes(edge.target)\n    )\n\n    const duplicateNodes = copiedNodes.map<Node>((node) => ({\n      ...node,\n      id: newIds[node.id],\n      position: { x: node.position.x + delta.x, y: node.position.y + delta.y },\n      selected: true,\n    }))\n    const duplicateEdges = selectedEdges.map<Edge>((edge) => ({\n      ...edge,\n      id: uuidv4(),\n      source: newIds[edge.source],\n      target: newIds[edge.target],\n    }))\n    setDelta({ x: delta.x + DEFAULT_POSITION_DELTA.x, y: delta.y + DEFAULT_POSITION_DELTA.y })\n\n    onNodesChange([\n      ...copiedNodes.map<NodeSelectionChange>((node) => ({ id: node.id, type: 'select', selected: false })),\n      ...duplicateNodes.map<NodeAddChange>((node) => ({ item: node, type: 'add' })),\n    ])\n    onEdgesChange([...duplicateEdges.map<EdgeAddChange>((edge) => ({ item: edge, type: 'add' }))])\n  })\n\n  return render?.(copiedNodes) || null\n}\n","import type { FC } from 'react'\nimport { ButtonGroup, Tag, TagLabel, TagLeftIcon } from '@chakra-ui/react'\nimport { LuCopy, LuCopyCheck } from 'react-icons/lu'\n\nimport Panel from '@/components/react-flow/Panel.tsx'\nimport { useTranslation } from 'react-i18next'\n\ninterface CopyPasteStatusProps {\n  nbCopied: number | undefined\n}\n\nconst CopyPasteStatus: FC<CopyPasteStatusProps> = ({ nbCopied }) => {\n  const { t } = useTranslation('datahub')\n  return (\n    <Panel position=\"bottom-center\">\n      <ButtonGroup variant=\"outline\" isAttached size=\"sm\" aria-label={t('workspace.toolbars.clipboard.aria-label')}>\n        <Tag\n          size=\"lg\"\n          variant=\"subtle\"\n          userSelect=\"none\"\n          data-testid=\"copy-paste-status\"\n          tabIndex={0}\n          aria-label={t(`workspace.toolbars.clipboard.content`, { count: nbCopied })}\n        >\n          <TagLeftIcon boxSize=\"12px\" as={nbCopied ? LuCopyCheck : LuCopy} />\n          <TagLabel>{nbCopied}</TagLabel>\n        </Tag>\n      </ButtonGroup>\n    </Panel>\n  )\n}\n\nexport default CopyPasteStatus\n","import type { FC } from 'react'\nimport { useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useHotkeys } from 'react-hotkeys-hook'\nimport type { NodeRemoveChange, EdgeRemoveChange } from 'reactflow'\nimport { getConnectedEdges } from 'reactflow'\nimport { ListItem, Text, UnorderedList, useDisclosure, useToast, VStack } from '@chakra-ui/react'\n\nimport ConfirmationDialog from '@/components/Modal/ConfirmationDialog.tsx'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport { DesignerStatus } from '@datahub/types.ts'\nimport { DATAHUB_HOTKEY } from '@datahub/utils/datahub.utils.ts'\nimport { canDeleteEdge, canDeleteNode } from '@datahub/utils/node.utils.ts'\nimport { DATAHUB_TOAST_ID, dataHubToastOption } from '@datahub/utils/toast.utils.ts'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\n\nconst DeleteListener: FC = () => {\n  const { t } = useTranslation('datahub')\n  const { nodes, edges, status, onNodesChange, onEdgesChange, setStatus } = useDataHubDraftStore()\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const toast = useToast()\n  const { isPolicyEditable } = usePolicyGuards()\n\n  const selectedElements = useMemo(() => {\n    const selectedNodes = nodes.filter((node) => node.selected)\n    const selectedEdges = edges.filter((edge) => edge.selected)\n    return { selectedNodes, selectedEdges }\n  }, [edges, nodes])\n\n  const SelectedElementsCount = useMemo(() => {\n    const { selectedNodes, selectedEdges } = selectedElements\n    return selectedNodes.length + selectedEdges.length\n  }, [selectedElements])\n\n  const deleteContext = useMemo(() => {\n    const { selectedNodes, selectedEdges } = selectedElements\n    if (selectedNodes.length === 0) return 'EDGE_ONLY'\n    if (selectedEdges.length === 0) return 'MODE_ONLY'\n    return 'BOTH'\n  }, [selectedElements])\n\n  useHotkeys([DATAHUB_HOTKEY.BACKSPACE, DATAHUB_HOTKEY.DELETE], () => {\n    if (!isPolicyEditable) return\n\n    const { selectedNodes, selectedEdges } = selectedElements\n    const canDeleteNodes = selectedNodes.map((node) => canDeleteNode(node, status))\n    const canDeleteEdges = selectedEdges.map((edge) => canDeleteEdge(edge, nodes))\n\n    const allElements = [...canDeleteNodes, ...canDeleteEdges]\n    if (allElements.length === 0) return\n\n    const canDeleteElements = allElements.every((element) => Boolean(element.delete))\n    if (canDeleteElements) {\n      return onOpen()\n    }\n\n    const allErrors = allElements.reduce<string[]>((acc, cur) => {\n      if (cur.error && !acc.includes(cur.error)) {\n        acc.push(cur.error)\n      }\n      return acc\n    }, [])\n\n    if (!toast.isActive(DATAHUB_TOAST_ID))\n      toast({\n        ...dataHubToastOption,\n        id: DATAHUB_TOAST_ID,\n        title: t('workspace.deletion.modal.header', { count: SelectedElementsCount }),\n        status: 'error',\n        description: (\n          <VStack alignItems=\"flex-start\">\n            <Text>{t('workspace.guards.delete.message', { count: SelectedElementsCount })}</Text>\n            <UnorderedList>\n              {allErrors.map((error, index) => (\n                <ListItem key={`toto-${index}`}>{error}</ListItem>\n              ))}\n            </UnorderedList>\n          </VStack>\n        ),\n      })\n  })\n\n  const handleConfirmOnSubmit = () => {\n    const { selectedNodes, selectedEdges } = selectedElements\n    const allConnectedEdges = getConnectedEdges(selectedNodes, edges)\n    onEdgesChange(\n      [...selectedEdges, ...allConnectedEdges].map<EdgeRemoveChange>((edge) => ({ id: edge.id, type: 'remove' }))\n    )\n    onNodesChange(selectedNodes.map<NodeRemoveChange>((node) => ({ id: node.id, type: 'remove' })))\n    setStatus(status === DesignerStatus.DRAFT ? DesignerStatus.DRAFT : DesignerStatus.MODIFIED)\n  }\n\n  return (\n    <ConfirmationDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleConfirmOnSubmit}\n      message={t('workspace.deletion.modal.message', {\n        context: deleteContext,\n        count: SelectedElementsCount,\n      })}\n      header={t('workspace.deletion.modal.header', { count: SelectedElementsCount })}\n    />\n  )\n}\n\nexport default DeleteListener\n","import type { FC } from 'react'\nimport { useMemo } from 'react'\nimport type { ConnectionLineComponentProps } from 'reactflow'\nimport { getSmoothStepPath } from 'reactflow'\nimport { Tag } from '@chakra-ui/react'\n\nimport { getConnectedNodeFrom } from '@datahub/utils/node.utils.ts'\nimport { NodeIcon } from '@datahub/components/helpers'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\n\nconst ICON_SIZE = 50\nconst ICON_OFFSET = 20\n\nconst ConnectionLine: FC<ConnectionLineComponentProps> = ({\n  fromHandle,\n  fromNode,\n  fromX,\n  fromY,\n  toY,\n  toX,\n  ...props\n}) => {\n  const { isPolicyInDraft } = useDataHubDraftStore()\n  const droppedNode = useMemo(() => {\n    const droppedNode = getConnectedNodeFrom(fromNode?.type, fromHandle?.id)\n    if (\n      droppedNode?.type === DataHubNodeType.DATA_POLICY ||\n      (droppedNode?.type === DataHubNodeType.BEHAVIOR_POLICY && isPolicyInDraft())\n    )\n      return undefined\n    return droppedNode\n  }, [fromHandle?.id, fromNode?.type, isPolicyInDraft])\n\n  const pathParams = {\n    sourceX: fromX,\n    sourceY: fromY,\n    sourcePosition: props.fromPosition,\n    targetX: toX,\n    targetY: toY,\n    targetPosition: props.toPosition,\n  }\n\n  const [d] = getSmoothStepPath(pathParams)\n\n  return (\n    <g>\n      <path fill=\"none\" stroke=\"grey\" strokeWidth={1.5} className=\"animated\" d={d} />\n      {props.connectionStatus === null && (\n        <foreignObject\n          x={toX - (props.fromPosition === 'left' ? ICON_SIZE : 0)}\n          y={toY - ICON_OFFSET}\n          width={`${ICON_SIZE}px`}\n          height={`${ICON_SIZE}px`}\n        >\n          <Tag size=\"lg\" colorScheme=\"gray\" borderRadius=\"full\" variant=\"outline\">\n            <NodeIcon type={droppedNode?.type} />\n          </Tag>\n        </foreignObject>\n      )}\n    </g>\n  )\n}\n\nexport default ConnectionLine\n","import type { CSSProperties, FC, HTMLAttributes } from 'react'\nimport { useMemo } from 'react'\nimport type { HandleProps } from 'reactflow'\nimport { Handle, useNodeId } from 'reactflow'\n\nimport useDataHubDraftStore from '../../hooks/useDataHubDraftStore.ts'\nimport { isNodeHandleConnectable } from '@datahub/utils/node.utils.ts'\n\ninterface CustomHandleProps\n  extends Omit<HandleProps & Pick<HTMLAttributes<HTMLDivElement>, 'style' | 'className'>, 'isConnectable'> {\n  isConnectable?: boolean | number\n}\n\nexport const CustomHandle: FC<CustomHandleProps> = (props) => {\n  const { nodes, edges } = useDataHubDraftStore()\n  const nodeId = useNodeId()\n\n  const isHandleConnectable = useMemo(() => {\n    const node = nodes.find((node) => node.id === nodeId)\n    if (!node) return false\n    return isNodeHandleConnectable(props, node, edges)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [nodes.length, props, edges, nodeId])\n\n  let transform: CSSProperties = {\n    width: '12px',\n    height: '12px',\n  }\n  if (props.type === 'source') transform = { ...transform, borderRadius: 0 }\n  if (props.position === 'left') transform = { ...transform, left: '-7px' }\n  if (props.position === 'right') transform = { ...transform, right: '-7px' }\n  if (props.position === 'top') transform = { ...transform, top: '-7px' }\n  if (props.position === 'bottom') transform = { ...transform, bottom: '-7px' }\n\n  return (\n    <Handle\n      {...props}\n      isConnectable={isHandleConnectable}\n      style={{\n        ...transform,\n        ...props.style,\n      }}\n    ></Handle>\n  )\n}\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport type { ButtonGroupProps } from '@chakra-ui/react'\nimport { Divider, Icon } from '@chakra-ui/react'\nimport { LuCopy, LuDelete, LuFileCog } from 'react-icons/lu'\n\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport ToolbarButtonGroup from '@/components/react-flow/ToolbarButtonGroup.tsx'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\n\ninterface NodeToolbarProps extends ButtonGroupProps {\n  onCopy?: (event: React.BaseSyntheticEvent) => void\n  onDelete?: (event: React.BaseSyntheticEvent) => void\n  onEdit?: (event: React.BaseSyntheticEvent) => void\n  children?: React.ReactNode\n  selectedNode: string\n}\n\nconst NodeDatahubToolbar: FC<NodeToolbarProps> = ({ onCopy, onEdit, onDelete, children, selectedNode, ...props }) => {\n  const { t } = useTranslation('datahub')\n  const { isNodeEditable } = usePolicyGuards(selectedNode)\n\n  return (\n    <>\n      {children && (\n        <>\n          {children}\n          <Divider orientation=\"vertical\" />\n        </>\n      )}\n      <ToolbarButtonGroup orientation=\"horizontal\" isAttached variant=\"outline\" {...props}>\n        <IconButton\n          icon={<Icon as={LuFileCog} boxSize=\"20px\" />}\n          data-testid=\"node-toolbar-config\"\n          aria-label={t('Listings.action.config')}\n          onClick={onEdit}\n        />\n        <IconButton\n          icon={<Icon as={LuCopy} boxSize=\"20px\" />}\n          data-testid=\"node-toolbar-copy\"\n          aria-label={t('Listings.action.copy')}\n          onClick={onCopy}\n          isDisabled={!isNodeEditable}\n        />\n      </ToolbarButtonGroup>\n      <ToolbarButtonGroup orientation=\"horizontal\" isAttached variant=\"outline\" {...props}>\n        <IconButton\n          icon={<Icon as={LuDelete} boxSize=\"20px\" />}\n          data-testid=\"node-toolbar-delete\"\n          aria-label={t('Listings.action.delete')}\n          onClick={onDelete}\n          isDisabled={!isNodeEditable}\n        />\n      </ToolbarButtonGroup>\n    </>\n  )\n}\n\nexport default NodeDatahubToolbar\n","/**\n * Adapted from https://github.com/JohannesKlauss/react-hotkeys-hook/blob/main/src/parseHotkeys.ts\n */\n\nconst reservedModifierKeywords = ['shift', 'alt', 'meta', 'mod', 'ctrl']\n\nconst mappedKeys: Record<string, string> = {\n  esc: 'escape',\n  return: 'enter',\n  '.': 'period',\n  ',': 'comma',\n  '-': 'slash',\n  ' ': 'space',\n  '`': 'backquote',\n  '#': 'backslash',\n  '+': 'bracketright',\n  ShiftLeft: 'shift',\n  ShiftRight: 'shift',\n  AltLeft: 'alt',\n  AltRight: 'alt',\n  MetaLeft: 'meta',\n  MetaRight: 'meta',\n  OSLeft: 'meta',\n  OSRight: 'meta',\n  ControlLeft: 'ctrl',\n  ControlRight: 'ctrl',\n}\n\nfunction mapKey(key: string): string {\n  return (mappedKeys[key] || key)\n    .trim()\n    .toLowerCase()\n    .replace(/key|digit|numpad|arrow/, '')\n}\n\nexport function parseHotkey(hotkey: string, combinationKey = '+'): KeyboardEventInit {\n  const keys = hotkey\n    .toLocaleLowerCase()\n    .split(combinationKey)\n    .map((k) => mapKey(k))\n\n  const modifiers: EventModifierInit = {\n    altKey: keys.includes('alt'),\n    ctrlKey: keys.includes('ctrl') || keys.includes('control'),\n    shiftKey: keys.includes('shift'),\n    metaKey: keys.includes('meta'),\n    modifierFn: keys.includes('mod'),\n  }\n\n  const singleCharKeys = keys.filter((k) => !reservedModifierKeywords.includes(k))\n  return {\n    ...modifiers,\n    // Not supporting combined Hot Key. Take only the first one\n    key: singleCharKeys[0],\n  }\n}\n","import type { FC, ReactNode } from 'react'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport type { NodeProps } from 'reactflow'\nimport type { BoxProps, CardBodyProps } from '@chakra-ui/react'\nimport { Avatar, Card, CardBody, CardHeader, HStack, Text, useColorModeValue } from '@chakra-ui/react'\n\nimport NodeToolbar from '@/components/react-flow/NodeToolbar.tsx'\n\nimport NodeDatahubToolbar from '@datahub/components/toolbar/NodeDatahubToolbar.tsx'\nimport type { DataHubNodeData } from '@datahub/types.ts'\nimport { DataHubNodeType, PolicyDryRunStatus } from '@datahub/types.ts'\nimport { getDryRunStatusIcon } from '@datahub/utils/node.utils.ts'\nimport { parseHotkey } from '@datahub/utils/hotkeys.utils.ts'\nimport { DATAHUB_HOTKEY } from '@datahub/utils/datahub.utils.ts'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport { NodeIcon } from '@datahub/components/helpers'\nimport { useTranslation } from 'react-i18next'\n\ninterface NodeWrapperProps extends NodeProps<DataHubNodeData> {\n  children: ReactNode\n  route: string\n  wrapperProps?: CardBodyProps\n  toolbar?: React.ReactNode\n}\n\nexport const NodeWrapper: FC<NodeWrapperProps> = ({\n  selected,\n  children,\n  toolbar,\n  route,\n  wrapperProps,\n  data,\n  type,\n  ...props\n}) => {\n  const { t } = useTranslation('datahub')\n  const { nodes } = useDataHubDraftStore()\n  const [internalSelection, setInternalSelection] = useState(false)\n  const navigate = useNavigate()\n  const { pathname } = useLocation()\n  const headerBackgroundColor = useColorModeValue('blue.200', 'blue.700')\n  const headerPolicyBackgroundColor = useColorModeValue('orange.200', 'orange.700')\n  const headerResourceBackgroundColor = useColorModeValue('pink.200', 'pink.700')\n\n  const CheckIcon = useMemo(() => getDryRunStatusIcon(data.dryRunStatus), [data])\n\n  useEffect(() => {\n    if (!selected) setInternalSelection(false)\n  }, [selected])\n\n  const isSingleSelect = useMemo(() => {\n    const selectedNodes = nodes.filter((node) => node.selected)\n    return selectedNodes.length === 1\n  }, [nodes])\n\n  const onHandleCopy = () => {\n    document.dispatchEvent(new KeyboardEvent('keydown', parseHotkey(DATAHUB_HOTKEY.COPY)))\n  }\n\n  const onHandleDelete = () => {\n    document.dispatchEvent(new KeyboardEvent('keydown', parseHotkey(DATAHUB_HOTKEY.DELETE)))\n  }\n\n  const onHandleEdit = (event: React.BaseSyntheticEvent) => {\n    if (internalSelection) {\n      navigate(route, { state: { origin: pathname } })\n      event.preventDefault()\n      event.stopPropagation()\n    }\n    setInternalSelection(true)\n  }\n\n  const backgroundColor =\n    type === DataHubNodeType.DATA_POLICY || type === DataHubNodeType.BEHAVIOR_POLICY\n      ? headerPolicyBackgroundColor\n      : type === DataHubNodeType.SCHEMA || type === DataHubNodeType.FUNCTION\n        ? headerResourceBackgroundColor\n        : headerBackgroundColor\n\n  const selectedStyle: Partial<BoxProps> = {\n    boxShadow: 'var(--chakra-shadows-outline)',\n  }\n\n  const errorStyle: Pick<BoxProps, 'boxShadow'> = {\n    boxShadow: '0 0 10px 2px rgba(226, 85, 85, 0.75), 0 1px 1px rgb(0 0 0 / 15%)',\n  }\n\n  const successStyle: Pick<BoxProps, 'boxShadow'> = {\n    boxShadow: '0 0 10px 2px rgba(0,121,36, 0.75), 0 1px 1px rgb(0 0 0 / 15%)',\n  }\n\n  const isDryRun = data.dryRunStatus !== undefined && data.dryRunStatus !== PolicyDryRunStatus.IDLE\n\n  return (\n    <>\n      <NodeToolbar isVisible={selected && isSingleSelect} offset={16}>\n        <NodeDatahubToolbar\n          selectedNode={props.id}\n          onCopy={onHandleCopy}\n          onDelete={onHandleDelete}\n          onEdit={onHandleEdit}\n        >\n          {toolbar}\n        </NodeDatahubToolbar>\n      </NodeToolbar>\n\n      <Card\n        variant=\"elevated\"\n        {...(data.dryRunStatus === PolicyDryRunStatus.FAILURE ? { ...errorStyle } : {})}\n        {...(data.dryRunStatus === PolicyDryRunStatus.SUCCESS ? { ...successStyle } : {})}\n        {...(selected ? { ...selectedStyle } : {})}\n        size=\"sm\"\n        onClick={onHandleEdit}\n        w=\"250px\"\n      >\n        {isDryRun && (\n          <Avatar\n            position=\"absolute\"\n            left=\"-1rem\"\n            top=\"-1rem\"\n            size=\"sm\"\n            icon={<CheckIcon fontSize=\"1.2rem\" />}\n            {...(data.dryRunStatus === PolicyDryRunStatus.FAILURE ? { ...errorStyle, background: 'red.500' } : {})}\n            {...(data.dryRunStatus === PolicyDryRunStatus.SUCCESS ? { ...successStyle, background: 'green.500' } : {})}\n          />\n        )}\n        <CardHeader backgroundColor={backgroundColor} as={HStack} height={12}>\n          <NodeIcon type={type} />\n          <Text data-testid=\"node-title\"> {t('workspace.nodes.type', { context: type })}</Text>\n        </CardHeader>\n        <CardBody {...wrapperProps}>{children}</CardBody>\n      </Card>\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\nimport { VStack } from '@chakra-ui/react'\n\nimport { Topic } from '@/components/MQTT/EntityTag.tsx'\n\nimport type { TopicFilterData } from '@datahub/types.ts'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const TopicFilterNode: FC<NodeProps<TopicFilterData>> = (props) => {\n  const { id, data, type } = props\n\n  return (\n    <>\n      <NodeWrapper route={`node/${type}/${id}`} {...props}>\n        <VStack ml={6} alignItems=\"flex-end\">\n          {data.topics?.map((t) => <Topic tagTitle={t} key={t} />)}\n        </VStack>\n      </NodeWrapper>\n      {data.topics?.map((t, index) => (\n        <CustomHandle\n          type=\"source\"\n          isConnectable={1}\n          position={Position.Right}\n          id={`${t}-${index}`}\n          key={`${id}-${t}-${index}`}\n          style={{\n            top: getHandlePosition(index),\n          }}\n        />\n      ))}\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\nimport { VStack } from '@chakra-ui/react'\n\nimport { ClientTag } from '@/components/MQTT/EntityTag.tsx'\n\nimport type { ClientFilterData } from '@datahub/types.ts'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const ClientFilterNode: FC<NodeProps<ClientFilterData>> = (props) => {\n  const { id, data, type } = props\n\n  return (\n    <>\n      <NodeWrapper route={`node/${type}/${id}`} {...props}>\n        <VStack ml={6} data-testid=\"node-model\" alignItems=\"flex-end\">\n          {data.clients?.map((client) => <ClientTag tagTitle={client} key={client} data-testid=\"client-wrapper\" />)}\n        </VStack>\n      </NodeWrapper>\n      {data.clients?.map((client, index) => (\n        <CustomHandle\n          type=\"source\"\n          position={Position.Right}\n          id={`${id}-${index}`}\n          key={`${id}-${client}-${index}`}\n          style={{\n            top: getHandlePosition(index),\n          }}\n        />\n      ))}\n    </>\n  )\n}\n","import type { Node, NodeAddChange, XYPosition } from 'reactflow'\nimport { getIncomers, getOutgoers } from 'reactflow'\n\nimport type { DataPolicy, DataPolicyValidator, PolicyOperation } from '@/api/__generated__'\nimport type { DataPolicyData, DryRunResults, WorkspaceState } from '@datahub/types.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport { getNodeId, isTopicFilterNodeType } from '@datahub/utils/node.utils.ts'\n\n/* istanbul ignore next -- @preserve */\nexport function getSubFlow(source: Node, acc: Node[], store: WorkspaceState, only = false) {\n  const allIds = Array.from(new Set(acc.map((e) => e.id)))\n  const { nodes, edges } = store\n\n  // TODO[NVL] This is wrong: should check it's from the right handles\n  const incomers = getIncomers(source, nodes, edges).filter(\n    (node) =>\n      !allIds.includes(node.id) &&\n      node.type !== DataHubNodeType.DATA_POLICY &&\n      node.type !== DataHubNodeType.BEHAVIOR_POLICY\n  )\n  const outgoers = getOutgoers(source, nodes, edges).filter(\n    (node) =>\n      !allIds.includes(node.id) &&\n      node.type !== DataHubNodeType.DATA_POLICY &&\n      node.type !== DataHubNodeType.BEHAVIOR_POLICY\n  )\n\n  acc.push(...incomers, ...outgoers)\n\n  if (outgoers.length) {\n    outgoers.forEach((node) => {\n      const subFlow = getSubFlow(node, acc, store)\n      acc = Array.from(new Set([...acc, ...subFlow]))\n    })\n  }\n\n  if (incomers.length && !only) {\n    incomers.forEach((node) => {\n      const subFlow = getSubFlow(node, acc, store)\n      acc = Array.from(new Set([...acc, ...subFlow]))\n    })\n  }\n\n  return acc\n}\n\nexport function checkValidityFilter(\n  dataPolicyNode: Node<DataPolicyData>,\n  store: WorkspaceState\n): DryRunResults<string> {\n  const { nodes, edges } = store\n\n  const incomers = getIncomers(dataPolicyNode, nodes, edges).filter(isTopicFilterNodeType)\n\n  if (!incomers.length) {\n    return {\n      node: dataPolicyNode,\n      error: PolicyCheckErrors.notConnected(DataHubNodeType.TOPIC_FILTER, dataPolicyNode),\n    }\n  }\n\n  // TODO[19240] Do we create multiple identical policies based on different topics\n  if (incomers.length > 1) {\n    return {\n      node: incomers[0],\n      error: PolicyCheckErrors.cardinality(DataHubNodeType.TOPIC_FILTER, dataPolicyNode),\n    }\n  }\n\n  return {\n    node: incomers[0],\n    // TODO[19240] Multiple topics?\n    data: incomers[0].data.topics[0],\n  }\n}\n\n// TODO[NVL] Need to find a better way of testing this one\n/* istanbul ignore next -- @preserve */\nexport const checkValidityDataPolicy = (\n  dataPolicyNode: Node<DataPolicyData>,\n  filter: DryRunResults<string>,\n  validators: DryRunResults<DataPolicyValidator>[],\n  onSuccessPipeline: DryRunResults<PolicyOperation>[],\n  onErrorPipeline: DryRunResults<PolicyOperation>[],\n  allResources: DryRunResults<unknown>[]\n): DryRunResults<DataPolicy, unknown> => {\n  return {\n    node: dataPolicyNode,\n    data: {\n      id: dataPolicyNode.data.id,\n      matching: { topicFilter: filter.data as string },\n      validation: validators.length\n        ? {\n            validators: validators.map((validatorResults) => ({\n              ...(validatorResults.data as DataPolicyValidator),\n            })),\n          }\n        : undefined,\n      onFailure: onErrorPipeline.length\n        ? {\n            pipeline: onErrorPipeline.map((policyOperationResults) => ({\n              ...(policyOperationResults.data as PolicyOperation),\n            })),\n          }\n        : undefined,\n      onSuccess: onSuccessPipeline.length\n        ? {\n            pipeline: onSuccessPipeline.map((policyOperationResults) => ({\n              ...(policyOperationResults.data as PolicyOperation),\n            })),\n          }\n        : undefined,\n    },\n    resources: allResources,\n  }\n}\n\nexport const loadDataPolicy = (policy: DataPolicy): NodeAddChange => {\n  const position: XYPosition = {\n    x: 0,\n    y: 0,\n  }\n\n  const dataPolicyNode: Node<DataPolicyData> = {\n    id: getNodeId(),\n    type: DataHubNodeType.DATA_POLICY,\n    position,\n    data: { id: policy.id },\n  }\n\n  return { item: dataPolicyNode, type: 'add' }\n}\n","import type { Connection, Node, NodeAddChange, XYPosition } from 'reactflow'\nimport { getIncomers } from 'reactflow'\n\nimport type { DataPolicy, PolicySchema, SchemaReference } from '@/api/__generated__'\nimport { DataPolicyValidator } from '@/api/__generated__'\nimport { enumFromStringValue } from '@/utils/types.utils.ts'\n\nimport i18n from '@/config/i18n.config.ts'\n\nimport type { DryRunResults, SchemaArguments, ValidatorData, WorkspaceState } from '@datahub/types.ts'\nimport { DataHubNodeType, DataPolicyData, ResourceWorkingVersion } from '@datahub/types.ts'\nimport { checkValiditySchema, loadSchema } from '@datahub/designer/schema/SchemaNode.utils.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport { getNodeId, isSchemaNodeType, isValidatorNodeType } from '@datahub/utils/node.utils.ts'\nimport { CANVAS_POSITION } from '@datahub/designer/checks.utils.ts'\n\nexport function checkValidityPolicyValidator(\n  validator: Node<ValidatorData>,\n  store: WorkspaceState\n): DryRunResults<DataPolicyValidator, PolicySchema> {\n  const { nodes, edges } = store\n\n  const schemas = getIncomers(validator, nodes, edges).filter(isSchemaNodeType)\n\n  if (!schemas.length) {\n    return {\n      node: validator,\n      error: PolicyCheckErrors.notConnected(DataHubNodeType.SCHEMA, validator),\n    }\n  }\n\n  const schemaNodes = schemas.map((e) => checkValiditySchema(e))\n  const operation: DataPolicyValidator = {\n    type: validator.data.type,\n    // TODO[NVL] Arguments is not typed on the backend!\n    arguments: {\n      schemas: schemas.map<SchemaReference>((schema) => {\n        const version =\n          schema.data.version === ResourceWorkingVersion.DRAFT ||\n          schema.data.version === ResourceWorkingVersion.MODIFIED\n            ? 'latest'\n            : schema.data.version.toString()\n        return { schemaId: schema.data.name, version }\n      }),\n      strategy: validator.data.strategy,\n    } as SchemaArguments,\n  }\n  return { data: operation, node: validator, resources: [...schemaNodes] }\n}\n\nexport function checkValidityPolicyValidators(\n  dataPolicyNode: Node<DataPolicyData>,\n  store: WorkspaceState\n): DryRunResults<DataPolicyValidator>[] {\n  const { nodes, edges } = store\n\n  const incomers = getIncomers(dataPolicyNode, nodes, edges).filter(isValidatorNodeType)\n\n  return incomers.map((validator) => checkValidityPolicyValidator(validator, store))\n}\n\nexport const loadValidators = (policy: DataPolicy, schemas: PolicySchema[], dataPolicyNode: Node<DataPolicyData>) => {\n  const position: XYPosition = {\n    x: dataPolicyNode.position.x + CANVAS_POSITION.Validator.x,\n    y: dataPolicyNode.position.y + CANVAS_POSITION.Validator.y,\n  }\n\n  const newNodes: (NodeAddChange | Connection)[] = []\n  for (const validator of policy.validation?.validators || []) {\n    const validatorArguments = validator.arguments as SchemaArguments\n\n    const type = enumFromStringValue(DataPolicyValidator.type, validator.type.toUpperCase())\n    if (!type)\n      throw new Error(\n        i18n.t('datahub:error.loading.connection.notFound', { type: DataHubNodeType.VALIDATOR }) as string\n      )\n\n    const validatorNode: Node<ValidatorData> = {\n      id: getNodeId(),\n      type: DataHubNodeType.VALIDATOR,\n      position,\n      data: {\n        strategy: validatorArguments.strategy,\n        type,\n        schemas: validatorArguments.schemas,\n      },\n    }\n\n    newNodes.push({ item: validatorNode, type: 'add' })\n    newNodes.push({\n      source: validatorNode.id,\n      target: dataPolicyNode.id,\n      sourceHandle: null,\n      targetHandle: DataPolicyData.Handle.VALIDATION,\n    })\n\n    let nb = 0\n    for (const schemaRef of validatorArguments.schemas) {\n      const schemaNodes = loadSchema(validatorNode, null, nb++, schemaRef, schemas)\n      newNodes.push(...schemaNodes)\n    }\n  }\n\n  return newNodes\n}\n","import type { Connection, Node, NodeAddChange, XYPosition } from 'reactflow'\nimport { getIncomers } from 'reactflow'\n\nimport { getNodeId, isClientFilterNodeType } from '@datahub/utils/node.utils.ts'\nimport type { BehaviorPolicy } from '@/api/__generated__'\n\nimport type { BehaviorPolicyData, ClientFilterData, DryRunResults, WorkspaceState } from '@datahub/types.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport { CANVAS_POSITION } from '@datahub/designer/checks.utils.ts'\n\nexport function checkValidityClients(\n  dataPolicyNode: Node<BehaviorPolicyData>,\n  store: WorkspaceState\n): DryRunResults<string> {\n  const { nodes, edges } = store\n\n  const clients = getIncomers(dataPolicyNode, nodes, edges).filter(isClientFilterNodeType)\n\n  if (!clients.length) {\n    return {\n      node: dataPolicyNode,\n      error: PolicyCheckErrors.notConnected(DataHubNodeType.CLIENT_FILTER, dataPolicyNode),\n    }\n  }\n\n  // TODO[19240] Do we create multiple identical policies based on different topics\n  if (clients.length > 1) {\n    return {\n      error: PolicyCheckErrors.cardinality(DataHubNodeType.CLIENT_FILTER, dataPolicyNode),\n      node: clients[0],\n    }\n  }\n\n  return {\n    node: clients[0],\n    // TODO[19240] Multiple clients?\n    data: clients[0].data.clients[0],\n  }\n}\n\nexport const loadClientFilter = (\n  behaviorPolicy: BehaviorPolicy,\n  behaviorPolicyNode: Node<BehaviorPolicyData>\n): (NodeAddChange | Connection)[] => {\n  const position: XYPosition = {\n    x: behaviorPolicyNode.position.x + CANVAS_POSITION.Client.x,\n    y: behaviorPolicyNode.position.y + CANVAS_POSITION.Client.y,\n  }\n\n  const topicNode: Node<ClientFilterData> = {\n    id: getNodeId(),\n    type: DataHubNodeType.CLIENT_FILTER,\n    position,\n    data: {\n      clients: [behaviorPolicy.matching.clientIdRegex],\n    },\n  }\n\n  return [\n    { item: topicNode, type: 'add' },\n    { source: topicNode.id, target: behaviorPolicyNode.id, sourceHandle: null, targetHandle: null },\n  ]\n}\n","import type { Node, NodeAddChange, XYPosition } from 'reactflow'\n\nimport type { BehaviorPolicy, BehaviorPolicyBehavior, BehaviorPolicyOnTransition } from '@/api/__generated__'\nimport { enumFromStringValue } from '@/utils/types.utils.ts'\nimport i18n from '@/config/i18n.config.ts'\n\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport type { BehaviorPolicyData, DryRunResults } from '@datahub/types.ts'\nimport { BehaviorPolicyType, DataHubNodeType } from '@datahub/types.ts'\nimport { getNodeId } from '@datahub/utils/node.utils.ts'\n\nexport function checkValidityModel(behaviorPolicy: Node<BehaviorPolicyData>): DryRunResults<BehaviorPolicyBehavior> {\n  if (!behaviorPolicy.data.model) {\n    return {\n      node: behaviorPolicy,\n      error: PolicyCheckErrors.notConfigured(behaviorPolicy, 'model'),\n    }\n  }\n  return {\n    node: behaviorPolicy,\n    data: {\n      arguments: behaviorPolicy.data.arguments,\n      id: behaviorPolicy.data.model,\n    },\n  }\n}\n\n// TODO[NVL] Need to find a better way of testing this one\n/* istanbul ignore next -- @preserve */\nexport function checkValidityBehaviorPolicy(\n  behaviourPolicyNode: Node<BehaviorPolicyData>,\n  client: DryRunResults<string, never>,\n  model: DryRunResults<BehaviorPolicyBehavior, never>,\n  transitions: DryRunResults<BehaviorPolicyOnTransition, never>[]\n): DryRunResults<BehaviorPolicy, unknown> {\n  return {\n    node: behaviourPolicyNode,\n    data: {\n      behavior: model.data as BehaviorPolicyBehavior,\n      id: behaviourPolicyNode.data.id,\n      matching: { clientIdRegex: client.data as string },\n      onTransitions: transitions.length\n        ? transitions.map((transition) => {\n            return transition.data as BehaviorPolicyOnTransition\n          })\n        : undefined,\n    },\n  }\n}\n\nexport const loadBehaviorPolicy = (behaviorPolicy: BehaviorPolicy): NodeAddChange => {\n  const model = enumFromStringValue(BehaviorPolicyType, behaviorPolicy.behavior.id)\n  if (!model)\n    throw new Error(\n      i18n.t('datahub:error.loading.connection.notFound', { type: DataHubNodeType.BEHAVIOR_POLICY }) as string\n    )\n\n  const position: XYPosition = {\n    x: 0,\n    y: 0,\n  }\n\n  const behaviorPolicyNode: Node<BehaviorPolicyData> = {\n    id: getNodeId(),\n    type: DataHubNodeType.BEHAVIOR_POLICY,\n    position,\n    data: {\n      id: behaviorPolicy.id,\n      model: model,\n      arguments: behaviorPolicy.behavior.arguments,\n    },\n  }\n\n  return { item: behaviorPolicyNode, type: 'add' }\n}\n","import type { Connection, Node, NodeAddChange, XYPosition } from 'reactflow'\n\nimport type { PolicyOperation } from '@/api/__generated__'\nimport { Script } from '@/api/__generated__'\nimport i18n from '@/config/i18n.config.ts'\n\nimport type { DataHubNodeData, DryRunResults, FunctionData } from '@datahub/types.ts'\nimport { DataHubNodeType, OperationData } from '@datahub/types.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport { CANVAS_POSITION } from '@datahub/designer/checks.utils.ts'\nimport {\n  SCRIPT_FUNCTION_LATEST,\n  SCRIPT_FUNCTION_PREFIX,\n  SCRIPT_FUNCTION_SEPARATOR,\n} from '@datahub/utils/datahub.utils.ts'\n\nexport const formatScriptName = (functionNode: Node<FunctionData>): string => {\n  return `${SCRIPT_FUNCTION_PREFIX}:${functionNode.data.name}:${SCRIPT_FUNCTION_LATEST}`\n}\n\nexport const parseScriptName = (operation: PolicyOperation): string => {\n  const splitId = operation.functionId.split(SCRIPT_FUNCTION_SEPARATOR)\n  if (splitId.length !== 3) return splitId[0]\n  return splitId[1]\n}\n\nexport function checkValidityJSScript(scriptNode: Node<FunctionData>): DryRunResults<Script> {\n  if (!scriptNode.data.name || !scriptNode.data.version || !scriptNode.data.sourceCode) {\n    return {\n      node: scriptNode,\n      error: PolicyCheckErrors.notConfigured(scriptNode, 'name, version, sourceCode'),\n    }\n  }\n\n  const script: Script = {\n    // TODO[19466] Id should be user-facing; Need to fix before merging!\n    id: scriptNode.data.name,\n    functionType: Script.functionType.TRANSFORMATION,\n    source: btoa(scriptNode.data.sourceCode),\n    // version is generated by the backend\n  }\n  return { data: script, node: scriptNode }\n}\n\nexport const loadScripts = (\n  parentNode: Node<DataHubNodeData>,\n  positionInGroup: number,\n  functions: PolicyOperation[],\n  scripts: Script[]\n) => {\n  const position: XYPosition = {\n    x: parentNode.position.x + CANVAS_POSITION.Function.x,\n    y: parentNode.position.y,\n  }\n\n  const shiftLeft = () => {\n    position.y += positionInGroup * CANVAS_POSITION.Function.y\n    return position\n  }\n\n  const newNodes: (NodeAddChange | Connection)[] = []\n  for (const fct of functions) {\n    const [, functionName] = fct.functionId.split(':')\n    const functionScript = scripts.find((script) => script.id === functionName)\n    if (!functionScript)\n      throw new Error(i18n.t('datahub:error.loading.connection.notFound', { type: DataHubNodeType.FUNCTION }) as string)\n\n    const functionScriptNode: Node<FunctionData> = {\n      id: functionScript.id,\n      type: DataHubNodeType.FUNCTION,\n      position: { ...shiftLeft() },\n      data: {\n        type: 'Javascript',\n        name: functionScript.id,\n        version: Number(functionScript.version),\n        sourceCode: atob(functionScript.source),\n      },\n    }\n\n    newNodes.push(\n      { item: functionScriptNode, type: 'add' },\n      {\n        source: functionScriptNode.id,\n        target: parentNode.id,\n        sourceHandle: null,\n        targetHandle: OperationData.Handle.FUNCTION,\n      }\n    )\n  }\n  return newNodes\n}\n","import type { Connection, Node, NodeAddChange, XYPosition } from 'reactflow'\nimport { getConnectedEdges, getIncomers } from 'reactflow'\n\nimport i18n from '@/config/i18n.config.ts'\n\nimport type {\n  BehaviorPolicyOnTransition,\n  DataPolicy,\n  PolicyOperation,\n  PolicySchema,\n  SchemaReference,\n  Script,\n} from '@/api/__generated__'\nimport type {\n  DryRunResults,\n  FunctionData,\n  PolicyOperationArguments,\n  TransitionData,\n  WorkspaceState,\n} from '@datahub/types.ts'\nimport { DataHubNodeType, DataPolicyData, OperationData, ResourceWorkingVersion } from '@datahub/types.ts'\nimport {\n  checkValidityJSScript,\n  formatScriptName,\n  loadScripts,\n  parseScriptName,\n} from '@datahub/designer/script/FunctionNode.utils.ts'\nimport { checkValiditySchema, loadSchema } from '@datahub/designer/schema/SchemaNode.utils.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport { getNodeId, isFunctionNodeType, isSchemaNodeType } from '@datahub/utils/node.utils.ts'\nimport { getActiveTransition } from '@datahub/designer/transition/TransitionNode.utils.ts'\nimport { CANVAS_POSITION } from '@datahub/designer/checks.utils.ts'\n\nexport function checkValidityTransformFunction(\n  operationNode: Node<OperationData>,\n  store: WorkspaceState\n): DryRunResults<PolicyOperation, Script | PolicySchema>[] {\n  const { nodes, edges } = store\n\n  if (!operationNode.data.functionId || !operationNode.data.formData) {\n    return [\n      {\n        node: operationNode,\n        error: PolicyCheckErrors.notConfigured(operationNode, 'functionId, formData'),\n      },\n    ]\n  }\n\n  ///////// Check the function handle\n  const functions = getIncomers(operationNode, nodes, edges).filter(isFunctionNodeType)\n  if (!functions.length) {\n    return [\n      {\n        node: operationNode,\n        error: PolicyCheckErrors.notConnected(DataHubNodeType.FUNCTION, operationNode),\n      },\n    ]\n  }\n\n  ///////// Check the serializers\n  const serialisers = getIncomers(operationNode, nodes, edges).filter(isSchemaNodeType)\n  const connectedEdges = getConnectedEdges([...serialisers], edges).filter(\n    (edge) =>\n      edge.targetHandle === OperationData.Handle.SERIALISER || edge.targetHandle === OperationData.Handle.DESERIALISER\n  )\n  const [serial, ...restSerial] = connectedEdges.filter((edge) => edge.targetHandle === OperationData.Handle.SERIALISER)\n  const [deserial, ...restDeserial] = connectedEdges.filter(\n    (edge) => edge.targetHandle === OperationData.Handle.DESERIALISER\n  )\n\n  if (serial === undefined || restSerial.length !== 0) {\n    return [\n      {\n        node: operationNode,\n        error: PolicyCheckErrors.notConnected(DataHubNodeType.SCHEMA, operationNode, OperationData.Handle.SERIALISER),\n      },\n    ]\n  }\n\n  if (deserial === undefined || restDeserial.length !== 0) {\n    return [\n      {\n        node: operationNode,\n        error: PolicyCheckErrors.notConnected(DataHubNodeType.SCHEMA, operationNode, OperationData.Handle.DESERIALISER),\n      },\n    ]\n  }\n\n  ///////// Check the resources\n  const scriptNodes = functions.map((node) => checkValidityJSScript(node))\n  const schemaNodes = serialisers.map((node) => checkValiditySchema(node))\n\n  if (!scriptNodes.length) {\n    return [\n      {\n        node: operationNode,\n        error: PolicyCheckErrors.notConfigured(operationNode, 'script name'),\n      },\n    ]\n  }\n\n  const { transform } = operationNode.data.formData as unknown as OperationData.DataHubTransformType\n  const defaultOrder = transform.length ? transform : scriptNodes.map((scriptNode) => scriptNode.data?.id)\n\n  const allTransformScripts: DryRunResults<PolicyOperation, Script>[] = []\n  for (const scriptId of defaultOrder) {\n    const script = scriptNodes.find((scriptNode) => scriptNode.data?.id === scriptId)\n    if (script) {\n      const scriptName = script.node as Node<FunctionData>\n\n      const operation: PolicyOperation = {\n        functionId: formatScriptName(scriptName),\n        arguments: {},\n        // TODO[19466] Id should be user-facing; Need to fix before merging!\n        id: scriptName.id,\n      }\n      allTransformScripts.push({ data: operation, node: operationNode })\n    }\n  }\n\n  const sourceDeserial = serialisers.find((node) => node.id === deserial.source)\n  if (!sourceDeserial) {\n    return [\n      {\n        node: operationNode,\n        error: PolicyCheckErrors.notConnected(DataHubNodeType.SCHEMA, operationNode, OperationData.Handle.DESERIALISER),\n      },\n    ]\n  }\n  const deserializer: PolicyOperation = {\n    functionId: OperationData.Function.SERDES_DESERIALIZE,\n    arguments: {\n      schemaId: sourceDeserial.data.name,\n      schemaVersion:\n        sourceDeserial.data.version === ResourceWorkingVersion.DRAFT ||\n        sourceDeserial.data.version === ResourceWorkingVersion.MODIFIED\n          ? 'latest'\n          : sourceDeserial.data.version.toString(),\n    } as PolicyOperationArguments,\n    id: `${operationNode.id}-deserializer`,\n  }\n\n  const sourceSerial = serialisers.find((node) => node.id === serial.source)\n  if (!sourceSerial) {\n    return [\n      {\n        node: operationNode,\n        error: PolicyCheckErrors.notConnected(DataHubNodeType.SCHEMA, operationNode, OperationData.Handle.SERIALISER),\n      },\n    ]\n  }\n\n  const serializer: PolicyOperation = {\n    functionId: OperationData.Function.SERDES_SERIALIZE,\n    arguments: {\n      schemaId: sourceSerial.data.name,\n      schemaVersion:\n        sourceSerial.data.version === ResourceWorkingVersion.DRAFT ||\n        sourceSerial.data.version === ResourceWorkingVersion.MODIFIED\n          ? 'latest'\n          : sourceSerial.data.version.toString(),\n    } as PolicyOperationArguments,\n    id: `${operationNode.id}-serializer`,\n  }\n\n  // The resources are added tp the last item for convenience\n  return [\n    { data: deserializer, node: operationNode },\n    ...allTransformScripts,\n    { data: serializer, node: operationNode, resources: [...scriptNodes, ...schemaNodes] },\n  ]\n}\n\nexport const processOperations =\n  (store: WorkspaceState) => (acc: DryRunResults<PolicyOperation, never>[], node: Node) => {\n    if (!node.data.functionId) {\n      acc.push({\n        node: node,\n        error: PolicyCheckErrors.notConfigured(node, 'functionId'),\n      })\n    } else if (node.data.functionId === 'DataHub.transform') {\n      const transformResults = checkValidityTransformFunction(node, store)\n      acc.push(...transformResults)\n    } else {\n      const operation: PolicyOperation = {\n        functionId: node.data.functionId,\n        arguments: node.data.formData || {},\n        // TODO[19466] Id should be user-facing; Need to fix before merging!\n        id: node.data.id,\n      }\n      acc.push({ node: node, data: operation })\n    }\n    return acc\n  }\n\nexport function checkValidityPipeline(\n  source: Node<DataPolicyData> | Node<TransitionData>,\n  handle: DataPolicyData.Handle | TransitionData.Handle,\n  store: WorkspaceState\n): DryRunResults<PolicyOperation>[] {\n  const { nodes, edges } = store\n\n  /* istanbul ignore next -- @preserve */\n  const getNextNode = (node: Node | undefined): Node | undefined => {\n    if (node) {\n      const outEdge = edges.find((edge) => edge.source === node.id)\n      if (outEdge) {\n        const nextNode = nodes.find((node) => node.id === outEdge.target)\n        if (nextNode) return nextNode\n      }\n    }\n    return undefined\n  }\n\n  const [outboundEdge] = edges.filter((edge) => edge.source === source.id && edge.sourceHandle === handle)\n  if (!outboundEdge) {\n    return []\n  }\n\n  const pipeline: Node[] = []\n  let nextNode = nodes.find((node) => node.id === outboundEdge.target)\n  while (nextNode) {\n    pipeline.push(nextNode)\n    nextNode = getNextNode(nextNode)\n  }\n\n  return pipeline.reduce<DryRunResults<PolicyOperation>[]>(processOperations(store), [])\n}\n\nexport const loadBehaviorPolicyPipelines = (\n  behaviorPolicyTransition: BehaviorPolicyOnTransition,\n  transitionNode: Node<TransitionData>,\n  schemas: PolicySchema[],\n  scripts: Script[]\n) => {\n  const activeTransition = getActiveTransition(behaviorPolicyTransition)\n  if (!activeTransition)\n    throw new Error(i18n.t('datahub:error.loading.operation.noTransition', { source: activeTransition }) as string)\n\n  const transitionOnEvent = behaviorPolicyTransition[activeTransition]\n  if (!transitionOnEvent)\n    throw new Error(i18n.t('datahub:error.loading.operation.noTransition', { source: activeTransition }) as string)\n\n  return loadPipeline(transitionNode, transitionOnEvent.pipeline, null, schemas, scripts)\n}\n\nexport const loadDataPolicyPipelines = (\n  policy: DataPolicy,\n  schemas: PolicySchema[],\n  scripts: Script[],\n  dataPolicyNode: Node<DataPolicyData>\n) => {\n  const newNodes: (NodeAddChange | Connection)[] = []\n\n  if (policy.onSuccess && policy.onSuccess.pipeline) {\n    const res = loadPipeline(\n      dataPolicyNode,\n      policy.onSuccess.pipeline,\n      DataPolicyData.Handle.ON_SUCCESS,\n      schemas,\n      scripts\n    )\n    newNodes.push(...res)\n  }\n  if (policy.onFailure && policy.onFailure.pipeline) {\n    const res = loadPipeline(\n      dataPolicyNode,\n      policy.onFailure.pipeline,\n      DataPolicyData.Handle.ON_ERROR,\n      schemas,\n      scripts\n    )\n    newNodes.push(...res)\n  }\n\n  return newNodes\n}\n\nexport const loadPipeline = (\n  parentNode: Node,\n  pipeline: Array<PolicyOperation>,\n  handle: DataPolicyData.Handle | null,\n  schemas: PolicySchema[],\n  scripts: Script[]\n) => {\n  if (!parentNode)\n    throw new Error(i18n.t('datahub:error.loading.schema.unknown', { type: DataHubNodeType.DATA_POLICY }) as string)\n\n  const delta =\n    handle === DataPolicyData.Handle.ON_ERROR ? CANVAS_POSITION.OperationError : CANVAS_POSITION.OperationSuccess\n  const position: XYPosition = {\n    x: parentNode.position.x,\n    y: parentNode.position.y + delta.y,\n  }\n\n  const shiftPositionRight = () => {\n    position.x += delta.x\n    return position\n  }\n\n  const newNodes: (NodeAddChange | Connection)[] = []\n\n  let connect: Connection = {\n    source: parentNode.id,\n    target: null,\n    sourceHandle: handle,\n    targetHandle: null,\n  }\n  let operationNode: Node<OperationData> | undefined | PolicyOperation[] = undefined\n  for (const policyOperation of pipeline) {\n    switch (true) {\n      case OperationData.Function.SERDES_DESERIALIZE === policyOperation.functionId:\n        if (operationNode) throw new Error(i18n.t('datahub:error.loading.operation.unknown') as string)\n        operationNode = [policyOperation]\n        break\n      case policyOperation.functionId.startsWith('fn:'):\n        if (!Array.isArray(operationNode)) throw new Error(i18n.t('datahub:error.loading.operation.unknown') as string)\n        operationNode?.push(policyOperation)\n        break\n      case OperationData.Function.SERDES_SERIALIZE === policyOperation.functionId:\n        {\n          if (!Array.isArray(operationNode))\n            throw new Error(i18n.t('datahub:error.loading.operation.unknown') as string)\n          const [deserializer, ...functions] = operationNode as PolicyOperation[]\n\n          operationNode = {\n            id: getNodeId(),\n            type: DataHubNodeType.OPERATION,\n            position: { ...shiftPositionRight() },\n            data: {\n              id: policyOperation.id,\n              functionId: OperationData.Function.DATAHUB_TRANSFORM,\n              metadata: {\n                isTerminal: false,\n                hasArguments: true,\n              },\n              formData: { transform: functions.map((operation) => parseScriptName(operation)) },\n            },\n          }\n\n          const nbItems = functions.length + 2\n\n          const deserialisers = loadSchema(\n            operationNode,\n            OperationData.Handle.DESERIALISER,\n            1,\n            deserializer.arguments as SchemaReference,\n            schemas\n          )\n          const serialisers = loadSchema(\n            operationNode,\n            OperationData.Handle.SERIALISER,\n            nbItems,\n            policyOperation.arguments as SchemaReference,\n            schemas\n          )\n\n          const allScripts = loadScripts(operationNode, 2, functions, scripts)\n          newNodes.push(...deserialisers)\n          newNodes.push(...serialisers)\n          newNodes.push(...allScripts)\n        }\n        break\n      default:\n        if (operationNode) throw new Error(i18n.t('datahub:error.loading.operation.unknown') as string)\n        operationNode = {\n          id: getNodeId(),\n          type: DataHubNodeType.OPERATION,\n          position: { ...shiftPositionRight() },\n          data: {\n            id: policyOperation.id,\n            functionId: policyOperation.functionId,\n            formData: policyOperation.arguments,\n          },\n        }\n    }\n\n    if (!operationNode) throw new Error(i18n.t('datahub:error.loading.operation.unknown') as string)\n    if (!Array.isArray(operationNode)) {\n      newNodes.push({ item: operationNode, type: 'add' }, { ...connect, target: operationNode.id })\n      connect = {\n        source: operationNode.id,\n        target: null,\n        sourceHandle: null,\n        targetHandle: null,\n      }\n      operationNode = undefined\n    }\n  }\n\n  return newNodes\n}\n","import type { Connection, Node, NodeAddChange, XYPosition } from 'reactflow'\nimport { getOutgoers } from 'reactflow'\n\nimport type {\n  BehaviorPolicy,\n  BehaviorPolicyOnEvent,\n  BehaviorPolicyOnTransition,\n  PolicyOperation,\n  PolicySchema,\n  Script,\n} from '@/api/__generated__'\nimport i18n from '@/config/i18n.config.ts'\nimport { enumFromStringValue } from '@/utils/types.utils.ts'\n\nimport type { BehaviorPolicyData, DryRunResults, FiniteStateMachineSchema, WorkspaceState } from '@datahub/types.ts'\nimport { BehaviorPolicyType, DataHubNodeType, StateType, TransitionData, TransitionType } from '@datahub/types.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\nimport { checkValidityPipeline, loadBehaviorPolicyPipelines } from '@datahub/designer/operation/OperationNode.utils.ts'\nimport { CANVAS_POSITION } from '@datahub/designer/checks.utils.ts'\nimport { MOCK_BEHAVIOR_POLICY_SCHEMA } from '@datahub/designer/behavior_policy/BehaviorPolicySchema.ts'\nimport { getNodeId, isTransitionNodeType } from '@datahub/utils/node.utils.ts'\n\nexport function checkValidityTransitions(\n  behaviorPolicyData: Node<BehaviorPolicyData>,\n  store: WorkspaceState\n): {\n  behaviorPolicyTransitions: DryRunResults<BehaviorPolicyOnTransition>[]\n  pipelines?: DryRunResults<PolicyOperation>[]\n} {\n  const { nodes, edges } = store\n\n  const transitions = getOutgoers(behaviorPolicyData, nodes, edges).filter(isTransitionNodeType)\n\n  if (!transitions.length) {\n    return {\n      behaviorPolicyTransitions: [\n        {\n          node: behaviorPolicyData,\n          error: PolicyCheckErrors.notConnected(DataHubNodeType.TRANSITION, behaviorPolicyData),\n        },\n      ],\n    }\n  }\n\n  const pipelines: DryRunResults<PolicyOperation>[] = []\n\n  const behaviorPolicyTransitions = transitions.map<DryRunResults<BehaviorPolicyOnTransition>>((transition) => {\n    if (!transition.data.event || !transition.data.from || !transition.data.to) {\n      return {\n        node: transition,\n        error: PolicyCheckErrors.notConfigured(transition, 'event, from, to'),\n      }\n    }\n\n    const pipeline = checkValidityPipeline(transition, TransitionData.Handle.OPERATION, store)\n    pipelines.push(...pipeline)\n\n    // TODO[19240] Making an assumption: we can incorporate the \"correct\" parts of the pipeline\n    const validPipeline = pipeline.filter((operation) => !!operation.data)\n    const policyEvents: BehaviorPolicyOnEvent = {\n      pipeline: validPipeline.map((operation) => operation.data as PolicyOperation),\n    }\n\n    return {\n      node: transition,\n      data: {\n        fromState: transition.data.from,\n        toState: transition.data.to,\n        [transition.data.event]: policyEvents,\n      },\n    }\n  })\n\n  return { behaviorPolicyTransitions, pipelines }\n}\n\nexport const getActiveTransition = (transition: BehaviorPolicyOnTransition) => {\n  if (transition['Event.OnAny']) return 'Event.OnAny'\n  if (transition['Connection.OnDisconnect']) return 'Connection.OnDisconnect'\n  if (transition['Mqtt.OnInboundConnect']) return 'Mqtt.OnInboundConnect'\n  if (transition['Mqtt.OnInboundDisconnect']) return 'Mqtt.OnInboundDisconnect'\n  if (transition['Mqtt.OnInboundPublish']) return 'Mqtt.OnInboundPublish'\n  if (transition['Mqtt.OnInboundSubscribe']) return 'Mqtt.OnInboundSubscribe'\n  // TODO[DATAHUB] is an unknown or undefined transition allowed?\n  return undefined\n}\n\nexport const extractEventStates = (\n  model: BehaviorPolicyType,\n  behaviorPolicyTransition: BehaviorPolicyOnTransition\n): TransitionData => {\n  const definition = MOCK_BEHAVIOR_POLICY_SCHEMA.schema.definitions?.[model]\n  const { metadata } = definition as FiniteStateMachineSchema\n  const { states } = metadata\n\n  const to = enumFromStringValue(StateType, behaviorPolicyTransition.toState)\n  const endState = states.find((state) => state.name === to)\n\n  return {\n    model: model,\n    event: enumFromStringValue(TransitionType, getActiveTransition(behaviorPolicyTransition) || ''),\n    from: enumFromStringValue(StateType, behaviorPolicyTransition.fromState),\n    to,\n    type: endState?.type,\n  }\n}\n\nexport const loadTransitions = (\n  behaviorPolicy: BehaviorPolicy,\n  schemas: PolicySchema[],\n  scripts: Script[],\n  behaviorPolicyNode: Node<BehaviorPolicyData>\n) => {\n  const model = enumFromStringValue(BehaviorPolicyType, behaviorPolicy.behavior.id)\n  if (!model) throw new Error(i18n.t('datahub:error.loading.behavior.noModel') as string)\n\n  const delta = ((Math.max(behaviorPolicy.onTransitions?.length || 0, 1) - 1) * CANVAS_POSITION.Transition.y) / 2\n  const position: XYPosition = {\n    x: behaviorPolicyNode.position.x + CANVAS_POSITION.Transition.x,\n    y: behaviorPolicyNode.position.y - CANVAS_POSITION.Transition.y - delta,\n  }\n\n  const shiftBottom = () => {\n    position.y += CANVAS_POSITION.Transition.y\n    return position\n  }\n\n  const newNodes: (NodeAddChange | Connection)[] = []\n  for (const behaviorPolicyTransition of behaviorPolicy.onTransitions || []) {\n    const transitionNode: Node<TransitionData> = {\n      id: getNodeId(),\n      type: DataHubNodeType.TRANSITION,\n      position: { ...shiftBottom() },\n      data: extractEventStates(model, behaviorPolicyTransition),\n    }\n    const pipelines = loadBehaviorPolicyPipelines(behaviorPolicyTransition, transitionNode, schemas, scripts)\n\n    newNodes.push(\n      { item: transitionNode, type: 'add' },\n      {\n        source: behaviorPolicyNode.id,\n        target: transitionNode.id,\n        sourceHandle: null,\n        targetHandle: null,\n      },\n      ...pipelines\n    )\n  }\n\n  return newNodes\n}\n","import type { Node } from 'reactflow'\nimport { getIncomers } from 'reactflow'\n\nimport type { PolicySchema, Script } from '@/api/__generated__'\n\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport type { BehaviorPolicyData, DataHubNodeData, DryRunResults } from '@datahub/types.ts'\nimport { DataHubNodeType, DataPolicyData, PolicyDryRunStatus } from '@datahub/types.ts'\nimport {\n  checkValidityConfigurations,\n  isClientFilterNodeType,\n  isTopicFilterNodeType,\n} from '@datahub/utils/node.utils.ts'\nimport { DRYRUN_VALIDATION_DELAY } from '@datahub/utils/datahub.utils.ts'\nimport {\n  checkValidityDataPolicy,\n  checkValidityFilter,\n  getSubFlow,\n} from '@datahub/designer/data_policy/DataPolicyNode.utils.ts'\nimport { checkValidityPolicyValidators } from '@datahub/designer/validator/ValidatorNode.utils.ts'\nimport { checkValidityClients } from '@datahub/designer/client_filter/ClientFilterNode.utils.ts'\nimport {\n  checkValidityBehaviorPolicy,\n  checkValidityModel,\n} from '@datahub/designer/behavior_policy/BehaviorPolicyNode.utils.ts'\nimport { checkValidityTransitions } from '@datahub/designer/transition/TransitionNode.utils.ts'\nimport { checkValidityPipeline } from '@datahub/designer/operation/OperationNode.utils.ts'\n\n/* istanbul ignore next -- @preserve */\nconst mockDelay = (ms = 100) => new Promise((resolve) => setTimeout(resolve, ms))\n\nexport const onlyNonNullResources = (acc: DryRunResults<unknown, never>[], oper: DryRunResults<unknown, never>) => {\n  if (oper.resources) {\n    acc.push(...oper.resources)\n  }\n  return acc\n}\n\nexport const onlyUniqueResources = (acc: DryRunResults<unknown, never>[], item: DryRunResults<unknown, never>) => {\n  const existingResourceIds = acc.map((e) => e.node.id)\n  if (!existingResourceIds.includes(item.node.id)) {\n    acc.push(item)\n  }\n  return acc\n}\n\nexport const usePolicyDryRun = () => {\n  const store = useDataHubDraftStore()\n  const { nodes, edges, onUpdateNodes } = store\n\n  /* istanbul ignore next -- @preserve */\n  const updateNodeStatus = async (results: DryRunResults<unknown>) => {\n    const currentNode = nodes.find((node) => node.id === results.node.id)\n\n    const getStatus = (): PolicyDryRunStatus => {\n      if (results.error) return PolicyDryRunStatus.FAILURE\n      if (currentNode?.data.dryRunStatus === PolicyDryRunStatus.FAILURE) return PolicyDryRunStatus.FAILURE\n      return PolicyDryRunStatus.SUCCESS\n    }\n    onUpdateNodes<DataHubNodeData>(results.node.id, {\n      ...results.node.data,\n      dryRunStatus: getStatus(),\n    })\n    await mockDelay(DRYRUN_VALIDATION_DELAY)\n  }\n\n  /* istanbul ignore next -- @preserve */\n  const runPolicyChecks = async (\n    allNodes: Node<DataHubNodeData>[],\n    processedNodes: DryRunResults<unknown, never>[]\n  ) => {\n    for (const node of allNodes) {\n      onUpdateNodes<DataHubNodeData>(node.id, {\n        ...node.data,\n        dryRunStatus: PolicyDryRunStatus.RUNNING,\n      })\n      await mockDelay(DRYRUN_VALIDATION_DELAY)\n    }\n\n    for (const result of processedNodes) {\n      await updateNodeStatus(result)\n    }\n    return processedNodes\n  }\n\n  const checkDataPolicyAsync = (dataPolicyNode: Node<DataPolicyData>) => {\n    const incomers = getIncomers(dataPolicyNode, nodes, edges).filter(isTopicFilterNodeType)\n    const allNodes = getSubFlow(dataPolicyNode, [dataPolicyNode, ...incomers], store) as Node<DataHubNodeData>[]\n    const reducedStore = { ...store, nodes: allNodes }\n\n    const filter = checkValidityFilter(dataPolicyNode, reducedStore)\n    const validators = checkValidityPolicyValidators(dataPolicyNode, reducedStore)\n    const onSuccessPipeline = checkValidityPipeline(dataPolicyNode, DataPolicyData.Handle.ON_SUCCESS, reducedStore)\n    const onErrorPipeline = checkValidityPipeline(dataPolicyNode, DataPolicyData.Handle.ON_ERROR, reducedStore)\n\n    const successResources = onSuccessPipeline.reduce(onlyNonNullResources, [] as DryRunResults<Script>[])\n    const errorResources = onErrorPipeline.reduce(onlyNonNullResources, [] as DryRunResults<Script>[])\n    const schemaResources = validators.reduce(onlyNonNullResources, [] as DryRunResults<PolicySchema>[])\n    const allResources = [...successResources, ...errorResources, ...schemaResources].reduce(onlyUniqueResources, [])\n\n    const allConfigurations = checkValidityConfigurations(allNodes)\n\n    const processedNodes = [\n      ...allConfigurations,\n      filter,\n      ...validators,\n      ...onSuccessPipeline,\n      ...onErrorPipeline,\n      ...allResources,\n    ]\n    const hasError = processedNodes.some((e) => !!e.error)\n\n    if (!hasError) {\n      const dataPolicy = checkValidityDataPolicy(\n        dataPolicyNode,\n        filter,\n        validators,\n        onSuccessPipeline,\n        onErrorPipeline,\n        allResources\n      )\n      processedNodes.push(dataPolicy)\n    }\n\n    return runPolicyChecks(allNodes, processedNodes)\n  }\n\n  const checkBehaviorPolicyAsync = (behaviourPolicyNode: Node<BehaviorPolicyData>) => {\n    /* istanbul ignore next -- @preserve */\n    const incomers = getIncomers(behaviourPolicyNode, nodes, edges).filter(isClientFilterNodeType)\n    const allNodes = getSubFlow(\n      behaviourPolicyNode,\n      [behaviourPolicyNode, ...incomers],\n      store\n    ) as Node<DataHubNodeData>[]\n    const reducedStore = { ...store, nodes: allNodes }\n\n    const clients = checkValidityClients(behaviourPolicyNode, reducedStore)\n    const model = checkValidityModel(behaviourPolicyNode)\n    const { behaviorPolicyTransitions, pipelines } = checkValidityTransitions(behaviourPolicyNode, reducedStore)\n\n    const pipelineResources = pipelines?.reduce(onlyNonNullResources, [] as DryRunResults<PolicySchema>[])\n\n    const allConfigurations = checkValidityConfigurations(allNodes)\n\n    const processedNodes = [\n      ...allConfigurations,\n      ...allConfigurations,\n      clients,\n      model,\n      ...behaviorPolicyTransitions,\n      ...(pipelines || []),\n      ...(pipelineResources || []),\n    ]\n\n    const hasError = processedNodes.some((e) => !!e.error)\n    if (!hasError) {\n      const behaviorPolicy = checkValidityBehaviorPolicy(behaviourPolicyNode, clients, model, behaviorPolicyTransitions)\n      processedNodes.push(behaviorPolicy)\n    }\n\n    return runPolicyChecks(allNodes, processedNodes)\n  }\n\n  return {\n    checkPolicyAsync: (policy: Node<BehaviorPolicyData> | Node<DataPolicyData>) => {\n      if (policy.type === DataHubNodeType.DATA_POLICY) return checkDataPolicyAsync(policy as Node<DataPolicyData>)\n      if (policy.type === DataHubNodeType.BEHAVIOR_POLICY)\n        return checkBehaviorPolicyAsync(policy as Node<BehaviorPolicyData>)\n      return Promise.reject(new Error(`Policy Type not supported : ${policy.type}`))\n    },\n  }\n}\n","import type { FC } from 'react'\nimport { useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Button, Icon } from '@chakra-ui/react'\n\nimport { usePolicyDryRun } from '@datahub/hooks/usePolicyDryRun.ts'\nimport { usePolicyChecksStore } from '@datahub/hooks/usePolicyChecksStore.ts'\nimport { getDryRunStatusIcon } from '@datahub/utils/node.utils.ts'\nimport { PolicyDryRunStatus } from '@datahub/types.ts'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\n\nexport const ToolbarDryRun: FC = () => {\n  const { t } = useTranslation('datahub')\n  const { checkPolicyAsync } = usePolicyDryRun()\n  const { isPolicyEditable } = usePolicyGuards()\n  const { status, node: selectedNode, initReport, setReport } = usePolicyChecksStore()\n\n  const CheckIcon = useMemo(() => getDryRunStatusIcon(status), [status])\n\n  const handleCheckPolicy = () => {\n    if (!selectedNode) return\n\n    initReport()\n    checkPolicyAsync(selectedNode).then((results): void => {\n      setReport(results)\n    })\n  }\n\n  return (\n    <Button\n      data-testid=\"toolbox-policy-check\"\n      leftIcon={<Icon as={CheckIcon} boxSize=\"24px\" />}\n      isLoading={status === PolicyDryRunStatus.RUNNING}\n      loadingText={t('workspace.dryRun.toolbar.checking')}\n      onClick={handleCheckPolicy}\n      isDisabled={!selectedNode || !isPolicyEditable}\n      data-status={status}\n    >\n      {t('workspace.toolbar.policy.check')}\n    </Button>\n  )\n}\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Icon } from '@chakra-ui/react'\nimport { CloseIcon } from '@chakra-ui/icons'\n\nimport IconButton from '@/components/Chakra/IconButton.tsx'\n\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport { usePolicyChecksStore } from '@datahub/hooks/usePolicyChecksStore.ts'\nimport type { DataHubNodeData } from '@datahub/types.ts'\nimport { PolicyDryRunStatus } from '@datahub/types.ts'\n\nexport const ToolbarClear: FC = () => {\n  const { t } = useTranslation('datahub')\n\n  const { nodes, onUpdateNodes } = useDataHubDraftStore()\n  const { node: selectedNode, setNode, reset, report } = usePolicyChecksStore()\n\n  const handleClearPolicy = () => {\n    reset()\n    setNode(selectedNode)\n    nodes.forEach((node) => {\n      onUpdateNodes<DataHubNodeData>(node.id, {\n        ...node.data,\n        dryRunStatus: PolicyDryRunStatus.IDLE,\n      })\n    })\n  }\n\n  return (\n    <IconButton\n      icon={<Icon as={CloseIcon} boxSize=\"12px\" />}\n      data-testid=\"toolbox-policy-clear\"\n      aria-label={t('workspace.toolbar.policy.clearReport')}\n      onClick={handleClearPolicy}\n      isDisabled={!report}\n    />\n  )\n}\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Button, Icon } from '@chakra-ui/react'\nimport { RiPassportLine } from 'react-icons/ri'\n\nimport { usePolicyChecksStore } from '@datahub/hooks/usePolicyChecksStore.ts'\n\nexport const ToolbarShowReport: FC = () => {\n  const { t } = useTranslation('datahub')\n  const { report } = usePolicyChecksStore()\n  const navigate = useNavigate()\n  const { pathname } = useLocation()\n\n  return (\n    <Button\n      leftIcon={<Icon as={RiPassportLine} boxSize=\"24px\" />}\n      data-testid=\"toolbox-policy-report\"\n      isDisabled={!report}\n      onClick={() => navigate('validation/', { state: { origin: pathname } })}\n    >\n      {t('workspace.toolbar.policy.showReport')}\n    </Button>\n  )\n}\n","import type { FC } from 'react'\n\nimport ToolbarButtonGroup from '@/components/react-flow/ToolbarButtonGroup.tsx'\n\nimport { ToolbarDryRun } from '@datahub/components/toolbar/ToolbarDryRun.tsx'\nimport { ToolbarPublish } from '@datahub/components/toolbar/ToolbarPublish.tsx'\nimport { usePolicyChecksStore } from '@datahub/hooks/usePolicyChecksStore.ts'\nimport { ToolbarClear } from '@datahub/components/toolbar/ToolbarClear.tsx'\nimport { ToolbarShowReport } from '@datahub/components/toolbar/ToolbarShowReport.tsx'\n\nconst PolicyToolbar: FC = () => {\n  const { report } = usePolicyChecksStore()\n\n  return (\n    <ToolbarButtonGroup orientation=\"horizontal\" variant=\"outline\" gap=\"0.5em\">\n      <ToolbarDryRun />\n      <ToolbarButtonGroup isAttached variant=\"outline\">\n        <ToolbarShowReport />\n        {report && <ToolbarClear />}\n      </ToolbarButtonGroup>\n\n      <ToolbarPublish />\n    </ToolbarButtonGroup>\n  )\n}\n\nexport default PolicyToolbar\n","import type { FC } from 'react'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\nimport { useTranslation } from 'react-i18next'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\nimport { DataHubNodeType, DataPolicyData } from '@datahub/types.ts'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport PolicyToolbar from '@datahub/components/toolbar/PolicyToolbar.tsx'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const DataPolicyNode: FC<NodeProps<DataPolicyData>> = (props) => {\n  const { t } = useTranslation('datahub')\n  const { id } = props\n\n  return (\n    <>\n      <NodeWrapper route={`node/${DataHubNodeType.DATA_POLICY}/${id}`} {...props} toolbar={<PolicyToolbar />}>\n        <HStack justifyContent=\"space-between\">\n          <VStack alignItems=\"flex-start\" data-testid=\"node-model\">\n            <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n              {t('workspace.handles.validation', { context: DataPolicyData.Handle.TOPIC_FILTER })}\n            </Text>\n            <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n              {t('workspace.handles.validation', { context: DataPolicyData.Handle.VALIDATION })}\n            </Text>\n          </VStack>\n          <VStack alignItems=\"flex-end\" data-testid=\"node-model\">\n            <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n              {t('workspace.handles.validation', { context: DataPolicyData.Handle.ON_SUCCESS })}\n            </Text>\n            <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n              {t('workspace.handles.validation', { context: DataPolicyData.Handle.ON_ERROR })}\n            </Text>\n          </VStack>\n        </HStack>\n      </NodeWrapper>\n      <CustomHandle\n        type=\"target\"\n        position={Position.Left}\n        id={DataPolicyData.Handle.TOPIC_FILTER}\n        style={{\n          top: getHandlePosition(),\n          borderColor: 'var(--chakra-colors-black)',\n        }}\n      />\n      <CustomHandle\n        type=\"target\"\n        position={Position.Left}\n        id={DataPolicyData.Handle.VALIDATION}\n        className={DataPolicyData.Handle.VALIDATION}\n        style={{\n          top: getHandlePosition(1),\n          background: 'var(--chakra-colors-white)',\n          borderColor: 'var(--chakra-colors-black)',\n          borderWidth: 2,\n        }}\n      />\n      <CustomHandle\n        type=\"source\"\n        position={Position.Right}\n        id={DataPolicyData.Handle.ON_SUCCESS}\n        className={DataPolicyData.Handle.ON_SUCCESS}\n        style={{\n          top: getHandlePosition(),\n        }}\n        isConnectable={1}\n      />\n      <CustomHandle\n        type=\"source\"\n        position={Position.Right}\n        id={DataPolicyData.Handle.ON_ERROR}\n        className={DataPolicyData.Handle.ON_ERROR}\n        style={{\n          top: getHandlePosition(1),\n        }}\n        isConnectable={1}\n      />\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport { HStack, VStack } from '@chakra-ui/react'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\n\nimport type { ValidatorData } from '@datahub/types.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport { NodeParams } from '@datahub/components/helpers'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const ValidatorNode: FC<NodeProps<ValidatorData>> = (props) => {\n  const { id, data } = props\n  return (\n    <>\n      <NodeWrapper route={`node/${DataHubNodeType.VALIDATOR}/${id}`} {...props}>\n        <HStack>\n          <VStack data-testid=\"node-model\">\n            <NodeParams value={data.type} />\n            <NodeParams value={data.strategy} />\n          </VStack>\n        </HStack>\n      </NodeWrapper>\n      <CustomHandle\n        type=\"target\"\n        position={Position.Left}\n        id=\"target\"\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n      <CustomHandle\n        type=\"source\"\n        position={Position.Right}\n        id=\"source\"\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n    </>\n  )\n}\n","import { HStack, VStack } from '@chakra-ui/react'\nimport type { FC } from 'react'\nimport { useMemo } from 'react'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\nimport { useTranslation } from 'react-i18next'\n\nimport type { SchemaData } from '@datahub/types.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport { NodeParams } from '@datahub/components/helpers'\nimport { renderResourceName } from '@datahub/utils/node.utils.ts'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const SchemaNode: FC<NodeProps<SchemaData>> = (props) => {\n  const { t } = useTranslation('datahub')\n  const { id, data } = props\n\n  const title = useMemo(() => renderResourceName(data.name, data.version, t), [data.name, data.version, t])\n\n  return (\n    <>\n      <NodeWrapper route={`node/${DataHubNodeType.SCHEMA}/${id}`} {...props}>\n        <HStack justifyContent=\"flex-end\">\n          <VStack data-testid=\"node-model\" alignItems=\"flex-end\">\n            <NodeParams value={data?.type || t('error.noSet.select')} />\n            <NodeParams value={title} />\n          </VStack>\n        </HStack>\n      </NodeWrapper>\n      <CustomHandle\n        type=\"source\"\n        position={Position.Right}\n        id=\"source\"\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\nimport { Text, VStack } from '@chakra-ui/react'\n\nimport { DataHubNodeType, OperationData } from '@datahub/types.ts'\nimport { NodeWrapper } from '@datahub/components/nodes/NodeWrapper.tsx'\nimport NodeParams from '@datahub/components/helpers/NodeParams.tsx'\nimport { CustomHandle } from '@datahub/components/nodes/CustomHandle.tsx'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const OperationNode: FC<NodeProps<OperationData>> = (props) => {\n  const { t } = useTranslation('datahub')\n  const { data, id } = props\n  const { functionId, metadata } = data\n\n  const isTransform = metadata?.hasArguments && data.functionId === 'DataHub.transform'\n  const isSerialiser =\n    metadata?.hasArguments &&\n    (data.functionId === OperationData.Function.SERDES_SERIALIZE ||\n      data.functionId === OperationData.Function.SERDES_DESERIALIZE)\n\n  return (\n    <>\n      <NodeWrapper route={`node/${DataHubNodeType.OPERATION}/${id}`} {...props}>\n        <VStack alignItems=\"flex-start\">\n          <VStack data-testid=\"node-model\" alignItems=\"flex-start\">\n            <NodeParams value={functionId || t('error.noSet.select')} />\n            {isSerialiser && (\n              <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n                {t('workspace.handles.operation', { context: OperationData.Handle.SCHEMA })}\n              </Text>\n            )}\n            {isTransform && (\n              <>\n                <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n                  {t('workspace.handles.operation', { context: OperationData.Handle.DESERIALISER })}\n                </Text>\n                <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n                  {t('workspace.handles.operation', { context: OperationData.Handle.FUNCTION })}\n                </Text>\n                <Text fontSize=\"xs\" h={6} alignContent=\"center\">\n                  {t('workspace.handles.operation', { context: OperationData.Handle.SERIALISER })}\n                </Text>\n              </>\n            )}\n          </VStack>\n        </VStack>\n      </NodeWrapper>\n      <CustomHandle\n        type=\"target\"\n        position={Position.Left}\n        id={OperationData.Handle.INPUT}\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n      {!metadata?.isTerminal && (\n        <CustomHandle\n          type=\"source\"\n          position={Position.Right}\n          id={OperationData.Handle.OUTPUT}\n          isConnectable={1}\n          style={{\n            top: getHandlePosition(0),\n          }}\n        />\n      )}\n      {isSerialiser && (\n        <CustomHandle\n          type=\"target\"\n          position={Position.Left}\n          id={OperationData.Handle.SCHEMA}\n          style={{\n            top: getHandlePosition(1),\n            background: 'var(--chakra-colors-white)',\n            borderColor: 'var(--chakra-colors-black)',\n            borderWidth: 2,\n          }}\n        />\n      )}\n      {isTransform && (\n        <>\n          <CustomHandle\n            type=\"target\"\n            position={Position.Left}\n            id={OperationData.Handle.DESERIALISER}\n            style={{\n              top: getHandlePosition(1),\n              background: 'var(--chakra-colors-white)',\n              borderColor: 'var(--chakra-colors-black)',\n              borderWidth: 2,\n            }}\n          />\n          <CustomHandle\n            type=\"target\"\n            position={Position.Left}\n            id={OperationData.Handle.FUNCTION}\n            style={{\n              top: getHandlePosition(2),\n              background: 'var(--chakra-colors-white)',\n              borderColor: 'var(--chakra-colors-black)',\n              borderWidth: 2,\n            }}\n          />\n          <CustomHandle\n            type=\"target\"\n            position={Position.Left}\n            id={OperationData.Handle.SERIALISER}\n            style={{\n              top: getHandlePosition(3),\n              background: 'var(--chakra-colors-white)',\n              borderColor: 'var(--chakra-colors-black)',\n              borderWidth: 2,\n            }}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import { HStack, VStack } from '@chakra-ui/react'\nimport type { FC } from 'react'\nimport { useMemo } from 'react'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\nimport { useTranslation } from 'react-i18next'\n\nimport type { FunctionData } from '@datahub/types.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport { NodeParams } from '@datahub/components/helpers'\nimport { renderResourceName } from '@datahub/utils/node.utils.ts'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const FunctionNode: FC<NodeProps<FunctionData>> = (props) => {\n  const { t } = useTranslation('datahub')\n  const { id, data } = props\n\n  const title = useMemo(() => renderResourceName(data.name, data.version, t), [data.name, data.version, t])\n\n  return (\n    <>\n      <NodeWrapper route={`node/${DataHubNodeType.FUNCTION}/${id}`} {...props}>\n        <HStack justifyContent=\"flex-end\">\n          <VStack data-testid=\"node-model\" alignItems=\"flex-end\">\n            <NodeParams value={title || t('error.noSet.select')} />\n          </VStack>\n        </HStack>\n      </NodeWrapper>\n      <CustomHandle\n        type=\"source\"\n        position={Position.Right}\n        id=\"source\"\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\nimport { useTranslation } from 'react-i18next'\nimport { VStack } from '@chakra-ui/react'\n\nimport { BehaviorPolicyData, DataHubNodeType } from '@datahub/types.ts'\nimport { NodeParams } from '@datahub/components/helpers'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport PolicyToolbar from '@datahub/components/toolbar/PolicyToolbar.tsx'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const BehaviorPolicyNode: FC<NodeProps<BehaviorPolicyData>> = (props) => {\n  const { t } = useTranslation('datahub')\n  const { id, data } = props\n\n  return (\n    <>\n      <NodeWrapper route={`node/${DataHubNodeType.BEHAVIOR_POLICY}/${id}`} toolbar={<PolicyToolbar />} {...props}>\n        <VStack data-testid=\"node-model\" alignItems=\"flex-end\">\n          <NodeParams value={data.model || t('error.noSet.select')} />\n        </VStack>\n      </NodeWrapper>\n      <CustomHandle\n        type=\"target\"\n        position={Position.Left}\n        id={BehaviorPolicyData.Handle.CLIENT_FILTER}\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n      <CustomHandle\n        type=\"source\"\n        position={Position.Right}\n        id={BehaviorPolicyData.Handle.TRANSITIONS}\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport { useMemo } from 'react'\nimport { VStack } from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\nimport type { NodeProps } from 'reactflow'\nimport { Position } from 'reactflow'\n\nimport { DataHubNodeType, FsmState, TransitionData } from '@datahub/types.ts'\nimport { CustomHandle, NodeWrapper } from '@datahub/components/nodes'\nimport { NodeParams } from '@datahub/components/helpers'\nimport { getHandlePosition } from '@datahub/utils/theme.utils.ts'\n\nexport const TransitionNode: FC<NodeProps<TransitionData>> = (props) => {\n  const { t } = useTranslation('datahub')\n  const { data, id } = props\n\n  const className = useMemo(() => {\n    if (data.type === FsmState.Type.SUCCESS) return TransitionData.Handle.ON_SUCCESS\n    if (data.type === FsmState.Type.FAILED) return TransitionData.Handle.ON_ERROR\n    return undefined\n  }, [data.type])\n\n  return (\n    <>\n      <NodeWrapper route={`node/${DataHubNodeType.TRANSITION}/${id}`} {...props}>\n        <VStack data-testid=\"node-model\" alignItems=\"flex-end\">\n          <NodeParams value={data.event || t('error.noSet.select')} />\n        </VStack>\n      </NodeWrapper>\n      <CustomHandle\n        type=\"target\"\n        position={Position.Left}\n        id={TransitionData.Handle.BEHAVIOR_POLICY}\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n      <CustomHandle\n        type=\"source\"\n        id={TransitionData.Handle.OPERATION}\n        position={Position.Right}\n        isConnectable={1}\n        className={className}\n        style={{\n          top: getHandlePosition(0),\n        }}\n      />\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport type { EdgeProps } from 'reactflow'\nimport { BaseEdge, getSmoothStepPath } from 'reactflow'\n\nimport { styleDefaultEdge } from '@datahub/utils/edge.utils.ts'\n\nconst DataHubPolicyEdge: FC<EdgeProps> = (props) => {\n  const { sourceX, sourceY, sourcePosition, targetX, targetY, targetPosition, markerEnd, style } = props\n\n  const [stepPath] = getSmoothStepPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n\n  const selectedStyle = props.selected && {\n    filter: 'drop-shadow( 1px 1px 2px rgba(0, 0, 0, .5))',\n  }\n\n  const localStyle = {\n    ...style,\n    ...styleDefaultEdge.style,\n    ...selectedStyle,\n  }\n\n  return <BaseEdge path={stepPath} markerEnd={markerEnd} style={localStyle} />\n}\n\nexport default DataHubPolicyEdge\n","import type { FC } from 'react'\nimport type { EdgeProps, NodeProps } from 'reactflow'\nimport { DataHubNodeType, EdgeTypes } from '@datahub/types.ts'\nimport { TopicFilterNode } from '@datahub/designer/topic_filter/TopicFilterNode.tsx'\nimport { ClientFilterNode } from '@datahub/designer/client_filter/ClientFilterNode.tsx'\nimport { DataPolicyNode } from '@datahub/designer/data_policy/DataPolicyNode.tsx'\nimport { ValidatorNode } from '@datahub/designer/validator/ValidatorNode.tsx'\nimport { SchemaNode } from '@datahub/designer/schema/SchemaNode.tsx'\nimport { OperationNode } from '@datahub/designer/operation/OperationNode.tsx'\nimport { FunctionNode } from '@datahub/designer/script/FunctionNode.tsx'\nimport { BehaviorPolicyNode } from '@datahub/designer/behavior_policy/BehaviorPolicyNode.tsx'\nimport { TransitionNode } from '@datahub/designer/transition/TransitionNode.tsx'\nimport DataHubPolicyEdge from '@datahub/components/edges/DataHubPolicyEdge.tsx'\n\n/**\n * Used in the ReactFlow component to create custom nodes\n */\nexport const CustomNodeTypes: Record<string, FC<NodeProps>> = {\n  [DataHubNodeType.TOPIC_FILTER]: TopicFilterNode,\n  [DataHubNodeType.CLIENT_FILTER]: ClientFilterNode,\n  [DataHubNodeType.DATA_POLICY]: DataPolicyNode,\n  [DataHubNodeType.VALIDATOR]: ValidatorNode,\n  [DataHubNodeType.SCHEMA]: SchemaNode,\n  [DataHubNodeType.OPERATION]: OperationNode,\n  [DataHubNodeType.FUNCTION]: FunctionNode,\n  [DataHubNodeType.BEHAVIOR_POLICY]: BehaviorPolicyNode,\n  [DataHubNodeType.TRANSITION]: TransitionNode,\n}\n\n/**\n * Used in the ReactFlow component to create custom edges\n */\nexport const CustomEdgeTypes: Record<string, FC<EdgeProps>> = {\n  [EdgeTypes.DATAHUB_EDGE]: DataHubPolicyEdge,\n}\n","import type { FC } from 'react'\nimport type React from 'react'\nimport { useCallback, useMemo, useRef, useState } from 'react'\nimport type { Connection, HandleType, Node, NodeAddChange, ReactFlowInstance, XYPosition } from 'reactflow'\nimport ReactFlow, { ReactFlowProvider } from 'reactflow'\nimport { useTranslation } from 'react-i18next'\nimport { Box } from '@chakra-ui/react'\n\nimport { proOptions } from '@/components/react-flow/react-flow.utils.ts'\nimport SuspenseOutlet from '@/components/SuspenseOutlet.tsx'\nimport CanvasControls from '@datahub/components/controls/CanvasControls.tsx'\nimport DesignerToolbox from '@datahub/components/controls/DesignerToolbox.tsx'\nimport DesignerMiniMap from '@datahub/components/controls/DesignerMiniMap.tsx'\nimport ToolboxSelectionListener from '@datahub/components/controls/ToolboxSelectionListener.tsx'\nimport { CopyPasteListener } from '@datahub/components/controls/CopyPasteListener.tsx'\nimport CopyPasteStatus from '@datahub/components/controls/CopyPasteStatus.tsx'\nimport DeleteListener from '@datahub/components/controls/DeleteListener.tsx'\nimport ConnectionLine from '@datahub/components/nodes/ConnectionLine.tsx'\nimport { CustomEdgeTypes, CustomNodeTypes } from '@datahub/config/nodes.config.tsx'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport { getConnectedNodeFrom, getNodeId, getNodePayload, isValidPolicyConnection } from '@datahub/utils/node.utils.ts'\nimport { CANVAS_GRID } from '@datahub/utils/theme.utils.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { usePolicyGuards } from '@datahub/hooks/usePolicyGuards.ts'\nimport { CANVAS_DROP_DELTA } from '@datahub/designer/checks.utils.ts'\n\nexport type OnConnectStartParams = {\n  nodeId: string | null\n  handleId: string | null\n  handleType: HandleType | null\n}\n\ninterface OnConnectStartParamsNode extends OnConnectStartParams {\n  type: string | undefined\n}\n\nconst PolicyEditor: FC = () => {\n  const { t } = useTranslation('datahub')\n  const reactFlowWrapper = useRef(null)\n  const [reactFlowInstance, setReactFlowInstance] = useState<ReactFlowInstance | null>(null)\n  const { status, nodes, edges, onNodesChange, onEdgesChange, onConnect, onAddNodes, isPolicyInDraft, setStatus } =\n    useDataHubDraftStore()\n  const edgeConnectStart = useRef<OnConnectStartParamsNode | undefined>(undefined)\n  const nodeTypes = useMemo(() => CustomNodeTypes, [])\n  const edgeTypes = useMemo(() => CustomEdgeTypes, [])\n  const { isPolicyEditable } = usePolicyGuards()\n\n  const checkValidity = useCallback(\n    (connection: Connection) => isValidPolicyConnection(connection, nodes, edges),\n    [edges, nodes]\n  )\n\n  const onDragOver = useCallback((event: React.DragEvent<HTMLElement> | undefined) => {\n    if (event) {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n  }, [])\n\n  const onDrop = useCallback(\n    (event: React.DragEvent<HTMLElement> | undefined) => {\n      if (event && reactFlowInstance) {\n        event.preventDefault()\n\n        // check if the dropped element is valid\n        const type = event.dataTransfer.getData('application/reactflow')\n        if (typeof type === 'undefined' || !type) {\n          return\n        }\n\n        const position: XYPosition = reactFlowInstance.screenToFlowPosition({\n          x: event.clientX,\n          y: event.clientY,\n        })\n\n        const newNode: Node = {\n          id: getNodeId(type),\n          type,\n          position,\n          data: getNodePayload(type),\n        }\n        onAddNodes([{ item: newNode, type: 'add' }])\n        if (type === DataHubNodeType.DATA_POLICY || type === DataHubNodeType.BEHAVIOR_POLICY)\n          setStatus(status, { type })\n      }\n    },\n    [onAddNodes, reactFlowInstance, setStatus, status]\n  )\n\n  const onConnectStart = useCallback(\n    (_: unknown, params: OnConnectStartParams) => {\n      if (!isPolicyEditable) return\n      const nodeFound = nodes.find((e) => e.id === params.nodeId)\n      edgeConnectStart.current = undefined\n      if (nodeFound) {\n        edgeConnectStart.current = { ...params, type: nodeFound.type }\n      }\n    },\n    [isPolicyEditable, nodes]\n  )\n\n  const onConnectEnd = useCallback(\n    (event: MouseEvent | TouchEvent) => {\n      const targetElement = event.target as Element\n      const isTargetCanvas = targetElement.classList.contains('react-flow__pane')\n\n      if (isTargetCanvas && edgeConnectStart.current && reactFlowInstance) {\n        const { type, handleId, handleType, nodeId } = edgeConnectStart.current\n\n        const droppedNode = getConnectedNodeFrom(type, handleId)\n        if (!droppedNode) return\n\n        if (\n          droppedNode.type === DataHubNodeType.DATA_POLICY ||\n          (droppedNode.type === DataHubNodeType.BEHAVIOR_POLICY && isPolicyInDraft())\n        )\n          return\n\n        if (droppedNode) {\n          const id = getNodeId()\n          const newNode: Node = {\n            id,\n            position: reactFlowInstance.screenToFlowPosition({\n              x: (event as MouseEvent).clientX || (event as TouchEvent).touches[0].clientX,\n              y: (event as MouseEvent).clientY || (event as TouchEvent).touches[0].clientY,\n            }),\n            type: droppedNode.type,\n            data: getNodePayload(droppedNode.type),\n          }\n\n          newNode.position.y += CANVAS_DROP_DELTA.y\n          if (handleType === 'target') newNode.position.x += CANVAS_DROP_DELTA.x\n\n          const edgeConnection: Connection = droppedNode.isSource\n            ? {\n                target: nodeId,\n                targetHandle: handleId,\n                source: id,\n                sourceHandle: droppedNode.handle,\n              }\n            : {\n                source: nodeId,\n                sourceHandle: handleId,\n                target: id,\n                targetHandle: droppedNode.handle,\n              }\n\n          onAddNodes([{ item: newNode, type: 'add' } as NodeAddChange])\n          onConnect(edgeConnection)\n        }\n      }\n    },\n    [isPolicyInDraft, onAddNodes, onConnect, reactFlowInstance]\n  )\n\n  const onConnectNodes = useCallback(\n    (connection: Connection) => {\n      edgeConnectStart.current = undefined\n      onConnect(connection)\n    },\n    [onConnect]\n  )\n\n  return (\n    <>\n      <ReactFlowProvider>\n        <ReactFlow\n          ref={reactFlowWrapper}\n          id=\"edge-datahub-canvas\"\n          nodes={nodes}\n          edges={edges}\n          nodeTypes={nodeTypes}\n          edgeTypes={edgeTypes}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          // onEdgeUpdate={onEdgeUpdate}\n          onConnectStart={onConnectStart}\n          onConnectEnd={onConnectEnd}\n          onConnect={onConnectNodes}\n          connectionRadius={35}\n          connectionLineComponent={isPolicyEditable ? ConnectionLine : undefined}\n          onInit={setReactFlowInstance}\n          fitView\n          snapToGrid\n          snapGrid={[CANVAS_GRID, CANVAS_GRID]}\n          onDragOver={onDragOver}\n          onDrop={onDrop}\n          isValidConnection={checkValidity}\n          deleteKeyCode={[]}\n          nodesConnectable={isPolicyEditable}\n          proOptions={proOptions}\n          role=\"region\"\n          aria-label={t('workspace.canvas.aria-label')}\n          // nodesDraggable={isEditable}\n          // elementsSelectable={isEditable}\n          // onError={(id: string, message: string) => console.log('XXXXXX e', id, message)}\n        >\n          <Box role=\"toolbar\" aria-label={t('workspace.toolbars.aria-label')} aria-controls=\"edge-datahub-canvas\">\n            <DeleteListener />\n            <ToolboxSelectionListener />\n            <DesignerToolbox />\n            <CanvasControls />\n            <CopyPasteListener render={(copiedNodes) => <CopyPasteStatus nbCopied={copiedNodes.length} />} />\n            <DesignerMiniMap />\n          </Box>\n        </ReactFlow>\n        <SuspenseOutlet />\n      </ReactFlowProvider>\n    </>\n  )\n}\n\nexport default PolicyEditor\n","import { useQuery } from '@tanstack/react-query'\nimport { useHttpClient } from '@/api/hooks/useHttpClient/useHttpClient.ts'\nimport { DATAHUB_QUERY_KEYS } from '../../utils.ts'\nimport type { ApiError, DataPolicy } from '@/api/__generated__'\n\nexport const useGetDataPolicy = (policyId: string, fields?: string) => {\n  const appClient = useHttpClient()\n  return useQuery<DataPolicy, ApiError>({\n    queryKey: [DATAHUB_QUERY_KEYS.DATA_POLICIES, policyId, fields],\n    queryFn: () => appClient.dataHubDataPolicies.getDataPolicy(policyId, fields),\n  })\n}\n","import { useQuery } from '@tanstack/react-query'\nimport { DATAHUB_QUERY_KEYS } from '../../utils.ts'\nimport { useHttpClient } from '@/api/hooks/useHttpClient/useHttpClient.ts'\nimport type { ApiError, BehaviorPolicy } from '@/api/__generated__'\n\nexport const useGetBehaviorPolicy = (policyId: string, fields?: string) => {\n  const appClient = useHttpClient()\n  return useQuery<BehaviorPolicy, ApiError>({\n    queryKey: [DATAHUB_QUERY_KEYS.BEHAVIOR_POLICIES, policyId, fields],\n    queryFn: () => appClient.dataHubBehaviorPolicies.getBehaviorPolicy(policyId, fields),\n  })\n}\n","import type { Connection, Node, NodeAddChange, XYPosition } from 'reactflow'\n\nimport type { DataPolicy } from '@/api/__generated__'\n\nimport { getNodeId } from '@datahub/utils/node.utils.ts'\nimport type { DataPolicyData, TopicFilterData } from '@datahub/types.ts'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { CANVAS_POSITION } from '@datahub/designer/checks.utils.ts'\n\nexport const loadTopicFilter = (\n  policy: DataPolicy,\n  dataPolicyNode: Node<DataPolicyData>\n): (NodeAddChange | Connection)[] => {\n  const position: XYPosition = {\n    x: dataPolicyNode.position.x + CANVAS_POSITION.Topic.x,\n    y: dataPolicyNode.position.y + CANVAS_POSITION.Topic.y,\n  }\n\n  const topicNode: Node<TopicFilterData> = {\n    id: getNodeId(),\n    type: DataHubNodeType.TOPIC_FILTER,\n    position,\n    data: {\n      // TODO[DATAHBUB] Edge-related information (adapters) are not serialised\n      adapter: undefined,\n      topics: [policy.matching.topicFilter],\n    },\n  }\n\n  return [\n    { item: topicNode, type: 'add' },\n    { source: topicNode.id, target: dataPolicyNode.id, sourceHandle: null, targetHandle: null },\n  ]\n}\n","import type { FC } from 'react'\nimport { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport { Spinner, useToast } from '@chakra-ui/react'\nimport type { Connection, NodeAddChange } from 'reactflow'\n\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\n\nimport { DataHubNodeType, DesignerStatus, PolicyType } from '@datahub/types.ts'\nimport PolicyEditor from '@datahub/components/pages/PolicyEditor.tsx'\nimport { useGetDataPolicy } from '@datahub/api/hooks/DataHubDataPoliciesService/useGetDataPolicy.ts'\nimport { useGetBehaviorPolicy } from '@datahub/api/hooks/DataHubBehaviorPoliciesService/useGetBehaviorPolicy.ts'\nimport { useGetAllScripts } from '@datahub/api/hooks/DataHubScriptsService/useGetAllScripts.ts'\nimport { useGetAllSchemas } from '@datahub/api/hooks/DataHubSchemasService/useGetAllSchemas.ts'\nimport { loadDataPolicy } from '@datahub/designer/data_policy/DataPolicyNode.utils.ts'\nimport { loadTopicFilter } from '@datahub/designer/topic_filter/TopicFilterNode.utils.ts'\nimport { loadValidators } from '@datahub/designer/validator/ValidatorNode.utils.ts'\nimport { loadDataPolicyPipelines } from '@datahub/designer/operation/OperationNode.utils.ts'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport { DATAHUB_TOAST_ID, dataHubToastOption } from '@datahub/utils/toast.utils.ts'\nimport { loadBehaviorPolicy } from '@datahub/designer/behavior_policy/BehaviorPolicyNode.utils.ts'\nimport { loadClientFilter } from '@datahub/designer/client_filter/ClientFilterNode.utils.ts'\nimport { loadTransitions } from '@datahub/designer/transition/TransitionNode.utils.ts'\n\ninterface PolicyLoaderProps {\n  policyId: string\n}\n\nexport const DataPolicyLoader: FC<PolicyLoaderProps> = ({ policyId }) => {\n  const { t } = useTranslation('datahub')\n  const store = useDataHubDraftStore()\n  const toast = useToast()\n\n  const {\n    isLoading: isDataPolicyLoading,\n    data: dataPolicy,\n    isError: isDataPolicyError,\n    error,\n  } = useGetDataPolicy(policyId)\n  // TODO[19966] Waste of bandwidth; enable the request only is dataPolicy contains the relevant resources\n  const { isLoading: isScriptLoading, data: scripts, isError: isScriptError, error: scriptError } = useGetAllScripts({})\n  const { isLoading: isSchemaLoading, data: schemas, isError: isSchemaError, error: schemaError } = useGetAllSchemas()\n\n  useEffect(() => {\n    if (!dataPolicy || !schemas || !scripts) return\n\n    try {\n      store.reset()\n      const policyNode = loadDataPolicy(dataPolicy)\n      const filterNode = loadTopicFilter(dataPolicy, policyNode.item)\n      const validatorNodes = loadValidators(dataPolicy, schemas.items || [], policyNode.item)\n      const pipelines = loadDataPolicyPipelines(dataPolicy, schemas.items || [], scripts.items || [], policyNode.item)\n\n      const allArtefactsLoaded = [policyNode, ...filterNode, ...validatorNodes, ...pipelines]\n\n      const nodeChanges = allArtefactsLoaded.reduce<NodeAddChange[]>((acc, element) => {\n        const allIds = acc.map((nodeAddChange) => nodeAddChange.item.id)\n        const nodeChange = element as NodeAddChange\n        if (nodeChange.item && !allIds.includes(nodeChange.item.id)) acc.push(nodeChange)\n        return acc\n      }, [])\n      const edgeConnects = allArtefactsLoaded.filter(\n        (element): element is Connection => !!(element as Connection).source\n      )\n\n      store.onNodesChange(nodeChanges)\n      for (const connection of edgeConnects) {\n        store.onConnect(connection)\n      }\n      store.setStatus(DesignerStatus.LOADED, { name: dataPolicy.id, type: DataHubNodeType.DATA_POLICY })\n    } catch (error) {\n      let message\n      if (error instanceof Error) message = error.message\n      else message = String(error)\n      if (!toast.isActive(DATAHUB_TOAST_ID))\n        toast({\n          ...dataHubToastOption,\n          id: DATAHUB_TOAST_ID,\n          title: t('error.load.errorTitle', { source: PolicyType.DATA_POLICY }),\n          description: message,\n          status: 'error',\n        })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dataPolicy, schemas, scripts, t, toast])\n\n  if (isDataPolicyLoading || isScriptLoading || isSchemaLoading) return <Spinner />\n  if (isDataPolicyError) return <ErrorMessage type={t('error.notDefined.title')} message={error?.message} />\n  if (isScriptError) return <ErrorMessage type={t('error.notDefined.title')} message={scriptError?.message} />\n  if (isSchemaError) return <ErrorMessage type={t('error.notDefined.title')} message={schemaError?.message} />\n\n  return <PolicyEditor />\n}\n\nexport const BehaviorPolicyLoader: FC<PolicyLoaderProps> = ({ policyId }) => {\n  const { t } = useTranslation('datahub')\n  const store = useDataHubDraftStore()\n  const toast = useToast()\n\n  const {\n    isLoading: isPolicyLoading,\n    data: behaviorPolicy,\n    isError: isPolicyError,\n    error,\n  } = useGetBehaviorPolicy(policyId)\n  // TODO[19966] Waste of bandwidth; enable the request only is dataPolicy contains the relevant resources\n  const { isLoading: isScriptLoading, data: scripts, isError: isScriptError, error: scriptError } = useGetAllScripts({})\n  const { isLoading: isSchemaLoading, data: schemas, isError: isSchemaError, error: schemaError } = useGetAllSchemas()\n\n  useEffect(() => {\n    if (!behaviorPolicy || !schemas || !scripts) return\n\n    try {\n      store.reset()\n      const behaviorPolicyNode = loadBehaviorPolicy(behaviorPolicy)\n      const filterNode = loadClientFilter(behaviorPolicy, behaviorPolicyNode.item)\n      const pipelines = loadTransitions(\n        behaviorPolicy,\n        schemas.items || [],\n        scripts.items || [],\n        behaviorPolicyNode.item\n      )\n\n      const allArtefactsLoaded = [behaviorPolicyNode, ...filterNode, ...pipelines]\n      const nodeChanges = allArtefactsLoaded.reduce<NodeAddChange[]>((acc, element) => {\n        const allIds = acc.map((nodeAddChange) => nodeAddChange.item.id)\n        const nodeChange = element as NodeAddChange\n        if (nodeChange.item && !allIds.includes(nodeChange.item.id)) acc.push(nodeChange)\n        return acc\n      }, [])\n      const edgeConnects = allArtefactsLoaded.filter(\n        (element): element is Connection => !!(element as Connection).source\n      )\n\n      store.onNodesChange(nodeChanges)\n      for (const connection of edgeConnects) {\n        store.onConnect(connection)\n      }\n      store.setStatus(DesignerStatus.LOADED, { name: behaviorPolicy.id, type: DataHubNodeType.BEHAVIOR_POLICY })\n    } catch (error) {\n      let message\n      if (error instanceof Error) message = error.message\n      else message = String(error)\n      if (!toast.isActive(DATAHUB_TOAST_ID))\n        toast({\n          ...dataHubToastOption,\n          id: DATAHUB_TOAST_ID,\n          title: t('error.load.errorTitle', { source: PolicyType.DATA_POLICY }),\n          description: message,\n          status: 'error',\n        })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [behaviorPolicy, schemas, scripts, t, toast])\n\n  if (isPolicyLoading || isScriptLoading || isSchemaLoading) return <Spinner />\n  if (isPolicyError) return <ErrorMessage type={t('error.notDefined.title')} message={error?.message} />\n  if (isScriptError) return <ErrorMessage type={t('error.notDefined.title')} message={scriptError?.message} />\n  if (isSchemaError) return <ErrorMessage type={t('error.notDefined.title')} message={schemaError?.message} />\n  return <PolicyEditor />\n}\n\nconst PolicyEditorLoader: FC = () => {\n  const { t } = useTranslation('datahub')\n  const { policyType, policyId } = useParams()\n\n  if (!policyType || !(policyType in PolicyType))\n    return <ErrorMessage type={t('error.notDefined.title')} message={t('error.notDefined.description')} />\n\n  if (policyId) {\n    if (policyType === PolicyType.DATA_POLICY) return <DataPolicyLoader policyId={policyId} />\n    if (policyType === PolicyType.BEHAVIOR_POLICY) return <BehaviorPolicyLoader policyId={policyId} />\n\n    return <ErrorMessage type={t('error.notDefined.title')} message={t('error.notDefined.description')} />\n  }\n\n  return <PolicyEditor />\n}\n\nexport default PolicyEditorLoader\n"],"names":["Kbd","forwardRef","props","ref","styles","useStyleConfig","className","rest","omitThemingProps","jsx","chakra","cx","ChevronRightIcon","createIcon","CloseIcon","PLATFORM_MACOS","PLATFORM_OTHERS","getUserAgentPlatform","platform","userAgent","os","ShortcutRenderer","hotkeys","description","shortcuts","hotkey","localiseKeyboard","shortcut","modifier","i18n","jsxs","Fragment","indexShortcut","localisedShortcut","element","indexElement","Text","DesignerCheatSheet","t","useTranslation","isOpen","onOpen","onClose","useDisclosure","groupedKeys","useMemo","DATAHUB_HOTKEY_CONTEXT","acc","item","IconButton","LuBadgeHelp","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","HStack","group","keys","Card","CardHeader","CardBody","List","ListItem","ModalFooter","CanvasControls","onInteractiveChange","store","useStoreApi","zoomIn","zoomOut","fitView","useReactFlow","isInteractive","useStore","s","onToggleInteractivity","Panel","ButtonGroup","FaPlus","FaMinus","LuBoxSelect","FaLock","FaLockOpen","NodeParams","value","tagProps","Tag","TagLabel","ToolItem","nodeType","isDisabled","onButtonDragStart","useCallback","event","NodeIcon","ToolGroup","title","id","children","VStack","Heading","ToolboxNodes","direction","nodes","isPolicyInDraft","useDataHubDraftStore","isPolicyEditable","usePolicyGuards","isDraftEmpty","Wrapper","DataHubNodeType","DraftStatus","status","name","type","reset","setStatus","navigate","useNavigate","isConfirmDeleteOpen","onConfirmDeleteOpen","onConfirmDeleteClose","onHandleClear","onHandleEdit","DesignerStatus","onHandleClone","PolicyType","handleConfirmOnClose","handleConfirmOnSubmit","Breadcrumb","BreadcrumbItem","Icon","PiPencilSimpleLineFill","LuBookCopy","LuTrash2","ConfirmationDialog","DesignerToolbox","Popover","PopoverTrigger","FaTools","ChevronDownIcon","PopoverContent","PopoverArrow","PopoverCloseButton","PopoverHeader","PopoverBody","DesignerMiniMap","headerBackgroundColor","useColorModeValue","headerPolicyBackgroundColor","headerResourceBackgroundColor","theme","useTheme","backgroundColor","getColor","MiniMap","node","miniMapNode","ToolboxSelectionListener","setNode","usePolicyChecksStore","useOnSelectionChange","isDataPolicyNodeType","isBehaviorPolicyNodeType","_extends","target","i","source","key","reservedModifierKeywords","mappedKeys","mapKey","isHotkeyModifier","parseKeysHookInput","splitKey","parseHotkey","combinationKey","k","modifiers","singleCharKeys","pushToCurrentlyPressedKeys","removeFromCurrentlyPressedKeys","currentlyPressedKeys","isReadonlyArray","isHotkeyPressed","hotkeyArray","maybePreventDefault","preventDefault","isHotkeyEnabled","enabled","isKeyboardEventTriggeredByInput","ev","isHotkeyEnabledOnTag","_ref","enabledOnTags","targetTagName","tag","isScopeActive","activeScopes","scopes","scope","isHotkeyMatchingKeyboardEvent","e","ignoreModifiers","alt","meta","mod","shift","ctrl","pressedKeyUppercase","code","ctrlKey","metaKey","shiftKey","altKey","keyCode","pressedKey","BoundHotkeysProxyProvider","createContext","useBoundHotkeysProxy","useContext","deepEqual","x","y","isEqual","HotkeysContext","useHotkeysContext","useDeepEqualMemo","useRef","stopPropagation","useSafeLayoutEffect","useLayoutEffect","useEffect","useHotkeys","callback","options","dependencies","hasTriggeredRef","_options","_keys","_deps","memoisedCB","cbRef","memoisedOptions","_useHotkeysContext","enabledScopes","proxy","listener","isKeyUp","_e$target","rootNode","_hotkey$keys","handleKeyDown","handleKeyUp","domNode","DEFAULT_POSITION_DELTA","CopyPasteListener","render","edges","onNodesChange","onEdgesChange","copiedNodes","setCopiedNodes","useState","delta","setDelta","DATAHUB_HOTKEY","selectedNodes","ids","newIds","uuidv4","selectedEdges","getConnectedEdges","edge","duplicateNodes","duplicateEdges","CopyPasteStatus","nbCopied","TagLeftIcon","LuCopyCheck","LuCopy","DeleteListener","toast","useToast","selectedElements","SelectedElementsCount","deleteContext","canDeleteNodes","canDeleteNode","canDeleteEdges","canDeleteEdge","allElements","allErrors","cur","DATAHUB_TOAST_ID","dataHubToastOption","UnorderedList","error","index","allConnectedEdges","ICON_SIZE","ICON_OFFSET","ConnectionLine","fromHandle","fromNode","fromX","fromY","toY","toX","droppedNode","getConnectedNodeFrom","pathParams","d","getSmoothStepPath","CustomHandle","nodeId","useNodeId","isHandleConnectable","isNodeHandleConnectable","transform","Handle","NodeDatahubToolbar","onCopy","onEdit","onDelete","selectedNode","isNodeEditable","Divider","ToolbarButtonGroup","LuFileCog","LuDelete","NodeWrapper","selected","toolbar","route","wrapperProps","data","internalSelection","setInternalSelection","pathname","useLocation","CheckIcon","getDryRunStatusIcon","isSingleSelect","onHandleCopy","onHandleDelete","selectedStyle","errorStyle","successStyle","isDryRun","PolicyDryRunStatus","NodeToolbar","Avatar","TopicFilterNode","_a","Topic","_b","Position","getHandlePosition","ClientFilterNode","client","ClientTag","getSubFlow","only","allIds","incomers","getIncomers","outgoers","getOutgoers","subFlow","checkValidityFilter","dataPolicyNode","isTopicFilterNodeType","PolicyCheckErrors","checkValidityDataPolicy","filter","validators","onSuccessPipeline","onErrorPipeline","allResources","validatorResults","policyOperationResults","loadDataPolicy","policy","position","getNodeId","checkValidityPolicyValidator","validator","schemas","isSchemaNodeType","schemaNodes","checkValiditySchema","schema","version","ResourceWorkingVersion","checkValidityPolicyValidators","isValidatorNodeType","loadValidators","CANVAS_POSITION","newNodes","validatorArguments","enumFromStringValue","DataPolicyValidator","validatorNode","DataPolicyData","nb","schemaRef","loadSchema","checkValidityClients","clients","isClientFilterNodeType","loadClientFilter","behaviorPolicy","behaviorPolicyNode","topicNode","checkValidityModel","checkValidityBehaviorPolicy","behaviourPolicyNode","model","transitions","transition","loadBehaviorPolicy","BehaviorPolicyType","formatScriptName","functionNode","SCRIPT_FUNCTION_PREFIX","SCRIPT_FUNCTION_LATEST","parseScriptName","operation","splitId","SCRIPT_FUNCTION_SEPARATOR","checkValidityJSScript","scriptNode","Script","loadScripts","parentNode","positionInGroup","functions","scripts","shiftLeft","fct","functionName","functionScript","script","functionScriptNode","OperationData","checkValidityTransformFunction","operationNode","isFunctionNodeType","serialisers","connectedEdges","serial","restSerial","deserial","restDeserial","scriptNodes","defaultOrder","allTransformScripts","scriptId","scriptName","sourceDeserial","deserializer","sourceSerial","serializer","processOperations","transformResults","checkValidityPipeline","handle","getNextNode","outEdge","nextNode","outboundEdge","pipeline","loadBehaviorPolicyPipelines","behaviorPolicyTransition","transitionNode","activeTransition","getActiveTransition","transitionOnEvent","loadPipeline","loadDataPolicyPipelines","res","shiftPositionRight","connect","policyOperation","nbItems","deserialisers","allScripts","checkValidityTransitions","behaviorPolicyData","isTransitionNodeType","pipelines","TransitionData","policyEvents","extractEventStates","definition","MOCK_BEHAVIOR_POLICY_SCHEMA","metadata","states","to","StateType","endState","state","TransitionType","loadTransitions","shiftBottom","mockDelay","ms","resolve","onlyNonNullResources","oper","onlyUniqueResources","usePolicyDryRun","onUpdateNodes","updateNodeStatus","results","currentNode","getStatus","DRYRUN_VALIDATION_DELAY","runPolicyChecks","allNodes","processedNodes","result","checkDataPolicyAsync","reducedStore","successResources","errorResources","schemaResources","checkValidityConfigurations","dataPolicy","checkBehaviorPolicyAsync","behaviorPolicyTransitions","pipelineResources","allConfigurations","ToolbarDryRun","checkPolicyAsync","initReport","setReport","handleCheckPolicy","Button","ToolbarClear","report","handleClearPolicy","ToolbarShowReport","RiPassportLine","PolicyToolbar","ToolbarPublish","DataPolicyNode","ValidatorNode","SchemaNode","renderResourceName","OperationNode","functionId","isTransform","isSerialiser","FunctionNode","BehaviorPolicyNode","BehaviorPolicyData","TransitionNode","FsmState","DataHubPolicyEdge","sourceX","sourceY","sourcePosition","targetX","targetY","targetPosition","markerEnd","style","stepPath","localStyle","styleDefaultEdge","BaseEdge","CustomNodeTypes","CustomEdgeTypes","EdgeTypes","PolicyEditor","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onConnect","onAddNodes","edgeConnectStart","nodeTypes","edgeTypes","checkValidity","connection","isValidPolicyConnection","onDragOver","onDrop","newNode","getNodePayload","onConnectStart","_","params","nodeFound","onConnectEnd","handleId","handleType","CANVAS_DROP_DELTA","edgeConnection","onConnectNodes","ReactFlowProvider","ReactFlow","CANVAS_GRID","proOptions","Box","SuspenseOutlet","useGetDataPolicy","policyId","fields","appClient","useHttpClient","useQuery","DATAHUB_QUERY_KEYS","useGetBehaviorPolicy","loadTopicFilter","DataPolicyLoader","isDataPolicyLoading","isDataPolicyError","isScriptLoading","isScriptError","scriptError","useGetAllScripts","isSchemaLoading","isSchemaError","schemaError","useGetAllSchemas","policyNode","filterNode","validatorNodes","allArtefactsLoaded","nodeChanges","nodeAddChange","nodeChange","edgeConnects","message","Spinner","ErrorMessage","BehaviorPolicyLoader","isPolicyLoading","isPolicyError","PolicyEditorLoader","policyType","useParams"],"mappings":"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","x_google_ignoreList":[0,1,2,15]}