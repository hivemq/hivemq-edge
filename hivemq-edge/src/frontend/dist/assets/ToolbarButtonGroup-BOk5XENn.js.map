{"version":3,"file":"ToolbarButtonGroup-BOk5XENn.js","sources":["../../node_modules/.pnpm/@reactflow+minimap@11.7.14_@types+react@18.0.28_react-dom@18.2.0_react@18.2.0/node_modules/@reactflow/minimap/dist/esm/index.mjs","../../node_modules/.pnpm/@reactflow+node-toolbar@1.3.14_@types+react@18.0.28_react-dom@18.2.0_react@18.2.0/node_modules/@reactflow/node-toolbar/dist/esm/index.mjs","../../src/components/react-flow/react-flow.utils.ts","../../src/components/react-flow/Panel.tsx","../../src/components/react-flow/MiniMap.tsx","../../src/components/react-flow/NodeToolbar.tsx","../../src/components/react-flow/ToolbarButtonGroup.tsx"],"sourcesContent":["import React, { memo, useRef, useEffect } from 'react';\nimport cc from 'classcat';\nimport { shallow } from 'zustand/shallow';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport { select, pointer } from 'd3-selection';\nimport { useStore, getNodePositionWithOrigin, useStoreApi, Panel, getBoundsOfRects, getNodesBounds } from '@reactflow/core';\n\nconst MiniMapNode = ({ id, x, y, width, height, style, color, strokeColor, strokeWidth, className, borderRadius, shapeRendering, onClick, selected, }) => {\n    const { background, backgroundColor } = style || {};\n    const fill = (color || background || backgroundColor);\n    return (React.createElement(\"rect\", { className: cc(['react-flow__minimap-node', { selected }, className]), x: x, y: y, rx: borderRadius, ry: borderRadius, width: width, height: height, fill: fill, stroke: strokeColor, strokeWidth: strokeWidth, shapeRendering: shapeRendering, onClick: onClick ? (event) => onClick(event, id) : undefined }));\n};\nMiniMapNode.displayName = 'MiniMapNode';\nvar MiniMapNode$1 = memo(MiniMapNode);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst selector$1 = (s) => s.nodeOrigin;\nconst selectorNodes = (s) => s.getNodes().filter((node) => !node.hidden && node.width && node.height);\nconst getAttrFunction = (func) => (func instanceof Function ? func : () => func);\nfunction MiniMapNodes({ nodeStrokeColor = 'transparent', nodeColor = '#e2e2e2', nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth = 2, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent: NodeComponent = MiniMapNode$1, onClick, }) {\n    const nodes = useStore(selectorNodes, shallow);\n    const nodeOrigin = useStore(selector$1);\n    const nodeColorFunc = getAttrFunction(nodeColor);\n    const nodeStrokeColorFunc = getAttrFunction(nodeStrokeColor);\n    const nodeClassNameFunc = getAttrFunction(nodeClassName);\n    const shapeRendering = typeof window === 'undefined' || !!window.chrome ? 'crispEdges' : 'geometricPrecision';\n    return (React.createElement(React.Fragment, null, nodes.map((node) => {\n        const { x, y } = getNodePositionWithOrigin(node, nodeOrigin).positionAbsolute;\n        return (React.createElement(NodeComponent, { key: node.id, x: x, y: y, width: node.width, height: node.height, style: node.style, selected: node.selected, className: nodeClassNameFunc(node), color: nodeColorFunc(node), borderRadius: nodeBorderRadius, strokeColor: nodeStrokeColorFunc(node), strokeWidth: nodeStrokeWidth, shapeRendering: shapeRendering, onClick: onClick, id: node.id }));\n    })));\n}\nvar MiniMapNodes$1 = memo(MiniMapNodes);\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\nconst defaultWidth = 200;\nconst defaultHeight = 150;\nconst selector = (s) => {\n    const nodes = s.getNodes();\n    const viewBB = {\n        x: -s.transform[0] / s.transform[2],\n        y: -s.transform[1] / s.transform[2],\n        width: s.width / s.transform[2],\n        height: s.height / s.transform[2],\n    };\n    return {\n        viewBB,\n        boundingRect: nodes.length > 0 ? getBoundsOfRects(getNodesBounds(nodes, s.nodeOrigin), viewBB) : viewBB,\n        rfId: s.rfId,\n    };\n};\nconst ARIA_LABEL_KEY = 'react-flow__minimap-desc';\nfunction MiniMap({ style, className, nodeStrokeColor = 'transparent', nodeColor = '#e2e2e2', nodeClassName = '', nodeBorderRadius = 5, nodeStrokeWidth = 2, \n// We need to rename the prop to be `CapitalCase` so that JSX will render it as\n// a component properly.\nnodeComponent, maskColor = 'rgb(240, 240, 240, 0.6)', maskStrokeColor = 'none', maskStrokeWidth = 1, position = 'bottom-right', onClick, onNodeClick, pannable = false, zoomable = false, ariaLabel = 'React Flow mini map', inversePan = false, zoomStep = 10, offsetScale = 5, }) {\n    const store = useStoreApi();\n    const svg = useRef(null);\n    const { boundingRect, viewBB, rfId } = useStore(selector, shallow);\n    const elementWidth = style?.width ?? defaultWidth;\n    const elementHeight = style?.height ?? defaultHeight;\n    const scaledWidth = boundingRect.width / elementWidth;\n    const scaledHeight = boundingRect.height / elementHeight;\n    const viewScale = Math.max(scaledWidth, scaledHeight);\n    const viewWidth = viewScale * elementWidth;\n    const viewHeight = viewScale * elementHeight;\n    const offset = offsetScale * viewScale;\n    const x = boundingRect.x - (viewWidth - boundingRect.width) / 2 - offset;\n    const y = boundingRect.y - (viewHeight - boundingRect.height) / 2 - offset;\n    const width = viewWidth + offset * 2;\n    const height = viewHeight + offset * 2;\n    const labelledBy = `${ARIA_LABEL_KEY}-${rfId}`;\n    const viewScaleRef = useRef(0);\n    viewScaleRef.current = viewScale;\n    useEffect(() => {\n        if (svg.current) {\n            const selection = select(svg.current);\n            const zoomHandler = (event) => {\n                const { transform, d3Selection, d3Zoom } = store.getState();\n                if (event.sourceEvent.type !== 'wheel' || !d3Selection || !d3Zoom) {\n                    return;\n                }\n                const pinchDelta = -event.sourceEvent.deltaY *\n                    (event.sourceEvent.deltaMode === 1 ? 0.05 : event.sourceEvent.deltaMode ? 1 : 0.002) *\n                    zoomStep;\n                const zoom = transform[2] * Math.pow(2, pinchDelta);\n                d3Zoom.scaleTo(d3Selection, zoom);\n            };\n            const panHandler = (event) => {\n                const { transform, d3Selection, d3Zoom, translateExtent, width, height } = store.getState();\n                if (event.sourceEvent.type !== 'mousemove' || !d3Selection || !d3Zoom) {\n                    return;\n                }\n                // @TODO: how to calculate the correct next position? Math.max(1, transform[2]) is a workaround.\n                const moveScale = viewScaleRef.current * Math.max(1, transform[2]) * (inversePan ? -1 : 1);\n                const position = {\n                    x: transform[0] - event.sourceEvent.movementX * moveScale,\n                    y: transform[1] - event.sourceEvent.movementY * moveScale,\n                };\n                const extent = [\n                    [0, 0],\n                    [width, height],\n                ];\n                const nextTransform = zoomIdentity.translate(position.x, position.y).scale(transform[2]);\n                const constrainedTransform = d3Zoom.constrain()(nextTransform, extent, translateExtent);\n                d3Zoom.transform(d3Selection, constrainedTransform);\n            };\n            const zoomAndPanHandler = zoom()\n                // @ts-ignore\n                .on('zoom', pannable ? panHandler : null)\n                // @ts-ignore\n                .on('zoom.wheel', zoomable ? zoomHandler : null);\n            selection.call(zoomAndPanHandler);\n            return () => {\n                selection.on('zoom', null);\n            };\n        }\n    }, [pannable, zoomable, inversePan, zoomStep]);\n    const onSvgClick = onClick\n        ? (event) => {\n            const rfCoord = pointer(event);\n            onClick(event, { x: rfCoord[0], y: rfCoord[1] });\n        }\n        : undefined;\n    const onSvgNodeClick = onNodeClick\n        ? (event, nodeId) => {\n            const node = store.getState().nodeInternals.get(nodeId);\n            onNodeClick(event, node);\n        }\n        : undefined;\n    return (React.createElement(Panel, { position: position, style: style, className: cc(['react-flow__minimap', className]), \"data-testid\": \"rf__minimap\" },\n        React.createElement(\"svg\", { width: elementWidth, height: elementHeight, viewBox: `${x} ${y} ${width} ${height}`, role: \"img\", \"aria-labelledby\": labelledBy, ref: svg, onClick: onSvgClick },\n            ariaLabel && React.createElement(\"title\", { id: labelledBy }, ariaLabel),\n            React.createElement(MiniMapNodes$1, { onClick: onSvgNodeClick, nodeColor: nodeColor, nodeStrokeColor: nodeStrokeColor, nodeBorderRadius: nodeBorderRadius, nodeClassName: nodeClassName, nodeStrokeWidth: nodeStrokeWidth, nodeComponent: nodeComponent }),\n            React.createElement(\"path\", { className: \"react-flow__minimap-mask\", d: `M${x - offset},${y - offset}h${width + offset * 2}v${height + offset * 2}h${-width - offset * 2}z\n        M${viewBB.x},${viewBB.y}h${viewBB.width}v${viewBB.height}h${-viewBB.width}z`, fill: maskColor, fillRule: \"evenodd\", stroke: maskStrokeColor, strokeWidth: maskStrokeWidth, pointerEvents: \"none\" }))));\n}\nMiniMap.displayName = 'MiniMap';\nvar MiniMap$1 = memo(MiniMap);\n\nexport { MiniMap$1 as MiniMap };\n","import React, { useCallback } from 'react';\nimport { useStore, useNodeId, getNodesBounds, internalsSymbol, Position } from '@reactflow/core';\nimport cc from 'classcat';\nimport { shallow } from 'zustand/shallow';\nimport { createPortal } from 'react-dom';\n\nconst selector = (state) => state.domNode?.querySelector('.react-flow__renderer');\nfunction NodeToolbarPortal({ children }) {\n    const wrapperRef = useStore(selector);\n    if (!wrapperRef) {\n        return null;\n    }\n    return createPortal(children, wrapperRef);\n}\n\nconst nodeEqualityFn = (a, b) => a?.positionAbsolute?.x === b?.positionAbsolute?.x &&\n    a?.positionAbsolute?.y === b?.positionAbsolute?.y &&\n    a?.width === b?.width &&\n    a?.height === b?.height &&\n    a?.selected === b?.selected &&\n    a?.[internalsSymbol]?.z === b?.[internalsSymbol]?.z;\nconst nodesEqualityFn = (a, b) => {\n    return a.length === b.length && a.every((node, i) => nodeEqualityFn(node, b[i]));\n};\nconst storeSelector = (state) => ({\n    transform: state.transform,\n    nodeOrigin: state.nodeOrigin,\n    selectedNodesCount: state.getNodes().filter((node) => node.selected).length,\n});\nfunction getTransform(nodeRect, transform, position, offset, align) {\n    let alignmentOffset = 0.5;\n    if (align === 'start') {\n        alignmentOffset = 0;\n    }\n    else if (align === 'end') {\n        alignmentOffset = 1;\n    }\n    // position === Position.Top\n    // we set the x any y position of the toolbar based on the nodes position\n    let pos = [\n        (nodeRect.x + nodeRect.width * alignmentOffset) * transform[2] + transform[0],\n        nodeRect.y * transform[2] + transform[1] - offset,\n    ];\n    // and than shift it based on the alignment. The shift values are in %.\n    let shift = [-100 * alignmentOffset, -100];\n    switch (position) {\n        case Position.Right:\n            pos = [\n                (nodeRect.x + nodeRect.width) * transform[2] + transform[0] + offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * transform[2] + transform[1],\n            ];\n            shift = [0, -100 * alignmentOffset];\n            break;\n        case Position.Bottom:\n            pos[1] = (nodeRect.y + nodeRect.height) * transform[2] + transform[1] + offset;\n            shift[1] = 0;\n            break;\n        case Position.Left:\n            pos = [\n                nodeRect.x * transform[2] + transform[0] - offset,\n                (nodeRect.y + nodeRect.height * alignmentOffset) * transform[2] + transform[1],\n            ];\n            shift = [-100, -100 * alignmentOffset];\n            break;\n    }\n    return `translate(${pos[0]}px, ${pos[1]}px) translate(${shift[0]}%, ${shift[1]}%)`;\n}\nfunction NodeToolbar({ nodeId, children, className, style, isVisible, position = Position.Top, offset = 10, align = 'center', ...rest }) {\n    const contextNodeId = useNodeId();\n    const nodesSelector = useCallback((state) => {\n        const nodeIds = Array.isArray(nodeId) ? nodeId : [nodeId || contextNodeId || ''];\n        return nodeIds.reduce((acc, id) => {\n            const node = state.nodeInternals.get(id);\n            if (node) {\n                acc.push(node);\n            }\n            return acc;\n        }, []);\n    }, [nodeId, contextNodeId]);\n    const nodes = useStore(nodesSelector, nodesEqualityFn);\n    const { transform, nodeOrigin, selectedNodesCount } = useStore(storeSelector, shallow);\n    const isActive = typeof isVisible === 'boolean' ? isVisible : nodes.length === 1 && nodes[0].selected && selectedNodesCount === 1;\n    if (!isActive || !nodes.length) {\n        return null;\n    }\n    const nodeRect = getNodesBounds(nodes, nodeOrigin);\n    const zIndex = Math.max(...nodes.map((node) => (node[internalsSymbol]?.z || 1) + 1));\n    const wrapperStyle = {\n        position: 'absolute',\n        transform: getTransform(nodeRect, transform, position, offset, align),\n        zIndex,\n        ...style,\n    };\n    return (React.createElement(NodeToolbarPortal, null,\n        React.createElement(\"div\", { style: wrapperStyle, className: cc(['react-flow__node-toolbar', className]), ...rest }, children)));\n}\n\nexport { NodeToolbar };\n","/* istanbul ignore file -- @preserve */\nimport type { ProOptions } from 'reactflow'\n\n// TODO[NVL] We should get a PRO license!\nexport const proOptions: ProOptions = { hideAttribution: true }\n","import type { FC } from 'react'\nimport { type HTMLAttributes, type ReactNode } from 'react'\nimport type { PanelPosition } from 'reactflow'\nimport { Panel as ReactFlowPanel } from 'reactflow'\nimport { Box } from '@chakra-ui/react'\n\n// ReactFlow PanelProps is not exported\nexport type PanelProps = HTMLAttributes<HTMLDivElement> & {\n  position: PanelPosition\n  children: ReactNode\n}\n\nconst Panel: FC<PanelProps> = ({ children, ...props }) => {\n  return (\n    <ReactFlowPanel {...props}>\n      <Box\n        sx={{\n          borderColor: 'var(--chakra-colors-chakra-border-color)',\n          borderWidth: 1,\n          _dark: {\n            backgroundColor: 'var(--chakra-colors-gray-700)',\n          },\n          borderRadius: 'var(--chakra-radii-md)',\n          backgroundColor: 'var(--chakra-colors-chakra-body-bg)',\n          boxShadow: 'var(--chakra-shadows-xl)',\n        }}\n      >\n        {children}\n      </Box>\n    </ReactFlowPanel>\n  )\n}\n\nexport default Panel\n","import type { FC } from 'react'\nimport type { MiniMapProps } from 'reactflow'\nimport { MiniMap as ReactFlowMiniMap } from 'reactflow'\nimport type { As } from '@chakra-ui/react'\nimport { chakra } from '@chakra-ui/react'\n\nconst MiniMapChakra = chakra<As, MiniMapProps>(ReactFlowMiniMap)\n\nconst MiniMap: FC<MiniMapProps> = (props) => {\n  return (\n    <MiniMapChakra\n      {...props}\n      sx={{\n        borderColor: 'var(--chakra-colors-chakra-border-color)',\n        borderWidth: 1,\n        _dark: {\n          backgroundColor: 'var(--chakra-colors-gray-700)',\n        },\n        borderRadius: 'var(--chakra-radii-md)',\n        backgroundColor: 'var(--chakra-colors-chakra-body-bg)',\n        boxShadow: 'var(--chakra-shadows-xl)',\n      }}\n    />\n  )\n}\n\nexport default MiniMap\n","import type { FC } from 'react'\nimport type { NodeToolbarProps } from 'reactflow'\nimport { NodeToolbar as ReactFlowNodeToolbar } from 'reactflow'\nimport type { As } from '@chakra-ui/react'\nimport { chakra, Icon } from '@chakra-ui/react'\nimport { BsGripVertical } from 'react-icons/bs'\n\nconst NodeToolbarChakra = chakra<As, NodeToolbarProps>(ReactFlowNodeToolbar)\n\nconst NodeToolbar: FC<NodeToolbarProps> = ({ children, ...props }) => {\n  return (\n    <NodeToolbarChakra\n      offset={8}\n      {...props}\n      role=\"toolbar\"\n      display=\"flex\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      height=\"50px\"\n      gap=\"0.5em\"\n      sx={{\n        borderColor: 'var(--chakra-colors-chakra-border-color)',\n        borderWidth: 1,\n        _dark: {\n          backgroundColor: 'var(--chakra-colors-gray-700)',\n        },\n        paddingRight: 2,\n        borderRadius: 'var(--chakra-radii-md)',\n        backgroundColor: 'var(--chakra-colors-chakra-body-bg)',\n        boxShadow: 'var(--chakra-shadows-dark-lg)',\n      }}\n    >\n      <Icon as={BsGripVertical} boxSize={7} aria-hidden={true} />\n      {children}\n    </NodeToolbarChakra>\n  )\n}\n\nexport default NodeToolbar\n","import type { FC } from 'react'\nimport type { ButtonGroupProps } from '@chakra-ui/react'\nimport { ButtonGroup } from '@chakra-ui/react'\n\n// TODO[NVL] ChakraUI Theme doesn't support ButtonGroup\nconst ToolbarButtonGroup: FC<ButtonGroupProps> = ({ children, ...rest }) => {\n  return (\n    <ButtonGroup size=\"sm\" variant=\"solid\" colorScheme=\"gray\" {...rest}>\n      {children}\n    </ButtonGroup>\n  )\n}\n\nexport default ToolbarButtonGroup\n"],"names":["MiniMapNode","id","x","y","width","height","style","color","strokeColor","strokeWidth","className","borderRadius","shapeRendering","onClick","selected","background","backgroundColor","fill","React","cc","event","MiniMapNode$1","memo","selector$1","s","selectorNodes","node","getAttrFunction","func","MiniMapNodes","nodeStrokeColor","nodeColor","nodeClassName","nodeBorderRadius","nodeStrokeWidth","NodeComponent","nodes","useStore","shallow","nodeOrigin","nodeColorFunc","nodeStrokeColorFunc","nodeClassNameFunc","getNodePositionWithOrigin","MiniMapNodes$1","defaultWidth","defaultHeight","selector","viewBB","getBoundsOfRects","getNodesBounds","ARIA_LABEL_KEY","MiniMap","nodeComponent","maskColor","maskStrokeColor","maskStrokeWidth","position","onNodeClick","pannable","zoomable","ariaLabel","inversePan","zoomStep","offsetScale","store","useStoreApi","svg","useRef","boundingRect","rfId","elementWidth","elementHeight","scaledWidth","scaledHeight","viewScale","viewWidth","viewHeight","offset","labelledBy","viewScaleRef","useEffect","selection","select","zoomHandler","transform","d3Selection","d3Zoom","pinchDelta","zoom","panHandler","translateExtent","moveScale","extent","nextTransform","zoomIdentity","constrainedTransform","zoomAndPanHandler","onSvgClick","rfCoord","pointer","onSvgNodeClick","nodeId","Panel","MiniMap$1","state","_a","NodeToolbarPortal","children","wrapperRef","createPortal","nodeEqualityFn","a","b","_b","_c","_d","_e","internalsSymbol","_f","nodesEqualityFn","i","storeSelector","getTransform","nodeRect","align","alignmentOffset","pos","shift","Position","NodeToolbar","isVisible","rest","contextNodeId","useNodeId","nodesSelector","useCallback","acc","selectedNodesCount","zIndex","wrapperStyle","proOptions","props","jsx","ReactFlowPanel","Box","MiniMapChakra","chakra","ReactFlowMiniMap","NodeToolbarChakra","ReactFlowNodeToolbar","jsxs","Icon","BsGripVertical","ToolbarButtonGroup","ButtonGroup"],"mappings":"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","x_google_ignoreList":[0,1]}