{"version":3,"file":"ChakraRJSForm-BfID56dF.js","sources":["../../src/api/__generated__/models/QoS.ts","../../src/__test-utils__/adapters/mqtt.ts","../../src/components/rjsf/MqttTransformation/components/ListMappings.tsx","../../src/components/rjsf/MqttTransformation/components/DataModelSources.tsx","../../src/api/hooks/useProtocolAdapters/useGetWritingSchema.ts","../../src/components/rjsf/MqttTransformation/components/mapping/MappingInstruction.tsx","../../src/components/rjsf/MqttTransformation/components/MappingEditor.tsx","../../src/components/rjsf/MqttTransformation/components/EntitySelector.tsx","../../src/components/rjsf/MqttTransformation/types.ts","../../src/components/rjsf/MqttTransformation/components/MappingContainer.tsx","../../src/components/rjsf/MqttTransformation/components/MappingDrawer.tsx","../../src/components/rjsf/Fields/MqttTransformationField.tsx","../../src/modules/ProtocolAdapters/utils/uiSchema.utils.ts","../../node_modules/.pnpm/immutable-json-patch@6.0.1/node_modules/immutable-json-patch/lib/esm/typeguards.js","../../node_modules/.pnpm/immutable-json-patch@6.0.1/node_modules/immutable-json-patch/lib/esm/utils.js","../../node_modules/.pnpm/immutable-json-patch@6.0.1/node_modules/immutable-json-patch/lib/esm/immutabilityHelpers.js","../../node_modules/.pnpm/immutable-json-patch@6.0.1/node_modules/immutable-json-patch/lib/esm/jsonPointer.js","../../node_modules/.pnpm/immutable-json-patch@6.0.1/node_modules/immutable-json-patch/lib/esm/immutableJSONPatch.js","../../src/components/rjsf/__internals/RenderFieldTemplate.tsx","../../src/components/rjsf/FieldTemplate.tsx","../../src/components/rjsf/Templates/DescriptionFieldTemplate.tsx","../../src/components/rjsf/BaseInputTemplate.tsx","../../src/components/rjsf/Form/validation.utils.ts","../../src/components/rjsf/Form/error-focus.utils.ts","../../src/components/rjsf/Templates/TitleFieldTemplate.tsx","../../src/components/rjsf/Templates/ErrorListTemplate.tsx","../../src/components/rjsf/ObjectFieldTemplate.tsx","../../src/components/rjsf/Form/ChakraRJSForm.tsx"],"sourcesContent":["/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\n/**\n * The maximum MQTT-QoS for the outgoing messages.\n */\nexport enum QoS {\n    AT_MOST_ONCE = 'AT_MOST_ONCE',\n    AT_LEAST_ONCE = 'AT_LEAST_ONCE',\n    EXACTLY_ONCE = 'EXACTLY_ONCE',\n}\n","import { QoS } from '@/api/__generated__'\n\nexport const MOCK_MAX_QOS = QoS.AT_MOST_ONCE\n","import type { FC } from 'react'\nimport { useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport type { ColumnDef } from '@tanstack/react-table'\nimport { ButtonGroup, Card, Text } from '@chakra-ui/react'\nimport { LuPencil, LuPlus, LuTrash } from 'react-icons/lu'\n\nimport type { SouthboundMapping } from '@/api/__generated__'\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport PaginatedTable from '@/components/PaginatedTable/PaginatedTable.tsx'\nimport { PLCTag, Topic } from '@/components/MQTT/EntityTag.tsx'\n\ninterface ListSubscriptionsProps {\n  items: SouthboundMapping[]\n  onEdit?: (index: number) => void\n  onDelete?: (index: number) => void\n  onAdd?: () => void\n}\n\nconst ListMappings: FC<ListSubscriptionsProps> = ({ items, onEdit, onDelete, onAdd }) => {\n  const { t } = useTranslation('components')\n\n  const columns = useMemo<ColumnDef<SouthboundMapping>[]>(() => {\n    return [\n      {\n        accessorKey: 'topicFilter',\n        enableSorting: false,\n        cell: (info) => {\n          const values = info.getValue<string>()\n          if (!values?.length) return <Text>{t('rjsf.MqttTransformationField.unset')}</Text>\n          return <Topic key={values} tagTitle={values} />\n        },\n        header: t('rjsf.MqttTransformationField.listing.sources'),\n      },\n      {\n        accessorKey: 'tagName',\n        cell: (info) => {\n          const val = info.getValue<string>()\n          return val ? <PLCTag tagTitle={val} /> : <Text>{t('rjsf.MqttTransformationField.unset')}</Text>\n        },\n        header: t('rjsf.MqttTransformationField.listing.destination'),\n        enableSorting: false,\n      },\n      {\n        id: 'actions',\n        header: t('rjsf.MqttTransformationField.listing.actions'),\n        sortingFn: undefined,\n        cell: (info) => {\n          return (\n            <ButtonGroup isAttached size=\"xs\">\n              <IconButton\n                aria-label={t('rjsf.MqttTransformationField.actions.edit.aria-label')}\n                icon={<LuPencil />}\n                onClick={() => onEdit?.(info.row.index)}\n              />\n              <IconButton\n                aria-label={t('rjsf.MqttTransformationField.actions.delete.aria-label')}\n                icon={<LuTrash />}\n                onClick={() => onDelete?.(info.row.index)}\n              />\n            </ButtonGroup>\n          )\n        },\n        footer: () => {\n          return (\n            <ButtonGroup isAttached size=\"xs\">\n              <IconButton\n                aria-label={t('rjsf.MqttTransformationField.actions.add.aria-label')}\n                icon={<LuPlus />}\n                onClick={() => onAdd?.()}\n              />\n            </ButtonGroup>\n          )\n        },\n      },\n    ]\n  }, [onAdd, onDelete, onEdit, t])\n\n  return (\n    <Card>\n      <PaginatedTable<SouthboundMapping>\n        aria-label={t('rjsf.MqttTransformationField.tabs.list')}\n        data={items}\n        columns={columns}\n        enablePagination={false}\n      />\n    </Card>\n  )\n}\n\nexport default ListMappings\n","import type { FC } from 'react'\nimport { useEffect, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport type { JSONSchema7 } from 'json-schema'\nimport type { CardProps } from '@chakra-ui/react'\nimport { Card, CardBody, CardHeader, Heading, HStack } from '@chakra-ui/react'\nimport { RxReload } from 'react-icons/rx'\n\nimport { useSamplingForTopic } from '@/api/hooks/useDomainModel/useSamplingForTopic.ts'\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport JsonSchemaBrowser from '@/components/rjsf/MqttTransformation/JsonSchemaBrowser.tsx'\nimport LoaderSpinner from '@/components/Chakra/LoaderSpinner.tsx'\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport type { JsonNode } from '@/api/__generated__'\n\ninterface DataModelSourcesProps extends Omit<CardProps, 'onChange'> {\n  topic: string\n  onChange?: (v: JsonNode | undefined) => void\n}\n\nconst DataModelSources: FC<DataModelSourcesProps> = ({ topic, onChange, ...props }) => {\n  const { t } = useTranslation()\n  const { schema, isLoading, isError, error } = useSamplingForTopic(topic)\n\n  const structuredSchema = useMemo(() => {\n    if (!schema) return [] as JSONSchema7[]\n    return [{ ...schema, title: topic }] as JSONSchema7[]\n  }, [schema, topic])\n\n  useEffect(() => {\n    onChange?.(schema)\n  }, [onChange, schema])\n\n  return (\n    <Card {...props} size=\"sm\">\n      <CardHeader as={HStack} justifyContent=\"space-between\">\n        <Heading as=\"h3\" size=\"sm\">\n          {t('components:rjsf.MqttTransformationField.sources.header')}\n        </Heading>\n        <IconButton\n          size=\"sm\"\n          icon={<RxReload />}\n          aria-label={t('components:rjsf.MqttTransformationField.sources.samples.aria-label')}\n          isDisabled\n        />\n      </CardHeader>\n\n      <CardBody maxH=\"55vh\" overflowY=\"scroll\">\n        {isLoading && <LoaderSpinner />}\n        {isError && error && <ErrorMessage message={error.message} />}\n        {!isLoading &&\n          schema &&\n          structuredSchema.map((schema) => (\n            <JsonSchemaBrowser schema={schema} isDraggable hasExamples key={schema.title} />\n          ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default DataModelSources\n","import { useQuery } from '@tanstack/react-query'\nimport type { ApiError } from '@/api/__generated__'\nimport { type TagSchema } from '@/api/__generated__'\n\nimport { QUERY_KEYS } from '@/api/utils.ts'\nimport { useHttpClient } from '@/api/hooks/useHttpClient/useHttpClient.ts'\n\nexport const useGetWritingSchema = (adapterId: string, tagName: string) => {\n  const appClient = useHttpClient()\n\n  return useQuery<TagSchema, ApiError>({\n    queryKey: [QUERY_KEYS.ADAPTERS, adapterId, QUERY_KEYS.DISCOVERY_TAGS, tagName],\n    queryFn: () => appClient.protocolAdapters.getWritingSchema(adapterId, encodeURIComponent(tagName)),\n  })\n}\n","import type { FC } from 'react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { dropTargetForElements } from '@atlaskit/pragmatic-drag-and-drop/element/adapter'\nimport {\n  Alert,\n  AlertIcon,\n  Box,\n  ButtonGroup,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Code,\n  FormControl,\n  HStack,\n  Text,\n  Textarea,\n} from '@chakra-ui/react'\nimport { RiDeleteBin2Fill, RiFormula } from 'react-icons/ri'\n\nimport type { Instruction } from '@/api/__generated__'\nimport IconButton from '@/components/Chakra/IconButton.tsx'\nimport PropertyItem from '@/components/rjsf/MqttTransformation/components/schema/PropertyItem.tsx'\nimport { formatPath, isMappingSupported } from '@/components/rjsf/MqttTransformation/utils/data-type.utils.ts'\nimport type { FlatJSONSchema7 } from '@/components/rjsf/MqttTransformation/utils/json-schema.utils.ts'\nimport { getDropZoneBorder } from '@/modules/Theme/utils.ts'\n\nenum DropState {\n  IDLE = 'IDLE',\n  DRAG_OVER = 'DRAG_OVER',\n  COMPLETED = 'COMPLETED',\n}\n\ninterface MappingInstructionProps {\n  property: FlatJSONSchema7\n  showTransformation?: boolean\n  instruction?: Instruction\n  onChange?: (source: string | undefined, destination: string) => void\n}\n\nconst MappingInstruction: FC<MappingInstructionProps> = ({\n  property,\n  instruction,\n  onChange,\n  showTransformation = false,\n}) => {\n  const { t } = useTranslation('components')\n  const [state, setState] = useState<DropState>(DropState.IDLE)\n  const dropTargetRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    const element = dropTargetRef.current\n    if (!element) return\n\n    return dropTargetForElements({\n      element,\n      canDrop: (dropTarget) => {\n        return dropTarget.source.data.type === property.type && dropTarget.source.data.arrayType === property.arrayType\n      },\n      onDragEnter: () => {\n        setState(DropState.DRAG_OVER)\n      },\n      onDragLeave: () => {\n        setState(DropState.IDLE)\n      },\n      onDrop: (dropTarget) => {\n        setState(DropState.COMPLETED)\n        const target = dropTarget.source.data as unknown as FlatJSONSchema7\n        onChange?.([...target.path, target.key].join('.') as string, property.key as string)\n      },\n    })\n  }, [onChange, property])\n\n  const activeColor = state === DropState.DRAG_OVER || state === DropState.COMPLETED ? 'green' : 'gray.500'\n  const backgroundColor = state === DropState.DRAG_OVER ? 'green.100' : 'inherit'\n  const isSupported = isMappingSupported(property)\n\n  const onHandleClear = () => {\n    setState(DropState.IDLE)\n    onChange?.(undefined, property.key as string)\n  }\n\n  if (!isSupported)\n    return (\n      <Card size=\"sm\" variant=\"outline\" w=\"100%\">\n        <CardHeader as={HStack} justifyContent=\"space-between\">\n          <PropertyItem property={property} hasTooltip />\n          <Alert status=\"warning\" size=\"sm\" variant=\"left-accent\" w=\"140px\">\n            <AlertIcon />\n            {t('rjsf.MqttTransformationField.validation.notSupported')}\n          </Alert>\n        </CardHeader>\n      </Card>\n    )\n\n  return (\n    <HStack>\n      <Card size=\"sm\" variant=\"outline\" w=\"100%\">\n        <CardHeader>\n          <PropertyItem property={property} hasTooltip />\n        </CardHeader>\n\n        <CardBody display=\"flex\" flexDirection=\"row\" gap={2}>\n          <Box\n            {...getDropZoneBorder(activeColor)}\n            backgroundColor={backgroundColor}\n            p={4}\n            py={2}\n            ref={dropTargetRef}\n            data-testid=\"mapping-instruction-dropzone\"\n            role=\"group\"\n            aria-label={t('rjsf.MqttTransformationField.instructions.dropzone.role')}\n            flex={3}\n          >\n            {instruction?.source ? (\n              <Code>{formatPath(instruction.source)}</Code>\n            ) : (\n              <Text as=\"span\" color=\"var(--chakra-colors-chakra-placeholder-color)\" userSelect=\"none\">\n                {t('rjsf.MqttTransformationField.instructions.dropzone.arial-label')}\n              </Text>\n            )}\n          </Box>\n          <ButtonGroup isAttached size=\"xs\" role=\"toolbar\">\n            <IconButton\n              aria-label={t('rjsf.MqttTransformationField.instructions.actions.clear.aria-label')}\n              icon={<RiDeleteBin2Fill />}\n              onClick={onHandleClear}\n              isDisabled={Boolean(!instruction?.source)}\n            />\n          </ButtonGroup>\n          <Alert status={instruction?.source ? 'success' : 'error'} size=\"sm\" variant=\"left-accent\" w=\"140px\">\n            <AlertIcon />\n            {instruction?.source\n              ? t('rjsf.MqttTransformationField.validation.matching')\n              : t('rjsf.MqttTransformationField.validation.required')}\n          </Alert>\n        </CardBody>\n\n        {state === DropState.COMPLETED && showTransformation && (\n          <CardFooter role=\"group\" aria-label={t('rjsf.MqttTransformationField.instructions.editor.role')}>\n            <ButtonGroup isAttached size=\"xs\" isDisabled>\n              <IconButton\n                aria-label={t('rjsf.MqttTransformationField.instructions.actions.edit.aria-label')}\n                icon={<RiFormula />}\n              />\n            </ButtonGroup>\n            <FormControl>\n              <Textarea size=\"xs\" aria-label=\"ssss\" />\n            </FormControl>\n          </CardFooter>\n        )}\n      </Card>\n    </HStack>\n  )\n}\n\nexport default MappingInstruction\n","import type { FC } from 'react'\nimport { useEffect, useMemo } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport type { CardProps } from '@chakra-ui/react'\nimport { Button, Card, CardBody, CardHeader, Heading, HStack, List, ListItem } from '@chakra-ui/react'\nimport { LuWand } from 'react-icons/lu'\n\nimport type { Instruction } from '@/api/__generated__'\nimport { useGetWritingSchema } from '@/api/hooks/useProtocolAdapters/useGetWritingSchema.ts'\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport LoaderSpinner from '@/components/Chakra/LoaderSpinner.tsx'\nimport { filterSupportedProperties } from '@/components/rjsf/MqttTransformation/utils/data-type.utils.ts'\nimport MappingInstruction from '@/components/rjsf/MqttTransformation/components/mapping/MappingInstruction.tsx'\nimport type { FlatJSONSchema7 } from '@/components/rjsf/MqttTransformation/utils/json-schema.utils.ts'\nimport { getPropertyListFrom } from '@/components/rjsf/MqttTransformation/utils/json-schema.utils.ts'\n\ninterface MappingEditorProps extends Omit<CardProps, 'onChange'> {\n  topic: string\n  adapterType: string\n  adapterId: string\n  showTransformation?: boolean\n  instructions?: Instruction[]\n  onChange?: (v: Instruction[] | undefined) => void\n  onSchemaReady?: (v: FlatJSONSchema7[]) => void\n}\n\nconst MappingEditor: FC<MappingEditorProps> = ({\n  topic,\n  showTransformation = false,\n  instructions,\n  onChange,\n  onSchemaReady,\n  adapterId,\n  adapterType,\n  ...props\n}) => {\n  const { t } = useTranslation('components')\n  const { data, isLoading, isError, error, isSuccess } = useGetWritingSchema(adapterId, topic)\n\n  const properties = useMemo(() => {\n    const allProperties = data ? getPropertyListFrom(data) : []\n    return allProperties.filter(filterSupportedProperties)\n  }, [data])\n\n  useEffect(() => {\n    if (properties.length) onSchemaReady?.(properties)\n    // TODO[NVL] Infinite re-rendering prevented by removing callback from dependencies; check if side effects\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [properties, properties.length])\n\n  return (\n    <Card {...props} size=\"sm\">\n      <CardHeader as={HStack} justifyContent=\"space-between\">\n        <Heading as=\"h3\" size=\"sm\">\n          {t('rjsf.MqttTransformationField.mapping.header')}\n        </Heading>\n        <Button data-testid=\"auto-mapping\" size=\"sm\" leftIcon={<LuWand />} isDisabled>\n          {t('rjsf.MqttTransformationField.mapping.auto.aria-label')}\n        </Button>\n      </CardHeader>\n      <CardBody maxH=\"58vh\" overflowY=\"scroll\">\n        {isLoading && <LoaderSpinner />}\n        {isError && error && <ErrorMessage message={error.message} />}\n        {!isSuccess && !isError && !isLoading && (\n          <ErrorMessage message={t('rjsf.MqttTransformationField.destination.prompt')} status=\"info\" />\n        )}\n        {isSuccess && (\n          <List>\n            {properties.map((property) => {\n              const instruction = instructions\n                ? instructions.findIndex((instruction) => instruction.destination === property.key)\n                : -1\n              return (\n                <ListItem key={property.key}>\n                  <MappingInstruction\n                    showTransformation={showTransformation}\n                    property={property}\n                    instruction={instruction !== -1 ? instructions?.[instruction] : undefined}\n                    onChange={(source, destination) => {\n                      let newMappings = [...(instructions || [])]\n                      if (source) {\n                        const newItem: Instruction = {\n                          source: source,\n                          destination: destination,\n                        }\n                        if (instruction !== -1) {\n                          newMappings[instruction] = newItem\n                        } else newMappings.push(newItem)\n                      } else {\n                        newMappings = newMappings.filter((mapped) => mapped.destination !== destination)\n                      }\n\n                      onChange?.(newMappings)\n                    }}\n                  />\n                </ListItem>\n              )\n            })}\n          </List>\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default MappingEditor\n","import type { FC } from 'react'\n\nimport { SelectTag, SelectTopicFilter } from '@/components/MQTT/EntityCreatableSelect.tsx'\nimport { SelectEntityType } from '@/components/MQTT/types.ts'\nimport { FormControl, FormLabel } from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\n\ninterface SourceSelectorProps {\n  adapterType: string\n  adapterId: string\n  value: string | undefined\n  onChange: (v: string | readonly string[] | null) => void\n}\n\nexport const SelectSourceTopics: FC<SourceSelectorProps> = ({ value, onChange }) => {\n  const { t } = useTranslation('components')\n  return (\n    <FormControl isRequired isInvalid={!value}>\n      <FormLabel htmlFor={`react-select-${SelectEntityType.TOPIC_FILTER}-input`}>\n        {t('rjsf.MqttTransformationField.sources.selector.formLabel')}\n      </FormLabel>\n      <SelectTopicFilter value={value || null} onChange={onChange} id=\"mapping-select-source\" />{' '}\n    </FormControl>\n  )\n}\n\nexport const SelectDestinationTag: FC<SourceSelectorProps> = ({ adapterId, value, onChange }) => {\n  const { t } = useTranslation('components')\n  return (\n    <FormControl isRequired isInvalid={!value}>\n      <FormLabel htmlFor={`react-select-${SelectEntityType.TAG}-input`}>\n        {t('rjsf.MqttTransformationField.destination.selector.formLabel')}\n      </FormLabel>\n      <SelectTag adapterId={adapterId} id=\"mapping-select-destination\" onChange={onChange} value={value || null} />\n    </FormControl>\n  )\n}\n","export enum MappingStrategy {\n  EXACT = 'EXACT',\n  TYPED = 'TYPED',\n  TRANSFORMED = 'TRANSFORMED',\n}\n","import type { FC } from 'react'\nimport { useCallback, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { FaRightFromBracket } from 'react-icons/fa6'\nimport { Card, CardBody, HStack, Icon, Stack, VStack } from '@chakra-ui/react'\n\nimport type { SouthboundMapping, JsonNode } from '@/api/__generated__'\nimport DataModelSources from '@/components/rjsf/MqttTransformation/components/DataModelSources.tsx'\nimport MappingEditor from '@/components/rjsf/MqttTransformation/components/MappingEditor.tsx'\nimport {\n  SelectDestinationTag,\n  SelectSourceTopics,\n} from '@/components/rjsf/MqttTransformation/components/EntitySelector.tsx'\nimport type { FlatJSONSchema7 } from '@/components/rjsf/MqttTransformation/utils/json-schema.utils.ts'\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport { MappingStrategy } from '@/components/rjsf/MqttTransformation/types.ts'\n\ninterface SubscriptionContainerProps {\n  item: SouthboundMapping\n  adapterType: string\n  adapterId: string\n  onClose: () => void\n  onSubmit: (newItem: SouthboundMapping) => void\n  onChange: (id: keyof SouthboundMapping, v: JsonNode | string | string[] | null) => void\n}\n\nconst MappingContainer: FC<SubscriptionContainerProps> = ({ adapterId, adapterType, item, onChange }) => {\n  const { t } = useTranslation('components')\n  const [strategy] = useState<MappingStrategy>(MappingStrategy.TYPED)\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const onSchemaReadyHandler = useCallback((_properties: FlatJSONSchema7[]) => {\n    /// TODO[⚠ 28441 ⚠] This will not work anymore because of nested structure. DO NOT MERGE AND FIX\n    // onChange('metadata', { ...item.metadata, destination: properties })\n  }, [])\n\n  return (\n    <VStack alignItems=\"stretch\" gap={4}>\n      <Stack gap={2} flexDirection=\"row\">\n        <VStack flex={1} alignItems=\"stretch\" maxW=\"40vw\">\n          <SelectSourceTopics\n            adapterId={adapterId}\n            adapterType={adapterType}\n            value={item.topicFilter}\n            onChange={(v) => onChange('topicFilter', v)}\n          />\n          {!item.topicFilter && (\n            <Card size=\"sm\" h=\"25vh\">\n              <CardBody pt=\"50px\">\n                <ErrorMessage message={t('rjsf.MqttTransformationField.sources.prompt')} status=\"info\" />\n              </CardBody>\n            </Card>\n          )}\n          {item.topicFilter && <DataModelSources flex={1} topic={item.topicFilter} minH={250} />}\n        </VStack>\n        <VStack justifyContent=\"center\">\n          <HStack height={38}>\n            <Icon as={FaRightFromBracket} />\n          </HStack>\n        </VStack>\n        <VStack flex={1} alignItems=\"stretch\" maxW=\"50vw\">\n          <SelectDestinationTag\n            adapterId={adapterId}\n            adapterType={adapterType}\n            value={item.tagName}\n            onChange={(v) => onChange('tagName', v)}\n          />\n          {!item.tagName && (\n            <Card size=\"sm\" h=\"25vh\">\n              <CardBody pt=\"50px\">\n                <ErrorMessage message={t('rjsf.MqttTransformationField.destination.prompt')} status=\"info\" />\n              </CardBody>\n            </Card>\n          )}\n\n          {item.tagName && (\n            <MappingEditor\n              flex={1}\n              adapterId={adapterId}\n              adapterType={adapterType}\n              topic={item.tagName}\n              instructions={item.fieldMapping?.instructions}\n              showTransformation={strategy === MappingStrategy.TRANSFORMED}\n              onChange={(mappings) => {\n                if (!mappings) {\n                  return\n                }\n                onChange('fieldMapping', { instructions: [...(item.fieldMapping?.instructions || []), ...mappings] })\n              }}\n              onSchemaReady={onSchemaReadyHandler}\n            />\n          )}\n        </VStack>\n      </Stack>\n    </VStack>\n  )\n}\n\nexport default MappingContainer\n","import type { FC } from 'react'\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Button,\n  Card,\n  CardBody,\n  ButtonGroup,\n} from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\n\nimport type { SouthboundMapping, JsonNode } from '@/api/__generated__'\nimport MappingContainer from '@/components/rjsf/MqttTransformation/components/MappingContainer.tsx'\n\ninterface MappingDrawerProps {\n  adapterId: string\n  adapterType: string\n  item: SouthboundMapping\n  onSubmit: (newItem: SouthboundMapping) => void\n  onChange: (id: keyof SouthboundMapping, v: JsonNode | string | string[] | null) => void\n  onClose: () => void\n}\n\nconst MappingDrawer: FC<MappingDrawerProps> = ({ adapterId, adapterType, item, onClose, onSubmit, onChange }) => {\n  const { t } = useTranslation('components')\n\n  return (\n    <Drawer isOpen={true} placement=\"right\" size=\"full\" onClose={onClose} variant=\"hivemq\">\n      <DrawerOverlay />\n      <DrawerContent aria-label={t('rjsf.MqttTransformationField.tabs.editor')}>\n        <DrawerCloseButton />\n        <DrawerHeader>{t('rjsf.MqttTransformationField.tabs.editor')}</DrawerHeader>\n\n        <DrawerBody>\n          <Card>\n            <CardBody>\n              <MappingContainer\n                adapterId={adapterId}\n                adapterType={adapterType}\n                item={item}\n                onClose={onClose}\n                onSubmit={onSubmit}\n                onChange={onChange}\n              />\n            </CardBody>\n          </Card>\n        </DrawerBody>\n\n        <DrawerFooter>\n          <ButtonGroup>\n            <Button onClick={onClose}>{t('rjsf.MqttTransformationField.actions.cancel.aria-label')}</Button>\n            <Button onClick={() => onSubmit(item)} variant=\"primary\">\n              {t('rjsf.MqttTransformationField.actions.save.aria-label')}\n            </Button>\n          </ButtonGroup>\n        </DrawerFooter>\n      </DrawerContent>\n    </Drawer>\n  )\n}\n\nexport default MappingDrawer\n","import type { FC } from 'react'\nimport { useEffect, useState } from 'react'\nimport type { FieldProps } from '@rjsf/utils'\nimport { getTemplate, getUiOptions } from '@rjsf/utils'\nimport { useTranslation } from 'react-i18next'\nimport type { RJSFSchema } from '@rjsf/utils/src/types.ts'\n\nimport { MOCK_MAX_QOS } from '@/__test-utils__/adapters/mqtt.ts'\nimport type { SouthboundMapping } from '@/api/__generated__'\nimport ListMappings from '@/components/rjsf/MqttTransformation/components/ListMappings.tsx'\nimport MappingDrawer from '@/components/rjsf/MqttTransformation/components/MappingDrawer.tsx'\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport type { AdapterContext } from '@/modules/ProtocolAdapters/types.ts'\n\nexport const MqttTransformationField: FC<FieldProps<SouthboundMapping[], RJSFSchema, AdapterContext>> = (props) => {\n  const { t } = useTranslation('components')\n  const [selectedItem, setSelectedItem] = useState<number | undefined>(undefined)\n  const [subsData, setSubsData] = useState<SouthboundMapping[] | undefined>(props.formData)\n\n  const { adapterId, adapterType } = props.formContext || {}\n\n  useEffect(() => {\n    props.onChange(subsData)\n  }, [props, subsData])\n\n  const handleEdit = (index: number) => {\n    setSelectedItem(index)\n  }\n\n  const handleDelete = (index: number) => {\n    setSubsData((old) => {\n      const gg = [...(old || [])]\n      gg.splice(index, 1)\n      return [...gg]\n    })\n  }\n\n  const handleClose = () => {\n    setSelectedItem(undefined)\n  }\n\n  const handleSubmit = () => {\n    setSelectedItem(undefined)\n    props.onChange(subsData)\n  }\n\n  const handleAdd = () => {\n    setSubsData((old) => [\n      ...(old || []),\n      {\n        topicFilter: undefined,\n        tagName: undefined,\n        maxQoS: MOCK_MAX_QOS,\n        fieldMapping: {\n          instructions: [],\n          metadata: {\n            source: { properties: {} },\n            destination: { properties: {} },\n          },\n        },\n      },\n    ])\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const handleChange = (id: keyof SouthboundMapping, v: any) => {\n    if (selectedItem === undefined) return\n    setSubsData((old) => {\n      const currentItem = old?.[selectedItem]\n      if (currentItem) {\n        // @ts-ignore\n        currentItem[id] = v\n      }\n      return [...(old || [])]\n    })\n  }\n\n  const ArrayFieldDescriptionTemplate = getTemplate<'ArrayFieldDescriptionTemplate', SouthboundMapping[]>(\n    'ArrayFieldDescriptionTemplate',\n    props.registry,\n    props.uiOptions\n  )\n\n  const ArrayFieldTitleTemplate = getTemplate<'ArrayFieldTitleTemplate', SouthboundMapping[]>(\n    'ArrayFieldTitleTemplate',\n    props.registry,\n    props.uiOptions\n  )\n  const uiOptions = getUiOptions(props.uiSchema)\n\n  if (!subsData || !adapterId || !adapterType)\n    return <ErrorMessage message={t('rjsf.MqttTransformationField.error.internalError')} status=\"error\" />\n\n  return (\n    <>\n      <ArrayFieldTitleTemplate\n        idSchema={props.idSchema}\n        title={uiOptions.title || props.schema.title}\n        schema={props.schema}\n        uiSchema={props.uiSchema}\n        required={props.required}\n        registry={props.registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={props.idSchema}\n        description={uiOptions.description || props.schema.description}\n        schema={props.schema}\n        uiSchema={props.uiSchema}\n        registry={props.registry}\n      />\n\n      <ListMappings items={subsData} onEdit={handleEdit} onAdd={handleAdd} onDelete={handleDelete} />\n      {selectedItem != undefined && (\n        <MappingDrawer\n          adapterId={adapterId}\n          adapterType={adapterType}\n          item={subsData[selectedItem]}\n          onClose={handleClose}\n          onSubmit={handleSubmit}\n          onChange={handleChange}\n        />\n      )}\n    </>\n  )\n}\n","import type { RegistryFieldsType, RegistryWidgetsType, UiSchema } from '@rjsf/utils'\n\nimport { CompactArrayField, MqttTransformationField } from '@/components/rjsf/Fields'\n\nimport { JSONSchemaEditor } from '@datahub/components/forms'\n\nexport const getRequiredUiSchema = (uiSchema: UiSchema | undefined, isNewAdapter: boolean): UiSchema => {\n  const { ['ui:submitButtonOptions']: submitButtonOptions, id, ...rest } = uiSchema || {}\n  const newSchema: UiSchema = {\n    'ui:submitButtonOptions': {\n      // required to relocate the submit button outside the form\n      ...submitButtonOptions,\n      norender: true,\n    },\n    id: {\n      // required to prevent custom validation when editing an existing adapter\n      ...id,\n      'ui:disabled': !isNewAdapter,\n    },\n    ...rest,\n  }\n\n  return newSchema\n}\n\nexport const adapterJSFWidgets: RegistryWidgetsType = {\n  // @ts-ignore [24369] Turn discovery browser off (and replace by regular text input)\n  'discovery:tagBrowser': 'text',\n  'application/schema+json': JSONSchemaEditor,\n  // TODO[⚠ 28441 ⚠] This will need to be put back in place\n  // 'mqtt-tag': registerEntitySelectWidget(CustomFormat.MQTT_TAG),\n  // 'mqtt-topic-filter': registerEntitySelectWidget(CustomFormat.MQTT_TOPIC_FILTER),\n  // 'mqtt-topic': registerEntitySelectWidget(CustomFormat.MQTT_TOPIC),\n}\n\nexport const adapterJSFFields: RegistryFieldsType = {\n  compactTable: CompactArrayField,\n  'mqtt:transform': MqttTransformationField,\n}\n","export function isJSONArray(value) {\n  return Array.isArray(value);\n}\nexport function isJSONObject(value) {\n  return value !== null && typeof value === 'object' && (value.constructor === undefined ||\n  // for example Object.create(null)\n  value.constructor.name === 'Object') // do not match on classes or Array\n  ;\n}\nexport function isJSONPatchOperation(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && typeof value === 'object' ? typeof value.op === 'string' : false;\n}\nexport function isJSONPatchAdd(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && typeof value === 'object' ? value.op === 'add' : false;\n}\nexport function isJSONPatchRemove(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && typeof value === 'object' ? value.op === 'remove' : false;\n}\nexport function isJSONPatchReplace(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && typeof value === 'object' ? value.op === 'replace' : false;\n}\nexport function isJSONPatchCopy(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && typeof value === 'object' ? value.op === 'copy' : false;\n}\nexport function isJSONPatchMove(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && typeof value === 'object' ? value.op === 'move' : false;\n}\nexport function isJSONPatchTest(value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return value && typeof value === 'object' ? value.op === 'test' : false;\n}\n//# sourceMappingURL=typeguards.js.map","/**\n * Test deep equality of two JSON values, objects, or arrays\n */\n// TODO: write unit tests\nexport function isEqual(a, b) {\n  // FIXME: this function will return false for two objects with the same keys\n  //  but different order of keys\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\n/**\n * Test whether two values are strictly equal\n */\nexport function strictEqual(a, b) {\n  return a === b;\n}\n\n/**\n * Get all but the last items from an array\n */\n// TODO: write unit tests\nexport function initial(array) {\n  return array.slice(0, array.length - 1);\n}\n\n/**\n * Get the last item from an array\n */\n// TODO: write unit tests\nexport function last(array) {\n  return array[array.length - 1];\n}\n\n/**\n * Test whether array1 starts with array2\n * @param array1\n * @param array2\n * @param [isEqual] Optional function to check equality\n */\nexport function startsWith(array1, array2) {\n  let isEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : strictEqual;\n  if (array1.length < array2.length) {\n    return false;\n  }\n  for (let i = 0; i < array2.length; i++) {\n    if (!isEqual(array1[i], array2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Test whether a value is an Object or an Array (and not a primitive JSON value)\n */\n// TODO: write unit tests\nexport function isObjectOrArray(value) {\n  return typeof value === 'object' && value !== null;\n}\n//# sourceMappingURL=utils.js.map","/**\n * Immutability helpers\n *\n * inspiration:\n *\n * https://www.npmjs.com/package/seamless-immutable\n * https://www.npmjs.com/package/ih\n * https://www.npmjs.com/package/mutatis\n * https://github.com/mariocasciaro/object-path-immutable\n */\nimport { isJSONArray, isJSONObject } from './typeguards.js';\nimport { isObjectOrArray } from './utils.js';\n\n/**\n * Shallow clone of an Object, Array, or value\n * Symbols are cloned too.\n */\nexport function shallowClone(value) {\n  if (isJSONArray(value)) {\n    // copy array items\n    const copy = value.slice();\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol];\n    });\n    return copy;\n  } else if (isJSONObject(value)) {\n    // copy object properties\n    const copy = {\n      ...value\n    };\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol];\n    });\n    return copy;\n  } else {\n    return value;\n  }\n}\n\n/**\n * Update a value in an object in an immutable way.\n * If the value is unchanged, the original object will be returned\n */\nexport function applyProp(object, key, value) {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (object[key] === value) {\n    // return original object unchanged when the new value is identical to the old one\n    return object;\n  } else {\n    const updatedObject = shallowClone(object);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    updatedObject[key] = value;\n    return updatedObject;\n  }\n}\n\n/**\n * helper function to get a nested property in an object or array\n *\n * @return Returns the field when found, or undefined when the path doesn't exist\n */\nexport function getIn(object, path) {\n  let value = object;\n  let i = 0;\n  while (i < path.length) {\n    if (isJSONObject(value)) {\n      value = value[path[i]];\n    } else if (isJSONArray(value)) {\n      value = value[parseInt(path[i])];\n    } else {\n      value = undefined;\n    }\n    i++;\n  }\n  return value;\n}\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @param object\n * @param path\n * @param value\n * @param [createPath=false]\n *                    If true, `path` will be created when (partly) missing in\n *                    the object. For correctly creating nested Arrays or\n *                    Objects, the function relies on `path` containing number\n *                    in case of array indexes.\n *                    If false (default), an error will be thrown when the\n *                    path doesn't exist.\n * @return Returns a new, updated object or array\n */\nexport function setIn(object, path, value) {\n  let createPath = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (path.length === 0) {\n    return value;\n  }\n  const key = path[0];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = setIn(object ? object[key] : undefined, path.slice(1), value, createPath);\n  if (isJSONObject(object) || isJSONArray(object)) {\n    return applyProp(object, key, updatedValue);\n  } else {\n    if (createPath) {\n      const newObject = IS_INTEGER_REGEX.test(key) ? [] : {};\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      newObject[key] = updatedValue;\n      return newObject;\n    } else {\n      throw new Error('Path does not exist');\n    }\n  }\n}\nconst IS_INTEGER_REGEX = /^\\d+$/;\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @return  Returns a new, updated object or array\n */\nexport function updateIn(object, path, transform) {\n  if (path.length === 0) {\n    return transform(object);\n  }\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path doesn\\'t exist');\n  }\n  const key = path[0];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = updateIn(object[key], path.slice(1), transform);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue);\n}\n\n/**\n * helper function to delete a nested property in an object\n * without mutating the object itself.\n *\n * @return Returns a new, updated object or array\n */\nexport function deleteIn(object, path) {\n  if (path.length === 0) {\n    return object;\n  }\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path does not exist');\n  }\n  if (path.length === 1) {\n    const key = path[0];\n    if (!(key in object)) {\n      // key doesn't exist. return object unchanged\n      return object;\n    } else {\n      const updatedObject = shallowClone(object);\n      if (isJSONArray(updatedObject)) {\n        updatedObject.splice(parseInt(key), 1);\n      }\n      if (isJSONObject(updatedObject)) {\n        delete updatedObject[key];\n      }\n      return updatedObject;\n    }\n  }\n  const key = path[0];\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = deleteIn(object[key], path.slice(1));\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue);\n}\n\n/**\n * Insert a new item in an array at a specific index.\n * Example usage:\n *\n *     insertAt({arr: [1,2,3]}, ['arr', '2'], 'inserted')  // [1,2,'inserted',3]\n */\nexport function insertAt(document, path, value) {\n  const parentPath = path.slice(0, path.length - 1);\n  const index = path[path.length - 1];\n  return updateIn(document, parentPath, items => {\n    if (!Array.isArray(items)) {\n      throw new TypeError('Array expected at path ' + JSON.stringify(parentPath));\n    }\n    const updatedItems = shallowClone(items);\n    updatedItems.splice(parseInt(index), 0, value);\n    return updatedItems;\n  });\n}\n\n/**\n * Transform a JSON object, traverse over the whole object,\n * and allow replacing Objects/Arrays/values.\n */\nexport function transform(document, callback) {\n  let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  // eslint-disable-next-line n/no-callback-literal\n  const updated1 = callback(document, path);\n  if (isJSONArray(updated1)) {\n    // array\n    let updated2;\n    for (let i = 0; i < updated1.length; i++) {\n      const before = updated1[i];\n      // we stringify the index here, so the path only contains strings and can be safely\n      // stringified/parsed to JSONPointer without loosing information.\n      // We do not want to rely on path keys being numeric/string.\n      const after = transform(before, callback, path.concat(i + ''));\n      if (after !== before) {\n        if (!updated2) {\n          updated2 = shallowClone(updated1);\n        }\n        updated2[i] = after;\n      }\n    }\n    return updated2 || updated1;\n  } else if (isJSONObject(updated1)) {\n    // object\n    let updated2;\n    for (const key in updated1) {\n      if (Object.hasOwnProperty.call(updated1, key)) {\n        const before = updated1[key];\n        const after = transform(before, callback, path.concat(key));\n        if (after !== before) {\n          if (!updated2) {\n            updated2 = shallowClone(updated1);\n          }\n          updated2[key] = after;\n        }\n      }\n    }\n    return updated2 || updated1;\n  } else {\n    // number, string, boolean, null\n    return updated1;\n  }\n}\n\n/**\n * Test whether a path exists in a JSON object\n * @return Returns true if the path exists, else returns false\n */\nexport function existsIn(document, path) {\n  if (document === undefined) {\n    return false;\n  }\n  if (path.length === 0) {\n    return true;\n  }\n  if (document === null) {\n    return false;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return existsIn(document[path[0]], path.slice(1));\n}\n//# sourceMappingURL=immutabilityHelpers.js.map","/**\n * Parse a JSON Pointer\n */\nexport function parseJSONPointer(pointer) {\n  const path = pointer.split('/');\n  path.shift(); // remove the first empty entry\n\n  return path.map(p => p.replace(/~1/g, '/').replace(/~0/g, '~'));\n}\n\n/**\n * Compile a JSON Pointer\n */\nexport function compileJSONPointer(path) {\n  return path.map(compileJSONPointerProp).join('');\n}\n\n/**\n * Compile a single path property from a JSONPath\n */\nexport function compileJSONPointerProp(pathProp) {\n  return '/' + String(pathProp).replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n/**\n * Append a path property to a JSONPointer\n */\nexport function appendToJSONPointer(pointer, pathProp) {\n  return pointer + compileJSONPointerProp(pathProp);\n}\n\n/**\n * Test whether `pointer` starts with `searchPointer`\n */\nexport function startsWithJSONPointer(pointer, searchPointer) {\n  return pointer.startsWith(searchPointer) && (pointer.length === searchPointer.length || pointer[searchPointer.length] === '/');\n}\n//# sourceMappingURL=jsonPointer.js.map","import { deleteIn, existsIn, getIn, insertAt, setIn } from './immutabilityHelpers.js';\nimport { compileJSONPointer, parseJSONPointer } from './jsonPointer.js';\nimport { initial, isEqual, last } from './utils.js';\n\n/**\n * Apply a patch to a JSON object\n * The original JSON object will not be changed,\n * instead, the patch is applied in an immutable way\n */\nexport function immutableJSONPatch(document, operations, options) {\n  let updatedDocument = document;\n  for (let i = 0; i < operations.length; i++) {\n    validateJSONPatchOperation(operations[i]);\n    let operation = operations[i];\n\n    // TODO: test before\n    if (options && options.before) {\n      const result = options.before(updatedDocument, operation);\n      if (result !== undefined) {\n        if (result.document !== undefined) {\n          updatedDocument = result.document;\n        }\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (result.json !== undefined) {\n          // TODO: deprecated since v5.0.0. Cleanup this warning some day\n          throw new Error('Deprecation warning: returned object property \".json\" has been renamed to \".document\"');\n        }\n        if (result.operation !== undefined) {\n          operation = result.operation;\n        }\n      }\n    }\n    const previousDocument = updatedDocument;\n    const path = parsePath(updatedDocument, operation.path);\n    if (operation.op === 'add') {\n      updatedDocument = add(updatedDocument, path, operation.value);\n    } else if (operation.op === 'remove') {\n      updatedDocument = remove(updatedDocument, path);\n    } else if (operation.op === 'replace') {\n      updatedDocument = replace(updatedDocument, path, operation.value);\n    } else if (operation.op === 'copy') {\n      updatedDocument = copy(updatedDocument, path, parseFrom(operation.from));\n    } else if (operation.op === 'move') {\n      updatedDocument = move(updatedDocument, path, parseFrom(operation.from));\n    } else if (operation.op === 'test') {\n      test(updatedDocument, path, operation.value);\n    } else {\n      throw new Error('Unknown JSONPatch operation ' + JSON.stringify(operation));\n    }\n\n    // TODO: test after\n    if (options && options.after) {\n      const result = options.after(updatedDocument, operation, previousDocument);\n      if (result !== undefined) {\n        updatedDocument = result;\n      }\n    }\n  }\n  return updatedDocument;\n}\n\n/**\n * Replace an existing item\n */\nexport function replace(document, path, value) {\n  return setIn(document, path, value);\n}\n\n/**\n * Remove an item or property\n */\nexport function remove(document, path) {\n  return deleteIn(document, path);\n}\n\n/**\n * Add an item or property\n */\nexport function add(document, path, value) {\n  if (isArrayItem(document, path)) {\n    return insertAt(document, path, value);\n  } else {\n    return setIn(document, path, value);\n  }\n}\n\n/**\n * Copy a value\n */\nexport function copy(document, path, from) {\n  const value = getIn(document, from);\n  if (isArrayItem(document, path)) {\n    return insertAt(document, path, value);\n  } else {\n    const value = getIn(document, from);\n    return setIn(document, path, value);\n  }\n}\n\n/**\n * Move a value\n */\nexport function move(document, path, from) {\n  const value = getIn(document, from);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const removedJson = deleteIn(document, from);\n  return isArrayItem(removedJson, path) ? insertAt(removedJson, path, value) : setIn(removedJson, path, value);\n}\n\n/**\n * Test whether the data contains the provided value at the specified path.\n * Throws an error when the test fails\n */\nexport function test(document, path, value) {\n  if (value === undefined) {\n    throw new Error(`Test failed: no value provided (path: \"${compileJSONPointer(path)}\")`);\n  }\n  if (!existsIn(document, path)) {\n    throw new Error(`Test failed: path not found (path: \"${compileJSONPointer(path)}\")`);\n  }\n  const actualValue = getIn(document, path);\n  if (!isEqual(actualValue, value)) {\n    throw new Error(`Test failed, value differs (path: \"${compileJSONPointer(path)}\")`);\n  }\n}\nexport function isArrayItem(document, path) {\n  if (path.length === 0) {\n    return false;\n  }\n  const parent = getIn(document, initial(path));\n  return Array.isArray(parent);\n}\n\n/**\n * Resolve the path index of an array, resolves indexes '-'\n * @returns Returns the resolved path\n */\nexport function resolvePathIndex(document, path) {\n  if (last(path) !== '-') {\n    return path;\n  }\n  const parentPath = initial(path);\n  const parent = getIn(document, parentPath);\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return parentPath.concat(parent.length);\n}\n\n/**\n * Validate a JSONPatch operation.\n * Throws an error when there is an issue\n */\nexport function validateJSONPatchOperation(operation) {\n  // TODO: write unit tests\n  const ops = ['add', 'remove', 'replace', 'copy', 'move', 'test'];\n  if (!ops.includes(operation.op)) {\n    throw new Error('Unknown JSONPatch op ' + JSON.stringify(operation.op));\n  }\n  if (typeof operation.path !== 'string') {\n    throw new Error('Required property \"path\" missing or not a string in operation ' + JSON.stringify(operation));\n  }\n  if (operation.op === 'copy' || operation.op === 'move') {\n    if (typeof operation.from !== 'string') {\n      throw new Error('Required property \"from\" missing or not a string in operation ' + JSON.stringify(operation));\n    }\n  }\n}\nexport function parsePath(document, pointer) {\n  return resolvePathIndex(document, parseJSONPointer(pointer));\n}\nexport function parseFrom(fromPointer) {\n  return parseJSONPointer(fromPointer);\n}\n//# sourceMappingURL=immutableJSONPatch.js.map","import type { FC } from 'react'\nimport type { FieldTemplateProps } from '@rjsf/utils'\nimport { Box, FormControl, FormHelperText } from '@chakra-ui/react'\n\nexport const RenderFieldTemplate: FC<FieldTemplateProps> = ({\n  required,\n  rawErrors,\n  children,\n  errors,\n  displayLabel,\n  rawDescription,\n  description,\n  help,\n  label,\n}) => {\n  if (!displayLabel && !rawDescription && !label) {\n    // This is assuming that no label/description means a mainly structuring element\n    return <Box>{children}</Box>\n  }\n\n  return (\n    <FormControl variant=\"hivemq\" isRequired={required} isInvalid={rawErrors && rawErrors.length > 0}>\n      {children}\n      {rawErrors && rawErrors.length > 0 ? (\n        errors\n      ) : (\n        <FormHelperText>{displayLabel && rawDescription ? description : null}</FormHelperText>\n      )}\n      {help}\n    </FormControl>\n  )\n}\n","import type { FC } from 'react'\nimport type { FieldTemplateProps } from '@rjsf/utils'\nimport { getTemplate, getUiOptions } from '@rjsf/utils'\n\nimport { RenderFieldTemplate } from './__internals/RenderFieldTemplate.tsx'\n\n/**\n * This is a redesign of the original ChakraUI template for fields.\n * See https://github.com/rjsf-team/react-jsonschema-form/blob/main/packages/chakra-ui/src/FieldTemplate/FieldTemplate.tsx\n *\n * @changelog:\n *  - use FormErrorMessage and FormHelperText appropriately\n *  - both help text and error message are mutually exclusive\n */\nexport const FieldTemplate: FC<FieldTemplateProps> = (props) => {\n  const {\n    id,\n    children,\n    classNames,\n    style,\n    disabled,\n    hidden,\n    label,\n    onDropPropertyClick,\n    onKeyChange,\n    readonly,\n    registry,\n    required,\n    schema,\n    uiSchema,\n  } = props\n\n  const uiOptions = getUiOptions(uiSchema)\n  const WrapIfAdditionalTemplate = getTemplate<'WrapIfAdditionalTemplate'>(\n    'WrapIfAdditionalTemplate',\n    registry,\n    uiOptions\n  )\n\n  if (hidden) {\n    return <div style={{ display: 'none' }}>{children}</div>\n  }\n\n  return (\n    <WrapIfAdditionalTemplate\n      classNames={classNames}\n      style={style}\n      disabled={disabled}\n      id={id}\n      label={label}\n      onDropPropertyClick={onDropPropertyClick}\n      onKeyChange={onKeyChange}\n      readonly={readonly}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    >\n      <RenderFieldTemplate {...props}>{children}</RenderFieldTemplate>\n    </WrapIfAdditionalTemplate>\n  )\n}\n","import type { DescriptionFieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils'\nimport type { GenericObjectType } from '@rjsf/utils/src/types.ts'\nimport { Text } from '@chakra-ui/react'\n\nexport const DescriptionFieldTemplate = <\n  T = unknown,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = GenericObjectType,\n>({\n  description,\n  id,\n}: DescriptionFieldProps<T, S, F>) => {\n  if (!description) {\n    return null\n  }\n\n  // Override to fix bug with nested p\n  if (typeof description === 'string') {\n    return (\n      <Text id={id} mt={2} mb={4}>\n        {description}\n      </Text>\n    )\n  }\n\n  return description\n}\n","import type { ChangeEvent, FC, FocusEvent } from 'react'\nimport { getChakra } from '@rjsf/chakra-ui/lib/utils'\nimport type { BaseInputTemplateProps } from '@rjsf/utils'\nimport { ariaDescribedByIds, examplesId, getInputProps, labelValue } from '@rjsf/utils'\nimport { FormControl, FormLabel, Input } from '@chakra-ui/react'\n\n// TODO[RJSF] Bug with file accept; see https://github.com/rjsf-team/react-jsonschema-form/issues/4404\nexport const BaseInputTemplate: FC<BaseInputTemplateProps> = (props) => {\n  const { schema } = props\n\n  const inputProps = getInputProps(schema, props.type, props.options)\n  const chakraProps = getChakra({ uiSchema: props.uiSchema })\n  if (props.accept && props.type === 'file') {\n    // @ts-ignore\n    inputProps.accept = props.accept\n  }\n\n  const _onChange = ({ target: { value } }: ChangeEvent<HTMLInputElement>) =>\n    props.onChange(value === '' ? props.options.emptyValue : value)\n  const _onBlur = ({ target }: FocusEvent<HTMLInputElement>) => props.onBlur(props.id, target && target.value)\n  const _onFocus = ({ target }: FocusEvent<HTMLInputElement>) => props.onFocus(props.id, target && target.value)\n\n  return (\n    <FormControl\n      mb={1}\n      {...chakraProps}\n      isDisabled={props.disabled || props.readonly}\n      isRequired={props.required}\n      isReadOnly={props.readonly}\n      isInvalid={props.rawErrors && props.rawErrors.length > 0}\n    >\n      {labelValue(\n        <FormLabel htmlFor={props.id} id={`${props.id}-label`}>\n          {props.label}\n        </FormLabel>,\n        props.hideLabel || !props.label\n      )}\n      <Input\n        id={props.id}\n        name={props.id}\n        value={props.value || props.value === 0 ? props.value : ''}\n        onChange={props.onChangeOverride || _onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        autoFocus={props.autofocus}\n        placeholder={props.placeholder}\n        {...inputProps}\n        list={schema.examples ? examplesId(props.id) : undefined}\n        aria-describedby={ariaDescribedByIds(props.id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) ? (\n        <datalist id={examplesId(props.id)}>\n          {(schema.examples as string[])\n            .concat(schema.default && !schema.examples.includes(schema.default) ? ([schema.default] as string[]) : [])\n            .map((example) => {\n              return <option key={example} value={example} />\n            })}\n        </datalist>\n      ) : null}\n    </FormControl>\n  )\n}\n","import { customizeValidator } from '@rjsf/validator-ajv8'\n\n// No exposed from '@rjsf/validator-ajv8'\nexport interface ErrorObject<K extends string = string, P = Record<string, unknown>, S = unknown> {\n  keyword: K\n  instancePath: string\n  schemaPath: string\n  params: P\n  propertyName?: string\n  message?: string\n  schema?: S\n  parentSchema?: unknown\n  data?: unknown\n}\n\nimport i18n from '@/config/i18n.config.ts'\n\n// TODO[NVL] Initially crafted as /^[^+#$]*$/; is $ allowed?\nexport const validationTopic = (data: string): string | undefined => {\n  if (data.length === 0) return i18n.t('rjsf.customFormats.validation.noEmptyString', { ns: 'components' })\n  if (data.includes('\\u0000')) return i18n.t('rjsf.customFormats.validation.noNullChar', { ns: 'components' })\n  if (data.includes('#') || data.includes('+'))\n    return i18n.t('rjsf.customFormats.validation.noWildCards', { ns: 'components' })\n  return undefined\n}\n\nexport const validationTopicFilter = (topic: string): string | undefined => {\n  if (topic.length === 0) return i18n.t('rjsf.customFormats.validation.noEmptyString', { ns: 'components' })\n  if (topic.includes('\\u0000')) return i18n.t('rjsf.customFormats.validation.noNullChar', { ns: 'components' })\n\n  const SHARED_SUBSCRIPTION_CHAR_ARRAY = '$share'.split('')\n  const SHARED_SUBSCRIPTION_LENGTH = SHARED_SUBSCRIPTION_CHAR_ARRAY.length\n  const SHARED_SUBSCRIPTION_DELIMITER = '/'\n\n  let lastChar = topic.charAt(0)\n  let currentChar\n  let sharedSubscriptionDelimiterCharCount = 0\n  const length = topic.length\n  let isSharedSubscription = false\n  let sharedCounter = lastChar == SHARED_SUBSCRIPTION_CHAR_ARRAY[0] ? 1 : -1\n\n  for (let i = 1; i < length; i++) {\n    currentChar = topic.charAt(i)\n\n    // current char still matching $share ?\n    if (i < SHARED_SUBSCRIPTION_LENGTH && currentChar == SHARED_SUBSCRIPTION_CHAR_ARRAY[i]) {\n      sharedCounter++\n    }\n\n    // finally, is it a shared subscription?\n    if (\n      i == SHARED_SUBSCRIPTION_LENGTH &&\n      sharedCounter == SHARED_SUBSCRIPTION_LENGTH &&\n      currentChar == SHARED_SUBSCRIPTION_DELIMITER\n    ) {\n      isSharedSubscription = true\n    }\n\n    //Check the shared name\n    if (isSharedSubscription && sharedSubscriptionDelimiterCharCount == 1) {\n      if (currentChar == '+' || currentChar == '#') {\n        //Shared name contains wildcard chars\n        return i18n.t('rjsf.customFormats.validation.noWildCardsSharedName', { ns: 'components' })\n      }\n      if (lastChar == SHARED_SUBSCRIPTION_DELIMITER && currentChar == SHARED_SUBSCRIPTION_DELIMITER) {\n        //Check if the shared name is empty\n        return i18n.t('rjsf.customFormats.validation.noEmptySharedName', { ns: 'components' })\n      }\n    }\n\n    // how many times did we see the sharedSubscriptionDelimiter?\n    if (isSharedSubscription && currentChar == SHARED_SUBSCRIPTION_DELIMITER) {\n      sharedSubscriptionDelimiterCharCount++\n    }\n\n    // If the last character is a # and is prepended with /, then it's a valid subscription\n    if (i == length - 1 && currentChar == '#' && lastChar == '/') {\n      return undefined\n    }\n\n    //Check if something follows after the # sign\n    if (lastChar == '#' || (currentChar == '#' && i == length - 1)) {\n      return i18n.t('rjsf.customFormats.validation.noMultiLevelString', { ns: 'components' })\n    }\n\n    //Let's check if the + sign is in the middle of a string\n    if (currentChar == '+' && lastChar != '/') {\n      if (\n        sharedSubscriptionDelimiterCharCount != 2 ||\n        !isSharedSubscription ||\n        lastChar != SHARED_SUBSCRIPTION_DELIMITER\n      ) {\n        return i18n.t('rjsf.customFormats.validation.noSingleLevelString', { ns: 'components' })\n      }\n    }\n    //Let's check if the + sign is followed by a\n    if (lastChar == '+' && currentChar != '/') {\n      return i18n.t('rjsf.customFormats.validation.noSingleLevelFinal', { ns: 'components' })\n    }\n    lastChar = currentChar\n  }\n\n  return undefined\n}\n\n// TODO[NVL] Currently like topic but what about the + and # chars?\nexport const validationTag = validationTopic\n\nexport const customLocalizer = (errors?: null | ErrorObject[]) => {\n  if (!errors) return\n\n  for (const error of errors) {\n    if (error.keyword !== 'format') continue\n    if (error.schema === 'mqtt-topic') {\n      error.message = validationTopic(error.data as string)\n      continue\n    }\n    if (error.schema === 'mqtt-topic-filter') {\n      error.message = validationTopicFilter(error.data as string)\n    }\n    if (error.schema === 'mqtt-tag') {\n      error.message = validationTag(error.data as string)\n    }\n  }\n}\n\nexport const customFormatsValidator = customizeValidator(\n  {\n    customFormats: {\n      // TODO[26559] This is a hack to remove the error; fix at source\n      ['boolean']: () => true,\n      'mqtt-topic': (topic) => validationTopic(topic) === undefined,\n      'mqtt-tag': (tag) => validationTag(tag) === undefined,\n      'mqtt-topic-filter': (topicFilter) => validationTopicFilter(topicFilter) === undefined,\n    },\n  },\n  customLocalizer\n)\n","import type { MutableRefObject } from 'react'\nimport type Form from '@rjsf/core'\nimport type { RJSFSchema, RJSFValidationError, UiSchema } from '@rjsf/utils'\nimport type { ChakraRJSFormContext, UITab, UITabIndexed } from '@/components/rjsf/Form/types.ts'\n\nexport const _toPath = (path: string) => path?.match(/([^[.\\]])+/g)\n\n// From RJSF\n/* istanbul ignore next -- @preserve */\nconst focusOnError = (formElement: HTMLFormElement, error: RJSFValidationError) => {\n  // const { idPrefix = 'root', idSeparator = '_' } = props;\n  const idPrefix = 'root',\n    idSeparator = '_'\n\n  const { property } = error\n  if (!property) return\n\n  const path = _toPath(property)\n  if (!path) return\n  if (path[0] === '') {\n    // Most of the time the `.foo` property results in the first element being empty, so replace it with the idPrefix\n    path[0] = 'root'\n  } else {\n    // Otherwise insert the idPrefix into the first location using unshift\n    path.unshift(idPrefix)\n  }\n\n  const elementId = path.join(idSeparator)\n  let field = formElement.querySelector(`#${elementId}`) as HTMLElement\n\n  if (!field) {\n    // if not an exact match, try finding an input starting with the element id (like radio buttons or checkboxes)\n    field = formElement.querySelector(`input[id^=\"${elementId}\"`) as HTMLElement\n  }\n  if (field instanceof HTMLDivElement) {\n    // if the field is a select or other wrapper, find the nested input\n    field = formElement.querySelector<HTMLDivElement>(`#${elementId} input`) as HTMLElement\n  }\n\n  if (field) {\n    field.focus()\n  }\n}\n\n/* istanbul ignore next -- @preserve */\nexport const customFocusError = (wrapperRef: MutableRefObject<null>) => (error: RJSFValidationError) => {\n  if (!wrapperRef.current) return\n\n  const rjsForm = wrapperRef.current as Form\n\n  focusOnError(rjsForm.formElement.current, error)\n}\n\nexport const isNumeric = (element: string) => /^\\d+$/.test(element)\nexport const deepGet = (obj: object, keys: (string | number)[]) => {\n  if (!keys.length) return null\n\n  return keys.reduce((xs, x) => xs?.[x as keyof typeof xs] ?? null, obj)\n}\n\nexport const isPropertyBehindCollapsedElement = (\n  property: string,\n  uiSchema: UiSchema<unknown, RJSFSchema, ChakraRJSFormContext>\n) => {\n  const path = property.split('.')\n  path?.shift()\n  if (path.length) {\n    // assume only the first array matters. Might need to check nested arrays\n    const foundIndex = path.findIndex(isNumeric)\n    if (foundIndex != -1) {\n      const root = path.slice(0, foundIndex)\n      root.push('items')\n      const item = deepGet(uiSchema, root)\n      if (item) {\n        // @ts-ignore Type will need to be corrected\n        const { 'ui:collapsable': isCollapsible } = item\n        if (isCollapsible) {\n          return ['root', ...path.slice(0, foundIndex + 1)]\n        }\n      }\n    }\n  }\n  return undefined\n}\n\nexport const isPropertyBehindTab = (\n  property: string,\n  uiSchema: UiSchema<unknown, RJSFSchema, ChakraRJSFormContext>\n) => {\n  const { 'ui:tabs': tabs } = uiSchema\n  if (!Array.isArray(tabs)) return undefined\n\n  const root = property.split('.')[1] || property\n  if (!root) return undefined\n\n  let inTab: UITabIndexed | null = null\n  for (const [index, tab] of (tabs as UITab[]).entries()) {\n    const { properties } = tab\n    if (properties && properties.includes(root)) inTab = { ...tab, index }\n  }\n\n  return inTab ? inTab : undefined\n}\n","// overriding the heading definition\nimport type { RJSFSchema, StrictRJSFSchema, TitleFieldProps } from '@rjsf/utils'\nimport { Box, Divider, Heading } from '@chakra-ui/react'\n\nexport const TitleFieldTemplate = <T = unknown, S extends StrictRJSFSchema = RJSFSchema>({\n  id,\n  title,\n}: TitleFieldProps<T, S>) => (\n  <Box id={id} mt={1} mb={4}>\n    <Heading as=\"h2\" size=\"md\">\n      {title}\n    </Heading>\n    <Divider />\n  </Box>\n)\n","import type { FC } from 'react'\nimport { useCallback, useMemo } from 'react'\nimport type { ErrorListProps, RJSFSchema } from '@rjsf/utils'\nimport { TranslatableString } from '@rjsf/utils'\nimport {\n  Alert,\n  AlertTitle,\n  Box,\n  Button,\n  HStack,\n  Icon,\n  IconButton,\n  List,\n  ListIcon,\n  ListItem,\n  Text,\n} from '@chakra-ui/react'\nimport { WarningIcon } from '@chakra-ui/icons'\nimport { IoLink } from 'react-icons/io5'\nimport type { RJSFValidationError } from '@rjsf/utils/src/types.ts'\n\nimport type { ChakraRJSFormContext, UITabIndexed } from '@/components/rjsf/Form/types.ts'\nimport { useTranslation } from 'react-i18next'\nimport { useFormControlStore } from '@/components/rjsf/Form/useFormControlStore.ts'\nimport { isPropertyBehindCollapsedElement, isPropertyBehindTab } from '@/components/rjsf/Form/error-focus.utils.ts'\n\ninterface RJSFValidationErrorRef extends RJSFValidationError {\n  tab?: UITabIndexed\n  collapsed?: string[]\n}\n\nexport const ErrorListTemplate: FC<ErrorListProps<unknown, RJSFSchema, ChakraRJSFormContext>> = (props) => {\n  const { uiSchema, errors, registry, formContext } = props\n  const { t } = useTranslation('components')\n  const { setTabIndex, setExpandItems } = useFormControlStore()\n\n  const linkedErrors = useMemo(() => {\n    if (!uiSchema) return errors as RJSFValidationErrorRef[]\n    return errors.map<RJSFValidationErrorRef>((error) => {\n      const { property } = error\n      if (!property) return error\n\n      let newError: RJSFValidationErrorRef = { ...error }\n\n      const collapsedPath = isPropertyBehindCollapsedElement(property, uiSchema)\n      if (collapsedPath) {\n        newError = { ...newError, collapsed: collapsedPath }\n      }\n\n      const tabbedItem = isPropertyBehindTab(property, uiSchema)\n      if (tabbedItem) newError = { ...newError, tab: tabbedItem }\n\n      return newError\n    })\n  }, [errors, uiSchema])\n\n  const handleShiftFocus = useCallback(\n    (error: RJSFValidationErrorRef) => () => {\n      const isTab = Boolean(error.tab?.index !== undefined)\n      const isAccordion = Boolean(error.collapsed)\n\n      // must be done in order of DOM nesting: tab, collapse, focus\n      if (error.tab && isTab) setTabIndex(error.tab.index)\n      if (error.collapsed) setExpandItems(error.collapsed)\n      // TODO[NVL] Scroll animation would be much better\n      setTimeout(\n        () => {\n          formContext?.focusOnError?.(error)\n        },\n        isTab || isAccordion ? 100 : 0\n      )\n    },\n    [setTabIndex, setExpandItems, formContext]\n  )\n\n  const { translateString } = registry\n\n  return (\n    <Alert flexDirection=\"column\" alignItems=\"flex-start\" gap={3} status=\"error\" mt={4}>\n      <AlertTitle>{translateString(TranslatableString.ErrorsLabel)}</AlertTitle>\n      <List>\n        {linkedErrors.map((error, i) => (\n          <ListItem key={i}>\n            <HStack>\n              <ListIcon as={WarningIcon} color=\"red.500\" />\n              <Box>\n                {error.tab && (\n                  <>\n                    <Button colorScheme=\"red\" variant=\"link\" color=\"red.700\" onClick={handleShiftFocus(error)}>\n                      {error.tab?.title}\n                    </Button>{' '}\n                  </>\n                )}\n                <Text as=\"span\">{error.stack}</Text>{' '}\n                <IconButton\n                  icon={<Icon as={IoLink} />}\n                  variant=\"link\"\n                  aria-label={t('rjsf.ErrorListTemplate.focusOnError.aria-label')}\n                  color=\"red.700\"\n                  size=\"sm\"\n                  onClick={handleShiftFocus(error)}\n                />\n              </Box>\n            </HStack>\n          </ListItem>\n        ))}\n      </List>\n    </Alert>\n  )\n}\n","import type { FormContextType, ObjectFieldTemplateProps, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils'\nimport { getTemplate, getUiOptions, titleId } from '@rjsf/utils'\nimport { Box, Tab, TabList, TabPanel, TabPanels, Tabs } from '@chakra-ui/react'\nimport type { UITab } from '@/components/rjsf/Form/types.ts'\nimport { useFormControlStore } from '@/components/rjsf/Form/useFormControlStore.ts'\n\nexport const ObjectFieldTemplate = <\n  T = never,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = never,\n>(\n  props: ObjectFieldTemplateProps<T, S, F>\n) => {\n  const { registry, properties, title, description, uiSchema, required, schema, idSchema } = props\n  const options = getUiOptions<T, S, F>(uiSchema)\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>('TitleFieldTemplate', registry, options)\n  const { tabIndex, setTabIndex } = useFormControlStore()\n\n  // @ts-ignore Type will need to be corrected\n  const { tabs }: { tabs: UITab[] } = options\n  if (!tabs) {\n    return (\n      <Box>\n        {title && (\n          <TitleFieldTemplate\n            id={titleId<T>(idSchema)}\n            title={title}\n            required={required}\n            schema={schema}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        )}\n        {description}\n        {properties.map((prop) => (\n          <Box _notLast={{ marginBottom: '24px' }} className=\"x0\" key={prop.content.key}>\n            {prop.content}\n          </Box>\n        ))}\n      </Box>\n    )\n  }\n\n  // TODO[NVL] Not efficient. Build a cluster\n  const allGrouped = tabs.map((e) => e.properties).flat()\n\n  return (\n    <>\n      <Tabs index={tabIndex} onChange={setTabIndex}>\n        <TabList>\n          {tabs.map((e) => {\n            const filteredProps = properties.filter((property) => e.properties.includes(property.name))\n            if (!filteredProps.length) return null\n            return (\n              <Tab fontSize=\"md\" key={e.id}>\n                {e.title}\n              </Tab>\n            )\n          })}\n        </TabList>\n\n        <TabPanels>\n          {tabs.map((e) => {\n            const filteredProps = properties.filter((property) => e.properties.includes(property.name))\n            if (!filteredProps.length) return null\n            return (\n              <TabPanel key={e.id} p={0} pt=\"1px\" mb={6}>\n                <>\n                  {filteredProps.map((prop) => (\n                    <Box _first={{ marginTop: '24px' }} _notLast={{ marginBottom: '24px' }} key={prop.content.key}>\n                      {prop.content}\n                    </Box>\n                  ))}\n                </>\n              </TabPanel>\n            )\n          })}\n        </TabPanels>\n        {properties\n          .filter((property) => !allGrouped.includes(property.name))\n          .map((prop) => (\n            <Box _first={{ marginTop: '24px' }} _notLast={{ marginBottom: '24px' }} key={prop.content.key}>\n              {prop.content}\n            </Box>\n          ))}\n      </Tabs>\n    </>\n  )\n}\n","import type { FC } from 'react'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport debug from 'debug'\nimport type { JSONPatchAdd, JSONPatchDocument } from 'immutable-json-patch'\nimport { immutableJSONPatch } from 'immutable-json-patch'\nimport Form from '@rjsf/chakra-ui'\nimport type { FormProps, IChangeEvent } from '@rjsf/core'\nimport type { IdSchema } from '@rjsf/utils'\nimport validator from '@rjsf/validator-ajv8'\n\nimport { FieldTemplate } from '@/components/rjsf/FieldTemplate.tsx'\nimport { DescriptionFieldTemplate } from '@/components/rjsf/Templates/DescriptionFieldTemplate.tsx'\nimport { BaseInputTemplate } from '@/components/rjsf/BaseInputTemplate.tsx'\nimport { ArrayFieldTemplate } from '@/components/rjsf/ArrayFieldTemplate.tsx'\nimport { ArrayFieldItemTemplate } from '@/components/rjsf/ArrayFieldItemTemplate.tsx'\nimport type { ChakraRJSFormContext } from '@/components/rjsf/Form/types.ts'\nimport { customFormatsValidator } from '@/components/rjsf/Form/validation.utils.ts'\nimport { customFocusError } from '@/components/rjsf/Form/error-focus.utils.ts'\nimport { TitleFieldTemplate } from '@/components/rjsf/Templates/TitleFieldTemplate.tsx'\nimport { ErrorListTemplate } from '@/components/rjsf/Templates/ErrorListTemplate.tsx'\nimport { useFormControlStore } from '@/components/rjsf/Form/useFormControlStore.ts'\nimport { MqttTransformationField } from '@/components/rjsf/Fields'\nimport { adapterJSFWidgets } from '@/modules/ProtocolAdapters/utils/uiSchema.utils.ts'\nimport { ObjectFieldTemplate } from '@/components/rjsf/ObjectFieldTemplate.tsx'\n\ninterface CustomFormProps<T>\n  extends Pick<\n    FormProps<T>,\n    'id' | 'schema' | 'uiSchema' | 'formData' | 'formContext' | 'customValidate' | 'readonly'\n  > {\n  onSubmit: (data: IChangeEvent) => void\n  showNativeWidgets?: boolean\n}\n\nconst FLAG_POST_VALIDATE = false\n\nconst ChakraRJSForm: FC<CustomFormProps<unknown>> = ({\n  id,\n  schema,\n  uiSchema,\n  formData,\n  onSubmit,\n  formContext,\n  customValidate,\n  readonly,\n  showNativeWidgets = false,\n}) => {\n  const { t } = useTranslation()\n  const { setTabIndex } = useFormControlStore()\n  const ref = useRef(null)\n  const [batchData, setBatchData] = useState<JSONPatchDocument | undefined>(undefined)\n  const defaultValues = useMemo(() => {\n    if (batchData) {\n      return immutableJSONPatch(formData, batchData)\n    }\n    return formData\n  }, [batchData, formData])\n\n  const onValidate = useCallback(\n    (data: IChangeEvent<unknown>) => {\n      onSubmit?.(data)\n    },\n    [onSubmit]\n  )\n\n  useEffect(\n    () => {\n      setTabIndex(0)\n      return () => setTabIndex(0)\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  )\n\n  const context: ChakraRJSFormContext = {\n    ...formContext,\n    onBatchUpload: (idSchema: IdSchema<unknown>, batch) => {\n      const path = idSchema.$id.replace('root_', '/').replaceAll('_', '/') + '/-'\n      const operations: JSONPatchDocument = batch.map<JSONPatchAdd>((value) => ({ op: 'add', path, value }))\n\n      if (schema && FLAG_POST_VALIDATE) {\n        const updatedDocument = immutableJSONPatch(defaultValues, operations)\n        const { $schema, ...rest } = schema\n        const validate = validator.ajv.compile(rest)\n        validate(updatedDocument)\n      }\n\n      setBatchData(operations)\n    },\n    focusOnError: customFocusError(ref),\n  }\n\n  const rjsfLog = debug(`RJSF:${id}`)\n  // TODO[27657] Problem with the $schema property again; removing from the UI\n  //   https://hivemq.kanbanize.com/ctrl_board/57/cards/27041/details/\n  const { $schema, ...unspecifiedSchema } = schema\n\n  return (\n    <Form\n      ref={ref}\n      id={id}\n      readonly={readonly}\n      schema={unspecifiedSchema}\n      uiSchema={uiSchema}\n      formData={defaultValues}\n      formContext={context}\n      templates={{\n        ObjectFieldTemplate,\n        FieldTemplate,\n        BaseInputTemplate,\n        ArrayFieldTemplate,\n        ArrayFieldItemTemplate,\n        DescriptionFieldTemplate,\n        ErrorListTemplate,\n        TitleFieldTemplate,\n      }}\n      widgets={{\n        ...(!showNativeWidgets && adapterJSFWidgets),\n      }}\n      fields={{\n        ...(!showNativeWidgets && {\n          'mqtt:transform': MqttTransformationField,\n        }),\n      }}\n      onSubmit={onValidate}\n      liveValidate\n      // TODO[NVL] Removing HTML validation; see https://rjsf-team.github.io/react-jsonschema-form/docs/usage/validation/#html5-validation\n      noHtml5Validate\n      validator={customFormatsValidator}\n      customValidate={customValidate}\n      onError={(errors) => rjsfLog(t('error.rjsf.validation'), errors)}\n      showErrorList=\"bottom\"\n      focusOnFirstError={context.focusOnError}\n    />\n  )\n}\n\nexport default ChakraRJSForm\n"],"names":["QoS","MOCK_MAX_QOS","ListMappings","items","onEdit","onDelete","onAdd","t","useTranslation","columns","useMemo","info","values","jsx","Topic","Text","val","PLCTag","jsxs","ButtonGroup","IconButton","LuPencil","LuTrash","LuPlus","Card","PaginatedTable","DataModelSources","topic","onChange","props","schema","isLoading","isError","error","useSamplingForTopic","structuredSchema","useEffect","CardHeader","HStack","Heading","RxReload","CardBody","LoaderSpinner","ErrorMessage","JsonSchemaBrowser","useGetWritingSchema","adapterId","tagName","appClient","useHttpClient","useQuery","QUERY_KEYS","MappingInstruction","property","instruction","showTransformation","state","setState","useState","dropTargetRef","useRef","element","dropTargetForElements","dropTarget","target","activeColor","backgroundColor","isSupported","isMappingSupported","onHandleClear","PropertyItem","Box","getDropZoneBorder","Code","formatPath","RiDeleteBin2Fill","Alert","AlertIcon","CardFooter","RiFormula","FormControl","Textarea","MappingEditor","instructions","onSchemaReady","adapterType","data","isSuccess","properties","getPropertyListFrom","filterSupportedProperties","Button","LuWand","List","ListItem","source","destination","newMappings","newItem","mapped","SelectSourceTopics","value","FormLabel","SelectEntityType","SelectTopicFilter","SelectDestinationTag","SelectTag","MappingStrategy","MappingContainer","item","strategy","onSchemaReadyHandler","useCallback","_properties","VStack","Stack","v","Icon","FaRightFromBracket","_a","mappings","MappingDrawer","onClose","onSubmit","Drawer","DrawerOverlay","DrawerContent","DrawerCloseButton","DrawerHeader","DrawerBody","DrawerFooter","MqttTransformationField","selectedItem","setSelectedItem","subsData","setSubsData","handleEdit","index","handleDelete","old","gg","handleClose","handleSubmit","handleAdd","handleChange","id","currentItem","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldTitleTemplate","uiOptions","getUiOptions","Fragment","getRequiredUiSchema","uiSchema","isNewAdapter","submitButtonOptions","rest","adapterJSFWidgets","JSONSchemaEditor","isJSONArray","isJSONObject","isEqual","a","b","initial","array","last","isObjectOrArray","shallowClone","copy","symbol","applyProp","object","key","updatedObject","getIn","path","setIn","createPath","updatedValue","newObject","IS_INTEGER_REGEX","updateIn","transform","deleteIn","insertAt","document","parentPath","updatedItems","existsIn","parseJSONPointer","pointer","p","compileJSONPointer","compileJSONPointerProp","pathProp","immutableJSONPatch","operations","options","updatedDocument","i","validateJSONPatchOperation","operation","parsePath","add","remove","replace","parseFrom","move","test","isArrayItem","from","removedJson","actualValue","parent","resolvePathIndex","fromPointer","RenderFieldTemplate","required","rawErrors","children","errors","displayLabel","rawDescription","description","help","label","FormHelperText","FieldTemplate","classNames","style","disabled","hidden","onDropPropertyClick","onKeyChange","readonly","registry","WrapIfAdditionalTemplate","DescriptionFieldTemplate","BaseInputTemplate","inputProps","getInputProps","chakraProps","getChakra","_onChange","_onBlur","_onFocus","labelValue","Input","examplesId","ariaDescribedByIds","example","validationTopic","i18n","validationTopicFilter","SHARED_SUBSCRIPTION_CHAR_ARRAY","SHARED_SUBSCRIPTION_LENGTH","SHARED_SUBSCRIPTION_DELIMITER","lastChar","currentChar","sharedSubscriptionDelimiterCharCount","length","isSharedSubscription","sharedCounter","validationTag","customLocalizer","customFormatsValidator","customizeValidator","tag","topicFilter","_toPath","focusOnError","formElement","idPrefix","idSeparator","elementId","field","customFocusError","wrapperRef","rjsForm","isNumeric","deepGet","obj","keys","xs","x","isPropertyBehindCollapsedElement","foundIndex","root","isCollapsible","isPropertyBehindTab","tabs","inTab","tab","TitleFieldTemplate","title","Divider","ErrorListTemplate","formContext","setTabIndex","setExpandItems","useFormControlStore","linkedErrors","newError","collapsedPath","tabbedItem","handleShiftFocus","isTab","isAccordion","translateString","AlertTitle","TranslatableString","ListIcon","WarningIcon","IoLink","ObjectFieldTemplate","idSchema","tabIndex","titleId","prop","allGrouped","e","Tabs","TabList","Tab","TabPanels","filteredProps","TabPanel","ChakraRJSForm","formData","customValidate","showNativeWidgets","ref","batchData","setBatchData","defaultValues","onValidate","context","batch","rjsfLog","debug","$schema","unspecifiedSchema","Form","ArrayFieldTemplate","ArrayFieldItemTemplate"],"mappings":"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","x_google_ignoreList":[13,14,15,16,17]}