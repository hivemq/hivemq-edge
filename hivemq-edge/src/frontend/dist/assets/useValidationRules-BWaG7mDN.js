import{u}from"./index-cMih3SEP.js";(function(){try{var n=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},a=new n.Error().stack;a&&(n._sentryDebugIds=n._sentryDebugIds||{},n._sentryDebugIds[a]="85c0c139-3037-4f8e-91bb-91c06ff4be17",n._sentryDebugIdIdentifier="sentry-dbid-85c0c139-3037-4f8e-91bb-91c06ff4be17")}catch{}})();const d=()=>{const{t:n}=u();return e=>{const i={},r=t=>{e.type!==t&&console.warn('[openAPI - SyntaxError] Expecting type to be "string"',{schema:e})};if(e.isRequired&&(i.required={value:!0,message:n("validation.required")}),e.maxLength){r("string");const t=e.maxLength;i.maxLength={value:t,message:n("validation.maxLength",{count:t})}}if(e.minimum){r("number");const t=e.minimum;i.min={value:t,message:n("validation.minimum",{count:t})}}if(e.maximum){r("number");const t=e.maximum;i.max={value:t,message:n("validation.maximum",{count:t})}}if(e.pattern){r("string");let t=e.pattern;/* istanbul ignore next -- @preserve */t.startsWith("^")||(t=`^${t}`);/* istanbul ignore next -- @preserve */t.endsWith("$")||(t=`${t}$`);try{const o=new RegExp(t);i.pattern={value:o,message:n("validation.pattern",{pattern:e.pattern})}}catch(o){const s=o;console.warn(`[openAPI - ${s.name}]`,s.message)}}return i}};export{d as u};
//# sourceMappingURL=useValidationRules-BWaG7mDN.js.map
