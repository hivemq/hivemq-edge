import{c as a,u as d}from"./vanilla-Dd4Maacd.js";import{R as c}from"./index-cMih3SEP.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="d03fe487-9e73-4a67-875f-ef107b05aa72",e._sentryDebugIdIdentifier="sentry-dbid-d03fe487-9e73-4a67-875f-ef107b05aa72")}catch{}})();const u={},{useDebugValue:f}=c,{useSyncExternalStoreWithSelector:l}=d;let s=!1;function p(e,t=e.getState,n){(u?"production":void 0)!=="production"&&n&&!s&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),s=!0);const o=l(e.subscribe,e.getState,e.getServerState||e.getState,t,n);return f(o),o}const r=e=>{(u?"production":void 0)!=="production"&&typeof e!="function"&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");const t=typeof e=="function"?a(e):e,n=(o,i)=>p(t,o,i);return Object.assign(n,t),n},g=e=>e?r(e):r;export{g as c};
//# sourceMappingURL=index-UJo6opCj.js.map
