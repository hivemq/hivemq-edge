{"version":3,"file":"types-CNm55BG_.js","sources":["../../src/extensions/datahub/types.ts"],"sourcesContent":["import type { Connection, Edge, EdgeAddChange, Node, NodeAddChange, OnEdgesChange, OnNodesChange } from 'reactflow'\nimport type {\n  BehaviorPolicy,\n  BehaviorPolicyOnTransition,\n  DataPolicy,\n  DataPolicyValidator,\n  PolicyOperation,\n  PolicySchema,\n  SchemaReference,\n  Script,\n} from '@/api/__generated__'\nimport { type DataPolicyMatching } from '@/api/__generated__'\nimport type { RJSFSchema, UiSchema } from '@rjsf/utils'\nimport type { IChangeEvent } from '@rjsf/core'\nimport type { ProblemDetailsExtended } from '@/api/types/http-problem-details.ts'\n\nexport interface HotKeyItem {\n  key: string\n  category: string\n}\n\nexport interface PanelSpecs {\n  schema: RJSFSchema\n  uiSchema?: UiSchema\n}\n\nexport interface PanelProps {\n  selectedNode: string\n  onFormSubmit?: (data: IChangeEvent) => void\n}\n\nexport enum DesignerStatus {\n  DRAFT = 'DRAFT',\n  LOADED = 'LOADED',\n  MODIFIED = 'MODIFIED',\n}\n\nexport interface WorkspaceState {\n  nodes: Node[]\n  edges: Edge[]\n  functions: FunctionSpecs[]\n}\n\nexport interface WorkspaceStatus {\n  status: DesignerStatus\n  name: string\n  type: DataHubNodeType.DATA_POLICY | DataHubNodeType.BEHAVIOR_POLICY | undefined\n}\n\nexport interface WorkspaceAction {\n  reset: () => void\n  onNodesChange: OnNodesChange\n  onEdgesChange: OnEdgesChange\n  onConnect: (connection: Connection) => void\n  onAddNodes: (changes: NodeAddChange[]) => void\n  onAddEdges: (changes: EdgeAddChange[]) => void\n  onUpdateNodes: <T>(item: string, data: T) => void\n\n  onAddFunctions: (changes: FunctionSpecs[]) => void\n  onSerializePolicy: (node: Node<DataPolicyData | BehaviorPolicyData>) => string | undefined\n\n  isDirty: () => boolean\n  isPolicyInDraft: () => boolean\n\n  setStatus: (\n    status: DesignerStatus,\n    option?: { name?: string; type?: DataHubNodeType.DATA_POLICY | DataHubNodeType.BEHAVIOR_POLICY }\n  ) => void\n}\n\nexport interface PolicyCheckState {\n  node?: Node\n  status?: PolicyDryRunStatus\n  report?: DryRunResults<unknown, never>[]\n}\n\nexport interface PolicyCheckAction {\n  reset: () => void\n  setNode: (node: Node | undefined) => void\n  initReport: () => void\n  setReport: (report: DryRunResults<unknown, never>[]) => void\n  getErrors: () => ProblemDetailsExtended[] | undefined\n}\n\nexport enum EdgeTypes {\n  DATAHUB_EDGE = 'DATAHUB_EDGE',\n}\n\nexport enum DataHubNodeType {\n  INTERNAL = 'INTERNAL',\n  ADAPTOR = 'ADAPTOR',\n  EDGE = 'EDGE',\n  BRIDGE = 'BRIDGE',\n  TOPIC_FILTER = 'TOPIC_FILTER',\n  CLIENT_FILTER = 'CLIENT_FILTER',\n  DATA_POLICY = 'DATA_POLICY',\n  BEHAVIOR_POLICY = 'BEHAVIOR_POLICY',\n  VALIDATOR = 'VALIDATOR',\n  SCHEMA = 'SCHEMA',\n  OPERATION = 'OPERATION',\n  TRANSITION = 'TRANSITION',\n  FUNCTION = 'FUNCTION',\n  EVENT = 'EVENT',\n}\n\nexport enum PolicyType {\n  CREATE_POLICY = 'CREATE_POLICY',\n  DATA_POLICY = DataHubNodeType.DATA_POLICY,\n  BEHAVIOR_POLICY = DataHubNodeType.BEHAVIOR_POLICY,\n}\n\nexport enum NodeCategory {\n  DEFAULT = 'DEFAULT',\n  INITIAL = 'INITIAL',\n  POLICY = 'POLICY',\n  RESOURCE = 'RESOURCE',\n}\n\nexport interface DataHubNodeData {\n  dryRunStatus?: PolicyDryRunStatus\n}\n\nexport interface TopicFilterData extends DataHubNodeData {\n  adapter?: string\n  topics: string[]\n}\n\nexport interface ClientFilterData extends DataHubNodeData {\n  clients: string[]\n}\n\nexport interface DataPolicyData extends DataHubNodeData {\n  id: string\n  core?: DataPolicy\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace DataPolicyData {\n  export enum Handle {\n    TOPIC_FILTER = 'topicFilter',\n    VALIDATION = 'validation',\n    ON_SUCCESS = 'onSuccess',\n    ON_ERROR = 'onError',\n  }\n}\n\n// TODO[18740] Add to the OpenAPI specs; see https://hivemq.kanbanize.com/ctrl_board/4/cards/18740/details/\nexport enum StrategyType {\n  ALL_OF = 'ALL_OF',\n  ANY_OF = 'ANY_OF',\n}\n\nexport interface SchemaArguments {\n  schemas: SchemaReference[]\n  strategy: StrategyType\n}\n\nexport interface ValidatorData extends DataHubNodeData {\n  type: DataPolicyValidator.type\n  strategy: StrategyType\n  schemas: SchemaReference[]\n  core?: DataPolicyValidator\n}\n\nexport enum ResourceStatus {\n  DRAFT = 'DRAFT',\n  LOADED = 'LOADED',\n  MODIFIED = 'MODIFIED',\n}\n\n// TODO[24146] Should be safe for incremental version number but better identification?\nexport enum ResourceWorkingVersion {\n  DRAFT = 9 ** 9,\n  LOADED,\n  MODIFIED,\n}\n\nexport interface ResourceState extends DataHubNodeData {\n  version: number\n  internalStatus?: ResourceStatus\n  internalVersions?: number[]\n}\n\nexport interface ResourceFamily {\n  name: string\n  versions: number[]\n  description?: string\n  type?: string\n  label?: string\n  internalStatus?: ResourceStatus\n}\n\n// TODO[18755] Add to the OpenAPI specs; see https://hivemq.kanbanize.com/ctrl_board/4/cards/18755/details/\nexport enum SchemaType {\n  JSON = 'JSON',\n  PROTOBUF = 'PROTOBUF',\n}\n\nexport interface SchemaProtobufArguments {\n  messageType: string\n}\n\nexport interface SchemaData extends ResourceState {\n  name: string\n  type: SchemaType\n  schemaSource?: string\n  messageType?: string\n  core?: PolicySchema\n}\n\nexport interface FunctionData extends ResourceState {\n  name: string\n  type: 'Javascript'\n  description?: string\n  sourceCode?: string\n  core?: Script\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace FunctionData {\n  export enum Handle {\n    SCHEMA = 'schema',\n  }\n}\n\n// TODO[18763] Add to the OpenAPI specs; see https://hivemq.kanbanize.com/ctrl_board/4/cards/18763/details/\nexport interface FunctionDefinition {\n  isTerminal?: boolean\n  isDataOnly?: boolean\n  hasArguments?: boolean\n}\n\nexport interface FunctionSpecs {\n  functionId?: string\n  metadata?: FunctionDefinition\n  schema?: RJSFSchema\n  uiSchema?: UiSchema\n}\n\nexport interface PolicyOperationArguments {\n  schemaId: string\n  schemaVersion: string\n}\n\nexport interface OperationData extends DataHubNodeData {\n  id: string\n  functionId?: string\n  metadata?: FunctionDefinition\n  formData?: Record<string, string | number | string[] | boolean>\n  core?: PolicyOperation\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace OperationData {\n  export enum Function {\n    SYSTEM_LOG = 'System.log',\n    MQTT_USER_PROPERTY = 'Mqtt.UserProperties.add',\n    MQTT_DISCONNECT = 'Mqtt.disconnect',\n    MQTT_DROP = 'Mqtt.drop',\n    DELIVERY_REDIRECT = 'Delivery.redirectTo',\n    SERDES_DESERIALIZE = 'Serdes.deserialize',\n    SERDES_SERIALIZE = 'Serdes.serialize',\n    METRICS_COUNTER_INC = 'Metrics.Counter.increment',\n    DATAHUB_TRANSFORM = 'DataHub.transform',\n  }\n\n  export enum Handle {\n    INPUT = 'input',\n    OUTPUT = 'output',\n    SCHEMA = 'schema',\n    FUNCTION = 'function',\n    SERIALISER = 'serialiser',\n    DESERIALISER = 'deserialiser',\n  }\n\n  export interface DataHubTransformType {\n    transform: string[]\n  }\n}\n\n// TODO[18757] Add to the OpenAPI specs; see https://hivemq.kanbanize.com/ctrl_board/4/cards/18757/details/\nexport enum BehaviorPolicyType {\n  MQTT_EVENT = 'Mqtt.events',\n  PUBLISH_DUPLICATE = 'Publish.duplicate',\n  PUBLISH_QUOTA = 'Publish.quota',\n}\n\nexport interface BehaviorPolicyData extends DataHubNodeData {\n  id: string\n  model: BehaviorPolicyType\n  arguments?: Record<string, string | number>\n  core?: BehaviorPolicy\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace BehaviorPolicyData {\n  export enum Handle {\n    CLIENT_FILTER = 'clientFilter',\n    TRANSITIONS = 'transitions',\n  }\n}\n\n// TODO[18761] Add to the OpenAPI specs, see https://hivemq.kanbanize.com/ctrl_board/4/cards/18761/details/\nexport enum StateType {\n  Any = 'Any.*',\n  Initial = 'Initial',\n  Connected = 'Connected',\n  Disconnected = 'Disconnected',\n  Duplicated = 'Duplicated',\n  NotDuplicated = 'NotDuplicated',\n  Violated = 'Violated',\n  Publishing = 'Publishing',\n}\n\n// TODO[18761] Add to the OpenAPI specs, see https://hivemq.kanbanize.com/ctrl_board/4/cards/18761/details/\nexport enum TransitionType {\n  ON_ANY = 'Event.OnAny',\n  ON_DISCONNECT = 'Connection.OnDisconnect',\n  ON_INBOUND_CONNECT = 'Mqtt.OnInboundConnect',\n  ON_INBOUND_DISCONNECT = 'Mqtt.OnInboundDisconnect',\n  ON_INBOUND_PUBLISH = 'Mqtt.OnInboundPublish',\n  ON_INBOUND_SUBSCRIBE = 'Mqtt.OnInboundSubscribe',\n}\n\nexport interface TransitionData extends DataHubNodeData {\n  model?: BehaviorPolicyType\n  event?: TransitionType\n  from?: StateType\n  to?: StateType\n  type?: FsmState.Type\n  core?: BehaviorPolicyOnTransition\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace TransitionData {\n  export enum Handle {\n    BEHAVIOR_POLICY = 'target',\n    OPERATION = 'source',\n    ON_SUCCESS = 'onSuccess',\n    ON_ERROR = 'onError',\n  }\n}\n\nexport interface FsmState {\n  name: string\n  description: string\n  type: FsmState.Type\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace FsmState {\n  export enum Type {\n    INITIAL = 'INITIAL',\n    INTERMEDIATE = 'INTERMEDIATE',\n    SUCCESS = 'SUCCESS',\n    FAILED = 'FAILED',\n  }\n}\n\nexport interface FsmTransition {\n  fromState: string\n  toState: string\n  description: string\n  event: string\n}\n\nexport interface FiniteStateMachine {\n  states: Array<FsmState>\n  transitions: Array<FsmTransition>\n}\nexport interface FiniteStateMachineSchema {\n  metadata: FiniteStateMachine\n}\n\nexport interface DryRunResults<T, R = never> {\n  node: Node<DataHubNodeData>\n  data?: T\n  error?: ProblemDetailsExtended\n  resources?: DryRunResults<R>[]\n}\n\nexport enum PolicyDryRunStatus {\n  IDLE = 'IDLE',\n  RUNNING = 'RUNNING',\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE',\n}\n\nexport interface ValidDropConnection {\n  type: DataHubNodeType\n  handle: string | null\n  isSource: boolean\n}\n\nexport interface DraftPolicy {\n  readonly createdAt?: string\n  id: string\n  matching: DataPolicyMatching\n}\n\nexport type CombinedPolicy =\n  | (DataPolicy & { type: PolicyType.DATA_POLICY })\n  | (BehaviorPolicy & { type: PolicyType.BEHAVIOR_POLICY })\n  | (DraftPolicy & { type: PolicyType.CREATE_POLICY })\n"],"names":["DesignerStatus","EdgeTypes","DataHubNodeType","PolicyType","DataPolicyData","Handle","StrategyType","ResourceStatus","ResourceWorkingVersion","ResourceWorkingVersion2","SchemaType","FunctionData","OperationData","Function","BehaviorPolicyType","BehaviorPolicyData","StateType","TransitionType","TransitionData","FsmState","Type","PolicyDryRunStatus"],"mappings":"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"}