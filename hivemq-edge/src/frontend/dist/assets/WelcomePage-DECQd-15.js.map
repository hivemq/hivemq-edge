{"version":3,"file":"WelcomePage-DECQd-15.js","sources":["../../src/assets/welcome-first-time-logo.svg","../../src/modules/Welcome/components/Onboarding.tsx","../../src/modules/Welcome/hooks/useOnboarding.tsx","../../src/modules/Welcome/WelcomePage.tsx"],"sourcesContent":["export default \"__VITE_ASSET__C0D_kuhV__\"","import type { FC } from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\nimport type { BoxProps } from '@chakra-ui/react'\nimport {\n  Box,\n  Button,\n  Heading,\n  SimpleGrid,\n  Stack,\n  StackDivider,\n  Card,\n  CardHeader,\n  CardBody,\n  Text,\n  Skeleton,\n} from '@chakra-ui/react'\nimport { BsClipboardCheck } from 'react-icons/bs'\n\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport type { OnboardingFetchType } from '@/modules/Welcome/hooks/useOnboarding.tsx'\n\ninterface OnboardingProps extends BoxProps {\n  tasks: OnboardingFetchType\n}\n\nconst Onboarding: FC<OnboardingProps> = ({ tasks, ...props }) => {\n  const { t } = useTranslation()\n  const { data, error } = tasks\n\n  return (\n    <Box mt={6} {...props}>\n      <Heading>{t('welcome.onboarding.title')}</Heading>\n      <SimpleGrid spacing={6} templateColumns=\"repeat(auto-fill, minmax(33vw, 10fr))\">\n        {data &&\n          data.map((e, i) => (\n            <Card flex={1} key={e.header} as=\"aside\" aria-labelledby={`heading-task-${i}`}>\n              <CardHeader>\n                <Skeleton isLoaded={!e.isLoading}>\n                  <Heading as=\"h3\" size=\"md\" id={`heading-task-${i}`}>\n                    {e.header}\n                  </Heading>\n                </Skeleton>\n              </CardHeader>\n\n              <CardBody pt={0}>\n                <Stack divider={<StackDivider />} spacing=\"4\">\n                  {e.sections.map((s) => (\n                    <Stack as=\"section\" key={`${s.title}-${s.label}`} spacing={8} direction=\"row\" gap={4}>\n                      <Skeleton isLoaded={!e.isLoading}>\n                        <Box>\n                          <BsClipboardCheck />\n                        </Box>\n                      </Skeleton>\n                      <Skeleton isLoaded={!e.isLoading}>\n                        <Box>\n                          <Text>{s.title}</Text>\n                          <Button\n                            variant=\"link\"\n                            as={RouterLink}\n                            to={s.to}\n                            target={s.isExternal ? '_blank' : undefined}\n                            aria-label={s.label}\n                            leftIcon={s.leftIcon}\n                          >\n                            {s.label}\n                          </Button>\n                        </Box>\n                      </Skeleton>\n                    </Stack>\n                  ))}\n                </Stack>\n              </CardBody>\n            </Card>\n          ))}\n        {!!error && (\n          <Card flex={1} m={1}>\n            <ErrorMessage type={error?.message} message={t('welcome.onboarding.errorLoading')} />\n          </Card>\n        )}\n      </SimpleGrid>\n    </Box>\n  )\n}\n\nexport default Onboarding\n","import { useTranslation } from 'react-i18next'\nimport { IoLinkOutline } from 'react-icons/io5'\nimport { GoLinkExternal } from 'react-icons/go'\n\nimport type { OnboardingTask } from '@/modules/Welcome/types.ts'\nimport { useGetConfiguration } from '@/api/hooks/useFrontendServices/useGetConfiguration.ts'\nimport type { ApiError } from '@/api/__generated__'\n\nexport interface OnboardingFetchType {\n  data?: OnboardingTask[]\n  error?: ApiError | null\n}\n\nexport const useOnboarding = (): OnboardingFetchType => {\n  const { t } = useTranslation()\n  const { data, isLoading, isError, error } = useGetConfiguration()\n\n  const cloud: OnboardingTask = {\n    isLoading: isLoading,\n    header: t('welcome.onboarding.connectCloud.header'),\n    sections: [\n      {\n        title: t('welcome.onboarding.connectCloud.section.title'),\n        label: t('welcome.onboarding.connectCloud.section.label'),\n        to: data?.cloudLink?.url as string,\n        isExternal: true,\n        leftIcon: <GoLinkExternal />,\n      },\n    ],\n  }\n\n  const tasks: OnboardingTask[] = [\n    {\n      header: t('welcome.onboarding.connectDevice.header'),\n      sections: [\n        {\n          title: t('welcome.onboarding.connectDevice.protocolAdapter.title'),\n          label: t('welcome.onboarding.connectDevice.protocolAdapter.label'),\n          to: '/protocol-adapters',\n          leftIcon: <IoLinkOutline />,\n        },\n      ],\n    },\n    {\n      header: t('welcome.onboarding.connectEnterprise.header'),\n      sections: [\n        {\n          title: t('welcome.onboarding.connectEnterprise.bridge.title'),\n          label: t('welcome.onboarding.connectEnterprise.bridge.label'),\n          to: '/mqtt-bridges',\n          leftIcon: <IoLinkOutline />,\n        },\n      ],\n    },\n  ]\n\n  if (isLoading || !isError) tasks.push(cloud)\n\n  return {\n    error,\n    data: tasks,\n  }\n}\n","import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Center, Flex, Image, useColorMode } from '@chakra-ui/react'\n\nimport ReactLogo from '@/assets/welcome-first-time-logo.svg'\n\nimport PageContainer from '@/components/PageContainer.tsx'\nimport Onboarding from '@/modules/Welcome/components/Onboarding.tsx'\nimport { useOnboarding } from '@/modules/Welcome/hooks/useOnboarding.tsx'\n\nconst WelcomePage: FC = () => {\n  const { t } = useTranslation()\n  const content = useOnboarding()\n  const { colorMode } = useColorMode()\n\n  return (\n    <PageContainer title={t('welcome.title')} subtitle={t('welcome.description')}>\n      <Flex flexDirection=\"column\">\n        <Flex flexDirection={{ base: 'column', lg: 'row' }}>\n          <Onboarding tasks={content} flex={1} />\n          <Center flex={1} m={4}>\n            <Image\n              boxSize={400}\n              src={ReactLogo}\n              alt={t('branding.appName')}\n              backgroundColor={colorMode === 'light' ? undefined : 'lightslategrey'}\n              p={4}\n            />\n          </Center>\n        </Flex>\n      </Flex>\n    </PageContainer>\n  )\n}\n\nexport default WelcomePage\n"],"names":["ReactLogo","Onboarding","tasks","props","t","useTranslation","data","error","jsxs","Box","jsx","Heading","SimpleGrid","e","i","Card","CardHeader","Skeleton","CardBody","Stack","StackDivider","s","BsClipboardCheck","Text","Button","RouterLink","ErrorMessage","useOnboarding","isLoading","isError","useGetConfiguration","cloud","_a","GoLinkExternal","IoLinkOutline","WelcomePage","content","colorMode","useColorMode","PageContainer","Flex","Center","Image"],"mappings":"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"}