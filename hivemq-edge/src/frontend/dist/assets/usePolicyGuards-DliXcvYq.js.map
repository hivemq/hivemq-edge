{"version":3,"file":"usePolicyGuards-DliXcvYq.js","sources":["../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/native.js","../../node_modules/.pnpm/uuid@9.0.1/node_modules/uuid/dist/esm-browser/v4.js","../../src/extensions/datahub/__test-utils__/schema.mocks.ts","../../src/extensions/datahub/designer/topic_filter/TopicFilterData.ts","../../src/extensions/datahub/designer/client_filter/ClientFilterSchema.ts","../../src/extensions/datahub/designer/data_policy/DataPolicySchema.ts","../../src/extensions/datahub/designer/validator/DataPolicyValidator.ts","../../src/extensions/datahub/designer/schema/SchemaData.ts","../../src/extensions/datahub/designer/script/FunctionData.ts","../../src/extensions/datahub/designer/behavior_policy/BehaviorPolicySchema.ts","../../src/extensions/datahub/designer/transition/TransitionData.ts","../../src/extensions/datahub/config/schemas.config.ts","../../src/extensions/datahub/designer/validation.errors.ts","../../src/extensions/datahub/utils/node.utils.ts","../../src/extensions/datahub/hooks/usePolicyGuards.ts"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export const MOCK_PROTOBUF_SCHEMA = `syntax = \"proto3\";\n\nmessage GpsCoordinates {\n  int32 longitude = 1;\n  int32 latitude = 2;\n}\n`\n\nexport const MOCK_JSONSCHEMA_SCHEMA = `{\n   \"$schema\":\"https://json-schema.org/draft/2020-12/schema\",\n   \"title\":\"\",\n   \"description\":\"\",\n   \"required\":[],\n   \"type\":\"object\",\n   \"properties\":{}\n}\n`\n\nexport const MOCK_JAVASCRIPT_SCHEMA = `\n/**\n *\n * @param {Object} publish\n * @param {string} publish.topic    The MQTT topic that is currently specified for this PUBLISH packet.\n * @param {Object} publish.payload  A list of the name and value of all user properties of the MQTT 5 PUBLISH packet. This setting has no effect on MQTT 3 clients.\n * @param {Record<string, string>[]} publish.userProperties The JSON object representation of the deserialized MQTT payload.\n * @param {Object} context\n * @param {Record<string, string>[]} context.arguments  The arguments provided to the script. Currently, arguments can only be provided via a data policy.\n * @param {string} context.policyId The policy id of the policy from which the transformation function is called.\n * @param {string} context.clientId The client Id of the client from which the MQTT publish was sent.\n * @returns {Object} The publish-object is passed as a parameter into the transform function. The same object or a new object is returned as the transformed object.\n */\nfunction transform(publish, context) {\n  return publish\n}\n\n`\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\n\nimport schema from '@datahub/api/__generated__/schemas/TopicFilterData.json'\n\nexport const MOCK_TOPIC_FILTER_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n  uiSchema: {\n    adapter: {\n      'ui:widget': 'edge:adapter-selector',\n    },\n    topics: {\n      'ui:options': {\n        // TODO[NVL] Reordering the topic reorders the handles and edges are gone\n        orderable: false,\n      },\n    },\n  },\n}\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\n\nimport schema from '@datahub//api/__generated__/schemas/ClientFilterData.json'\n\nexport const MOCK_CLIENT_FILTER_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n  uiSchema: {\n    clients: {\n      'ui:options': {\n        orderable: false,\n      },\n    },\n  },\n}\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\n\nimport schema from '@datahub/api/__generated__/schemas/DataPolicyData.json'\n\nexport const MOCK_DATA_POLICY_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n  uiSchema: {},\n}\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\nimport schema from '@datahub/api/__generated__/schemas/DataPolicyValidator.json'\n\nexport const MOCK_VALIDATOR_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n}\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\n\nimport schema from '@datahub/api/__generated__/schemas/SchemaData.json'\n\nexport const MOCK_SCHEMA_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n}\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\n\nimport schema from '@datahub/api/__generated__/schemas/FunctionData.json'\n\nexport const MOCK_FUNCTION_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n}\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\n\nimport schema from '@datahub/api/__generated__/schemas/BehaviorPolicyData.json'\n\nexport const MOCK_BEHAVIOR_POLICY_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n  uiSchema: {\n    arguments: {\n      minPublishes: {\n        'ui:widget': 'updown',\n      },\n      maxPublishes: {\n        'ui:widget': 'updown',\n      },\n    },\n  },\n}\n","/* istanbul ignore file -- @preserve */\nimport type { PanelSpecs } from '@/extensions/datahub/types.ts'\nimport type { RJSFSchema } from '@rjsf/utils'\n\nconst schema: RJSFSchema = {\n  type: 'object',\n  required: ['model', 'event'],\n  properties: {\n    model: { type: 'string' },\n    event: { type: 'string' },\n    from: { type: 'string' },\n    to: { type: 'string' },\n  },\n}\n\nexport const MOCK_TRANSITION_SCHEMA: PanelSpecs = {\n  schema: schema as RJSFSchema,\n  uiSchema: {\n    model: {\n      'ui:readonly': true,\n    },\n    from: {\n      'ui:readonly': true,\n      'ui:widget': 'hidden',\n    },\n    to: {\n      'ui:readonly': true,\n      'ui:widget': 'hidden',\n    },\n    event: {\n      'ui:widget': 'datahub:transition-selector',\n    },\n  },\n}\n","import type { RJSFSchema } from '@rjsf/utils'\nimport { DataHubNodeType } from '@datahub/types.ts'\nimport { MOCK_TOPIC_FILTER_SCHEMA } from '@datahub/designer/topic_filter/TopicFilterData.ts'\nimport { MOCK_CLIENT_FILTER_SCHEMA } from '@datahub/designer/client_filter/ClientFilterSchema.ts'\nimport { MOCK_DATA_POLICY_SCHEMA } from '@datahub/designer/data_policy/DataPolicySchema.ts'\nimport { MOCK_VALIDATOR_SCHEMA } from '@datahub/designer/validator/DataPolicyValidator.ts'\nimport { MOCK_SCHEMA_SCHEMA } from '@datahub/designer/schema/SchemaData.ts'\nimport { MOCK_OPERATION_SCHEMA } from '@datahub/designer/operation/OperationData.ts'\nimport { MOCK_FUNCTION_SCHEMA } from '@datahub/designer/script/FunctionData.ts'\nimport { MOCK_BEHAVIOR_POLICY_SCHEMA } from '@datahub/designer/behavior_policy/BehaviorPolicySchema.ts'\nimport { MOCK_TRANSITION_SCHEMA } from '@datahub/designer/transition/TransitionData.ts'\n\nexport const CustomNodeJSONSchema: Record<string, RJSFSchema> = {\n  [DataHubNodeType.TOPIC_FILTER]: MOCK_TOPIC_FILTER_SCHEMA.schema,\n  [DataHubNodeType.CLIENT_FILTER]: MOCK_CLIENT_FILTER_SCHEMA.schema,\n  [DataHubNodeType.DATA_POLICY]: MOCK_DATA_POLICY_SCHEMA.schema,\n  [DataHubNodeType.VALIDATOR]: MOCK_VALIDATOR_SCHEMA,\n  [DataHubNodeType.SCHEMA]: MOCK_SCHEMA_SCHEMA.schema,\n  [DataHubNodeType.OPERATION]: MOCK_OPERATION_SCHEMA.schema,\n  [DataHubNodeType.FUNCTION]: MOCK_FUNCTION_SCHEMA.schema,\n  [DataHubNodeType.BEHAVIOR_POLICY]: MOCK_BEHAVIOR_POLICY_SCHEMA.schema,\n  [DataHubNodeType.TRANSITION]: MOCK_TRANSITION_SCHEMA.schema,\n}\n","import type { ProblemDetailsExtended } from '@/api/types/http-problem-details.ts'\nimport type { Node } from 'reactflow'\nimport type { DataHubNodeType } from '@datahub/types.ts'\nimport i18n from '@/config/i18n.config.ts'\n\nconst commonProperties: Pick<ProblemDetailsExtended, 'status'> = { status: 404 }\n\nexport const PolicyCheckErrors = {\n  notConnected: <T>(source: DataHubNodeType, target: Node<T>, handle?: string) => ({\n    title: target.type as string,\n    detail: handle\n      ? i18n.t('datahub:error.dryRun.noHandleConnected', { source, target: target.type, handle })\n      : i18n.t('datahub:error.dryRun.notConnected', { source, target: target.type }),\n    type: 'datahub.notConnected',\n    ...commonProperties,\n    id: target.id,\n  }),\n  cardinality: <T>(source: DataHubNodeType, target: Node<T>) => ({\n    title: target.type as string,\n    detail: i18n.t('datahub:error.dryRun.cardinality', { source, target: target.type }),\n    type: 'datahub.cardinality',\n    ...commonProperties,\n    id: target.id,\n  }),\n  // TODO[NVL] For properties, can we use Pick<T> and link to the exact widget in the form?\n  notConfigured: <T>(source: Node<T>, properties: string) => ({\n    title: source.type as string,\n    detail: i18n.t('datahub:error.dryRun.notConfigured', { source: source.type, properties: properties }),\n    type: 'datahub.notConfigured',\n    ...commonProperties,\n    id: source.id,\n  }),\n  notValidated: <T>(source: Node<T>, error: string) => {\n    return {\n      title: source.type as string,\n      detail: i18n.t('datahub:error.dryRun.notValidated', { source: source.type, error }),\n      type: 'datahub.notConfigured',\n      ...commonProperties,\n      id: source.id,\n    }\n  },\n  internal: <T>(source: Node<T>, error: unknown) => {\n    let message: string\n    if (error instanceof Error) message = error.message\n    else message = String(error)\n\n    return {\n      title: source.type as string,\n      detail: i18n.t('datahub:error.dryRun.internal', { source: source.type, error: message }),\n      type: 'datahub.notConfigured',\n      ...commonProperties,\n      id: source.id,\n    }\n  },\n}\n","import type { Connection, Edge, HandleProps, Node } from 'reactflow'\nimport { getConnectedEdges, getIncomers, getOutgoers } from 'reactflow'\nimport { v4 as uuidv4 } from 'uuid'\nimport type { TFunction } from 'i18next'\nimport validator from '@rjsf/validator-ajv8'\nimport { RiPassExpiredLine, RiPassPendingLine, RiPassValidLine } from 'react-icons/ri'\n\nimport i18n from '@/config/i18n.config.ts'\n\nimport { MOCK_JSONSCHEMA_SCHEMA } from '../__test-utils__/schema.mocks.ts'\nimport type {\n  ClientFilterData,\n  DataHubNodeData,\n  DryRunResults,\n  FunctionData,\n  SchemaData,\n  TopicFilterData,\n  ValidatorData,\n  ValidDropConnection,\n} from '../types.ts'\nimport {\n  BehaviorPolicyData,\n  DataHubNodeType,\n  DataPolicyData,\n  DesignerStatus,\n  OperationData,\n  PolicyDryRunStatus,\n  ResourceStatus,\n  ResourceWorkingVersion,\n  SchemaType,\n  StrategyType,\n  TransitionData,\n} from '../types.ts'\nimport { DataPolicyValidator } from '@/api/__generated__'\nimport { CustomNodeJSONSchema } from '@datahub/config/schemas.config.ts'\nimport { PolicyCheckErrors } from '@datahub/designer/validation.errors.ts'\n\nexport const getNodeId = (stub = 'node') => `${stub}_${uuidv4()}`\n\nexport const getNodePayload = (type: string, getDraftName?: (type: DataHubNodeType) => string): DataHubNodeData => {\n  if (type === DataHubNodeType.TOPIC_FILTER) {\n    return {\n      topics: ['topic/example/1'],\n    } as TopicFilterData\n  }\n  if (type === DataHubNodeType.CLIENT_FILTER) {\n    return {\n      clients: ['client/example/1'],\n    } as ClientFilterData\n  }\n\n  if (type === DataHubNodeType.VALIDATOR) {\n    return {\n      type: DataPolicyValidator.type.SCHEMA,\n      strategy: StrategyType.ALL_OF,\n      schemas: [{ version: '1', schemaId: 'first mock schema' }],\n    } as ValidatorData\n  }\n  if (type === DataHubNodeType.OPERATION) {\n    return {\n      functionId: undefined,\n    } as OperationData\n  }\n  if (type === DataHubNodeType.SCHEMA) {\n    return {\n      name: getDraftName?.(DataHubNodeType.SCHEMA),\n      type: SchemaType.JSON,\n      schemaSource: MOCK_JSONSCHEMA_SCHEMA,\n      internalStatus: ResourceStatus.DRAFT,\n      version: ResourceWorkingVersion.DRAFT,\n    } as SchemaData\n  }\n  return {}\n}\n\ntype ConnectionValidity = Record<string, (DataHubNodeType | [DataHubNodeType, string])[]>\n\nexport const validConnections: ConnectionValidity = {\n  [DataHubNodeType.TOPIC_FILTER]: [[DataHubNodeType.DATA_POLICY, DataPolicyData.Handle.TOPIC_FILTER]],\n  [DataHubNodeType.VALIDATOR]: [[DataHubNodeType.DATA_POLICY, DataPolicyData.Handle.VALIDATION]],\n  [DataHubNodeType.DATA_POLICY]: [DataHubNodeType.OPERATION],\n  [DataHubNodeType.OPERATION]: [DataHubNodeType.OPERATION],\n  [DataHubNodeType.SCHEMA]: [\n    DataHubNodeType.VALIDATOR,\n    [DataHubNodeType.OPERATION, OperationData.Handle.SCHEMA],\n    [DataHubNodeType.OPERATION, OperationData.Handle.SERIALISER],\n    [DataHubNodeType.OPERATION, OperationData.Handle.DESERIALISER],\n  ],\n  [DataHubNodeType.CLIENT_FILTER]: [[DataHubNodeType.BEHAVIOR_POLICY, BehaviorPolicyData.Handle.CLIENT_FILTER]],\n  [DataHubNodeType.BEHAVIOR_POLICY]: [DataHubNodeType.TRANSITION],\n  [DataHubNodeType.TRANSITION]: [DataHubNodeType.OPERATION],\n  [DataHubNodeType.FUNCTION]: [[DataHubNodeType.OPERATION, OperationData.Handle.FUNCTION]],\n}\n\nexport const isValidPolicyConnection = (connection: Connection, nodes: Node[], edges: Edge[]) => {\n  const source = nodes.find((node) => node.id === connection.source)\n  const destination = nodes.find((node) => node.id === connection.target)\n\n  const hasCycle = (node: Node, visited = new Set()) => {\n    if (visited.has(node.id)) return false\n\n    visited.add(node.id)\n\n    for (const outgoer of getOutgoers(node, nodes, edges)) {\n      if (outgoer.id === connection.source) return true\n      if (hasCycle(outgoer, visited)) return true\n    }\n    return false\n  }\n\n  if (!source || !destination) {\n    return false\n  }\n\n  if (!source.type) {\n    // node that are not Data Hub types are illegal\n    return false\n  }\n\n  if (destination.id === source.id) {\n    // self-connection are illegal\n    return false\n  }\n\n  if (hasCycle(destination)) {\n    // cycle are illegal\n    return false\n  }\n\n  const connectionValidators = validConnections[source.type]\n  if (!connectionValidators) {\n    return false\n  }\n  return connectionValidators.some((elt) => {\n    if (Array.isArray(elt)) {\n      return destination?.type === elt[0] && connection.targetHandle === elt[1]\n    }\n\n    return destination?.type === elt\n  })\n}\n\n/* istanbul ignore next -- @preserve */\nexport const getDryRunStatusIcon = (state?: PolicyDryRunStatus) => {\n  switch (state) {\n    case PolicyDryRunStatus.IDLE: {\n      return RiPassPendingLine\n    }\n    case PolicyDryRunStatus.SUCCESS: {\n      return RiPassValidLine\n    }\n    case PolicyDryRunStatus.FAILURE: {\n      return RiPassExpiredLine\n    }\n    default: {\n      return RiPassPendingLine\n    }\n  }\n}\n\nexport const isTopicFilterNodeType = (node: Node): node is Node<TopicFilterData> =>\n  node.type === DataHubNodeType.TOPIC_FILTER\n\nexport const isClientFilterNodeType = (node: Node): node is Node<ClientFilterData> =>\n  node.type === DataHubNodeType.CLIENT_FILTER\n\nexport const isSchemaNodeType = (node: Node): node is Node<SchemaData> => node.type === DataHubNodeType.SCHEMA\n\nexport const isFunctionNodeType = (node: Node): node is Node<FunctionData> => node.type === DataHubNodeType.FUNCTION\n\nexport const isValidatorNodeType = (node: Node): node is Node<ValidatorData> => node.type === DataHubNodeType.VALIDATOR\n\nexport const isTransitionNodeType = (node: Node): node is Node<TransitionData> =>\n  node.type === DataHubNodeType.TRANSITION\n\nexport const isDataPolicyNodeType = (node: Node): node is Node<DataPolicyData> =>\n  node.type === DataHubNodeType.DATA_POLICY\n\nexport const isBehaviorPolicyNodeType = (node: Node): node is Node<BehaviorPolicyData> =>\n  node.type === DataHubNodeType.BEHAVIOR_POLICY\n\n// TODO[NVL] Would a map object->Object make this process easier and more performant?\nexport const getConnectedNodeFrom = (node?: string, handle?: string | null): ValidDropConnection | undefined => {\n  if (node === DataHubNodeType.TOPIC_FILTER) {\n    return {\n      type: DataHubNodeType.DATA_POLICY,\n      handle: DataPolicyData.Handle.TOPIC_FILTER,\n      isSource: false,\n    }\n  }\n  if (node === DataHubNodeType.CLIENT_FILTER) {\n    return {\n      type: DataHubNodeType.BEHAVIOR_POLICY,\n      handle: BehaviorPolicyData.Handle.CLIENT_FILTER,\n      isSource: false,\n    }\n  }\n  if (node === DataHubNodeType.DATA_POLICY && handle === DataPolicyData.Handle.TOPIC_FILTER) {\n    return {\n      type: DataHubNodeType.TOPIC_FILTER,\n      handle: null,\n      isSource: true,\n    }\n  }\n  if (node === DataHubNodeType.DATA_POLICY && handle === DataPolicyData.Handle.VALIDATION) {\n    return {\n      type: DataHubNodeType.VALIDATOR,\n      handle: null,\n      isSource: true,\n    }\n  }\n  if (\n    node === DataHubNodeType.DATA_POLICY &&\n    (handle === DataPolicyData.Handle.ON_SUCCESS || handle === DataPolicyData.Handle.ON_ERROR)\n  ) {\n    return {\n      type: DataHubNodeType.OPERATION,\n      handle: null,\n      isSource: false,\n    }\n  }\n  if (node === DataHubNodeType.VALIDATOR && handle === 'source') {\n    return {\n      type: DataHubNodeType.DATA_POLICY,\n      handle: DataPolicyData.Handle.VALIDATION,\n      isSource: false,\n    }\n  }\n  if (node === DataHubNodeType.VALIDATOR && handle === 'target') {\n    return {\n      type: DataHubNodeType.SCHEMA,\n      handle: null,\n      isSource: true,\n    }\n  }\n  if (node === DataHubNodeType.SCHEMA) {\n    // There are two possibilities: DataHubNodeType.VALIDATOR and DataHubNodeType.OPERATION (transform)\n    // We need some form of feedback\n    return undefined\n  }\n  if (node === DataHubNodeType.OPERATION && handle === OperationData.Handle.OUTPUT) {\n    return {\n      type: DataHubNodeType.OPERATION,\n      handle: OperationData.Handle.INPUT,\n      isSource: false,\n    }\n  }\n  if (node === DataHubNodeType.OPERATION && handle === OperationData.Handle.INPUT) {\n    return {\n      type: DataHubNodeType.OPERATION,\n      handle: OperationData.Handle.OUTPUT,\n      isSource: true,\n    }\n  }\n  if (\n    node === DataHubNodeType.OPERATION &&\n    (handle === OperationData.Handle.SCHEMA ||\n      handle === OperationData.Handle.SERIALISER ||\n      handle === OperationData.Handle.DESERIALISER)\n  ) {\n    return {\n      type: DataHubNodeType.SCHEMA,\n      handle: null,\n      isSource: true,\n    }\n  }\n  if (node === DataHubNodeType.OPERATION && handle === OperationData.Handle.FUNCTION) {\n    return {\n      type: DataHubNodeType.FUNCTION,\n      handle: null,\n      isSource: true,\n    }\n  }\n  if (node === DataHubNodeType.FUNCTION) {\n    // This is mapping to a specific data content of the OPERATION node. Not supported yet\n    return undefined\n  }\n  if (node === DataHubNodeType.BEHAVIOR_POLICY && handle === BehaviorPolicyData.Handle.CLIENT_FILTER) {\n    return {\n      type: DataHubNodeType.CLIENT_FILTER,\n      handle: null,\n      isSource: true,\n    }\n  }\n  if (node === DataHubNodeType.BEHAVIOR_POLICY && handle === BehaviorPolicyData.Handle.TRANSITIONS) {\n    return {\n      type: DataHubNodeType.TRANSITION,\n      handle: null,\n      isSource: false,\n    }\n  }\n  if (node === DataHubNodeType.TRANSITION && handle === TransitionData.Handle.BEHAVIOR_POLICY) {\n    return {\n      type: DataHubNodeType.BEHAVIOR_POLICY,\n      handle: BehaviorPolicyData.Handle.TRANSITIONS,\n      isSource: true,\n    }\n  }\n  if (node === DataHubNodeType.TRANSITION && handle === TransitionData.Handle.OPERATION) {\n    return {\n      type: DataHubNodeType.OPERATION,\n      handle: null,\n      isSource: false,\n    }\n  }\n  return undefined\n}\n\nexport const canDeleteNode = (node: Node, status?: DesignerStatus): { delete: boolean; error?: string | null } => {\n  if (status === DesignerStatus.DRAFT) {\n    return { delete: true }\n  }\n  if (isTopicFilterNodeType(node)) {\n    return { delete: false, error: i18n.t('datahub:workspace.guards.delete.topicFilter') }\n  }\n  if (isBehaviorPolicyNodeType(node) || isDataPolicyNodeType(node)) {\n    return { delete: false, error: i18n.t('datahub:workspace.guards.delete.policyNode') }\n  }\n  return { delete: true }\n}\n\nexport const canDeleteEdge = (\n  edge: Edge,\n  nodes?: Node[],\n  status?: DesignerStatus\n): { delete: boolean; error?: string | null } => {\n  if (status === DesignerStatus.DRAFT) return { delete: true }\n\n  if (nodes) {\n    const source = nodes.find((node) => node.id === edge.source)\n    const target = nodes.find((node) => node.id === edge.target)\n    if (source && target && isDataPolicyNodeType(target) && isTopicFilterNodeType(source))\n      return { delete: false, error: i18n.t('datahub:workspace.guards.delete.topicFilter') }\n  }\n  return { delete: true }\n}\n\nexport const getAllParents = (node: Node, nodes: Node[], edges: Edge[], visited = new Set<Node>()): Set<Node> => {\n  if (visited.has(node)) return visited\n  visited.add(node)\n  for (const incomer of getIncomers(node, nodes, edges)) {\n    getAllParents(incomer, nodes, edges, visited)\n  }\n  return visited\n}\n\nexport const reduceIdsFrom =\n  <T>(type: DataHubNodeType, exclude?: string) =>\n  (acc: string[], node: Node) => {\n    if (node.type === type) {\n      const { id, data } = node satisfies Node<T>\n      if (data.id && id !== exclude) {\n        acc.push(data.id)\n      }\n    }\n    return acc\n  }\n\nexport interface ConnectableHandleProps extends Pick<HandleProps, 'id' | 'type'> {\n  isConnectable?: boolean | number\n}\n\nexport const isNodeHandleConnectable = (handle: ConnectableHandleProps, node: Node, edges: Edge[]) => {\n  if (typeof handle.isConnectable === 'number') {\n    const connectedEdges = getConnectedEdges([node], edges)\n    const toHandle = connectedEdges.filter((edge) => {\n      return handle.type === 'source'\n        ? edge.source === node.id && edge.sourceHandle === handle.id\n        : edge.target === node.id && edge.targetHandle === handle.id\n    })\n    return toHandle.length < handle.isConnectable\n  }\n  return handle.isConnectable\n}\n\nexport const renderResourceName = (name: string | undefined, version: number | undefined, t: TFunction) => {\n  if (!name || !version) return t('error.noSet.select', { ns: 'datahub' })\n\n  const getResourceNormalisedVersion = (version: number, t: TFunction) => {\n    if (version === ResourceWorkingVersion.DRAFT)\n      return t('workspace.nodes.status', { context: ResourceStatus.DRAFT, ns: 'datahub' })\n    if (version === ResourceWorkingVersion.MODIFIED)\n      return t('workspace.nodes.status', { context: ResourceStatus.MODIFIED, ns: 'datahub' })\n    return version\n  }\n\n  const formatedVersion = getResourceNormalisedVersion(version, t)\n\n  return `${name}:${formatedVersion}`\n}\n\nexport const validateNode = (newNode: Node) => {\n  if (!newNode.type) return { isValid: false }\n  const schema = CustomNodeJSONSchema[newNode.type]\n  const validate = validator.ajv.compile(schema)\n  const isValid = validate(newNode.data)\n  return {\n    isValid,\n    errors: validate.errors,\n  }\n}\n\nexport const checkValidityConfigurations = (allNodes: Node[]) => {\n  const allConfigurations: DryRunResults<unknown>[] = []\n  for (const node of allNodes) {\n    const nodeConfiguration = validateNode(node)\n    if (!nodeConfiguration.isValid && nodeConfiguration?.errors?.length) {\n      for (const error of nodeConfiguration.errors) {\n        allConfigurations.push({\n          node: node,\n          error: PolicyCheckErrors.notValidated(node, error.message as string),\n        })\n      }\n    }\n  }\n  return allConfigurations\n}\n","import { useTranslation } from 'react-i18next'\nimport { useMemo } from 'react'\nimport type { Node } from 'reactflow'\nimport useDataHubDraftStore from '@datahub/hooks/useDataHubDraftStore.ts'\nimport type { TopicFilterData } from '@datahub/types.ts'\nimport { DesignerStatus } from '@datahub/types.ts'\nimport { canDeleteNode } from '@datahub/utils/node.utils.ts'\n\nexport interface GuardAlertProps {\n  title: string\n  description: string\n}\n\nexport const usePolicyGuards = (selectedNode?: string) => {\n  const { t } = useTranslation('datahub')\n  const { status, nodes } = useDataHubDraftStore()\n\n  const adapterNode = useMemo(() => {\n    return nodes.find((e) => e.id === selectedNode) as Node<TopicFilterData> | undefined\n  }, [selectedNode, nodes])\n\n  const isPolicyEditable = useMemo(() => status !== DesignerStatus.LOADED, [status])\n\n  const protectedNode = adapterNode && canDeleteNode(adapterNode, status)\n\n  let guardAlert: GuardAlertProps | undefined = undefined\n  if (!isPolicyEditable) {\n    guardAlert = {\n      title: t('workspace.guards.readonly.title'),\n      description: t('workspace.guards.readonly.message'),\n    }\n  } else if (protectedNode && !protectedNode.delete) {\n    guardAlert = {\n      title: t('workspace.guards.protected.title'),\n      description: t('workspace.guards.protected.message'),\n    }\n  }\n\n  return {\n    status,\n    isPolicyEditable,\n    isNodeEditable: isPolicyEditable && protectedNode && protectedNode?.delete,\n    guardAlert: guardAlert,\n  }\n}\n"],"names":["getRandomValues","rnds8","rng","byteToHex","i","unsafeStringify","arr","offset","randomUUID","native","v4","options","buf","rnds","MOCK_PROTOBUF_SCHEMA","MOCK_JSONSCHEMA_SCHEMA","MOCK_JAVASCRIPT_SCHEMA","MOCK_TOPIC_FILTER_SCHEMA","schema","MOCK_CLIENT_FILTER_SCHEMA","MOCK_DATA_POLICY_SCHEMA","MOCK_VALIDATOR_SCHEMA","MOCK_SCHEMA_SCHEMA","MOCK_FUNCTION_SCHEMA","MOCK_BEHAVIOR_POLICY_SCHEMA","MOCK_TRANSITION_SCHEMA","CustomNodeJSONSchema","DataHubNodeType","MOCK_OPERATION_SCHEMA","commonProperties","PolicyCheckErrors","source","target","handle","i18n","properties","error","message","getNodeId","stub","uuidv4","getNodePayload","type","getDraftName","DataPolicyValidator","StrategyType","SchemaType","ResourceStatus","ResourceWorkingVersion","validConnections","DataPolicyData","OperationData","BehaviorPolicyData","isValidPolicyConnection","connection","nodes","edges","node","destination","hasCycle","visited","outgoer","getOutgoers","connectionValidators","elt","getDryRunStatusIcon","state","PolicyDryRunStatus","RiPassPendingLine","RiPassValidLine","RiPassExpiredLine","isTopicFilterNodeType","isClientFilterNodeType","isSchemaNodeType","isFunctionNodeType","isValidatorNodeType","isTransitionNodeType","isDataPolicyNodeType","isBehaviorPolicyNodeType","getConnectedNodeFrom","TransitionData","canDeleteNode","status","DesignerStatus","canDeleteEdge","edge","getAllParents","incomer","getIncomers","reduceIdsFrom","exclude","acc","id","data","isNodeHandleConnectable","getConnectedEdges","renderResourceName","name","version","t","formatedVersion","validateNode","newNode","validate","validator","checkValidityConfigurations","allNodes","allConfigurations","nodeConfiguration","_a","usePolicyGuards","selectedNode","useTranslation","useDataHubDraftStore","adapterNode","useMemo","e","isPolicyEditable","protectedNode","guardAlert"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}