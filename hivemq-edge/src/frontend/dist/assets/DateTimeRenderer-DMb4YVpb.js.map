{"version":3,"file":"DateTimeRenderer-DMb4YVpb.js","sources":["../../src/components/DateTime/utils/duration.utils.ts","../../src/components/DateTime/DateTimeRenderer.tsx"],"sourcesContent":["import { DateTime } from 'luxon'\nimport type { DurationUnits } from 'luxon/src/duration'\n\nexport const toHuman = (timestamp: DateTime, alternativeNow?: DateTime) => {\n  const units: DurationUnits = ['weeks', 'days', 'hours', 'minutes', 'seconds']\n\n  // mostly used for testing\n  /* istanbul ignore next -- @preserve */\n  const diff = alternativeNow ? timestamp.diff(alternativeNow, units) : timestamp.diffNow(units)\n\n  const rescaledDuration = diff\n    .negate()\n    .mapUnits((x) => Math.floor(x))\n    .rescale()\n\n  if (rescaledDuration.valueOf() < 30 * 1000) return null\n  if (rescaledDuration.valueOf() < 60 * 1000)\n    return DateTime.local()\n      .minus(rescaledDuration.set({ minute: 1 }))\n      .toRelative()\n\n  return DateTime.local().minus(rescaledDuration).toRelative()\n}\n","import type { FC } from 'react'\nimport { Text, Tooltip, type TextProps } from '@chakra-ui/react'\nimport type { DateTime } from 'luxon'\nimport { useTranslation } from 'react-i18next'\n\nimport { toHuman } from './utils/duration.utils.ts'\n\ninterface DateTimeRendererProps extends TextProps {\n  date: DateTime\n  isApprox?: boolean\n  isShort?: boolean\n}\n\nconst DateTimeRenderer: FC<DateTimeRendererProps> = ({ date, isApprox = false, isShort = false, ...props }) => {\n  const { t } = useTranslation('components')\n  const formatLongDate = new Intl.DateTimeFormat(navigator.language, {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    fractionalSecondDigits: 3,\n  })\n\n  const formatShortDate = new Intl.DateTimeFormat(navigator.language, {\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  })\n\n  const formatter = isShort ? formatShortDate : formatLongDate\n  if (!date.isValid) {\n    // Need to check for error type\n    return null\n  }\n\n  if (isApprox) {\n    const relative = toHuman(date)\n    return (\n      <Tooltip\n        data-testid=\"date-time-tooltip\"\n        hasArrow\n        label={formatter.format(date.toJSDate())}\n        placement=\"top\"\n        maxW=\"200px\"\n      >\n        <Text data-testid=\"date-time-approx\" width=\"fit-content\" {...props}>\n          {relative || t('DateTimeRenderer.seconds', { context: 'minus' })}\n        </Text>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <Text data-testid=\"date-time-full\" {...props}>\n      {formatter.format(date.toJSDate())}\n    </Text>\n  )\n}\n\nexport default DateTimeRenderer\n"],"names":["toHuman","timestamp","alternativeNow","units","rescaledDuration","x","DateTime","DateTimeRenderer","date","isApprox","isShort","props","useTranslation","formatLongDate","formatShortDate","formatter","relative","jsx","Tooltip","Text"],"mappings":"kaAGa,MAAAA,EAAU,CAACC,EAAqBC,IAA8B,CACzE,MAAMC,EAAuB,CAAC,QAAS,OAAQ,QAAS,UAAW,SAAS,EAAA,uCAM5E,MAAMC,EAFgEH,EAAU,QAAQE,CAAK,EAG1F,OAAO,EACP,SAAUE,GAAM,KAAK,MAAMA,CAAC,CAAC,EAC7B,QAAQ,EAEX,OAAID,EAAiB,QAAA,EAAY,GAAK,IAAa,KAC/CA,EAAiB,UAAY,GAAK,IAC7BE,EAAS,QACb,MAAMF,EAAiB,IAAI,CAAE,OAAQ,EAAG,CAAC,EACzC,WAAW,EAETE,EAAS,MAAM,EAAE,MAAMF,CAAgB,EAAE,WAAW,CAC7D,ECTMG,EAA8C,CAAC,CAAE,KAAAC,EAAM,SAAAC,EAAW,GAAO,QAAAC,EAAU,GAAO,GAAGC,KAAY,CAC7G,KAAM,CAAE,CAAA,EAAMC,EAAe,YAAY,EACnCC,EAAiB,IAAI,KAAK,eAAe,UAAU,SAAU,CACjE,QAAS,OACT,KAAM,UACN,MAAO,OACP,IAAK,UACL,KAAM,UACN,OAAQ,UACR,OAAQ,UACR,uBAAwB,CAAA,CACzB,EAEKC,EAAkB,IAAI,KAAK,eAAe,UAAU,SAAU,CAClE,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,UACR,OAAQ,SAAA,CACT,EAEKC,EAAYL,EAAUI,EAAkBD,EAC1C,GAAA,CAACL,EAAK,QAED,OAAA,KAGT,GAAIC,EAAU,CACN,MAAAO,EAAWhB,EAAQQ,CAAI,EAE3B,OAAAS,EAAA,IAACC,EAAA,CACC,cAAY,oBACZ,SAAQ,GACR,MAAOH,EAAU,OAAOP,EAAK,UAAU,EACvC,UAAU,MACV,KAAK,QAEL,SAACS,EAAA,IAAAE,EAAA,CAAK,cAAY,mBAAmB,MAAM,cAAe,GAAGR,EAC1D,SAAAK,GAAY,EAAE,2BAA4B,CAAE,QAAS,OAAA,CAAS,CACjE,CAAA,CAAA,CACF,CAAA,CAKF,OAAAC,EAAA,IAACE,EAAK,CAAA,cAAY,iBAAkB,GAAGR,EACpC,SAAAI,EAAU,OAAOP,EAAK,SAAS,CAAC,CACnC,CAAA,CAEJ"}