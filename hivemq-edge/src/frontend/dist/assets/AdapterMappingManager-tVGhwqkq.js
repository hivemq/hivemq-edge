import{u as x,r as f,j as s,au as v,b_ as w,e as I,aQ as O,aR as _,Q as M,a7 as U,a8 as B,y as j,l as y,h as $,b as L,i as R,D as k,M as H,p as K,q as G,s as W,T as V,v as Y,x as X,g as z,B as J}from"./index-cMih3SEP.js";import{D as Z}from"./DrawerExpandButton-BRREeAlM.js";import{C as tt,M as et,Q as A}from"./ChakraRJSForm-BfID56dF.js";import{a as ot}from"./validation-utils-D1Qq58G3.js";import{u as it,a as at}from"./useListSouthboundMappings-Bc_cq5lO.js";import{g as st}from"./index-BXWYaCHO.js";import"./without-BTTCd72_.js";import{C as T}from"./topics-utils-l3ij3e8P.js";import{S as rt,a as nt,b as pt}from"./EntityCreatableSelect-6HDrxMJ3.js";import{D as S}from"./toast-utils-BddXXXrS.js";import{N as Q}from"./types-DcJW2o_l.js";import{u as ct}from"./useWorkspaceStore-CGV4wV7X.js";import{N as dt}from"./NodeNameCard-yfQKWlf9.js";import{u as mt}from"./useGetAdapterTypes-Dufd8ZhJ.js";import{u as E}from"./ArrayFieldTemplate-BvbIrrVp.js";import"./index-iD7yky8Q.js";import"./ArrayFieldItemTemplate-CQ7KDBCe.js";import"./chunk-TRO7245M-Czmm3RtS.js";import"./index-UJo6opCj.js";import"./vanilla-Dd4Maacd.js";import"./color-Cs2FUV59.js";import"./chunk-W7WUSNWJ-DJm2I2MC.js";import"./PaginatedTable-CpimMJK6.js";import"./creatable-select-CDfhMLkq.js";import"./use-chakra-select-props-D5NVA-bJ.js";import"./chunk-KC77MHL3-CpO6TSLY.js";import"./chunk-HB6KBUMZ-BnKuEGjs.js";import"./chunk-OCNORRQU-qVjYAyQ7.js";import"./index-DDmdO6wr.js";import"./datetime-B2_BsC7v.js";import"./EntityTag-D_VD81fJ.js";import"./chunk-RPO2WXNL-BTibYaQa.js";import"./JsonSchemaBrowser-9_NRMvC_.js";import"./index-C46KiF-i.js";import"./chunk-LZZHVJFG-BAJsNEk_.js";import"./chunk-2EW3JUUD-iAZ0BXIz.js";import"./chunk-FHHZMTWR-BZ2wKB7t.js";import"./index-BTlOwmq4.js";import"./chunk-BDSTZZXD-Biup13z0.js";import"./chunk-IAXSQ4X2-dYM9Hy0E.js";import"./index-C23MLgnh.js";import"./useGetDomainTags-VyBNKn6z.js";import"./useListTopicFilters-BbjQizvN.js";import"./useListProtocolAdapters-B80RXV7q.js";import"./useListBridges-BwHrTuI4.js";import"./select-Cl6Duh2E.js";import"./middleware-DWkoLS6u.js";import"./index-Dis5-5gm.js";import"./05-icon-industrial-hivemq-edge-CnZ6VqSq.js";import"./adapter.utils-B-ndd-tn.js";import"./chunk-KTD65HY5-BcgUOmvV.js";import"./pick-DicWcAKr.js";import"./chunk-JARCRF6W-CHhnzfpl.js";import"./chunk-ZPFGWTBB-27OtcFRz.js";import"./chunk-RDF2AYID-BFNDpMsD.js";import"./config.utils-FEQhkVx6.js";import"./chunk-KO6Q73AP-Bk5HKb-M.js";import"./chunk-VTV6N5LE-DWhDJEfB.js";import"./chunk-EL2VKIZQ-C-XtNqj-.js";(function(){try{var e=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},t=new e.Error().stack;t&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[t]="4364946d-c94c-4c1f-a997-9361b707d22a",e._sentryDebugIdIdentifier="sentry-dbid-4364946d-c94c-4c1f-a997-9361b707d22a")}catch{}})();const lt=({adapterId:e,adapterType:t,useManager:p,type:r,showNativeWidgets:a=!1,onSubmit:d})=>{const{t:l}=x(),{context:c,onUpdateCollection:m}=p(e),u=f.useState(),i=f.useCallback(n=>{const g=m(n.formData);g==null||g.then(d)},[d,m]);if(!c.schema)return s.jsx(v,{message:l("protocolAdapter.export.error.noSchema")});const o={isEditAdapter:!0,isDiscoverable:!1,adapterType:t,adapterId:e,validationSchemas:u};return s.jsx(tt,{showNativeWidgets:a,id:"adapter-mapping-form",schema:c.schema,uiSchema:c.uiSchema,formData:c.formData,formContext:o,onSubmit:i,customValidate:r===w.SOUTHBOUND&&t?ot():void 0})},ut=()=>{const e=I(),t=O();return _({mutationFn:({adapterId:r,requestBody:a})=>e.protocolAdapters.updateAdapterNorthboundMappings(r,a),onSuccess:(r,a)=>{t.invalidateQueries({queryKey:[M.ADAPTERS,a.adapterId,M.NORTHBOUND_MAPPINGS]})}})};/* istanbul ignore next -- @preserve */const gt={title:"MQTT User Properties",description:"Arbitrary properties to associate with the mapping",maxItems:10,type:"array",items:{type:"object",properties:{name:{type:"string",title:"Name",description:"Name of the associated property"},value:{type:"string",title:"Value",description:"Value of the associated property"}},required:["name","value"],maxItems:10}};/* istanbul ignore next -- @preserve */const P={type:"string",title:"MQTT QoS",description:"MQTT Quality of Service level",enum:[A.AT_MOST_ONCE,A.AT_LEAST_ONCE,A.EXACTLY_ONCE],default:et};/* istanbul ignore next -- @preserve */const ft={definitions:{QoS:P,MqttUserProperty:gt,NorthboundMapping:{properties:{includeTagNames:{type:"boolean",title:"Include Tag Names In Publish?",description:"Include the names of the tags in the resulting MQTT publish",default:!1},includeTimestamp:{type:"boolean",title:"Include Sample Timestamp In Publish?",description:"Include the unix timestamp of the sample time in the resulting MQTT message",default:!0},messageExpiryInterval:{type:"number",description:"The message expiry interval.",format:"int64"},maxQoS:{$ref:"#/definitions/QoS"},tagName:{title:"Source Tag name",type:"string",description:"The tag for which values should be collected and sent out.",format:"mqtt-tag"},topic:{type:"string",title:"Destination MQTT Topic",description:"The topic to publish data on",format:"mqtt-topic"},userProperties:{$ref:"#/definitions/MqttUserProperty"}},required:["topic","tagName","maxQoS"]}},properties:{items:{type:"array",items:{$ref:"#/definitions/NorthboundMapping"}}}},D=e=>t=>{const{chakraProps:p,label:r,id:a,disabled:d,readonly:l,onChange:c,required:m,rawErrors:u,value:i}=t,{multiple:o,create:n}=st(t.uiSchema),{adapterId:g}=t.formContext,h=f.useMemo(()=>e===T.MQTT_TAG?rt:e===T.MQTT_TOPIC?nt:e===T.MQTT_TOPIC_FILTER?pt:f.Fragment,[]);return s.jsxs(U,{isDisabled:d||l,isRequired:m,...p,mb:1,isInvalid:u&&u.length>0,children:[s.jsx(B,{htmlFor:a,children:r}),s.jsx(h,{adapterId:g,isMulti:!!o,isCreatable:!!n,id:a,value:i,onChange:c})]})};/* istanbul ignore next -- @preserve */const ht={"ui:submitButtonOptions":{norender:!0},items:{"ui:title":"List of northbound mappings","ui:description":"The list of all the mappings delivering messages from this adapter onto the Edge",items:{"ui:order":["tagName","topic","*"],"ui:collapsable":{titleKey:"tagName",name:"Mapping"},tagName:{"ui:widget":D(T.MQTT_TAG)},topic:{"ui:widget":D(T.MQTT_TOPIC),"ui:options":{create:!0}},"ui:addButton":"Add a mapping",userProperties:{items:{"ui:addButton":"Add a user property"}},maxQoS:{"ui:enumNames":["At most once (QoS 0)","At least once (QoS 1)","Exactly once (QoS 2)"]}}}},Tt=e=>{const{t}=x(),p=j({duration:S.duration,isClosable:S.isClosable}),{data:r,isError:a,isLoading:d,error:l}=it(e),c=ut(),m=o=>({success:{title:t(`protocolAdapter.mapping.toast.${o}.title`),description:t(`protocolAdapter.mapping.toast.${o}.description`,{context:"success"})},error:{title:t(`protocolAdapter.mapping.toast.${o}.title`),description:t(`protocolAdapter.mapping.toast.${o}.description`,{context:"error"})},loading:{title:t(`protocolAdapter.mapping.toast.${o}.title`),description:t("protocolAdapter.mapping.toast.description",{context:"loading"})}});return{context:{schema:ft,uiSchema:ht,formData:r},data:r,onUpdateCollection:o=>{if(!e)return;const n=c.mutateAsync({adapterId:e,requestBody:o});return p.promise(n,m("updateCollection")),n},onClose:()=>p.closeAll(),isLoading:d,isError:a,error:l,isPending:c.isPending}},bt=()=>{const e=I(),t=O();return _({mutationFn:({adapterId:r,requestBody:a})=>e.protocolAdapters.updateAdapterSouthboundMappings(r,a),onSuccess:(r,a)=>{t.invalidateQueries({queryKey:[M.ADAPTERS,a.adapterId,M.SOUTHBOUND_MAPPINGS]})}})};/* istanbul ignore next -- @preserve */const yt={definitions:{QoS:P,Instruction:{description:y.t("definitions.Instruction.description",{ns:"schemas"}),properties:{destination:{type:"string",title:y.t("definitions.Instruction.destination.title",{ns:"schemas"}),description:"The field in the output object where the data will be written to"},source:{type:"string",description:"The field in the input object where the data will be read from"}},required:["destination","source"]},Metadata:{description:"Metadata for the whole mapping",properties:{destination:{type:"object"},source:{type:"object"}}},FieldMapping:{description:"Defines how incoming data should be transformed before being sent out.",properties:{instructions:{type:"array",title:y.t("definitions.FieldMapping.instructions.title",{ns:"schemas"}),description:y.t("definitions.FieldMapping.instructions.description",{ns:"schemas"}),items:{$ref:"#/definitions/Instruction"}},metadata:{$ref:"#/definitions/Metadata"}}},SouthboundMapping:{properties:{maxQoS:{$ref:"#/definitions/QoS"},tagName:{title:"Destination Tag name",type:"string",description:"The tag for which values should be collected and sent out.",format:"mqtt-tag"},topicFilter:{type:"string",title:"Source MQTT Topic Filter",description:"The filter defining what topics we will receive messages from",format:"mqtt-topic-filter"},fieldMapping:{$ref:"#/definitions/FieldMapping"}},required:["topicFilter","tagName","maxQoS"]}},properties:{items:{type:"array",items:{$ref:"#/definitions/SouthboundMapping"}}}};/* istanbul ignore next -- @preserve */const N={"ui:options":{accept:".json"}};/* istanbul ignore next -- @preserve */const Mt={"ui:submitButtonOptions":{norender:!0},items:{"ui:title":"List of Southbound mappings","ui:description":"The list of all the mappings delivering messages from Edge to the device","ui:field":"mqtt:transform",items:{"ui:order":["topicFilter","tagName","*"],"ui:collapsable":{titleKey:"topicFilter"},"ui:addButton":"Create a new mapping",topicFilter:{"ui:format":"mqtt-topic=xx"},maxQoS:{"ui:enumNames":["At most once (QoS 0)","At least once (QoS 1)","Exactly once (QoS 2)"]},fieldMapping:{metadata:{destination:{...N},source:{...N}},instructions:{items:{"ui:addButton":"Add a new set of transformation"}}}}}},St=e=>{const{t}=x(),p=j({duration:S.duration,isClosable:S.isClosable}),{data:r,isError:a,isLoading:d,error:l}=at(e),c=bt(),m=o=>({success:{title:t(`protocolAdapter.mapping.toast.${o}.title`),description:t(`protocolAdapter.mapping.toast.${o}.description`,{context:"success"})},error:{title:t(`protocolAdapter.mapping.toast.${o}.title`),description:t(`protocolAdapter.mapping.toast.${o}.description`,{context:"error"})},loading:{title:t(`protocolAdapter.mapping.toast.${o}.title`),description:t("protocolAdapter.mapping.toast.description",{context:"loading"})}});return{context:{schema:yt,uiSchema:Mt,formData:r},data:r,onUpdateCollection:o=>{if(!e)return;const n=c.mutateAsync({adapterId:e,requestBody:o});return p.promise(n,m("updateCollection")),n},onClose:()=>p.closeAll(),isLoading:d,isError:a,error:l,isPending:c.isPending}},Ne=({type:e})=>{var C;const{t}=x(),[p,r]=E(!0),{isOpen:a,onOpen:d,onClose:l}=$(),c=L(),{nodeId:m}=R(),{nodes:u}=ct(),i=f.useMemo(()=>u.find(b=>b.id===m&&b.type===Q.ADAPTER_NODE),[m,u]),{data:o}=mt(),n=(i==null?void 0:i.type)===Q.ADAPTER_NODE?(C=o==null?void 0:o.items)==null?void 0:C.find(b=>b.id===i.data.type):void 0,g=()=>{l(),c("/workspace")};f.useEffect(()=>{d()},[d]);const h=i==null?void 0:i.data.id,F=e===w.NORTHBOUND?Tt:St,[q,xt]=E();return s.jsxs(k,{isOpen:a,placement:"right",size:p?"full":"lg",onClose:g,variant:"hivemq",children:[s.jsx(H,{}),s.jsxs(K,{children:[s.jsx(G,{}),s.jsx(Z,{isExpanded:p,toggle:r.toggle}),s.jsxs(W,{children:[s.jsx(V,{children:t("protocolAdapter.mapping.manager.header",{context:e})}),s.jsx(dt,{name:i==null?void 0:i.data.id,type:i==null?void 0:i.type,icon:n==null?void 0:n.logoUrl,description:n==null?void 0:n.name})]}),s.jsxs(Y,{display:"flex",flexDirection:"column",gap:6,children:[!h&&s.jsx(v,{message:t("protocolAdapter.error.loading")}),h&&s.jsx(lt,{adapterId:h,adapterType:i==null?void 0:i.data.type,onSubmit:g,useManager:F,type:e,showNativeWidgets:q})]}),s.jsxs(X,{children:[z.environment==="development",s.jsx(J,{variant:"primary",type:"submit",form:"adapter-mapping-form",children:t("protocolAdapter.mapping.actions.submit")})]})]})]})};export{Ne as default};
//# sourceMappingURL=AdapterMappingManager-tVGhwqkq.js.map
