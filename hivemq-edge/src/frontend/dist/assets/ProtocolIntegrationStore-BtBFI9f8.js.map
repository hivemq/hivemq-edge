{"version":3,"file":"ProtocolIntegrationStore-BtBFI9f8.js","sources":["../../node_modules/.pnpm/@chakra-ui+layout@2.3.1_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/layout/dist/chunk-6WNMSZKB.mjs","../../node_modules/.pnpm/@chakra-ui+icons@2.1.1_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/icons/dist/chunk-LGS2EUKR.mjs","../../node_modules/.pnpm/@chakra-ui+icons@2.1.1_@chakra-ui+system@2.6.2_react@18.2.0/node_modules/@chakra-ui/icons/dist/chunk-XEKRR764.mjs","../../src/modules/ProtocolAdapters/utils/facets-utils.ts","../../src/modules/ProtocolAdapters/components/adapters/AdapterTypeSummary.tsx","../../src/modules/ProtocolAdapters/components/IntegrationStore/ProtocolsBrowser.tsx","../../src/modules/ProtocolAdapters/components/IntegrationStore/FacetSearch.tsx","../../src/modules/ProtocolAdapters/components/panels/ProtocolIntegrationStore.tsx"],"sourcesContent":["'use client'\nimport {\n  Box\n} from \"./chunk-PULVB27S.mjs\";\n\n// src/highlight.tsx\nimport {\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { Fragment, useMemo } from \"react\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\nvar escapeRegexp = (term) => term.replace(/[|\\\\{}()[\\]^$+*?.-]/g, (char) => `\\\\${char}`);\nfunction buildRegex(query) {\n  const _query = query.filter((text) => text.length !== 0).map((text) => escapeRegexp(text.trim()));\n  if (!_query.length) {\n    return null;\n  }\n  return new RegExp(`(${_query.join(\"|\")})`, \"ig\");\n}\nfunction highlightWords({ text, query }) {\n  const regex = buildRegex(Array.isArray(query) ? query : [query]);\n  if (!regex) {\n    return [{ text, match: false }];\n  }\n  const result = text.split(regex).filter(Boolean);\n  return result.map((str) => ({ text: str, match: regex.test(str) }));\n}\nfunction useHighlight(props) {\n  const { text, query } = props;\n  return useMemo(() => highlightWords({ text, query }), [text, query]);\n}\nvar Mark = forwardRef(function Mark2(props, ref) {\n  const styles = useStyleConfig(\"Mark\", props);\n  const ownProps = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    Box,\n    {\n      ref,\n      ...ownProps,\n      as: \"mark\",\n      __css: { bg: \"transparent\", whiteSpace: \"nowrap\", ...styles }\n    }\n  );\n});\nfunction Highlight(props) {\n  const { children, query, styles } = props;\n  if (typeof children !== \"string\") {\n    throw new Error(\"The children prop of Highlight must be a string\");\n  }\n  const chunks = useHighlight({ query, text: children });\n  return /* @__PURE__ */ jsx(Fragment2, { children: chunks.map((chunk, index) => {\n    return chunk.match ? /* @__PURE__ */ jsx(Mark, { sx: styles, children: chunk.text }, index) : /* @__PURE__ */ jsx(Fragment, { children: chunk.text }, index);\n  }) });\n}\n\nexport {\n  useHighlight,\n  Mark,\n  Highlight\n};\n//# sourceMappingURL=chunk-6WNMSZKB.mjs.map","'use client'\n\n// src/Search.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar SearchIcon = createIcon({\n  d: \"M23.384,21.619,16.855,15.09a9.284,9.284,0,1,0-1.768,1.768l6.529,6.529a1.266,1.266,0,0,0,1.768,0A1.251,1.251,0,0,0,23.384,21.619ZM2.75,9.5a6.75,6.75,0,1,1,6.75,6.75A6.758,6.758,0,0,1,2.75,9.5Z\",\n  displayName: \"SearchIcon\"\n});\n\nexport {\n  SearchIcon\n};\n//# sourceMappingURL=chunk-LGS2EUKR.mjs.map","'use client'\n\n// src/ArrowForward.tsx\nimport { createIcon } from \"@chakra-ui/icon\";\nvar ArrowForwardIcon = createIcon({\n  d: \"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\",\n  displayName: \"ArrowForwardIcon\"\n});\n\nexport {\n  ArrowForwardIcon\n};\n//# sourceMappingURL=chunk-XEKRR764.mjs.map","import type { ProtocolFacetType } from '@/modules/ProtocolAdapters/types.ts'\nimport type { ProtocolAdapter } from '@/api/__generated__'\n\nexport const applyFacets = (facet: ProtocolFacetType): ((e: ProtocolAdapter) => boolean) => {\n  return (adapter) => {\n    const isFilterUnset = !facet.filter?.value\n    const isCategoryMatching = Boolean(\n      (facet.filter?.key === 'category' && adapter.category?.name === facet.filter?.value) ||\n        (facet.filter?.key === 'tags' && adapter.tags?.includes(facet.filter?.value))\n    )\n    const isSearchUnset = !facet.search\n    const isTextMatching = Boolean(\n      facet.search &&\n        (adapter.name?.toLowerCase().includes(facet.search.toLowerCase()) ||\n          adapter.description?.toLowerCase().includes(facet.search.toLowerCase()))\n    )\n\n    return (isFilterUnset || isCategoryMatching) && (isSearchUnset || isTextMatching)\n  }\n}\n","import type { FC } from 'react'\nimport type { HighlightProps } from '@chakra-ui/react'\nimport { Image, Badge, Box, Flex, Highlight, Link, Text, Skeleton } from '@chakra-ui/react'\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport type { ProtocolAdapter } from '@/api/__generated__'\n\ninterface AdapterTypeSummaryProps {\n  adapter: ProtocolAdapter\n  searchQuery?: string | null\n  isLoading?: boolean\n}\n\nconst AdapterHighlight: FC<HighlightProps> = (props) => (\n  <Highlight query={props.query} styles={{ rounded: 'full', bg: 'orange.100' }}>\n    {props.children}\n  </Highlight>\n)\n\nconst AdapterTypeSummary: FC<AdapterTypeSummaryProps> = ({ adapter, searchQuery, isLoading }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Flex m={0}>\n      <Skeleton isLoaded={!isLoading}>\n        <Image boxSize=\"100px\" objectFit=\"scale-down\" src={adapter.logoUrl} aria-label={adapter.id} />\n      </Skeleton>\n      <Box ml=\"3\">\n        <Skeleton isLoaded={!isLoading} as=\"p\">\n          <Text fontWeight=\"bold\" data-testid=\"protocol-name\" id={`adapter-${adapter.id}`} as=\"span\">\n            <AdapterHighlight query={searchQuery || ''}>{adapter.name || ''}</AdapterHighlight>\n          </Text>\n          <Badge ml=\"1\" colorScheme=\"brand\" variant=\"solid\" data-testid=\"protocol-version\">\n            {adapter.version}\n          </Badge>\n        </Skeleton>\n        <Skeleton isLoaded={!isLoading} mt={1}>\n          <Text fontSize=\"sm\" data-testid=\"protocol-type\">\n            {t('protocolAdapter.overview.type')} {adapter.protocol}\n          </Text>\n          <Text fontSize=\"sm\" data-testid=\"protocol-author\">\n            {t('protocolAdapter.overview.author')} {adapter.author}\n          </Text>\n          <Text fontSize=\"sm\" data-testid=\"protocol-description\">\n            <AdapterHighlight query={searchQuery || ''}>{adapter.description || ''}</AdapterHighlight>\n          </Text>\n        </Skeleton>\n        <Box mt={2}>\n          <Skeleton isLoaded={!isLoading}>\n            <Link href={adapter.url} isExternal>\n              {t('protocolAdapter.overview.documentation')} <ExternalLinkIcon mx={1} mb={1} />\n            </Link>\n          </Skeleton>\n        </Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport default AdapterTypeSummary\n","import type { FC } from 'react'\nimport { useMemo } from 'react'\nimport { Box, Button, Card, CardBody, CardFooter, Link, SimpleGrid, Skeleton } from '@chakra-ui/react'\nimport { ArrowForwardIcon, ExternalLinkIcon } from '@chakra-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport type { ProtocolAdapter } from '@/api/__generated__'\nimport WarningMessage from '@/components/WarningMessage.tsx'\nimport AdapterEmptyLogo from '@/assets/app/adaptor-empty.svg'\n\nimport type { ProtocolFacetType } from '../../types.ts'\nimport { applyFacets } from '../../utils/facets-utils.ts'\nimport AdapterTypeSummary from '../adapters/AdapterTypeSummary.tsx'\n\ninterface ProtocolsBrowserProps {\n  items: ProtocolAdapter[]\n  facet: ProtocolFacetType | undefined\n  onCreate?: (adapterId: string | undefined) => void\n  isLoading?: boolean\n}\n\nconst ProtocolsBrowser: FC<ProtocolsBrowserProps> = ({ items, facet, onCreate, isLoading }) => {\n  const { t } = useTranslation()\n  const filteredAdapters = useMemo(() => {\n    if (!facet) return items\n    return items.filter(applyFacets(facet))\n  }, [items, facet])\n\n  if (!filteredAdapters.length)\n    return (\n      <Box width=\"100%\">\n        <WarningMessage\n          image={AdapterEmptyLogo}\n          prompt={t('protocolAdapter.noFilterWarning.description')}\n          alt={t('protocolAdapter.title')}\n          mt={10}\n        />\n      </Box>\n    )\n\n  return (\n    <SimpleGrid\n      templateColumns={{ base: 'repeat(1, 1fr)', xl: 'repeat(2, 1fr)' }}\n      spacing={4}\n      gap={6}\n      role=\"list\"\n      aria-label={t('protocolAdapter.list')}\n    >\n      {filteredAdapters?.map((e) => (\n        <Card key={e.id} minW=\"300px\" role=\"listitem\" aria-labelledby={`adapter-${e.id}`}>\n          <CardBody p={2}>\n            <AdapterTypeSummary key={e.id} adapter={e} searchQuery={facet?.search} isLoading={isLoading} />\n          </CardBody>\n          <CardFooter p={2}>\n            <Skeleton isLoaded={!isLoading}>\n              {!!e.installed && (\n                <Button\n                  data-testid=\"protocol-create-adapter\"\n                  size=\"sm\"\n                  rightIcon={<ArrowForwardIcon />}\n                  onClick={() => onCreate?.(e.id)}\n                >\n                  {t('protocolAdapter.action.createInstance')}\n                </Button>\n              )}\n              {!e.installed && (\n                <Link href={e.url} isExternal data-testid=\"protocol-install-adapter\">\n                  {t('protocolAdapter.overview.installation')} <ExternalLinkIcon />\n                </Link>\n              )}\n            </Skeleton>\n          </CardFooter>\n        </Card>\n      ))}\n    </SimpleGrid>\n  )\n}\n\nexport default ProtocolsBrowser\n","import type { ChangeEvent, FC } from 'react'\nimport { useMemo } from 'react'\nimport {\n  Flex,\n  FormControl,\n  InputGroup,\n  FormLabel,\n  Input,\n  InputRightElement,\n  Box,\n  List,\n  ListItem,\n  Button,\n  InputLeftElement,\n  CloseButton,\n  Skeleton,\n} from '@chakra-ui/react'\nimport { SearchIcon } from '@chakra-ui/icons'\nimport { useTranslation } from 'react-i18next'\n\nimport type { ProtocolAdapter, ProtocolAdapterCategory } from '@/api/__generated__'\n\nimport type { ProtocolFacetType } from '../../types.ts'\n\ninterface SearchFilterAdaptersProps {\n  items: ProtocolAdapter[]\n  facet: ProtocolFacetType | undefined\n  onChange?: (value: ProtocolFacetType) => void\n  isLoading?: boolean\n}\n\nconst FacetSearch: FC<SearchFilterAdaptersProps> = ({ items, isLoading, facet, onChange }) => {\n  const { t } = useTranslation()\n\n  const { categories, tags } = useMemo(() => {\n    // const categories = Array.from(new Set(data?.items?.map((e) => e.category) || []))\n    const categories =\n      items?.reduce((acc, cur) => {\n        if (!cur?.category) return acc\n        const setSoFar = acc.map((e) => e.name)\n        if (setSoFar.includes(cur.category.name)) return acc\n        return [...acc, cur.category]\n      }, [] as ProtocolAdapterCategory[]) || []\n    const tags =\n      items?.reduce((acc, cur) => {\n        return Array.from(new Set([...acc, ...(cur?.tags || [])]))\n      }, [] as string[]) || []\n    return { categories, tags }\n  }, [items])\n\n  const handleChangeSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    onChange?.({ search: event.target.value })\n  }\n\n  const handleClearSearch = () => {\n    onChange?.({ search: null })\n  }\n\n  const handleFilter = (filter: { key: keyof ProtocolAdapter; value: string } | null) => {\n    onChange?.({ filter: filter })\n  }\n\n  return (\n    <Flex\n      flexDirection=\"column\"\n      gap={4}\n      maxW=\"250px\"\n      minW=\"fit-content\"\n      role=\"region\"\n      aria-label={t('protocolAdapter.facet.description')}\n    >\n      <FormControl role=\"search\">\n        <FormLabel>{t('protocolAdapter.facet.search.label')}</FormLabel>\n        <InputGroup>\n          <InputLeftElement pointerEvents=\"none\">\n            <SearchIcon />\n          </InputLeftElement>\n          <Input\n            id=\"facet-search-input\"\n            placeholder={t('protocolAdapter.facet.search.placeholder')}\n            onChange={handleChangeSearch}\n            value={facet?.search || ''}\n            isDisabled={isLoading}\n          />\n          <InputRightElement>\n            <CloseButton\n              id=\"facet-search-clear\"\n              onClick={handleClearSearch}\n              aria-label={t('protocolAdapter.facet.search.clear')}\n            />\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n\n      <Flex flexDirection=\"column\">\n        <Box pb={4} pt={4}>\n          <List spacing={3} aria-labelledby=\"facet-filter-clear\">\n            <ListItem>\n              <Skeleton isLoaded={!isLoading}>\n                <Button\n                  id=\"facet-filter-clear\"\n                  data-testid=\"facet-filter-clear\"\n                  justifyContent=\"flex-start\"\n                  variant={!facet?.filter ? 'outline' : 'ghost'}\n                  aria-pressed={!facet?.filter}\n                  size=\"sm\"\n                  w=\"100%\"\n                  onClick={() => handleFilter(null)}\n                >\n                  {t('protocolAdapter.facet.filter.allFilters')}\n                </Button>\n              </Skeleton>\n            </ListItem>\n          </List>\n        </Box>\n        <Box aria-hidden={true} id=\"facet-filter-category\">\n          {t('protocolAdapter.facet.filter.category')}\n        </Box>\n        <Box pb={4} pt={4}>\n          <List spacing={3} aria-labelledby=\"facet-filter-category\">\n            {categories.map((item) => (\n              <ListItem key={item.name}>\n                <Skeleton isLoaded={!isLoading}>\n                  <Button\n                    data-testid={`facet-filter-category-${item.name}`}\n                    justifyContent=\"flex-start\"\n                    variant={facet?.filter?.value === item.name ? 'outline' : 'ghost'}\n                    aria-pressed={facet?.filter?.value === item.name}\n                    size=\"sm\"\n                    w=\"100%\"\n                    onClick={() => handleFilter({ value: item.name, key: 'category' })}\n                  >\n                    {item.displayName}\n                  </Button>\n                </Skeleton>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n        <Box aria-hidden={true} id=\"facet-filter-tags\">\n          {t('protocolAdapter.facet.filter.tags')}\n        </Box>\n        <Box pb={4} pt={4}>\n          <List spacing={3} aria-labelledby=\"facet-filter-tags\">\n            {tags.map((item) => (\n              <ListItem key={item}>\n                <Skeleton isLoaded={!isLoading}>\n                  <Button\n                    data-testid={`facet-filter-tag-${item}`}\n                    justifyContent=\"flex-start\"\n                    variant={facet?.filter?.value === item ? 'outline' : 'ghost'}\n                    size=\"sm\"\n                    w=\"100%\"\n                    onClick={() => handleFilter({ value: item, key: 'tags' })}\n                    aria-pressed={facet?.filter?.value === item}\n                  >\n                    {item}\n                  </Button>\n                </Skeleton>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default FacetSearch\n","import type { FC } from 'react'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Box, Flex, Heading, Text } from '@chakra-ui/react'\nimport { useTranslation } from 'react-i18next'\n\nimport AdapterEmptyLogo from '@/assets/app/adaptor-empty.svg'\n\nimport type { ProtocolAdapter } from '@/api/__generated__'\nimport { useGetAdapterTypes } from '@/api/hooks/useProtocolAdapters/useGetAdapterTypes.ts'\nimport type { ProblemDetails } from '@/api/types/http-problem-details.ts'\n\nimport ErrorMessage from '@/components/ErrorMessage.tsx'\nimport WarningMessage from '@/components/WarningMessage.tsx'\n\nimport type { AdapterNavigateState, ProtocolFacetType } from '../../types.ts'\nimport { ProtocolAdapterTabIndex } from '../../types.ts'\nimport ProtocolsBrowser from '../IntegrationStore/ProtocolsBrowser.tsx'\nimport FacetSearch from '../IntegrationStore/FacetSearch.tsx'\nimport { mockProtocolAdapter } from '@/api/hooks/useProtocolAdapters/__handlers__'\nimport SuspenseOutlet from '@/components/SuspenseOutlet.tsx'\n\nconst ProtocolIntegrationStore: FC = () => {\n  const { t } = useTranslation()\n  const { data, isLoading, isError, error } = useGetAdapterTypes()\n  const navigate = useNavigate()\n  const [facet, setFacet] = useState<ProtocolFacetType | undefined>(undefined)\n\n  const safeData: ProtocolAdapter[] = data ? (data.items as ProtocolAdapter[]) : [mockProtocolAdapter]\n\n  const handleCreateInstance = (adapterId: string | undefined) => {\n    const adapterNavigateState: AdapterNavigateState = {\n      protocolAdapterTabIndex: ProtocolAdapterTabIndex.ADAPTERS,\n      protocolAdapterType: adapterId,\n      // selectedActiveAdapter: { isNew: false, isOpen: false, adapterId: (selected?.data as Adapter).id },\n    }\n    navigate(`/protocol-adapters/catalog/new/${adapterId}`, {\n      state: adapterNavigateState,\n    })\n  }\n\n  const handleOnSearch = (value: ProtocolFacetType) => {\n    setFacet((old) => {\n      const { search, filter } = old || {}\n      return {\n        search: value.search === undefined ? search : value.search,\n        filter: value.filter === undefined ? filter : value.filter,\n      }\n    })\n  }\n\n  if (isError) {\n    return (\n      <Box mt=\"20%\" mx=\"20%\" alignItems=\"center\">\n        <ErrorMessage\n          type={error?.message}\n          message={(error?.body as ProblemDetails)?.title || t('protocolAdapter.error.loading')}\n        />\n      </Box>\n    )\n  }\n\n  if (safeData.length === 0)\n    return (\n      <WarningMessage\n        image={AdapterEmptyLogo}\n        title={t('protocolAdapter.noTypeWarning.title')}\n        prompt={t('protocolAdapter.noDataWarning.description')}\n        alt={t('protocolAdapter.title')}\n        mt={10}\n      />\n    )\n\n  return (\n    <Flex flexDirection=\"column\" gap={4}>\n      <Box data-testid=\"heading-protocols-list\">\n        <Heading size=\"md\">{t('protocolAdapter.tabs.protocols')}</Heading>\n        <Text>\n          {isLoading\n            ? t('protocolAdapter.loading.protocolAdapters')\n            : t('protocolAdapter.protocols.description', { count: safeData.length })}\n        </Text>\n      </Box>\n      <Flex flexDirection=\"row\" alignItems=\"flex-start\" gap={6}>\n        <FacetSearch items={safeData} facet={facet} onChange={handleOnSearch} isLoading={isLoading} />\n        <ProtocolsBrowser items={safeData} facet={facet} onCreate={handleCreateInstance} isLoading={isLoading} />\n      </Flex>\n      <SuspenseOutlet />\n    </Flex>\n  )\n}\n\nexport default ProtocolIntegrationStore\n"],"names":["escapeRegexp","term","char","buildRegex","query","_query","text","highlightWords","regex","str","useHighlight","props","useMemo","Mark","forwardRef","ref","styles","useStyleConfig","ownProps","omitThemingProps","jsx","Box","Highlight","children","chunks","Fragment2","chunk","index","Fragment","SearchIcon","createIcon","ArrowForwardIcon","applyFacets","facet","adapter","isFilterUnset","_a","isCategoryMatching","_b","_c","_d","_e","_g","_f","isSearchUnset","isTextMatching","_h","_i","AdapterHighlight","AdapterTypeSummary","searchQuery","isLoading","t","useTranslation","jsxs","Flex","Skeleton","Image","Text","Badge","Link","ExternalLinkIcon","ProtocolsBrowser","items","onCreate","filteredAdapters","SimpleGrid","e","Card","CardBody","CardFooter","Button","WarningMessage","AdapterEmptyLogo","FacetSearch","onChange","categories","tags","acc","cur","handleChangeSearch","event","handleClearSearch","handleFilter","filter","FormControl","FormLabel","InputGroup","InputLeftElement","Input","InputRightElement","CloseButton","List","ListItem","item","ProtocolIntegrationStore","data","isError","error","useGetAdapterTypes","navigate","useNavigate","setFacet","useState","safeData","mockProtocolAdapter","handleCreateInstance","adapterId","adapterNavigateState","ProtocolAdapterTabIndex","handleOnSearch","value","old","search","ErrorMessage","Heading","SuspenseOutlet"],"mappings":"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","x_google_ignoreList":[0,1,2]}