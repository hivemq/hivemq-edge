{
  "brand": {
    "extension": "Data Hub on Edge"
  },
  "navigation": {
    "mainPage": "Data Hub"
  },
  "flag": {
    "behaviorPolicy": {
      "notEnabled": "Note that the display and editing of Behavior Policies are not yet supported"
    }
  },
  "page": {
    "title": "Data Hub on Edge",
    "description": "The Data Hub on Edge provides mechanisms to define how MQTT data and MQTT client behavior are handled from the adaptors to the HiveMQ broker"
  },
  "policy": {
    "type_DATA_POLICY": "Data Policy",
    "type_BEHAVIOR_POLICY": "Behavior Policy"
  },

  "resource": {
    "schema": {
      "type_JSON": "JSON",
      "type_PROTOBUF": "PROTOBUF"
    },
    "script": {
      "functionType_TRANSFORMATION": "Transformation"
    }
  },
  "Listings": {
    "action": {
      "edit": "Edit",
      "delete": "Delete"
    },
    "tabs": {
      "policy": {
        "title": "Policies",
        "description": "This is where all your policies will be listed."
      },
      "schema": {
        "title": "Schemas",
        "description": "All your schemas used for validation or transformation will be listed there."
      },
      "script": {
        "title": "Scripts",
        "description": "Your transformation code will be listed there."
      }
    },
    "modal": {
      "delete": {
        "header": "Delete Item",
        "message": "Are you sure? You can't undo this action afterward."
      }
    },
    "policy": {
      "label": "List of policies",
      "header": {
        "created": "Created",
        "type": "Type",
        "matching": "Matching",
        "actions": "Actions"
      },
      "action": {
        "create": "Create a new policy",
        "draft": "Continue on draft",
        "clear": "Clear the draft"
      }
    },

    "schema": {
      "label": "List of schemas",
      "header": {
        "id": "Schema name",
        "created": "Created",
        "type": "Type",
        "version": "Version",
        "actions": "Actions"
      }
    },
    "script": {
      "label": "List of scripts",
      "header": {
        "id": "Function name",
        "functionType": "Type",
        "description": "Description",
        "created": "Created",
        "version": "Version",
        "actions": "Actions"
      }
    }
  },
  "workspace": {
    "aria-label": "Workspace toolbar",
    "controls": {
      "aria-label": "Canvas controls",
      "zoomIn": "Zoom in",
      "zoomIOut": "Zoom out",
      "fitView": "Fit to the canvas",
      "toggleInteractivity": "Lock the canvas",
      "clear": "Clear the Designer"
    },
    "toolbox": {
      "aria-label": "Policy controls",
      "trigger_open": "Open the toolbox",
      "trigger_close": "Close the toolbox",
      "panel": {
        "build": {
          "title": "Build",
          "description": "Build your policy on the canvas"
        },
        "check": {
          "title": "Check",
          "description": "Check the validity of your policy"
        },
        "publish": {
          "title": "Publish",
          "description": "Publish your policy on your topology"
        }
      },
      "navigation": {
        "previous": "Previous step",
        "next": "Next step"
      },
      "group": {
        "pipeline": "Pipeline",
        "dataPolicy": "Data Policy",
        "behaviorPolicy": "Behavior Policy",
        "operation": "Operation"
      },
      "draft": {
        "status_DRAFT": "Draft Policy",
        "status_LOADED": "{{ type }} {{ name }} - Loaded",
        "status_MODIFIED": "{{ type }} {{ name }} - Modified"
      }
    },
    "nodes": {
      "type": "Unknown type",
      "type_TOPIC_FILTER": "Topic Filter",
      "type_CLIENT_FILTER": "Client Filter",
      "type_ADAPTOR": "Adaptor Filter",
      "type_BRIDGE": "Broker Filter",
      "type_DATA_POLICY": "Data Policy",
      "type_BEHAVIOR_POLICY": "Behavior Policy",
      "type_VALIDATOR": "Policy Validator",
      "type_SCHEMA": "Schema",
      "type_OPERATION": "Operation",
      "type_TRANSITION": "Transition",
      "type_FUNCTION": "JS Function",
      "type_EVENT": "Event"
    },
    "handles": {
      "validation_onSuccess": "onSuccess",
      "validation_onError": "onError",
      "behavior_serial.will": "onWill",
      "behavior_serial.publish": "onPublish"
    },
    "panel": {
      "submit": "Submit"
    },
    "function": {
      "isTerminal": "[Terminal]",
      "isDataOnly": "[Data]",
      "metricName": {
        "placeholder": "metricName"
      },
      "transform": {
        "placeholder": "functionName"
      }
    },
    "codeEditor": {
      "delete": "Delete this version",
      "test": "Test code"
    },
    "version": {
      "create": "Create a new version '{{ newVersion }}' from '{{ oldVersion }}'"
    },
    "transition": {
      "select": {
        "toState": "to: {{ state }}",
        "fromState": "from: {{ state }}"
      }
    },
    "toolbar": {
      "policy": {
        "check": "Check",
        "publish": "Publish",
        "delete": "Delete Policy"
      }
    },
    "dryRun": {
      "toolbar": {
        "checking": "Checking ..."
      },
      "report": {
        "loading": {
          "title": "Checking the policy correctness",
          "description": "Please wait ..."
        },
        "error": {
          "title": "Problem encountered",
          "description": "Please wait ..."
        },
        "success": {
          "title_warning": "The policy is not completely valid and will not successfully run on your topology.",
          "description_warning": "The following parts of the policy needs correction:",
          "title_success": "The policy is fully valid to run on your topology.",
          "description_success": "Go for it!"
        },
        "cta": {
          "highlight": "Show in designer",
          "config": "Open configuration"
        }
      }
    }
  },
  "error": {
    "validation": {
      "protobuf": {
        "template": "// CANNOT DECODE THE PROTOBUF SOURCE - {{ source }}",
        "encoding": "The encoding of the PROTOBUF code into a Base64 descriptor cannot be validated."
      }
    },
    "loading": {
      "connection": {
        "notFound": "Cannot find the $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) node"
      },
      "schema": {
        "unknown": "Cannot identify the type of the SCHEMA - {{ type }}"
      },
      "behavior": {
        "noModel": "Something is wrong with the transition model"
      },
      "operation": {
        "unknown": "Something is wrong with the operation",
        "noTransition": "cannot create the node for the transition pipeline - {{ source }}"
      }
    },
    "dryRun": {
      "notConnected": "No $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) connected to $t(datahub:workspace.nodes.type, { 'context': '{{target}}' })",
      "noHandleConnected": "No $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) connected to the \"{{ handle }}\" handle of $t(datahub:workspace.nodes.type, { 'context': '{{target}}' })",
      "cardinality": "Too many $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) connected to $t(datahub:workspace.nodes.type, { 'context': '{{target}}' })",
      "notConfigured": "The $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) is not properly defined. The following properties are missing: {{ properties }}",
      "internal": "Encountered an error while processing $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }): {{ error }}"
    },
    "publish": {
      "title": "$t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) published",
      "description": "We've created a new $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) for you.",
      "error": "Error publishing $t(datahub:workspace.nodes.type, { 'context': '{{source}}' })"
    },
    "load": {
      "title": "$t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) published",
      "description": "We've created a new $t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) for you.",
      "errorTitle": "Error loading $t(datahub:workspace.nodes.type, { 'context': '{{source}}' })"
    },
    "delete": {
      "title": "$t(datahub:workspace.nodes.type, { 'context': '{{source}}' }) deleted",
      "error": "Error deleting $t(datahub:workspace.nodes.type, { 'context': '{{source}}' })"
    },
    "noSet": {
      "select": "< not set >"
    },
    "notActivated": {
      "title": "Data Hub on Edge is now available to commercial licenses",
      "description": "Please contact our sales team to gain access"
    },
    "notDefined": {
      "title": "Not identified",
      "description": "The policy is not a valid document"
    },
    "elementNotDefined": {
      "title": "Error loading the node",
      "description": "The $t(datahub:workspace.nodes.type, { 'context': '{{nodeType}}' }) is not a valid element"
    }
  }
}
