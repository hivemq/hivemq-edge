{
  "shortcuts": {
    "modifier": {
      "META_MacOS": "âŒ˜",
      "META_Others": "^"
    }
  },
  "iconLabel": {
    "topic": "Topic",
    "topic-filter": "Topic Filter",
    "tag": "Tag",
    "client": "Client",
    "workspace": "Workspace"
  },
  "pagination": {
    "ariaLabel": "Pagination",
    "filter": {
      "label": "Filter column",
      "placeholder": "Search... ({{ size }})",
      "noOptions": "No options available",
      "create": "Add filter... {{ topic }}",
      "clear": "Clear filter"
    },
    "noDataText": "No data received yet.",
    "noDataLoadError": "There was an error loading the data.",
    "noDataFiltered": "No data matching your filters.",
    "goFirstPage": "Go to the first page",
    "goPreviousPage": "Go to the previous page",
    "goNextPage": "Go to the next page",
    "goLastPage": "Go to the last page",
    "pageOf": "Page {{ page }} of {{ max }}",
    "goPage": "Go to page",
    "perPage": "Items per page"
  },
  "EntityCreatableSelect": {
    "aria-label_TAG": "Add a tag",
    "aria-label_TOPIC": "Add a topic",
    "aria-label_TOPIC_FILTER": "Add a topic filter",
    "placeholder_TAG": "Type or select a tag ...",
    "placeholder_TOPIC": "Type or select a topic ...",
    "placeholder_TOPIC_FILTER": "Type or select a topic filter ...",
    "options": {
      "noOptionsMessage_TAG": "No matching tags",
      "noOptionsMessage_TOPIC": "No matching topics",
      "noOptionsMessage_TOPIC_FILTER": "No matching topic filters",
      "createLabel_TAG": "Create a new tag ... {{entity}}",
      "createLabel_TOPIC": "Create a new topic ... {{entity}}",
      "createLabel_TOPIC_FILTER": "Create a new topic filter ... {{entity}}"
    }
  },
  "DateTimeRenderer": {
    "seconds_minus": "a few seconds ago",
    "seconds_plus": "in a few seconds"
  },
  "ColorPicker": {
    "trigger": "Selected color scheme: {{ scheme }}",
    "popover": "Select one of the options",
    "option": "Select {{ scheme }}"
  },
  "DateTimeRangeSelector": {
    "placeholder": "Select a date",
    "noOptionsMessage": "Not a valid date",
    "formatCreateLabel": "Create {{ date }}",
    "ariaLabel": "Select a date",
    "label": {
      "badge": {
        "years": "{{ value }}y",
        "months": "{{ value }}mo",
        "weeks": "{{ value }}w",
        "days": "{{ value }}d",
        "hours": "{{ value }}h",
        "minutes": "{{ value }}m",
        "seconds": "{{ value }}s"
      }
    }
  },
  "ClipboardCopyIconButton": {
    "ariaLabel": "Copy to the clipboard",
    "action_READY": "Ready!",
    "action_COPIED": "Copied!",
    "action_ERROR": "Error!"
  },
  "PrivacyConsentBanner": {
    "header": "Privacy Settings",
    "body": "This web application uses third-party tracking technologies to continually improve our services. You can agree to their use now and change or revoke your consent at any time in the future.",
    "action": {
      "moreInfo": "More information",
      "optOut": "Deny",
      "optIn": "Accept all"
    }
  },
  "DrawerExpandButton": {
    "aria-label": {
      "expand": "Expand",
      "shrink": "Shrink"
    }
  },
  "rjsf": {
    "customFormats": {
      "validation": {
        "noEmptyString": "No empty string",
        "noNullChar": "No null character",
        "noWildCards": "Wildcards + and # are not allowed",
        "noWildCardsSharedName": "Wildcards + and # are not allowed in a shared name",
        "noEmptySharedName": "Shared name cannot be empty",
        "noMultiLevelString": "Wildcard # must not be followed or preceded by any character",
        "noSingleLevelString": "Wildcard + must not be followed or preceded by any character",
        "noSingleLevelFinal": "Wildcard + must be followed by the end-of-segment `/`"
      }
    },
    "actions": {
      "submit": {
        "label": "Submit"
      }
    },
    "CompactArrayField": {
      "action": {
        "add": "Add item",
        "delete": "Delete item"
      },
      "table": {
        "actions": "Actions",
        "cell": "value for property {{ column }} on row {{ row }}"
      }
    },
    "ArrayFieldItem": {
      "item": "item",
      "Buttons": {
        "expanded_true": "Collapse Item",
        "expanded_false": "Expand Item"
      }
    },
    "ErrorListTemplate": {
      "focusOnError": {
        "aria-label": "Jump to error"
      }
    },
    "batchUpload": {
      "button": "Upload",
      "modal": {
        "header": "Bulk Subscription Creation",
        "action": {
          "previous": "Previous",
          "next": "Next",
          "cancel": "Cancel"
        },
        "step": {
          "upload": {
            "title": "Upload",
            "description": "Select your data source"
          },
          "match": {
            "title": "Match",
            "description": "Select your data points"
          },
          "validate": {
            "title": "Validate",
            "description": "Check the subscriptions"
          },
          "confirm": {
            "title": "Confirm",
            "description": "Confirm the batch creation"
          }
        }
      },
      "dropZone": {
        "currentlyLoaded": "File currently loaded : {{ fileName }}",
        "placeholder": "Upload a .xlsx, .xls or .csv file",
        "dropping": "Drop a file here ...",
        "loading": "Processing ...",
        "selectFile": "Select file",
        "status_error": "{{ fileName}} upload rejected",
        "status_success": "{{ fileName}} upload successful"
      },
      "columnMapping": {
        "subscription": {
          "ariaLabel": "Subscription property"
        },
        "column": {
          "ariaLabel": "Column header"
        },
        "validation": {
          "required": "The subscription property is required so a column must be selected"
        }
      },
      "dataValidation": {
        "table": {
          "ariaLabel": "List of subscriptions to be created",
          "noDataText": "There is no rows to display"
        },
        "columns": {
          "admin": "Admin columns",
          "subscription": "Subscription columns",
          "selectHeader": "Select all rows",
          "selectRow": "Select the row"
        },
        "action": {
          "delete_zero": "Delete rows",
          "delete_one": "Delete {{ count }} row",
          "delete_other": "Delete {{ count }} rows",
          "errorOnly": "Show only errors"
        }
      },
      "confirm": {
        "alert": {
          "title_zero": "No valid subscriptions",
          "title_one": "One subscription created",
          "title_other": "{{ count }} subscriptions created",
          "description_zero": "There was a problem loading valid subscriptions from your configuration. Please try again.",
          "description_one": "Your subscription is ready to be uploaded. Any existing subscription already defined in the adapter will be deleted.",
          "description_other": "Your subscriptions are ready to be uploaded. Any existing subscription already defined in the adapter will be deleted."
        },
        "action": {
          "upload": "Upload records"
        }
      }
    },
    "AdapterTagSelect": {
      "select": {
        "noTags": "There are no tags available from your device",
        "noSelectable": "None of the tags are selectable",
        "noOption_zero": "No options",
        "noOption_one": "No options matching {{ value }}",
        "noOption_other": "No options matching {{ value }}"
      }
    },
    "MqttTransformationField": {
      "error": {
        "internalError": "The form cannot be created"
      },
      "tabs": {
        "list": "List of mappings",
        "editor": "Mapping Editor"
      },
      "unset": "< unset >",
      "listing": {
        "sources": "Sources",
        "destination": "Destination",
        "actions": "Actions"
      },
      "actions": {
        "delete": {
          "aria-label": "Delete mapping"
        },
        "edit": {
          "aria-label": "Edit mapping"
        },
        "add": {
          "aria-label": "Add a new mapping"
        },
        "save": {
          "aria-label": "Save"
        },
        "cancel": {
          "aria-label": "Cancel"
        }
      },
      "sources": {
        "prompt": "Select a topic filter as a source for your mappings",
        "selector": {
          "formLabel": "Source Topic Filter",
          "placeholder": "Type or select a topic filter ...",
          "noOptionsMessage": "No topic filter matching the selection"
        },
        "header": "Sources",
        "samples": {
          "aria-label": "Reload samples"
        }
      },
      "mapping": {
        "header": "Properties to set",
        "auto": {
          "aria-label": "Auto-mapping"
        }
      },
      "destination": {
        "prompt": "Select a device tag as a destination for your mappings",
        "selector": {
          "formLabel": "Destination Device Tag",
          "placeholder": "Type or select a tag ...",
          "noOptionsMessage": "No tag matching the selection"
        },
        "header": "Destination output",
        "check": {
          "aria-label": "Mapping valid"
        }
      },
      "instructions": {
        "dropzone": {
          "role": "Dropzone",
          "arial-label": "Drag a source property here"
        },
        "editor": {
          "role": "Transformation Editor",
          "arial-label": "Edit the transformation"
        },
        "actions": {
          "clear": {
            "aria-label": "Clear mapping"
          },
          "edit": {
            "aria-label": "Edit transformation"
          }
        }
      },
      "status": {
        "title_error": "Some errors",
        "title_success": "Complete"
      },
      "validation": {
        "required": "Required",
        "notSupported": "Not supported",
        "matching": "Matching",
        "error": {
          "noValidation": "There is a problem validating the mapping instructions",
          "noSchema": "The destination schema cannot be generated",
          "missingMapping": "Some of the required properties are missing"
        }
      }
    }
  },
  "GenericSchema": {
    "data": {
      "type_null": "Null",
      "type_object": "Object",
      "type_array": "Array of $t(components:GenericSchema.data.type, { 'context': '{{arrayType}}' })",
      "type_string": "String",
      "type_integer": "Integer",
      "type_number": "Number",
      "type_boolean": "Number"
    },
    "structure": {
      "property": "Property",
      "example": "Example"
    }
  },
  "MoreInfo": {
    "title": "More information",
    "link": "More information"
  }
}
