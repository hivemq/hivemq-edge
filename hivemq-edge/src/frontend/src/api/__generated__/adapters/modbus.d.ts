/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * host to connect to
 */
export type Host = string;
/**
 * Unique identifier for this protocol adapter
 */
export type Identifier = string;
/**
 * Max Errors Polling The Endpoint Before The Polling Deamon Is Stopped
 */
export type MaxPollingErrors = number;
/**
 * Port to connect to
 */
export type Port = number;
/**
 * Only Publish Data That Has Changed Since Last DataPoint
 */
export type PublishOnlyChangedData = boolean;
/**
 * Publishing interval in milliseconds for this subscription on the server
 */
export type PublishingIntervalMs = number;
/**
 * The Finishing Index (Incl.) of the Address Range
 */
export type EndIndex = number;
/**
 * The Starting Index (Incl.) of the Address Range
 */
export type StartIndex = number;
/**
 * The MQTT topic to publish to
 */
export type DestinationMQTTTopic = string;
/**
 * MQTT quality of service level
 */
export type MQTTQoS = number;
/**
 * Map your sensor data to MQTT Topics
 */
export type Subscriptions = Subscriptions1[];

export interface Modbus {
  host: Host;
  id: Identifier;
  maxPollingErrorsBeforeRemoval?: MaxPollingErrors;
  port: Port;
  publishChangedDataOnly?: PublishOnlyChangedData;
  publishingInterval: PublishingIntervalMs;
  subscriptions?: Subscriptions;
}
/**
 * Map your sensor data to MQTT Topics
 */
export interface Subscriptions1 {
  coils?: AddressRange;
  destination: DestinationMQTTTopic;
  "holding-registers"?: AddressRange;
  "input-registers"?: AddressRange;
  qos?: MQTTQoS;
}
export interface AddressRange {
  endIdx?: EndIndex;
  startIdx?: StartIndex;
}
