import type { JSONSchema7 } from 'json-schema'
import { EntityType } from '@/api/__generated__'
import { Instruction } from './definitions/Instruction.json-schema'

/**
 * TODO[NVL] Required as the schema generated by the codegen is of an older version of JSONSchema (v5) and not well structured ($ref missing)
 */
/* istanbul ignore next -- @preserve */
export const combinerMappingJsonSchema: JSONSchema7 = {
  definitions: {
    Instruction: Instruction,

    EntityReference: {
      description: 'A reference to one of the main entities in Edge (e.g. device, adapter, edge broker, bridge host)',
      properties: {
        type: {
          enum: [EntityType.ADAPTER, EntityType.BRIDGE, EntityType.EDGE_BROKER],
        },
        id: {
          type: 'string',
          description: 'The id of the entity being references in the combiner',
        },
        isPrimary: {
          type: 'boolean',
          description: 'The source is the primary orchestrator of the combiner',
        },
      },
    },
    EntityReferenceList: {
      properties: {
        items: {
          type: 'array',
          items: {
            $ref: '#/definitions/EntityReference',
          },
        },
      },
    },
    DataCombining: {
      description: 'Define individual rules for data combining, based on the entities selected in the Orchestrator',
      properties: {
        id: {
          type: 'string',
          description: 'The unique id of the data combining mapping',
          format: 'uuid',
        },
        sources: {
          properties: {
            tags: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
            topicFilters: {
              type: 'array',
              items: {
                type: 'string',
              },
            },
          },
        },
        destination: {
          type: 'string',
          format: 'mqtt-topic',
        },
        instructions: {
          type: 'array',
          items: {
            $ref: '#/definitions/Instruction',
          },
        },
      },
    },
    DataCombiningList: {
      properties: {
        items: {
          type: 'array',
          items: {
            $ref: '#/definitions/DataCombining',
          },
        },
      },
    },
    Combiner: {
      description:
        'A data combiner, bringing tags (adapters) and topic filters (bridges) together for further northbound data mapping',
      required: ['id', 'name'],
      properties: {
        id: {
          type: 'string',
          description: 'The unique id of the data combiner',
          format: 'uuid',
        },
        name: {
          type: 'string',
          description: 'The user-facing name of the combiner',
        },
        description: {
          type: 'string',
          description: 'The user-facing description of the combiner',
        },
        sources: {
          $ref: '#/definitions/EntityReferenceList',
          // type: 'array',
          // items: {
          //   $ref: '#/definitions/EntityReference',
          // },
        },
        mappings: {
          $ref: '#/definitions/DataCombiningList',
          // type: 'array',
          // items: {
          //   $ref: '#/definitions/DataCombining',
          // },
        },
      },
    },
  },
  $ref: '#/definitions/Combiner',

  // properties: {
  //   combiner: {
  //     $ref: '#/definitions/Combiner',
  //   },
  // },
}
