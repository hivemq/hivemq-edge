{"version":3,"file":"nivo-core.es.js","sources":["../src/theming/defaultTheme.js","../src/theming/extend.js","../src/motion/context.js","../src/motion/hooks.js","../src/hooks/useAnimatedPath.js","../src/lib/colors/quantize.js","../src/lib/colors/index.js","../src/props/colors.js","../src/props/curve.js","../src/props/stack.js","../src/props/index.js","../src/hooks/useCurveInterpolation.js","../src/defaults/index.js","../src/hooks/useDimensions.js","../src/hooks/useMeasure.js","../src/hooks/usePartialTheme.js","../src/hooks/useValueFormatter.js","../src/theming/context.js","../src/theming/helpers.js","../src/components/ConditionalWrapper.js","../src/components/Container.js","../src/lib/noop.js","../src/components/LegacyContainer.js","../src/components/ResponsiveWrapper.js","../src/components/defs/gradients/LinearGradient.js","../src/components/defs/gradients/index.js","../src/components/defs/patterns/PatternDots.js","../src/lib/polar/utils.js","../src/lib/bridge.js","../src/lib/polar/labels.js","../src/components/defs/patterns/PatternLines.js","../src/components/defs/patterns/PatternSquares.js","../src/components/defs/patterns/index.js","../src/components/defs/Defs.js","../src/components/SvgWrapper.js","../src/components/dots/DotsItemSymbol.js","../src/components/dots/DotsItem.js","../src/components/cartesian/markers/CartesianMarkersItem.js","../src/components/cartesian/markers/CartesianMarkers.js","../src/hocs/withContainer.js","../src/lib/propertiesConverters.js","../src/lib/cartesian/utils.js","../src/lib/interactivity/detect.js","../src/lib/interactivity/index.js","../src/lib/defs.js"],"sourcesContent":["/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * @type ThemeWithoutInheritance\n */\nexport const defaultTheme = {\n    background: 'transparent',\n    text: {\n        fontFamily: 'sans-serif',\n        fontSize: 11,\n        fill: '#333333',\n        outlineWidth: 0,\n        outlineColor: 'transparent',\n        outlineOpacity: 1,\n    },\n    axis: {\n        domain: {\n            line: {\n                stroke: 'transparent',\n                strokeWidth: 1,\n            },\n        },\n        ticks: {\n            line: {\n                stroke: '#777777',\n                strokeWidth: 1,\n            },\n            text: {},\n        },\n        legend: {\n            text: {\n                fontSize: 12,\n            },\n        },\n    },\n    grid: {\n        line: {\n            stroke: '#dddddd',\n            strokeWidth: 1,\n        },\n    },\n    legends: {\n        hidden: {\n            symbol: {\n                fill: '#333333',\n                opacity: 0.6,\n            },\n            text: {\n                fill: '#333333',\n                opacity: 0.6,\n            },\n        },\n        text: {},\n        ticks: {\n            line: {\n                stroke: '#777777',\n                strokeWidth: 1,\n            },\n            text: {\n                fontSize: 10,\n            },\n        },\n        title: {\n            text: {},\n        },\n    },\n    labels: {\n        text: {},\n    },\n    markers: {\n        lineColor: '#000000',\n        lineStrokeWidth: 1,\n        text: {},\n    },\n    dots: {\n        text: {},\n    },\n    tooltip: {\n        container: {\n            background: 'white',\n            color: 'inherit',\n            fontSize: 'inherit',\n            borderRadius: '2px',\n            boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',\n            padding: '5px 9px',\n        },\n        basic: {\n            whiteSpace: 'pre',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        chip: {\n            marginRight: 7,\n        },\n        table: {},\n        tableCell: {\n            padding: '3px 5px',\n        },\n        tableCellValue: {\n            fontWeight: 'bold',\n        },\n    },\n    crosshair: {\n        line: {\n            stroke: '#000000',\n            strokeWidth: 1,\n            strokeOpacity: 0.75,\n            strokeDasharray: '6 6',\n        },\n    },\n    annotations: {\n        text: {\n            fontSize: 13,\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n        link: {\n            stroke: '#000000',\n            strokeWidth: 1,\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n        outline: {\n            fill: 'none',\n            stroke: '#000000',\n            strokeWidth: 2,\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n        symbol: {\n            fill: '#000000',\n            outlineWidth: 2,\n            outlineColor: '#ffffff',\n            outlineOpacity: 1,\n        },\n    },\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport merge from 'lodash/merge'\nimport get from 'lodash/get'\nimport set from 'lodash/set'\n\nconst textPropsWithInheritance = [\n    'axis.ticks.text',\n    'axis.legend.text',\n    'legends.title.text',\n    'legends.text',\n    'legends.ticks.text',\n    'legends.title.text',\n    'labels.text',\n    'dots.text',\n    'markers.text',\n    'annotations.text',\n]\n\n/**\n * @param {Partial<TextStyle>} partialStyle\n * @param {TextStyle} rootStyle\n * @returns {TextStyle}\n */\nexport const inheritRootThemeText = (partialStyle, rootStyle) => ({\n    ...rootStyle,\n    ...partialStyle,\n})\n\n/**\n * @param {ThemeWithoutInheritance} defaultTheme\n * @param {Theme} customTheme\n * @returns {CompleteTheme}\n */\nexport const extendDefaultTheme = (defaultTheme, customTheme) => {\n    const theme = merge({}, defaultTheme, customTheme)\n\n    textPropsWithInheritance.forEach(prop => {\n        set(theme, prop, inheritRootThemeText(get(theme, prop), theme.text))\n    })\n\n    return theme\n}\n","import { createContext, useMemo } from 'react'\nimport isString from 'lodash/isString'\nimport PropTypes from 'prop-types'\nimport { config as presets } from '@react-spring/web'\n\nexport const motionConfigContext = createContext()\n\nexport const motionDefaultProps = {\n    animate: true,\n    config: 'default',\n}\n\nexport const MotionConfigProvider = props => {\n    const { children, animate = true, config = 'default' } = props\n\n    const value = useMemo(() => {\n        const reactSpringConfig = isString(config) ? presets[config] : config\n\n        return {\n            animate,\n            config: reactSpringConfig,\n        }\n    }, [animate, config])\n\n    return <motionConfigContext.Provider value={value}>{children}</motionConfigContext.Provider>\n}\n\nexport const motionPropTypes = {\n    animate: PropTypes.bool,\n    motionConfig: PropTypes.oneOfType([\n        PropTypes.oneOf(Object.keys(presets)),\n        PropTypes.shape({\n            mass: PropTypes.number,\n            tension: PropTypes.number,\n            friction: PropTypes.number,\n            clamp: PropTypes.bool,\n            precision: PropTypes.number,\n            velocity: PropTypes.number,\n            duration: PropTypes.number,\n            easing: PropTypes.func,\n        }),\n    ]),\n}\n\nMotionConfigProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n    animate: motionPropTypes.animate,\n    config: motionPropTypes.motionConfig,\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { useContext } from 'react'\nimport { motionConfigContext } from './context'\n\nexport const useMotionConfig = () => useContext(motionConfigContext)\n","import { interpolateString } from 'd3-interpolate'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useSpring, to } from '@react-spring/web'\nimport { useMotionConfig } from '../motion'\n\nconst usePrevious = value => {\n    const ref = useRef()\n\n    useEffect(() => {\n        ref.current = value\n    }, [value])\n\n    return ref.current\n}\n\nexport const useAnimatedPath = path => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const previousPath = usePrevious(path)\n    const interpolator = useMemo(() => interpolateString(previousPath, path), [previousPath, path])\n\n    const { value } = useSpring({\n        from: { value: 0 },\n        to: { value: 1 },\n        reset: true,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return to(value, interpolator)\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport last from 'lodash/last'\nimport isArray from 'lodash/isArray'\nimport isFunction from 'lodash/isFunction'\nimport { scaleQuantize } from 'd3-scale'\nimport {\n    // Diverging\n    schemeBrBG,\n    schemePRGn,\n    schemePiYG,\n    schemePuOr,\n    schemeRdBu,\n    schemeRdGy,\n    schemeRdYlBu,\n    schemeRdYlGn,\n    schemeSpectral,\n\n    // Sequential (Single Hue)\n    schemeBlues,\n    schemeGreens,\n    schemeGreys,\n    schemeOranges,\n    schemePurples,\n    schemeReds,\n\n    // Sequential (Multi-Hue)\n    schemeBuGn,\n    schemeBuPu,\n    schemeGnBu,\n    schemeOrRd,\n    schemePuBuGn,\n    schemePuBu,\n    schemePuRd,\n    schemeRdPu,\n    schemeYlGnBu,\n    schemeYlGn,\n    schemeYlOrBr,\n    schemeYlOrRd,\n} from 'd3-scale-chromatic'\n\nexport const quantizeColorScales = {\n    nivo: ['#d76445', '#f47560', '#e8c1a0', '#97e3d5', '#61cdbb', '#00b0a7'],\n\n    // Diverging\n    BrBG: last(schemeBrBG),\n    PRGn: last(schemePRGn),\n    PiYG: last(schemePiYG),\n    PuOr: last(schemePuOr),\n    RdBu: last(schemeRdBu),\n    RdGy: last(schemeRdGy),\n    RdYlBu: last(schemeRdYlBu),\n    RdYlGn: last(schemeRdYlGn),\n    spectral: last(schemeSpectral),\n\n    // Sequential (Single Hue)\n    blues: last(schemeBlues),\n    greens: last(schemeGreens),\n    greys: last(schemeGreys),\n    oranges: last(schemeOranges),\n    purples: last(schemePurples),\n    reds: last(schemeReds),\n\n    // Sequential (Multi-Hue)\n    BuGn: last(schemeBuGn),\n    BuPu: last(schemeBuPu),\n    GnBu: last(schemeGnBu),\n    OrRd: last(schemeOrRd),\n    PuBuGn: last(schemePuBuGn),\n    PuBu: last(schemePuBu),\n    PuRd: last(schemePuRd),\n    RdPu: last(schemeRdPu),\n    YlGnBu: last(schemeYlGnBu),\n    YlGn: last(schemeYlGn),\n    YlOrBr: last(schemeYlOrBr),\n    YlOrRd: last(schemeYlOrRd),\n}\n\nexport const quantizeColorScalesKeys = Object.keys(quantizeColorScales)\n\nexport const guessQuantizeColorScale = colors => {\n    // colors is already a valid scale\n    if (isFunction(colors)) {\n        if (!isFunction(colors.domain)) {\n            throw new Error(\n                `Provided colors should be a valid quantize scale providing a 'domain()' function`\n            )\n        }\n\n        return colors\n    }\n\n    if (quantizeColorScales[colors]) {\n        // use predefined d3 quantize color scale\n        return scaleQuantize().range(quantizeColorScales[colors])\n    }\n\n    // user defined colors\n    if (isArray(colors)) return scaleQuantize().range(colors)\n\n    throw new Error(\n        `Unable to guess quantize color scale from '${colors}',\\nmust be a function or one of:\\n'${quantizeColorScalesKeys.join(\n            `', '`\n        )}'`\n    )\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport last from 'lodash/last'\nimport isArray from 'lodash/isArray'\nimport isString from 'lodash/isString'\nimport { scaleOrdinal, scaleSequential } from 'd3-scale'\nimport {\n    // categorical\n    schemeCategory10,\n    schemeAccent,\n    schemeDark2,\n    schemePaired,\n    schemePastel1,\n    schemePastel2,\n    schemeSet1,\n    schemeSet2,\n    schemeSet3,\n    // diverging\n    interpolateBrBG,\n    schemeBrBG,\n    interpolatePRGn,\n    schemePRGn,\n    interpolatePiYG,\n    schemePiYG,\n    interpolatePuOr,\n    schemePuOr,\n    interpolateRdBu,\n    schemeRdBu,\n    interpolateRdGy,\n    schemeRdGy,\n    interpolateRdYlBu,\n    schemeRdYlBu,\n    interpolateRdYlGn,\n    schemeRdYlGn,\n    interpolateSpectral,\n    schemeSpectral,\n    // sequential single hue\n    interpolateBlues,\n    schemeBlues,\n    interpolateGreens,\n    schemeGreens,\n    interpolateGreys,\n    schemeGreys,\n    interpolateOranges,\n    schemeOranges,\n    interpolatePurples,\n    schemePurples,\n    interpolateReds,\n    schemeReds,\n    // sequential multi hue\n    interpolateViridis,\n    interpolateInferno,\n    interpolateMagma,\n    interpolatePlasma,\n    interpolateWarm,\n    interpolateCool,\n    interpolateCubehelixDefault,\n    interpolateBuGn,\n    schemeBuGn,\n    interpolateBuPu,\n    schemeBuPu,\n    interpolateGnBu,\n    schemeGnBu,\n    interpolateOrRd,\n    schemeOrRd,\n    interpolatePuBuGn,\n    schemePuBuGn,\n    interpolatePuBu,\n    schemePuBu,\n    interpolatePuRd,\n    schemePuRd,\n    interpolateRdPu,\n    schemeRdPu,\n    interpolateYlGnBu,\n    schemeYlGnBu,\n    interpolateYlGn,\n    schemeYlGn,\n    interpolateYlOrBr,\n    schemeYlOrBr,\n    interpolateYlOrRd,\n    schemeYlOrRd,\n    // cyclical\n    interpolateRainbow,\n    interpolateSinebow,\n} from 'd3-scale-chromatic'\n\n// used for ordinal color scales\nconst colorSchemes = {\n    nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n    // categorical\n    category10: schemeCategory10,\n    accent: schemeAccent,\n    dark2: schemeDark2,\n    paired: schemePaired,\n    pastel1: schemePastel1,\n    pastel2: schemePastel2,\n    set1: schemeSet1,\n    set2: schemeSet2,\n    set3: schemeSet3,\n    // diverging\n    brown_blueGreen: last(schemeBrBG),\n    purpleRed_green: last(schemePRGn),\n    pink_yellowGreen: last(schemePiYG),\n    purple_orange: last(schemePuOr),\n    red_blue: last(schemeRdBu),\n    red_grey: last(schemeRdGy),\n    red_yellow_blue: last(schemeRdYlBu),\n    red_yellow_green: last(schemeRdYlGn),\n    spectral: last(schemeSpectral),\n    // sequential single hue\n    blues: last(schemeBlues),\n    greens: last(schemeGreens),\n    greys: last(schemeGreys),\n    oranges: last(schemeOranges),\n    purples: last(schemePurples),\n    reds: last(schemeReds),\n    // sequential multi hue\n    blue_green: last(schemeBuGn),\n    blue_purple: last(schemeBuPu),\n    green_blue: last(schemeGnBu),\n    orange_red: last(schemeOrRd),\n    purple_blue_green: last(schemePuBuGn),\n    purple_blue: last(schemePuBu),\n    purple_red: last(schemePuRd),\n    red_purple: last(schemeRdPu),\n    yellow_green_blue: last(schemeYlGnBu),\n    yellow_green: last(schemeYlGn),\n    yellow_orange_brown: last(schemeYlOrBr),\n    yellow_orange_red: last(schemeYlOrRd),\n}\n\nexport const colorSchemeIds = [\n    'nivo',\n    // categorical\n    'category10',\n    'accent',\n    'dark2',\n    'paired',\n    'pastel1',\n    'pastel2',\n    'set1',\n    'set2',\n    'set3',\n    // diverging\n    'brown_blueGreen',\n    'purpleRed_green',\n    'pink_yellowGreen',\n    'purple_orange',\n    'red_blue',\n    'red_grey',\n    'red_yellow_blue',\n    'red_yellow_green',\n    'spectral',\n    // sequential single hue\n    'blues',\n    'greens',\n    'greys',\n    'oranges',\n    'purples',\n    'reds',\n    // sequential multi hue\n    'blue_green',\n    'blue_purple',\n    'green_blue',\n    'orange_red',\n    'purple_blue_green',\n    'purple_blue',\n    'purple_red',\n    'red_purple',\n    'yellow_green_blue',\n    'yellow_green',\n    'yellow_orange_brown',\n    'yellow_orange_red',\n]\n\n// used for sequential color scales\nexport const colorInterpolators = {\n    // diverging\n    brown_blueGreen: interpolateBrBG,\n    purpleRed_green: interpolatePRGn,\n    pink_yellowGreen: interpolatePiYG,\n    purple_orange: interpolatePuOr,\n    red_blue: interpolateRdBu,\n    red_grey: interpolateRdGy,\n    red_yellow_blue: interpolateRdYlBu,\n    red_yellow_green: interpolateRdYlGn,\n    spectral: interpolateSpectral,\n    // sequential single hue\n    blues: interpolateBlues,\n    greens: interpolateGreens,\n    greys: interpolateGreys,\n    oranges: interpolateOranges,\n    purples: interpolatePurples,\n    reds: interpolateReds,\n    // sequential multi hue\n    viridis: interpolateViridis,\n    inferno: interpolateInferno,\n    magma: interpolateMagma,\n    plasma: interpolatePlasma,\n    warm: interpolateWarm,\n    cool: interpolateCool,\n    cubehelixDefault: interpolateCubehelixDefault,\n    blue_green: interpolateBuGn,\n    blue_purple: interpolateBuPu,\n    green_blue: interpolateGnBu,\n    orange_red: interpolateOrRd,\n    purple_blue_green: interpolatePuBuGn,\n    purple_blue: interpolatePuBu,\n    purple_red: interpolatePuRd,\n    red_purple: interpolateRdPu,\n    yellow_green_blue: interpolateYlGnBu,\n    yellow_green: interpolateYlGn,\n    yellow_orange_brown: interpolateYlOrBr,\n    yellow_orange_red: interpolateYlOrRd,\n    // cyclical\n    rainbow: interpolateRainbow,\n    sinebow: interpolateSinebow,\n}\n\nexport const colorInterpolatorIds = [\n    // diverging\n    'brown_blueGreen',\n    'purpleRed_green',\n    'pink_yellowGreen',\n    'purple_orange',\n    'red_blue',\n    'red_grey',\n    'red_yellow_blue',\n    'red_yellow_green',\n    'spectral',\n    // sequential single hue\n    'blues',\n    'greens',\n    'greys',\n    'oranges',\n    'purples',\n    'reds',\n    // sequential multi hue\n    'viridis',\n    'inferno',\n    'magma',\n    'plasma',\n    'warm',\n    'cool',\n    'cubehelixDefault',\n    'blue_green',\n    'blue_purple',\n    'green_blue',\n    'orange_red',\n    'purple_blue_green',\n    'purple_blue',\n    'purple_red',\n    'red_purple',\n    'yellow_green_blue',\n    'yellow_green',\n    'yellow_orange_brown',\n    'yellow_orange_red',\n    // cyclical\n    'rainbow',\n    'sinebow',\n]\n\nexport const nivoCategoricalColors = () =>\n    scaleOrdinal(['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'])\n\nexport const getColorScale = (colors, dataScale) => {\n    if (isString(colors)) {\n        const scheme = colorSchemes[colors]\n        if (scheme !== undefined) {\n            const scale = scaleOrdinal(scheme)\n            scale.type = 'ordinal'\n\n            return scale\n        }\n\n        if (dataScale !== undefined && colors.indexOf('seq:') === 0) {\n            const interpolator = colorInterpolators[colors.slice(4)]\n            if (interpolator !== undefined) {\n                const scale = scaleSequential(interpolator).domain(dataScale.domain())\n                scale.type = 'sequential'\n\n                return scale\n            }\n        }\n    }\n\n    if (isArray(colors)) {\n        const scale = scaleOrdinal(colors)\n        scale.type = 'ordinal'\n\n        return scale\n    }\n\n    // just use provided value,\n    // all elements will have identical color\n    return () => colors\n}\n\nexport * from './quantize'\n","import PropTypes from 'prop-types'\nimport { quantizeColorScalesKeys } from '../lib/colors'\n\nexport const quantizeColorScalePropType = PropTypes.oneOfType([\n    PropTypes.oneOf(quantizeColorScalesKeys),\n    PropTypes.func,\n    PropTypes.arrayOf(PropTypes.string),\n])\n","import without from 'lodash/without'\nimport {\n    curveBasis,\n    curveBasisClosed,\n    curveBasisOpen,\n    curveBundle,\n    curveCardinal,\n    curveCardinalClosed,\n    curveCardinalOpen,\n    curveCatmullRom,\n    curveCatmullRomClosed,\n    curveCatmullRomOpen,\n    curveLinear,\n    curveLinearClosed,\n    curveMonotoneX,\n    curveMonotoneY,\n    curveNatural,\n    curveStep,\n    curveStepAfter,\n    curveStepBefore,\n} from 'd3-shape'\n\nexport const curvePropMapping = {\n    basis: curveBasis,\n    basisClosed: curveBasisClosed,\n    basisOpen: curveBasisOpen,\n    bundle: curveBundle,\n    cardinal: curveCardinal,\n    cardinalClosed: curveCardinalClosed,\n    cardinalOpen: curveCardinalOpen,\n    catmullRom: curveCatmullRom,\n    catmullRomClosed: curveCatmullRomClosed,\n    catmullRomOpen: curveCatmullRomOpen,\n    linear: curveLinear,\n    linearClosed: curveLinearClosed,\n    monotoneX: curveMonotoneX,\n    monotoneY: curveMonotoneY,\n    natural: curveNatural,\n    step: curveStep,\n    stepAfter: curveStepAfter,\n    stepBefore: curveStepBefore,\n}\n\nexport const curvePropKeys = Object.keys(curvePropMapping)\n\nexport const closedCurvePropKeys = curvePropKeys.filter(c => c.endsWith('Closed'))\n\n// Safe curves to be used with d3 area shape generator\nexport const areaCurvePropKeys = without(\n    curvePropKeys,\n    'bundle',\n    'basisClosed',\n    'basisOpen',\n    'cardinalClosed',\n    'cardinalOpen',\n    'catmullRomClosed',\n    'catmullRomOpen',\n    'linearClosed'\n)\n\n// Safe curves to be used with d3 line shape generator\nexport const lineCurvePropKeys = without(\n    curvePropKeys,\n    'bundle',\n    'basisClosed',\n    'basisOpen',\n    'cardinalClosed',\n    'cardinalOpen',\n    'catmullRomClosed',\n    'catmullRomOpen',\n    'linearClosed'\n)\n\n/**\n * Returns curve interpolator from given identifier.\n *\n * @param {string} id - Curve interpolator identifier\n * @return {Function}\n */\nexport const curveFromProp = id => {\n    const curveInterpolator = curvePropMapping[id]\n    if (!curveInterpolator) {\n        throw new TypeError(`'${id}', is not a valid curve interpolator identifier.`)\n    }\n\n    return curvePropMapping[id]\n}\n","import {\n    // order\n    stackOrderAscending,\n    stackOrderDescending,\n    stackOrderInsideOut,\n    stackOrderNone,\n    stackOrderReverse,\n    // offset\n    stackOffsetExpand,\n    stackOffsetDiverging,\n    stackOffsetNone,\n    stackOffsetSilhouette,\n    stackOffsetWiggle,\n} from 'd3-shape'\n\nexport const stackOrderPropMapping = {\n    ascending: stackOrderAscending,\n    descending: stackOrderDescending,\n    insideOut: stackOrderInsideOut,\n    none: stackOrderNone,\n    reverse: stackOrderReverse,\n}\n\nexport const stackOrderPropKeys = Object.keys(stackOrderPropMapping)\n\nexport const stackOrderFromProp = prop => stackOrderPropMapping[prop]\n\nexport const stackOffsetPropMapping = {\n    expand: stackOffsetExpand,\n    diverging: stackOffsetDiverging,\n    none: stackOffsetNone,\n    silhouette: stackOffsetSilhouette,\n    wiggle: stackOffsetWiggle,\n}\n\nexport const stackOffsetPropKeys = Object.keys(stackOffsetPropMapping)\n\nexport const stackOffsetFromProp = prop => stackOffsetPropMapping[prop]\n","import PropTypes from 'prop-types'\n\nexport const marginPropType = PropTypes.shape({\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n}).isRequired\n\nexport const blendModes = [\n    'normal',\n    'multiply',\n    'screen',\n    'overlay',\n    'darken',\n    'lighten',\n    'color-dodge',\n    'color-burn',\n    'hard-light',\n    'soft-light',\n    'difference',\n    'exclusion',\n    'hue',\n    'saturation',\n    'color',\n    'luminosity',\n]\n\nexport const blendModePropType = PropTypes.oneOf(blendModes)\n\nexport * from './colors'\nexport * from './curve'\nexport * from './stack'\n","import { useMemo } from 'react'\nimport { curveFromProp } from '../props'\n\n/**\n * Transform d3 curve interpolation identifier\n * to its corresponding interpolator.\n */\nexport const useCurveInterpolation = interpolation =>\n    useMemo(() => curveFromProp(interpolation), [interpolation])\n","import { scaleOrdinal } from 'd3-scale'\nimport { schemeSet3 } from 'd3-scale-chromatic'\nimport { nivoCategoricalColors } from '../lib/colors'\n\n// motion\nexport const defaultAnimate = true\n\n// colors\nexport const defaultCategoricalColors = nivoCategoricalColors\nexport const defaultColorRange = scaleOrdinal(schemeSet3)\n\n// margin\nexport const defaultMargin = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n","import { useMemo } from 'react'\nimport { defaultMargin } from '../defaults'\n\nexport const useDimensions = (width, height, partialMargin = {}) =>\n    useMemo(() => {\n        const margin = {\n            ...defaultMargin,\n            ...partialMargin,\n        }\n\n        return {\n            margin,\n            innerWidth: width - margin.left - margin.right,\n            innerHeight: height - margin.top - margin.bottom,\n            outerWidth: width,\n            outerHeight: height,\n        }\n    }, [\n        width,\n        height,\n        partialMargin.top,\n        partialMargin.right,\n        partialMargin.bottom,\n        partialMargin.left,\n    ])\n","import { useRef, useState, useEffect } from 'react'\n\nexport const useMeasure = () => {\n    const measureRef = useRef(null)\n\n    const [bounds, setBounds] = useState({\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n    })\n\n    const [observer] = useState(() => {\n        // Check if ResizeObserver is defined in current env (could be browser, node.js, jsdom etc.).\n        if (typeof ResizeObserver === 'undefined') return null\n\n        return new ResizeObserver(([entry]) => setBounds(entry.contentRect))\n    })\n\n    useEffect(() => {\n        if (measureRef.current && observer !== null) {\n            observer.observe(measureRef.current)\n        }\n\n        return () => {\n            if (observer !== null) observer.disconnect()\n        }\n    }, [])\n\n    return [measureRef, bounds]\n}\n","import { useMemo } from 'react'\nimport { defaultTheme, extendDefaultTheme } from '../theming'\n\nexport const usePartialTheme = partialTheme =>\n    useMemo(() => extendDefaultTheme(defaultTheme, partialTheme), [partialTheme])\n","import { useMemo } from 'react'\nimport { format as d3Format } from 'd3-format'\nimport { timeFormat as d3TimeFormat } from 'd3-time-format'\n\nexport const getValueFormatter = format => {\n    // user defined function\n    if (typeof format === 'function') return format\n\n    if (typeof format === 'string') {\n        // time format specifier\n        if (format.indexOf('time:') === 0) {\n            return d3TimeFormat(format.slice('5'))\n        }\n\n        // standard format specifier\n        return d3Format(format)\n    }\n\n    // no formatting\n    return value => `${value}`\n}\n\nexport const useValueFormatter = format => useMemo(() => getValueFormatter(format), [format])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createContext, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { usePartialTheme } from '../hooks'\n\nexport const themeContext = createContext()\n\n// required to preserve equality\nconst defaultPartialTheme = {}\n\nexport const ThemeProvider = ({ theme: partialTheme = defaultPartialTheme, children }) => {\n    const theme = usePartialTheme(partialTheme)\n\n    return <themeContext.Provider value={theme}>{children}</themeContext.Provider>\n}\n\nThemeProvider.propTypes = {\n    children: PropTypes.node.isRequired,\n    theme: PropTypes.object,\n}\n\nexport const useTheme = () => useContext(themeContext)\n","/**\n * Cleanup theme text style so that all properties\n * are valid for an SVG text element.\n *\n * @param {TextStyle} style\n */\nexport const sanitizeSvgTextStyle = style => {\n    const { outlineWidth, outlineColor, outlineOpacity, ...sanitized } = style\n\n    return sanitized\n}\n","import { cloneElement } from 'react'\nimport PropTypes from 'prop-types'\n\n// type ConditionalWrapperProps = {\n//     children: JSX.Element\n//     condition: boolean\n//     wrapper: (children: JSX.Element) => JSX.Element\n//   }\n\nexport const ConditionalWrapper = ({ children, condition, wrapper }) => {\n    if (!condition) return children\n\n    return cloneElement(wrapper, {}, children)\n}\n\nConditionalWrapper.propTypes = {\n    children: PropTypes.node.isRequired,\n    condition: PropTypes.bool.isRequired,\n    wrapper: PropTypes.element.isRequired,\n}\n","import { useRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { TooltipProvider, Tooltip } from '@nivo/tooltip'\nimport { ThemeProvider } from '../theming'\nimport { MotionConfigProvider, motionPropTypes } from '../motion'\nimport { ConditionalWrapper } from './ConditionalWrapper'\n\nconst containerStyle = {\n    position: 'relative',\n}\n\nexport const Container = ({\n    children,\n    theme,\n    renderWrapper = true,\n    isInteractive = true,\n    animate,\n    motionConfig,\n}) => {\n    const container = useRef(null)\n\n    return (\n        <ThemeProvider theme={theme}>\n            <MotionConfigProvider animate={animate} config={motionConfig}>\n                <TooltipProvider container={container}>\n                    {/* we should not render the div element if using the HTTP API */}\n                    <ConditionalWrapper\n                        condition={renderWrapper}\n                        wrapper={<div style={containerStyle} ref={container} />}\n                    >\n                        {children}\n                        {isInteractive && <Tooltip />}\n                    </ConditionalWrapper>\n                </TooltipProvider>\n            </MotionConfigProvider>\n        </ThemeProvider>\n    )\n}\n\nContainer.propTypes = {\n    children: PropTypes.element.isRequired,\n    isInteractive: PropTypes.bool,\n    renderWrapper: PropTypes.bool,\n    theme: PropTypes.object,\n    animate: PropTypes.bool,\n    motionConfig: PropTypes.oneOfType([PropTypes.string, motionPropTypes.motionConfig]),\n}\n\nexport default Container\n","export default () => {}\n","import { useRef, useMemo, useCallback } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    TooltipActionsContext,\n    TooltipStateContext,\n    useTooltipHandlers,\n    Tooltip,\n} from '@nivo/tooltip'\nimport noop from '../lib/noop'\nimport { ThemeProvider } from '../theming'\nimport { MotionConfigProvider, motionPropTypes } from '../motion'\nimport { ConditionalWrapper } from './ConditionalWrapper'\n\nconst containerStyle = {\n    position: 'relative',\n}\n\n/**\n * This component should only be used when relying on render props,\n * passing `showTooltip`, `hideTooltip`, but you should use the regular\n * `Container` component.\n *\n * @deprecated\n */\nexport const LegacyContainer = ({\n    children,\n    theme,\n    isInteractive = true,\n    renderWrapper = true,\n    animate,\n    motionConfig,\n}) => {\n    const container = useRef(null)\n    const { actions: tooltipActions, state: tooltipState } = useTooltipHandlers(container)\n\n    const showTooltip = useCallback(\n        (content, event) => tooltipActions.showTooltipFromEvent(content, event),\n        [tooltipActions.showTooltipFromEvent]\n    )\n\n    const handlers = useMemo(\n        () => ({\n            showTooltip: isInteractive ? showTooltip : noop,\n            hideTooltip: isInteractive ? tooltipActions.hideTooltip : noop,\n        }),\n        [tooltipActions.hideTooltip, isInteractive, showTooltip]\n    )\n\n    return (\n        <ThemeProvider theme={theme}>\n            <MotionConfigProvider animate={animate} config={motionConfig}>\n                <TooltipActionsContext.Provider value={tooltipActions}>\n                    <TooltipStateContext.Provider value={tooltipState}>\n                        {/* we should not render the div element if using the HTTP API */}\n                        <ConditionalWrapper\n                            condition={renderWrapper}\n                            wrapper={<div style={containerStyle} ref={container} />}\n                        >\n                            {children(handlers)}\n                            {isInteractive && <Tooltip />}\n                        </ConditionalWrapper>\n                    </TooltipStateContext.Provider>\n                </TooltipActionsContext.Provider>\n            </MotionConfigProvider>\n        </ThemeProvider>\n    )\n}\n\nLegacyContainer.propTypes = {\n    children: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool,\n    renderWrapper: PropTypes.bool,\n    theme: PropTypes.object.isRequired,\n    animate: PropTypes.bool.isRequired,\n    motionConfig: PropTypes.oneOfType([PropTypes.string, motionPropTypes.motionConfig]),\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { useMeasure } from '../hooks'\n\nconst ResponsiveWrapper = ({ children }) => {\n    const [measureRef, bounds] = useMeasure()\n    const shouldRender = bounds.width > 0 && bounds.height > 0\n\n    return (\n        <div ref={measureRef} style={{ width: '100%', height: '100%' }}>\n            {shouldRender && children({ width: bounds.width, height: bounds.height })}\n        </div>\n    )\n}\n\nResponsiveWrapper.propTypes = {\n    children: PropTypes.func.isRequired,\n}\n\nexport default ResponsiveWrapper\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\n\nexport const LinearGradient = ({ id, colors, ...rest }) => (\n    <linearGradient id={id} x1={0} x2={0} y1={0} y2={1} {...rest}>\n        {colors.map(({ offset, color, opacity }) => (\n            <stop\n                key={offset}\n                offset={`${offset}%`}\n                stopColor={color}\n                stopOpacity={opacity !== undefined ? opacity : 1}\n            />\n        ))}\n    </linearGradient>\n)\n\nLinearGradient.propTypes = {\n    id: PropTypes.string.isRequired,\n    colors: PropTypes.arrayOf(\n        PropTypes.shape({\n            offset: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n            opacity: PropTypes.number,\n        })\n    ).isRequired,\n    gradientTransform: PropTypes.string,\n}\n\nexport const linearGradientDef = (id, colors, options = {}) => ({\n    id,\n    type: 'linearGradient',\n    colors,\n    ...options,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { LinearGradient } from './LinearGradient'\n\nexport const gradientTypes = {\n    linearGradient: LinearGradient,\n}\n\nexport * from './LinearGradient'\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const PatternDotsDefaultProps = {\n    color: '#000000',\n    background: '#ffffff',\n    size: 4,\n    padding: 4,\n    stagger: false,\n}\n\nexport const PatternDots = memo(props => {\n    const {\n        id,\n        background = PatternDotsDefaultProps.background,\n        color = PatternDotsDefaultProps.color,\n        size = PatternDotsDefaultProps.size,\n        padding = PatternDotsDefaultProps.padding,\n        stagger = PatternDotsDefaultProps.stagger,\n    } = props\n\n    let fullSize = size + padding\n    const radius = size / 2\n    const halfPadding = padding / 2\n    if (stagger === true) {\n        fullSize = size * 2 + padding * 2\n    }\n\n    return (\n        <pattern id={id} width={fullSize} height={fullSize} patternUnits=\"userSpaceOnUse\">\n            <rect width={fullSize} height={fullSize} fill={background} />\n            <circle cx={halfPadding + radius} cy={halfPadding + radius} r={radius} fill={color} />\n            {stagger && (\n                <circle\n                    cx={padding * 1.5 + size + radius}\n                    cy={padding * 1.5 + size + radius}\n                    r={radius}\n                    fill={color}\n                />\n            )}\n        </pattern>\n    )\n})\n\nPatternDots.displayName = 'PatternDots'\nPatternDots.propTypes = {\n    id: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    background: PropTypes.string.isRequired,\n    size: PropTypes.number.isRequired,\n    padding: PropTypes.number.isRequired,\n    stagger: PropTypes.bool.isRequired,\n}\n\nexport const patternDotsDef = (id, options = {}) => ({\n    id,\n    type: 'patternDots',\n    ...options,\n})\n","export const TWO_PI = Math.PI * 2\n\nexport const degreesToRadians = degrees => (degrees * Math.PI) / 180\n\nexport const radiansToDegrees = radians => (180 * radians) / Math.PI\n\nexport const midAngle = arc => arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\nexport const positionFromAngle = (angle, distance) => ({\n    x: Math.cos(angle) * distance,\n    y: Math.sin(angle) * distance,\n})\n\n/**\n * Normalize given angle (degrees) in the 0~360 range.\n *\n * @param {number} angle\n *\n * @return {number}\n */\nexport const absoluteAngleDegrees = angle => {\n    let absAngle = angle % 360\n    if (absAngle < 0) {\n        absAngle += 360\n    }\n\n    return absAngle\n}\n\nexport const absoluteAngleRadians = angle => angle - TWO_PI * Math.floor((angle + Math.PI) / TWO_PI)\n\n/**\n * Ensure angle is always between 0~360.\n *\n * @param {number} rawAngle - in degrees\n *\n * @returns {number}\n */\nexport const normalizeAngle = rawAngle => {\n    if (rawAngle < 0) {\n        return 360 - (-rawAngle % 360)\n    }\n\n    return rawAngle % 360\n}\n\n/**\n * Ensure the absolute difference between start and end angles\n * is at most given length.\n *\n * @param startAngle - in degrees\n * @param endAngle   - in degrees\n * @param length     - in degrees\n *\n * @returns {[number, number]}\n */\nexport const clampArc = (startAngle, endAngle, length = 360) => {\n    let clampedEndAngle = endAngle\n    if (Math.abs(endAngle - startAngle) > length) {\n        clampedEndAngle = startAngle + (endAngle > startAngle ? length : -length)\n    }\n\n    return [startAngle, clampedEndAngle]\n}\n","export const textPropsByEngine = {\n    svg: {\n        align: {\n            left: 'start',\n            center: 'middle',\n            right: 'end',\n            start: 'start',\n            middle: 'middle',\n            end: 'end',\n        },\n        baseline: {\n            top: 'text-before-edge',\n            center: 'central',\n            bottom: 'alphabetic',\n        },\n    },\n    canvas: {\n        align: {\n            left: 'left',\n            center: 'center',\n            right: 'right',\n            start: 'left',\n            middle: 'center',\n            end: 'right',\n        },\n        baseline: {\n            top: 'top',\n            center: 'middle',\n            bottom: 'bottom',\n        },\n    },\n}\n","import { positionFromAngle, radiansToDegrees } from './utils'\nimport { textPropsByEngine } from '../bridge'\n\n/**\n * @param {number} radius\n * @param {number} angle          angle (radians)\n * @param {number} [rotation=0]   label rotation (degrees)\n * @param {string} [engine='svg'] one of: 'svg', 'canvas'\n * @return {{ x: number, y: number, rotate: number, align: string, baseline: string }}\n */\nexport const getPolarLabelProps = (radius, angle, rotation, engine = 'svg') => {\n    const textProps = textPropsByEngine[engine]\n\n    const { x, y } = positionFromAngle(angle - Math.PI / 2, radius)\n\n    let rotate = radiansToDegrees(angle)\n    let align = textProps.align.center\n    let baseline = textProps.baseline.bottom\n\n    if (rotation > 0) {\n        align = textProps.align.right\n        baseline = textProps.baseline.center\n    } else if (rotation < 0) {\n        align = textProps.align.left\n        baseline = textProps.baseline.center\n    }\n\n    // reverse labels after 180°\n    if (rotation !== 0 && rotate > 180) {\n        rotate -= 180\n        align = align === textProps.align.right ? textProps.align.left : textProps.align.right\n    }\n\n    rotate += rotation\n\n    return { x, y, rotate, align, baseline }\n}\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { degreesToRadians } from '../../../lib/polar'\n\nexport const PatternLinesDefaultProps = {\n    spacing: 5,\n    rotation: 0,\n    background: '#000000',\n    color: '#ffffff',\n    lineWidth: 2,\n}\n\nexport const PatternLines = memo(\n    ({\n        id,\n        spacing: _spacing = PatternLinesDefaultProps.spacing,\n        rotation: _rotation = PatternLinesDefaultProps.rotation,\n        background = PatternLinesDefaultProps.background,\n        color = PatternLinesDefaultProps.color,\n        lineWidth = PatternLinesDefaultProps.lineWidth,\n    }) => {\n        let rotation = Math.round(_rotation) % 360\n        const spacing = Math.abs(_spacing)\n\n        if (rotation > 180) rotation = rotation - 360\n        else if (rotation > 90) rotation = rotation - 180\n        else if (rotation < -180) rotation = rotation + 360\n        else if (rotation < -90) rotation = rotation + 180\n\n        let width = spacing\n        let height = spacing\n        let path\n\n        if (rotation === 0) {\n            path = `\n                M 0 0 L ${width} 0\n                M 0 ${height} L ${width} ${height}\n            `\n        } else if (rotation === 90) {\n            path = `\n                M 0 0 L 0 ${height}\n                M ${width} 0 L ${width} ${height}\n            `\n        } else {\n            width = Math.abs(spacing / Math.sin(degreesToRadians(rotation)))\n            height = spacing / Math.sin(degreesToRadians(90 - rotation))\n\n            if (rotation > 0) {\n                path = `\n                    M 0 ${-height} L ${width * 2} ${height}\n                    M ${-width} ${-height} L ${width} ${height}\n                    M ${-width} 0 L ${width} ${height * 2}\n                `\n            } else {\n                path = `\n                    M ${-width} ${height} L ${width} ${-height}\n                    M ${-width} ${height * 2} L ${width * 2} ${-height}\n                    M 0 ${height * 2} L ${width * 2} 0\n                `\n            }\n        }\n\n        return (\n            <pattern id={id} width={width} height={height} patternUnits=\"userSpaceOnUse\">\n                <rect\n                    width={width}\n                    height={height}\n                    fill={background}\n                    stroke=\"rgba(255, 0, 0, 0.1)\"\n                    strokeWidth={0}\n                />\n                <path d={path} strokeWidth={lineWidth} stroke={color} strokeLinecap=\"square\" />\n            </pattern>\n        )\n    }\n)\n\nPatternLines.displayName = 'PatternLines'\nPatternLines.propTypes = {\n    id: PropTypes.string.isRequired,\n    spacing: PropTypes.number.isRequired,\n    rotation: PropTypes.number.isRequired,\n    background: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    lineWidth: PropTypes.number.isRequired,\n}\n\nexport const patternLinesDef = (id, options = {}) => ({\n    id,\n    type: 'patternLines',\n    ...options,\n})\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const PatternSquaresDefaultProps = {\n    color: '#000000',\n    background: '#ffffff',\n    size: 4,\n    padding: 4,\n    stagger: false,\n}\n\nexport const PatternSquares = memo(props => {\n    const {\n        id,\n        color = PatternSquaresDefaultProps.color,\n        background = PatternSquaresDefaultProps.background,\n        size = PatternSquaresDefaultProps.size,\n        padding = PatternSquaresDefaultProps.padding,\n        stagger = PatternSquaresDefaultProps.stagger,\n    } = props\n\n    let fullSize = size + padding\n    const halfPadding = padding / 2\n    if (stagger === true) {\n        fullSize = size * 2 + padding * 2\n    }\n\n    return (\n        <pattern id={id} width={fullSize} height={fullSize} patternUnits=\"userSpaceOnUse\">\n            <rect width={fullSize} height={fullSize} fill={background} />\n            <rect x={halfPadding} y={halfPadding} width={size} height={size} fill={color} />\n            {stagger && (\n                <rect\n                    x={padding * 1.5 + size}\n                    y={padding * 1.5 + size}\n                    width={size}\n                    height={size}\n                    fill={color}\n                />\n            )}\n        </pattern>\n    )\n})\n\nPatternSquares.displayName = 'PatternSquares'\nPatternSquares.propTypes = {\n    id: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    background: PropTypes.string.isRequired,\n    size: PropTypes.number.isRequired,\n    padding: PropTypes.number.isRequired,\n    stagger: PropTypes.bool.isRequired,\n}\n\nexport const patternSquaresDef = (id, options = {}) => ({\n    id,\n    type: 'patternSquares',\n    ...options,\n})\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { PatternDots } from './PatternDots'\nimport { PatternLines } from './PatternLines'\nimport { PatternSquares } from './PatternSquares'\n\nexport const patternTypes = {\n    patternDots: PatternDots,\n    patternLines: PatternLines,\n    patternSquares: PatternSquares,\n}\n\nexport * from './PatternDots'\nexport * from './PatternLines'\nexport * from './PatternSquares'\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { createElement, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { gradientTypes } from './gradients'\nimport { patternTypes } from './patterns'\n\nexport const defsMapping = {\n    ...gradientTypes,\n    ...patternTypes,\n}\n\nconst Defs = ({ defs: definitions }) => {\n    if (!definitions || definitions.length < 1) return null\n\n    return (\n        <defs aria-hidden={true}>\n            {definitions.map(({ type, ...def }) => {\n                if (defsMapping[type])\n                    return createElement(defsMapping[type], { key: def.id, ...def })\n\n                return null\n            })}\n        </defs>\n    )\n}\n\nDefs.propTypes = {\n    defs: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.oneOf(Object.keys(defsMapping)).isRequired,\n            id: PropTypes.string.isRequired,\n        })\n    ),\n}\n\nexport default memo(Defs)\n","import PropTypes from 'prop-types'\nimport { Defs } from './defs'\nimport { useTheme } from '../theming'\n\nconst SvgWrapper = ({\n    width,\n    height,\n    margin,\n    defs,\n    children,\n    role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n    isFocusable,\n}) => {\n    const theme = useTheme()\n\n    return (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={width}\n            height={height}\n            role={role}\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledBy}\n            aria-describedby={ariaDescribedBy}\n            focusable={isFocusable}\n            tabIndex={isFocusable ? 0 : undefined}\n        >\n            <Defs defs={defs} />\n            <rect width={width} height={height} fill={theme.background} />\n            <g transform={`translate(${margin.left},${margin.top})`}>{children}</g>\n        </svg>\n    )\n}\n\nSvgWrapper.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: PropTypes.shape({\n        top: PropTypes.number.isRequired,\n        left: PropTypes.number.isRequired,\n    }).isRequired,\n    defs: PropTypes.array,\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n    role: PropTypes.string,\n    isFocusable: PropTypes.bool,\n    ariaLabel: PropTypes.string,\n    ariaLabelledBy: PropTypes.string,\n    ariaDescribedBy: PropTypes.string,\n}\n\nexport default SvgWrapper\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst DotsItemSymbol = ({ size, color, borderWidth, borderColor }) => (\n    <circle\n        r={size / 2}\n        fill={color}\n        stroke={borderColor}\n        strokeWidth={borderWidth}\n        style={{ pointerEvents: 'none' }}\n    />\n)\n\nDotsItemSymbol.propTypes = {\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n}\n\nexport default memo(DotsItemSymbol)\n","import { createElement, memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, sanitizeSvgTextStyle } from '../../theming'\nimport { useMotionConfig } from '../../motion'\nimport DotsItemSymbol from './DotsItemSymbol'\n\nconst DotsItem = ({\n    x,\n    y,\n    symbol = DotsItemSymbol,\n    size,\n    datum,\n    color,\n    borderWidth,\n    borderColor,\n    label,\n    labelTextAnchor = 'middle',\n    labelYOffset = -12,\n}) => {\n    const theme = useTheme()\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        transform: `translate(${x}, ${y})`,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform} style={{ pointerEvents: 'none' }}>\n            {createElement(symbol, {\n                size,\n                color,\n                datum,\n                borderWidth,\n                borderColor,\n            })}\n            {label && (\n                <text\n                    textAnchor={labelTextAnchor}\n                    y={labelYOffset}\n                    style={sanitizeSvgTextStyle(theme.dots.text)}\n                >\n                    {label}\n                </text>\n            )}\n        </animated.g>\n    )\n}\n\nDotsItem.propTypes = {\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    datum: PropTypes.object.isRequired,\n\n    size: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n\n    symbol: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    labelTextAnchor: PropTypes.oneOf(['start', 'middle', 'end']),\n    labelYOffset: PropTypes.number,\n}\n\nexport default memo(DotsItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '../../../theming'\n\n/**\n *\n * @param {string} axis\n * @param {number} width\n * @param {number} height\n * @param {string} position\n * @param {number} offsetX\n * @param {number} offsetY\n * @param {string} orientation\n * @return {{ x: number, y: number, textAnchor: string }}\n */\nconst computeLabel = ({ axis, width, height, position, offsetX, offsetY, orientation }) => {\n    let x = 0\n    let y = 0\n    const rotation = orientation === 'vertical' ? -90 : 0\n    let textAnchor = 'start'\n\n    if (axis === 'x') {\n        switch (position) {\n            case 'top-left':\n                x = -offsetX\n                y = offsetY\n                textAnchor = 'end'\n                break\n            case 'top':\n                y = -offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'top-right':\n                x = offsetX\n                y = offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'right':\n                x = offsetX\n                y = height / 2\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n            case 'bottom-right':\n                x = offsetX\n                y = height - offsetY\n                textAnchor = 'start'\n                break\n            case 'bottom':\n                y = height + offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'bottom-left':\n                y = height - offsetY\n                x = -offsetX\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'left':\n                x = -offsetX\n                y = height / 2\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n        }\n    } else {\n        switch (position) {\n            case 'top-left':\n                x = offsetX\n                y = -offsetY\n                textAnchor = 'start'\n                break\n            case 'top':\n                x = width / 2\n                y = -offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'top-right':\n                x = width - offsetX\n                y = -offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'start'\n                }\n                break\n            case 'right':\n                x = width + offsetX\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n            case 'bottom-right':\n                x = width - offsetX\n                y = offsetY\n                textAnchor = 'end'\n                break\n            case 'bottom':\n                x = width / 2\n                y = offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'middle'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'bottom-left':\n                x = offsetX\n                y = offsetY\n                if (orientation === 'horizontal') {\n                    textAnchor = 'start'\n                } else {\n                    textAnchor = 'end'\n                }\n                break\n            case 'left':\n                x = -offsetX\n                if (orientation === 'horizontal') {\n                    textAnchor = 'end'\n                } else {\n                    textAnchor = 'middle'\n                }\n                break\n        }\n    }\n\n    return { x, y, rotation, textAnchor }\n}\n\nconst CartesianMarkersItem = ({\n    width,\n    height,\n    axis,\n    scale,\n    value,\n    lineStyle,\n    textStyle,\n    legend,\n    legendNode,\n    legendPosition = 'top-right',\n    legendOffsetX = 14,\n    legendOffsetY = 14,\n    legendOrientation = 'horizontal',\n}) => {\n    const theme = useTheme()\n\n    let x = 0\n    let x2 = 0\n    let y = 0\n    let y2 = 0\n\n    if (axis === 'y') {\n        y = scale(value)\n        x2 = width\n    } else {\n        x = scale(value)\n        y2 = height\n    }\n\n    if (legend && !legendNode) {\n        const legendProps = computeLabel({\n            axis,\n            width,\n            height,\n            position: legendPosition,\n            offsetX: legendOffsetX,\n            offsetY: legendOffsetY,\n            orientation: legendOrientation,\n        })\n        legendNode = (\n            <text\n                transform={`translate(${legendProps.x}, ${legendProps.y}) rotate(${legendProps.rotation})`}\n                textAnchor={legendProps.textAnchor}\n                dominantBaseline=\"central\"\n                style={textStyle}\n            >\n                {legend}\n            </text>\n        )\n    }\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <line\n                x1={0}\n                x2={x2}\n                y1={0}\n                y2={y2}\n                stroke={theme.markers.lineColor}\n                strokeWidth={theme.markers.lineStrokeWidth}\n                style={lineStyle}\n            />\n            {legendNode}\n        </g>\n    )\n}\n\nCartesianMarkersItem.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    scale: PropTypes.func.isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        .isRequired,\n    lineStyle: PropTypes.object,\n    textStyle: PropTypes.object,\n\n    legend: PropTypes.string,\n    legendPosition: PropTypes.oneOf([\n        'top-left',\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n    ]),\n    legendOffsetX: PropTypes.number.isRequired,\n    legendOffsetY: PropTypes.number.isRequired,\n    legendOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n}\n\nexport default memo(CartesianMarkersItem)\n","import { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport CartesianMarkersItem from './CartesianMarkersItem'\n\nconst CartesianMarkers = ({ markers, width, height, xScale, yScale }) => {\n    if (!markers || markers.length === 0) return null\n\n    return markers.map((marker, i) => (\n        <CartesianMarkersItem\n            key={i}\n            {...marker}\n            width={width}\n            height={height}\n            scale={marker.axis === 'y' ? yScale : xScale}\n        />\n    ))\n}\n\nCartesianMarkers.propTypes = {\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n\n    xScale: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired,\n\n    markers: PropTypes.arrayOf(\n        PropTypes.shape({\n            axis: PropTypes.oneOf(['x', 'y']).isRequired,\n            value: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n                PropTypes.instanceOf(Date),\n            ]).isRequired,\n            lineStyle: PropTypes.object,\n            textStyle: PropTypes.object,\n        })\n    ),\n}\n\nexport default memo(CartesianMarkers)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { Component } from 'react'\nimport { Container } from '../components/Container'\n\nexport const withContainer = WrappedComponent => {\n    // eslint-disable-next-line react/display-name\n    return class extends Component {\n        render() {\n            // eslint-disable-next-line react/prop-types\n            const { theme, renderWrapper, animate, motionConfig, ...childProps } = this.props\n\n            return (\n                <Container\n                    theme={theme}\n                    renderWrapper={renderWrapper}\n                    isInteractive={childProps.isInteractive}\n                    animate={animate}\n                    motionConfig={motionConfig}\n                >\n                    <WrappedComponent {...childProps} />\n                </Container>\n            )\n        }\n    }\n}\n","import isFunction from 'lodash/isFunction'\nimport get from 'lodash/get'\nimport { format } from 'd3-format'\nimport { useMemo } from 'react'\n\nexport const getLabelGenerator = (_label, labelFormat) => {\n    const getRawLabel = isFunction(_label) ? _label : d => get(d, _label)\n    let formatter\n    if (labelFormat) {\n        formatter = isFunction(labelFormat) ? labelFormat : format(labelFormat)\n    }\n\n    if (formatter) return d => formatter(getRawLabel(d))\n    return getRawLabel\n}\n\nexport const getPropertyAccessor = accessor =>\n    isFunction(accessor) ? accessor : d => get(d, accessor)\n\nexport const usePropertyAccessor = accessor =>\n    useMemo(() => getPropertyAccessor(accessor), [accessor])\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport const boxAlignments = [\n    'center',\n    'top-left',\n    'top',\n    'top-right',\n    'right',\n    'bottom-right',\n    'bottom',\n    'bottom-left',\n    'left',\n]\n\n/**\n * Align a box inside another containing box and returns x, y positions.\n *\n * @param {{ x: number, y: number, width: number, height: number }} box\n * @param {{ x: number, y: number, width: number, height: number }} container\n * @param {'center'|'top-left'|'top'|'top-right'|'right'|'bottom-right'|'bottom'|'bottom-left'|'left'} alignment\n * @return {[number, number]}\n */\nexport const alignBox = (box, container, alignment) => {\n    const deltaX = container.width - box.width\n    const deltaY = container.height - box.height\n\n    let x = 0\n    let y = 0\n    if (alignment === 'center') {\n        x = deltaX / 2\n        y = deltaY / 2\n    }\n    if (alignment === 'top') {\n        x = deltaX / 2\n    }\n    if (alignment === 'top-right') {\n        x = deltaX\n    }\n    if (alignment === 'right') {\n        x = deltaX\n        y = deltaY / 2\n    }\n    if (alignment === 'bottom-right') {\n        x = deltaX\n        y = deltaY\n    }\n    if (alignment === 'bottom') {\n        x = deltaX / 2\n        y = deltaY\n    }\n    if (alignment === 'bottom-left') {\n        y = deltaY\n    }\n    if (alignment === 'left') {\n        y = deltaY / 2\n    }\n\n    return [x, y]\n}\n","/**\n * Computes distance between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nexport const getDistance = (x1, y1, x2, y2) => {\n    let deltaX = x2 - x1\n    let deltaY = y2 - y1\n\n    deltaX *= deltaX\n    deltaY *= deltaY\n\n    return Math.sqrt(deltaX + deltaY)\n}\n\n/**\n * Computes angle (radians) between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nexport const getAngle = (x1, y1, x2, y2) => {\n    const angle = Math.atan2(y2 - y1, x2 - x1) - Math.PI / 2\n\n    return angle > 0 ? angle : Math.PI * 2 + angle\n}\n\n/**\n * Check if cursor is in given rectangle.\n *\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\nexport const isCursorInRect = (x, y, width, height, cursorX, cursorY) =>\n    x <= cursorX && cursorX <= x + width && y <= cursorY && cursorY <= y + height\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nexport * from './detect'\n\n/**\n * Get the position of the cursor (from `event`) relative\n * to its container (`el`).\n *\n * In a normal situation mouse enter/leave events\n * capture the position ok. But when the chart is inside a scaled\n * element with a CSS transform like: `transform: scale(2);`\n * tooltip are not positioned ok.\n *\n * Comparing original width `box.width` against the scaled width\n * give us the scaling factor to calculate the proper mouse position.\n */\nexport const getRelativeCursor = (el, event) => {\n    const { clientX, clientY } = 'touches' in event ? event.touches[0] : event\n\n    // Get the dimensions of the element, in case it has\n    // been scaled using a transform for example, we get\n    // the scaled dimensions, not the original ones.\n    const currentBox = el.getBoundingClientRect()\n\n    // Original dimensions, necessary to compute `scaleFactor`.\n    let originalBox\n    if (el.getBBox !== undefined) {\n        // For SVG elements.\n        originalBox = el.getBBox()\n    } else {\n        // Other elements.\n        originalBox = {\n            // These should be here, except when we are running in jsdom.\n            // https://github.com/jsdom/jsdom/issues/135\n            width: el.offsetWidth || 0,\n            height: el.offsetHeight || 0,\n        }\n    }\n\n    const scaleFactor =\n        originalBox.width === currentBox.width ? 1 : originalBox.width / currentBox.width\n    return [(clientX - currentBox.left) * scaleFactor, (clientY - currentBox.top) * scaleFactor]\n}\n","import isFunction from 'lodash/isFunction'\nimport isPlainObject from 'lodash/isPlainObject'\nimport pick from 'lodash/pick'\nimport isEqual from 'lodash/isEqual'\nimport get from 'lodash/get'\nimport set from 'lodash/set'\nimport { gradientTypes, patternTypes } from '../components/defs'\n\nconst gradientKeys = Object.keys(gradientTypes)\nconst patternKeys = Object.keys(patternTypes)\n\n/**\n * Check a node matches given def predicate.\n *\n * @param {string|Function|Object} predicate\n * @param {Object}                 node\n * @param {string}                 [dataKey] - Optional path to access node data\n * @returns {boolean}\n */\nexport const isMatchingDef = (predicate, node, dataKey) => {\n    if (predicate === '*') {\n        return true\n    } else if (isFunction(predicate)) {\n        return predicate(node)\n    } else if (isPlainObject(predicate)) {\n        const data = dataKey ? get(node, dataKey) : node\n        return isEqual(pick(data, Object.keys(predicate)), predicate)\n    }\n\n    return false\n}\n\n/**\n * Compute SVG defs.\n *\n * @param {Array.<Object>} defs               - Base SVG defs configs\n * @param {Array.<Object>} nodes              - Data nodes to apply defs on\n * @param {Array.<Object>} rules              - Rules used to conditionally apply defs on data nodes\n * @param {string}         [dataKey]          - Path to node data, used for rule object query based predicate\n * @param {string}         [colorKey='color'] - Node color path, required when inheritance is involved\n * @param {string}         [targetKey='fill'] - Node target property to apply def ID on\n * @returns {Array}\n */\nexport const bindDefs = (\n    defs,\n    nodes,\n    rules,\n    { dataKey, colorKey = 'color', targetKey = 'fill' } = {}\n) => {\n    let boundDefs = []\n\n    // will hold generated variation ids,\n    // to avoid generating multiple identical defs\n    const generatedIds = {}\n\n    if (defs.length && nodes.length) {\n        // first, add base defs\n        boundDefs = [...defs]\n\n        nodes.forEach(node => {\n            for (let i = 0; i < rules.length; i++) {\n                const { id, match } = rules[i]\n                if (isMatchingDef(match, node, dataKey)) {\n                    const def = defs.find(({ id: defId }) => defId === id)\n                    if (def) {\n                        if (patternKeys.includes(def.type)) {\n                            if (def.background === 'inherit' || def.color === 'inherit') {\n                                const nodeColor = get(node, colorKey)\n                                let background = def.background\n                                let color = def.color\n\n                                let inheritedId = id\n                                if (def.background === 'inherit') {\n                                    inheritedId = `${inheritedId}.bg.${nodeColor}`\n                                    background = nodeColor\n                                }\n                                if (def.color === 'inherit') {\n                                    inheritedId = `${inheritedId}.fg.${nodeColor}`\n                                    color = nodeColor\n                                }\n\n                                set(node, targetKey, `url(#${inheritedId})`)\n                                if (!generatedIds[inheritedId]) {\n                                    boundDefs.push({\n                                        ...def,\n                                        id: inheritedId,\n                                        background,\n                                        color,\n                                    })\n                                    generatedIds[inheritedId] = 1\n                                }\n                            } else {\n                                // do not generate new def as there's no inheritance involved\n                                set(node, targetKey, `url(#${id})`)\n                            }\n                        } else if (gradientKeys.includes(def.type)) {\n                            const allColors = def.colors.map(({ color }) => color)\n\n                            if (allColors.includes('inherit')) {\n                                const nodeColor = get(node, colorKey)\n\n                                let inheritedId = id\n                                const inheritedDef = {\n                                    ...def,\n                                    colors: def.colors.map((colorStop, i) => {\n                                        if (colorStop.color !== 'inherit') return colorStop\n\n                                        inheritedId = `${inheritedId}.${i}.${nodeColor}`\n\n                                        return {\n                                            ...colorStop,\n                                            color:\n                                                colorStop.color === 'inherit'\n                                                    ? nodeColor\n                                                    : colorStop.color,\n                                        }\n                                    }),\n                                }\n                                inheritedDef.id = inheritedId\n\n                                set(node, targetKey, `url(#${inheritedId})`)\n                                if (!generatedIds[inheritedId]) {\n                                    boundDefs.push(inheritedDef)\n                                    generatedIds[inheritedId] = 1\n                                }\n                            } else {\n                                // do not generate new def as there's no inheritance involved\n                                set(node, targetKey, `url(#${id})`)\n                            }\n                        }\n                    }\n\n                    // break loop on first match\n                    break\n                }\n            }\n        })\n    }\n\n    return boundDefs\n}\n"],"names":["defaultTheme","background","text","fontFamily","fontSize","fill","outlineWidth","outlineColor","outlineOpacity","axis","domain","line","stroke","strokeWidth","ticks","legend","grid","legends","hidden","symbol","opacity","title","labels","markers","lineColor","lineStrokeWidth","dots","tooltip","container","color","borderRadius","boxShadow","padding","basic","whiteSpace","display","alignItems","chip","marginRight","table","tableCell","tableCellValue","fontWeight","crosshair","strokeOpacity","strokeDasharray","annotations","link","outline","textPropsWithInheritance","inheritRootThemeText","partialStyle","rootStyle","_extends","extendDefaultTheme","customTheme","theme","merge","forEach","prop","set","get","motionConfigContext","createContext","motionDefaultProps","animate","config","MotionConfigProvider","props","children","_props$animate","_props$config","value","useMemo","reactSpringConfig","isString","presets","_jsx","Provider","motionPropTypes","PropTypes","bool","motionConfig","oneOfType","oneOf","Object","keys","shape","mass","number","tension","friction","clamp","precision","velocity","duration","easing","func","propTypes","node","isRequired","useMotionConfig","useContext","useAnimatedPath","path","_useMotionConfig","springConfig","previousPath","ref","useRef","useEffect","current","usePrevious","interpolator","interpolateString","useSpring","from","to","reset","immediate","quantizeColorScales","nivo","BrBG","last","schemeBrBG","PRGn","schemePRGn","PiYG","schemePiYG","PuOr","schemePuOr","RdBu","schemeRdBu","RdGy","schemeRdGy","RdYlBu","schemeRdYlBu","RdYlGn","schemeRdYlGn","spectral","schemeSpectral","blues","schemeBlues","greens","schemeGreens","greys","schemeGreys","oranges","schemeOranges","purples","schemePurples","reds","schemeReds","BuGn","schemeBuGn","BuPu","schemeBuPu","GnBu","schemeGnBu","OrRd","schemeOrRd","PuBuGn","schemePuBuGn","PuBu","schemePuBu","PuRd","schemePuRd","RdPu","schemeRdPu","YlGnBu","schemeYlGnBu","YlGn","schemeYlGn","YlOrBr","schemeYlOrBr","YlOrRd","schemeYlOrRd","quantizeColorScalesKeys","guessQuantizeColorScale","colors","isFunction","Error","scaleQuantize","range","isArray","join","colorSchemes","category10","schemeCategory10","accent","schemeAccent","dark2","schemeDark2","paired","schemePaired","pastel1","schemePastel1","pastel2","schemePastel2","set1","schemeSet1","set2","schemeSet2","set3","schemeSet3","brown_blueGreen","purpleRed_green","pink_yellowGreen","purple_orange","red_blue","red_grey","red_yellow_blue","red_yellow_green","blue_green","blue_purple","green_blue","orange_red","purple_blue_green","purple_blue","purple_red","red_purple","yellow_green_blue","yellow_green","yellow_orange_brown","yellow_orange_red","colorSchemeIds","colorInterpolators","interpolateBrBG","interpolatePRGn","interpolatePiYG","interpolatePuOr","interpolateRdBu","interpolateRdGy","interpolateRdYlBu","interpolateRdYlGn","interpolateSpectral","interpolateBlues","interpolateGreens","interpolateGreys","interpolateOranges","interpolatePurples","interpolateReds","viridis","interpolateViridis","inferno","interpolateInferno","magma","interpolateMagma","plasma","interpolatePlasma","warm","interpolateWarm","cool","interpolateCool","cubehelixDefault","interpolateCubehelixDefault","interpolateBuGn","interpolateBuPu","interpolateGnBu","interpolateOrRd","interpolatePuBuGn","interpolatePuBu","interpolatePuRd","interpolateRdPu","interpolateYlGnBu","interpolateYlGn","interpolateYlOrBr","interpolateYlOrRd","rainbow","interpolateRainbow","sinebow","interpolateSinebow","colorInterpolatorIds","nivoCategoricalColors","scaleOrdinal","getColorScale","dataScale","scheme","undefined","scale","type","indexOf","slice","scaleSequential","quantizeColorScalePropType","arrayOf","string","curvePropMapping","basis","curveBasis","basisClosed","curveBasisClosed","basisOpen","curveBasisOpen","bundle","curveBundle","cardinal","curveCardinal","cardinalClosed","curveCardinalClosed","cardinalOpen","curveCardinalOpen","catmullRom","curveCatmullRom","catmullRomClosed","curveCatmullRomClosed","catmullRomOpen","curveCatmullRomOpen","linear","curveLinear","linearClosed","curveLinearClosed","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","step","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","curvePropKeys","closedCurvePropKeys","filter","c","endsWith","areaCurvePropKeys","without","lineCurvePropKeys","curveFromProp","id","TypeError","stackOrderPropMapping","ascending","stackOrderAscending","descending","stackOrderDescending","insideOut","stackOrderInsideOut","none","stackOrderNone","reverse","stackOrderReverse","stackOrderPropKeys","stackOrderFromProp","stackOffsetPropMapping","expand","stackOffsetExpand","diverging","stackOffsetDiverging","stackOffsetNone","silhouette","stackOffsetSilhouette","wiggle","stackOffsetWiggle","stackOffsetPropKeys","stackOffsetFromProp","marginPropType","top","right","bottom","left","blendModes","blendModePropType","useCurveInterpolation","interpolation","defaultAnimate","defaultCategoricalColors","defaultColorRange","defaultMargin","useDimensions","width","height","partialMargin","margin","innerWidth","innerHeight","outerWidth","outerHeight","useMeasure","measureRef","_useState","useState","bounds","setBounds","observer","ResizeObserver","_ref","entry","contentRect","observe","disconnect","usePartialTheme","partialTheme","getValueFormatter","format","d3TimeFormat","d3Format","useValueFormatter","themeContext","defaultPartialTheme","ThemeProvider","_ref$theme","object","useTheme","sanitizeSvgTextStyle","style","_objectWithoutPropertiesLoose","_excluded","ConditionalWrapper","condition","wrapper","cloneElement","element","containerStyle","position","Container","_ref$renderWrapper","renderWrapper","_ref$isInteractive","isInteractive","TooltipProvider","_jsxs","Tooltip","noop","LegacyContainer","_useTooltipHandlers","useTooltipHandlers","tooltipActions","actions","tooltipState","state","showTooltip","useCallback","content","event","showTooltipFromEvent","handlers","hideTooltip","TooltipActionsContext","TooltipStateContext","ResponsiveWrapper","_useMeasure","shouldRender","LinearGradient","rest","x1","x2","y1","y2","map","_ref2","offset","stopColor","stopOpacity","gradientTransform","linearGradientDef","options","gradientTypes","linearGradient","PatternDotsDefaultProps","size","stagger","PatternDots","memo","_props$background","_props$color","_props$size","_props$padding","_props$stagger","fullSize","radius","halfPadding","patternUnits","cx","cy","r","displayName","patternDotsDef","TWO_PI","Math","PI","degreesToRadians","degrees","radiansToDegrees","radians","midAngle","arc","startAngle","endAngle","positionFromAngle","angle","distance","x","cos","y","sin","absoluteAngleDegrees","absAngle","absoluteAngleRadians","floor","normalizeAngle","rawAngle","clampArc","length","clampedEndAngle","abs","textPropsByEngine","svg","align","center","start","middle","end","baseline","canvas","getPolarLabelProps","rotation","engine","textProps","_positionFromAngle","rotate","PatternLinesDefaultProps","spacing","lineWidth","PatternLines","_ref$spacing","_spacing","_ref$rotation","_rotation","_ref$background","_ref$color","_ref$lineWidth","round","d","strokeLinecap","patternLinesDef","PatternSquaresDefaultProps","PatternSquares","patternSquaresDef","patternTypes","patternDots","patternLines","patternSquares","defsMapping","Defs","definitions","defs","def","createElement","key","SvgWrapper","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","isFocusable","xmlns","focusable","tabIndex","transform","array","DotsItemSymbol","borderWidth","borderColor","pointerEvents","DotsItem","_ref$symbol","datum","label","_ref$labelTextAnchor","labelTextAnchor","_ref$labelYOffset","labelYOffset","animatedProps","animated","g","textAnchor","CartesianMarkersItem","lineStyle","textStyle","legendNode","_ref2$legendPosition","legendPosition","_ref2$legendOffsetX","legendOffsetX","_ref2$legendOffsetY","legendOffsetY","_ref2$legendOrientati","legendOrientation","legendProps","offsetX","offsetY","orientation","computeLabel","dominantBaseline","instanceOf","Date","CartesianMarkers","xScale","yScale","marker","i","withContainer","WrappedComponent","_Component","_class","apply","this","arguments","prototype","render","_this$props","childProps","Component","getLabelGenerator","_label","labelFormat","formatter","getRawLabel","getPropertyAccessor","accessor","usePropertyAccessor","boxAlignments","alignBox","box","alignment","deltaX","deltaY","getDistance","sqrt","getAngle","atan2","isCursorInRect","cursorX","cursorY","getRelativeCursor","el","originalBox","touches","clientX","clientY","currentBox","getBoundingClientRect","scaleFactor","getBBox","offsetWidth","offsetHeight","gradientKeys","patternKeys","isMatchingDef","predicate","dataKey","isPlainObject","data","isEqual","pick","bindDefs","nodes","rules","_temp","_ref$colorKey","colorKey","_ref$targetKey","targetKey","boundDefs","generatedIds","concat","_loop","_rules$i","match","find","includes","nodeColor","inheritedId","push","_ref3","inheritedDef","colorStop"],"mappings":"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"}