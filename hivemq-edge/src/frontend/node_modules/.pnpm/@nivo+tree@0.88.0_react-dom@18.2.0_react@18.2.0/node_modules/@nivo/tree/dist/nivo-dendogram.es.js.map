{"version":3,"file":"nivo-dendogram.es.js","sources":["../src/hooks.ts","../src/Node.tsx","../src/Link.tsx","../src/defaults.ts","../src/Links.tsx","../src/Nodes.tsx","../src/Mesh.tsx","../src/Tree.tsx","../src/ResponsiveTree.tsx"],"sourcesContent":["import { createElement, MouseEvent, useCallback, useMemo, useState } from 'react'\nimport { hierarchy as d3Hierarchy, cluster as d3Cluster, tree as d3Tree } from 'd3-hierarchy'\nimport { scaleLinear, ScaleLinear } from 'd3-scale'\nimport { link as d3Link, curveBumpX, curveBumpY } from 'd3-shape'\nimport { usePropertyAccessor, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport {\n    DefaultDatum,\n    HierarchyTreeNode,\n    HierarchyTreeLink,\n    TreeDataProps,\n    CommonProps,\n    Layout,\n    ComputedNode,\n    ComputedLink,\n    NodeMouseEventHandler,\n    NodeTooltip,\n    IntermediateComputedLink,\n    LinkThicknessFunction,\n    LinkMouseEventHandler,\n    LinkTooltip,\n    IntermediateComputedNode,\n    CurrentNodeSetter,\n    NodeSizeModifierFunction,\n    LinkThicknessModifierFunction,\n    TreeMode,\n} from './types'\nimport { commonDefaultProps } from './defaults'\n\nexport const useRoot = <Datum>({\n    data,\n    mode,\n    getIdentity,\n}: {\n    data: TreeDataProps<Datum>['data']\n    mode: TreeMode\n    getIdentity: (node: Datum) => string\n}) =>\n    useMemo(() => {\n        const root = d3Hierarchy<Datum>(data) as HierarchyTreeNode<Datum>\n        const cluster = mode === 'tree' ? d3Tree<Datum>() : d3Cluster<Datum>()\n\n        root.eachBefore(node => {\n            const ancestors = node\n                .ancestors()\n                .filter(ancestor => ancestor !== node)\n                .reverse()\n            const ancestorIds = ancestors.map(ancestor => getIdentity(ancestor.data))\n\n            node.ancestorIds = ancestorIds\n            node.uid = [...ancestorIds, getIdentity(node.data)].join('.')\n            node.ancestorUids = ancestors.map(ancestor => ancestor.uid!)\n        })\n\n        root.each(node => {\n            node.descendantUids = node\n                .descendants()\n                .filter(descendant => descendant !== node)\n                .map(descendant => descendant.uid!)\n        })\n\n        cluster(root)\n\n        return root\n    }, [data, mode, getIdentity])\n\n/**\n * By default, the x/y positions are computed for a 0~1 range,\n * so that we can easily change the layout without having to\n * recompute the nodes.\n */\nconst useCartesianScales = ({\n    width,\n    height,\n    layout,\n}: {\n    width: number\n    height: number\n    layout: Layout\n}) =>\n    useMemo(() => {\n        const xScale = scaleLinear().domain([0, 1])\n        const yScale = scaleLinear().domain([0, 1])\n\n        if (layout === 'top-to-bottom') {\n            xScale.range([0, width])\n            yScale.range([0, height])\n        } else if (layout === 'right-to-left') {\n            xScale.range([width, 0])\n            yScale.range([0, height])\n        } else if (layout === 'bottom-to-top') {\n            xScale.range([width, 0])\n            yScale.range([height, 0])\n        } else if (layout === 'left-to-right') {\n            xScale.range([0, width])\n            yScale.range([height, 0])\n        }\n\n        return {\n            xScale,\n            yScale,\n        }\n    }, [width, height, layout])\n\nconst useNodeSize = <Datum>(size: Exclude<CommonProps<Datum>['nodeSize'], undefined>) =>\n    useMemo(() => {\n        if (typeof size === 'function') return size\n        return () => size\n    }, [size])\n\nconst useNodeSizeModifier = <Datum>(size?: NodeSizeModifierFunction<Datum> | number) =>\n    useMemo(() => {\n        if (size === undefined) return (node: ComputedNode<Datum>) => node.size\n        if (typeof size === 'function') return size\n        return () => size\n    }, [size])\n\nconst useNodes = <Datum>({\n    root,\n    xScale,\n    yScale,\n    layout,\n    getIdentity,\n    nodeSize,\n    activeNodeSize,\n    inactiveNodeSize,\n    nodeColor,\n}: {\n    root: HierarchyTreeNode<Datum>\n    xScale: ScaleLinear<number, number>\n    yScale: ScaleLinear<number, number>\n    layout: Layout\n    getIdentity: (node: Datum) => string\n    nodeSize: Exclude<CommonProps<Datum>['nodeSize'], undefined>\n    activeNodeSize?: CommonProps<Datum>['activeNodeSize']\n    inactiveNodeSize?: CommonProps<Datum>['inactiveNodeSize']\n    nodeColor: Exclude<CommonProps<Datum>['nodeColor'], undefined>\n}) => {\n    const intermediateNodes = useMemo<IntermediateComputedNode<Datum>[]>(() => {\n        return root.descendants().map(node => {\n            let x: number\n            let y: number\n            if (layout === 'top-to-bottom' || layout === 'bottom-to-top') {\n                x = xScale(node.x!)\n                y = yScale(node.y!)\n            } else {\n                x = xScale(node.y!)\n                y = yScale(node.x!)\n            }\n\n            const id = getIdentity(node.data)\n\n            return {\n                path: [...node.ancestorIds!, id],\n                uid: node.uid!,\n                ancestorIds: node.ancestorIds!,\n                ancestorUids: node.ancestorUids!,\n                descendantUids: node.descendantUids!,\n                id,\n                data: node.data,\n                depth: node.depth,\n                height: node.height,\n                x,\n                y,\n            }\n        })\n    }, [root, getIdentity, layout, xScale, yScale])\n\n    const getNodeSize = useNodeSize<Datum>(nodeSize)\n    const getActiveNodeSize = useNodeSizeModifier<Datum>(activeNodeSize)\n    const getInactiveNodeSize = useNodeSizeModifier<Datum>(inactiveNodeSize)\n    const getNodeColor = useOrdinalColorScale(nodeColor, 'uid')\n\n    const [activeNodeUids, setActiveNodeUids] = useState<string[]>([])\n\n    const computed = useMemo(() => {\n        const nodeByUid: Record<string, ComputedNode<Datum>> = {}\n\n        const nodes: ComputedNode<Datum>[] = intermediateNodes.map(intermediateNode => {\n            const computedNode: ComputedNode<Datum> = {\n                ...intermediateNode,\n                size: getNodeSize(intermediateNode),\n                color: getNodeColor(intermediateNode),\n                isActive: null,\n            }\n\n            if (activeNodeUids.length > 0) {\n                computedNode.isActive = activeNodeUids.includes(computedNode.uid)\n                if (computedNode.isActive) {\n                    computedNode.size = getActiveNodeSize(computedNode)\n                } else {\n                    computedNode.size = getInactiveNodeSize(computedNode)\n                }\n            }\n\n            nodeByUid[computedNode.uid] = computedNode\n\n            return computedNode\n        })\n\n        return { nodes, nodeByUid }\n    }, [\n        intermediateNodes,\n        getNodeSize,\n        getActiveNodeSize,\n        getInactiveNodeSize,\n        getNodeColor,\n        activeNodeUids,\n    ])\n\n    return { ...computed, setActiveNodeUids }\n}\n\nconst useLinkThicknessModifier = <Datum>(\n    thickness?: LinkThicknessModifierFunction<Datum> | number\n) =>\n    useMemo(() => {\n        if (thickness === undefined) return (link: ComputedLink<Datum>) => link.thickness\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n\nconst useLinks = <Datum>({\n    root,\n    nodeByUid,\n    linkThickness,\n    activeLinkThickness,\n    inactiveLinkThickness,\n    linkColor,\n}: {\n    root: HierarchyTreeNode<Datum>\n    nodeByUid: Record<string, ComputedNode<Datum>>\n    linkThickness: Exclude<CommonProps<Datum>['linkThickness'], undefined>\n    activeLinkThickness?: CommonProps<Datum>['activeLinkThickness']\n    inactiveLinkThickness?: CommonProps<Datum>['inactiveLinkThickness']\n    linkColor: Exclude<CommonProps<Datum>['linkColor'], undefined>\n}) => {\n    const intermediateLinks = useMemo<IntermediateComputedLink<Datum>[]>(() => {\n        return (root.links() as HierarchyTreeLink<Datum>[]).map(link => {\n            return {\n                id: `${link.source.uid}:${link.target.uid}`,\n                // Replace with computed nodes.\n                source: nodeByUid[link.source.uid!],\n                target: nodeByUid[link.target.uid!],\n            }\n        })\n    }, [root, nodeByUid])\n\n    const getLinkThickness: LinkThicknessFunction<Datum> = useMemo(() => {\n        if (typeof linkThickness === 'function') return linkThickness\n        return () => linkThickness\n    }, [linkThickness])\n    const getActiveLinkThickness = useLinkThicknessModifier(activeLinkThickness)\n    const getInactiveLinkThickness = useLinkThicknessModifier(inactiveLinkThickness)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [activeLinkIds, setActiveLinkIds] = useState<string[]>([])\n\n    const links = useMemo(() => {\n        return intermediateLinks.map(intermediateLink => {\n            const computedLink: ComputedLink<Datum> = {\n                ...intermediateLink,\n                thickness: getLinkThickness(intermediateLink),\n                color: getLinkColor(intermediateLink),\n                isActive: null,\n            }\n\n            if (activeLinkIds.length > 0) {\n                computedLink.isActive = activeLinkIds.includes(computedLink.id)\n                if (computedLink.isActive) {\n                    computedLink.thickness = getActiveLinkThickness(computedLink)\n                } else {\n                    computedLink.thickness = getInactiveLinkThickness(computedLink)\n                }\n            }\n\n            return computedLink\n        })\n    }, [\n        intermediateLinks,\n        getLinkThickness,\n        getActiveLinkThickness,\n        getInactiveLinkThickness,\n        getLinkColor,\n        activeLinkIds,\n    ])\n\n    return {\n        links,\n        setActiveLinkIds,\n    }\n}\n\nconst useLinkGenerator = ({ layout }: { layout: Layout }) =>\n    useMemo(() => {\n        if (layout === 'top-to-bottom' || layout === 'bottom-to-top') {\n            return d3Link(curveBumpY)\n        } else {\n            return d3Link(curveBumpX)\n        }\n    }, [layout])\n\nconst useSetCurrentNode = <Datum>({\n    setActiveNodeUids,\n    highlightAncestorNodes,\n    highlightDescendantNodes,\n    links,\n    setActiveLinkIds,\n    highlightAncestorLinks,\n    highlightDescendantLinks,\n}: {\n    setActiveNodeUids: (uids: string[]) => void\n    highlightAncestorNodes: boolean\n    highlightDescendantNodes: boolean\n    links: ComputedLink<Datum>[]\n    setActiveLinkIds: (ids: string[]) => void\n    highlightAncestorLinks: boolean\n    highlightDescendantLinks: boolean\n}) =>\n    useCallback(\n        (node: ComputedNode<Datum> | null) => {\n            if (node === null) {\n                setActiveNodeUids([])\n                setActiveLinkIds([])\n            } else {\n                let nodeUids: string[] = [node.uid]\n                if (highlightAncestorNodes) {\n                    nodeUids = [...nodeUids, ...node.ancestorUids]\n                }\n                if (highlightDescendantNodes) {\n                    nodeUids = [...nodeUids, ...node.descendantUids]\n                }\n                setActiveNodeUids(nodeUids)\n\n                const linkIds: string[] = []\n                if (highlightAncestorLinks) {\n                    links\n                        .filter(link => {\n                            return (\n                                link.target.uid === node.uid ||\n                                node.ancestorUids.includes(link.target.uid)\n                            )\n                        })\n                        .forEach(link => {\n                            linkIds.push(link.id)\n                        })\n                }\n                if (highlightDescendantLinks) {\n                    links\n                        .filter(link => {\n                            return (\n                                link.source.uid === node.uid ||\n                                node.descendantUids.includes(link.source.uid)\n                            )\n                        })\n                        .forEach(link => {\n                            linkIds.push(link.id)\n                        })\n                }\n                setActiveLinkIds(linkIds)\n            }\n        },\n        [\n            setActiveNodeUids,\n            highlightAncestorNodes,\n            highlightDescendantNodes,\n            links,\n            setActiveLinkIds,\n            highlightAncestorLinks,\n            highlightDescendantLinks,\n        ]\n    )\n\nexport const useTree = <Datum = DefaultDatum>({\n    data,\n    width,\n    height,\n    identity = commonDefaultProps.identity,\n    mode = commonDefaultProps.mode,\n    layout = commonDefaultProps.layout,\n    nodeSize = commonDefaultProps.nodeSize,\n    activeNodeSize,\n    inactiveNodeSize,\n    nodeColor = commonDefaultProps.nodeColor,\n    highlightAncestorNodes = commonDefaultProps.highlightAncestorNodes,\n    highlightDescendantNodes = commonDefaultProps.highlightDescendantNodes,\n    linkThickness = commonDefaultProps.linkThickness,\n    linkColor = commonDefaultProps.linkColor,\n    activeLinkThickness,\n    inactiveLinkThickness,\n    highlightAncestorLinks = commonDefaultProps.highlightAncestorLinks,\n    highlightDescendantLinks = commonDefaultProps.highlightDescendantLinks,\n}: {\n    data: TreeDataProps<Datum>['data']\n    width: number\n    height: number\n    identity?: CommonProps<Datum>['identity']\n    mode?: TreeMode\n    layout?: Layout\n    nodeSize?: CommonProps<Datum>['nodeSize']\n    activeNodeSize?: CommonProps<Datum>['activeNodeSize']\n    inactiveNodeSize?: CommonProps<Datum>['inactiveNodeSize']\n    nodeColor?: CommonProps<Datum>['nodeColor']\n    highlightAncestorNodes?: boolean\n    highlightDescendantNodes?: boolean\n    linkThickness?: CommonProps<Datum>['linkThickness']\n    activeLinkThickness?: CommonProps<Datum>['activeLinkThickness']\n    inactiveLinkThickness?: CommonProps<Datum>['inactiveLinkThickness']\n    linkColor?: CommonProps<Datum>['linkColor']\n    highlightAncestorLinks?: boolean\n    highlightDescendantLinks?: boolean\n}) => {\n    const getIdentity = usePropertyAccessor(identity)\n    const root = useRoot<Datum>({ data, mode, getIdentity })\n\n    const { xScale, yScale } = useCartesianScales({ width, height, layout })\n    const { nodes, nodeByUid, setActiveNodeUids } = useNodes<Datum>({\n        root,\n        xScale,\n        yScale,\n        layout,\n        getIdentity,\n        nodeSize,\n        activeNodeSize,\n        inactiveNodeSize,\n        nodeColor,\n    })\n\n    const linkGenerator = useLinkGenerator({ layout })\n    const { links, setActiveLinkIds } = useLinks<Datum>({\n        root,\n        nodeByUid,\n        linkThickness,\n        activeLinkThickness,\n        inactiveLinkThickness,\n        linkColor,\n    })\n\n    const setCurrentNode = useSetCurrentNode<Datum>({\n        setActiveNodeUids,\n        highlightAncestorNodes,\n        highlightDescendantNodes,\n        links,\n        setActiveLinkIds,\n        highlightAncestorLinks,\n        highlightDescendantLinks,\n    })\n\n    return {\n        nodes,\n        links,\n        linkGenerator,\n        setCurrentNode,\n    }\n}\n\n/**\n * This hook may generates mouse event handlers for a node according to the main chart props.\n * It's used for the default `Node` component and may be used for custom nodes\n * to simplify their implementation.\n */\nexport const useNodeMouseEventHandlers = <Datum>(\n    node: ComputedNode<Datum>,\n    {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrentNode,\n        tooltip,\n    }: {\n        isInteractive: boolean\n        onMouseEnter?: NodeMouseEventHandler<Datum>\n        onMouseMove?: NodeMouseEventHandler<Datum>\n        onMouseLeave?: NodeMouseEventHandler<Datum>\n        onClick?: NodeMouseEventHandler<Datum>\n        setCurrentNode: CurrentNodeSetter<Datum>\n        tooltip?: NodeTooltip<Datum>\n    }\n) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (event: MouseEvent) => {\n            tooltip !== undefined &&\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        node,\n                    }),\n                    event\n                )\n        },\n        [node, tooltip, showTooltipFromEvent]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent) => {\n            setCurrentNode(node)\n            showTooltip(event)\n            onMouseEnter?.(node, event)\n        },\n        [node, showTooltip, setCurrentNode, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent) => {\n            showTooltip(event)\n            onMouseMove?.(node, event)\n        },\n        [node, showTooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent) => {\n            setCurrentNode(null)\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        },\n        [node, hideTooltip, setCurrentNode, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent) => {\n            onClick?.(node, event)\n        },\n        [node, onClick]\n    )\n\n    return {\n        onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n        onMouseMove: isInteractive ? handleMouseMove : undefined,\n        onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n        onClick: isInteractive ? handleClick : undefined,\n    }\n}\n\n/**\n * This hook may generates mouse event handlers for a node according to the main chart props.\n * It's used for the default `Node` component and may be used for custom nodes\n * to simplify their implementation.\n */\nexport const useLinkMouseEventHandlers = <Datum>(\n    link: ComputedLink<Datum>,\n    {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: {\n        isInteractive: boolean\n        onMouseEnter?: LinkMouseEventHandler<Datum>\n        onMouseMove?: LinkMouseEventHandler<Datum>\n        onMouseLeave?: LinkMouseEventHandler<Datum>\n        onClick?: LinkMouseEventHandler<Datum>\n        tooltip?: LinkTooltip<Datum>\n    }\n) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (event: MouseEvent) => {\n            tooltip !== undefined &&\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        link,\n                    }),\n                    event\n                )\n        },\n        [link, tooltip, showTooltipFromEvent]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent) => {\n            showTooltip(event)\n            onMouseEnter?.(link, event)\n        },\n        [link, showTooltip, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent) => {\n            showTooltip(event)\n            onMouseMove?.(link, event)\n        },\n        [link, showTooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(link, event)\n        },\n        [link, hideTooltip, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent) => {\n            onClick?.(link, event)\n        },\n        [link, onClick]\n    )\n\n    return {\n        onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n        onMouseMove: isInteractive ? handleMouseMove : undefined,\n        onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n        onClick: isInteractive ? handleClick : undefined,\n    }\n}\n","import { animated } from '@react-spring/web'\nimport { NodeComponentProps } from './types'\nimport { useNodeMouseEventHandlers } from './hooks'\n\nexport const Node = <Datum,>({\n    node,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentNode,\n    tooltip,\n    animatedProps,\n}: NodeComponentProps<Datum>) => {\n    const eventHandlers = useNodeMouseEventHandlers<Datum>(node, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrentNode,\n        tooltip,\n    })\n\n    return (\n        <animated.circle\n            r={animatedProps.size.to(size => size / 2)}\n            fill={animatedProps.color}\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            {...eventHandlers}\n        />\n    )\n}\n","import { animated, to } from '@react-spring/web'\nimport { LinkComponentProps } from './types'\nimport { useLinkMouseEventHandlers } from './hooks'\n\nexport const Link = <Datum,>({\n    link,\n    linkGenerator,\n    animatedProps,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: LinkComponentProps<Datum>) => {\n    const eventHandlers = useLinkMouseEventHandlers<Datum>(link, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    return (\n        <animated.path\n            d={to(\n                [\n                    animatedProps.sourceX,\n                    animatedProps.sourceY,\n                    animatedProps.targetX,\n                    animatedProps.targetY,\n                ],\n                (sourceX, sourceY, targetX, targetY) => {\n                    return linkGenerator({\n                        source: [sourceX, sourceY],\n                        target: [targetX, targetY],\n                    })\n                }\n            )}\n            fill=\"none\"\n            strokeWidth={animatedProps.thickness}\n            stroke={animatedProps.color}\n            {...eventHandlers}\n        />\n    )\n}\n","import { CommonProps, TreeSvgProps } from './types'\nimport { Node } from './Node'\nimport { Link } from './Link'\n\nexport const commonDefaultProps: Pick<\n    CommonProps<any>,\n    | 'identity'\n    | 'mode'\n    | 'layout'\n    | 'nodeSize'\n    | 'nodeColor'\n    | 'linkThickness'\n    | 'linkColor'\n    | 'isInteractive'\n    | 'useMesh'\n    | 'meshDetectionThreshold'\n    | 'debugMesh'\n    | 'highlightAncestorNodes'\n    | 'highlightDescendantNodes'\n    | 'highlightAncestorLinks'\n    | 'highlightDescendantLinks'\n    | 'role'\n    | 'animate'\n    | 'motionConfig'\n> = {\n    identity: 'id',\n    mode: 'dendogram',\n    layout: 'top-to-bottom',\n    nodeSize: 16,\n    nodeColor: { scheme: 'nivo' },\n    linkThickness: 1,\n    linkColor: { from: 'source.color', modifiers: [['opacity', 0.3]] },\n    isInteractive: true,\n    useMesh: true,\n    meshDetectionThreshold: Infinity,\n    debugMesh: false,\n    highlightAncestorNodes: true,\n    highlightDescendantNodes: false,\n    highlightAncestorLinks: true,\n    highlightDescendantLinks: false,\n    role: 'img',\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps: typeof commonDefaultProps &\n    Required<Pick<TreeSvgProps<any>, 'layers' | 'nodeComponent' | 'linkComponent'>> = {\n    ...commonDefaultProps,\n    layers: ['links', 'nodes', 'mesh'],\n    nodeComponent: Node,\n    linkComponent: Link,\n}\n","import { createElement } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    ComputedLink,\n    LinkComponent,\n    LinkMouseEventHandler,\n    LinkTooltip,\n    LinkAnimatedProps,\n    LinkGenerator,\n} from './types'\n\ninterface LinksProps<Datum> {\n    links: ComputedLink<Datum>[]\n    linkComponent: LinkComponent<Datum>\n    linkGenerator: LinkGenerator\n    isInteractive: boolean\n    onMouseEnter?: LinkMouseEventHandler<Datum>\n    onMouseMove?: LinkMouseEventHandler<Datum>\n    onMouseLeave?: LinkMouseEventHandler<Datum>\n    onClick?: LinkMouseEventHandler<Datum>\n    tooltip?: LinkTooltip<Datum>\n}\n\nconst regularTransition = <Datum,>(link: ComputedLink<Datum>): LinkAnimatedProps => ({\n    sourceX: link.source.x,\n    sourceY: link.source.y,\n    targetX: link.target.x,\n    targetY: link.target.y,\n    thickness: link.thickness,\n    color: link.color,\n})\nconst leaveTransition = <Datum,>(link: ComputedLink<Datum>): LinkAnimatedProps => ({\n    sourceX: link.source.x,\n    sourceY: link.source.y,\n    targetX: link.target.x,\n    targetY: link.target.y,\n    thickness: link.thickness,\n    color: link.color,\n})\n\nexport const Links = <Datum,>({\n    links,\n    linkComponent,\n    linkGenerator,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: LinksProps<Datum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<ComputedLink<Datum>, LinkAnimatedProps>(links, {\n        keys: link => link.id,\n        from: regularTransition,\n        enter: regularTransition,\n        update: regularTransition,\n        leave: leaveTransition,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((animatedProps, link) =>\n                createElement(linkComponent, {\n                    link,\n                    linkGenerator,\n                    animatedProps,\n                    isInteractive,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                    onClick,\n                    tooltip,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    ComputedNode,\n    CurrentNodeSetter,\n    NodeComponent,\n    NodeMouseEventHandler,\n    NodeTooltip,\n    NodeAnimatedProps,\n} from './types'\n\ninterface NodesProps<Datum> {\n    nodes: ComputedNode<Datum>[]\n    nodeComponent: NodeComponent<Datum>\n    isInteractive: boolean\n    onMouseEnter?: NodeMouseEventHandler<Datum>\n    onMouseMove?: NodeMouseEventHandler<Datum>\n    onMouseLeave?: NodeMouseEventHandler<Datum>\n    onClick?: NodeMouseEventHandler<Datum>\n    setCurrentNode: CurrentNodeSetter<Datum>\n    tooltip?: NodeTooltip<Datum>\n}\n\nconst regularTransition = <Datum,>(node: ComputedNode<Datum>): NodeAnimatedProps => ({\n    x: node.x,\n    y: node.y,\n    size: node.size,\n    color: node.color,\n})\nconst leaveTransition = <Datum,>(node: ComputedNode<Datum>): NodeAnimatedProps => ({\n    x: node.x,\n    y: node.y,\n    size: 0,\n    color: node.color,\n})\n\nexport const Nodes = <Datum,>({\n    nodes,\n    nodeComponent,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentNode,\n    tooltip,\n}: NodesProps<Datum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<ComputedNode<Datum>, NodeAnimatedProps>(nodes, {\n        keys: node => node.uid,\n        from: regularTransition,\n        enter: regularTransition,\n        update: regularTransition,\n        leave: leaveTransition,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((animatedProps, node) =>\n                createElement(nodeComponent, {\n                    node,\n                    isInteractive,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                    onClick,\n                    setCurrentNode,\n                    tooltip,\n                    animatedProps,\n                })\n            )}\n        </>\n    )\n}\n","import { MouseEvent } from 'react'\nimport { createElement, memo, useCallback } from 'react'\nimport { Margin } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\nimport { ComputedNode, CurrentNodeSetter, NodeMouseEventHandler, NodeTooltip } from './types'\n\ninterface MeshProps<Datum> {\n    nodes: ComputedNode<Datum>[]\n    width: number\n    height: number\n    margin: Margin\n    onMouseEnter?: NodeMouseEventHandler<Datum>\n    onMouseMove?: NodeMouseEventHandler<Datum>\n    onMouseLeave?: NodeMouseEventHandler<Datum>\n    onClick?: NodeMouseEventHandler<Datum>\n    setCurrentNode: CurrentNodeSetter<Datum>\n    tooltip?: NodeTooltip<Datum>\n    detectionThreshold: number\n    debug: boolean\n}\n\nconst NonMemoizedMesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    margin,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentNode,\n    tooltip,\n    detectionThreshold,\n    debug,\n}: MeshProps<Datum>) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            setCurrentNode(node)\n            if (tooltip !== undefined) {\n                showTooltipAt(\n                    createElement(tooltip, { node }),\n                    [node.x + margin.left, node.y ?? 0 + margin.top],\n                    'top'\n                )\n            }\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [showTooltipAt, tooltip, margin.left, margin.top, setCurrentNode, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            setCurrentNode(node)\n            if (tooltip !== undefined) {\n                showTooltipAt(\n                    createElement(tooltip, { node }),\n                    [node.x + margin.left, node.y ?? 0 + margin.top],\n                    'top'\n                )\n            }\n            onMouseMove && onMouseMove(node, event)\n        },\n        [showTooltipAt, tooltip, margin.left, margin.top, setCurrentNode, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            setCurrentNode(null)\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [hideTooltip, setCurrentNode, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={nodes}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            detectionThreshold={detectionThreshold}\n            debug={debug}\n        />\n    )\n}\n\nexport const Mesh = memo(NonMemoizedMesh) as typeof NonMemoizedMesh\n","import { createElement, Fragment, ReactNode, useMemo } from 'react'\nimport { Container, useDimensions, SvgWrapper } from '@nivo/core'\nimport { DefaultDatum, LayerId, TreeSvgProps, CustomLayerProps } from './types'\nimport { svgDefaultProps } from './defaults'\nimport { useTree } from './hooks'\nimport { Links } from './Links'\nimport { Nodes } from './Nodes'\nimport { Mesh } from './Mesh'\n\ntype InnerTreeProps<Datum> = Omit<\n    TreeSvgProps<Datum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerTree = <Datum,>({\n    width,\n    height,\n    margin: partialMargin,\n    data,\n    identity,\n    mode = svgDefaultProps.mode,\n    layout = svgDefaultProps.layout,\n    nodeSize = svgDefaultProps.nodeSize,\n    activeNodeSize,\n    inactiveNodeSize,\n    nodeColor = svgDefaultProps.nodeColor,\n    nodeComponent = svgDefaultProps.nodeComponent,\n    linkThickness = svgDefaultProps.linkThickness,\n    activeLinkThickness,\n    inactiveLinkThickness,\n    linkColor = svgDefaultProps.linkColor,\n    linkComponent = svgDefaultProps.linkComponent,\n    layers = svgDefaultProps.layers,\n    isInteractive = svgDefaultProps.isInteractive,\n    useMesh = svgDefaultProps.useMesh,\n    meshDetectionThreshold = svgDefaultProps.meshDetectionThreshold,\n    debugMesh = svgDefaultProps.debugMesh,\n    highlightAncestorNodes = svgDefaultProps.highlightAncestorNodes,\n    highlightDescendantNodes = svgDefaultProps.highlightDescendantNodes,\n    highlightAncestorLinks = svgDefaultProps.highlightAncestorLinks,\n    highlightDescendantLinks = svgDefaultProps.highlightDescendantLinks,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeClick,\n    nodeTooltip,\n    onLinkMouseEnter,\n    onLinkMouseMove,\n    onLinkMouseLeave,\n    onLinkClick,\n    linkTooltip,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerTreeProps<Datum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes, links, linkGenerator, setCurrentNode } = useTree<Datum>({\n        data,\n        identity,\n        layout,\n        mode,\n        width: innerWidth,\n        height: innerHeight,\n        nodeSize,\n        activeNodeSize,\n        inactiveNodeSize,\n        nodeColor,\n        highlightAncestorNodes,\n        highlightDescendantNodes,\n        linkThickness,\n        activeLinkThickness,\n        inactiveLinkThickness,\n        linkColor,\n        highlightAncestorLinks,\n        highlightDescendantLinks,\n    })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        links: null,\n        nodes: null,\n        labels: null,\n        mesh: null,\n    }\n\n    if (layers.includes('links')) {\n        layerById.links = (\n            <Links<Datum>\n                key=\"links\"\n                links={links}\n                linkComponent={linkComponent}\n                linkGenerator={linkGenerator}\n                isInteractive={isInteractive}\n                onMouseEnter={onLinkMouseEnter}\n                onMouseMove={onLinkMouseMove}\n                onMouseLeave={onLinkMouseLeave}\n                onClick={onLinkClick}\n                tooltip={linkTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <Nodes<Datum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                isInteractive={isInteractive}\n                onMouseEnter={onNodeMouseEnter}\n                onMouseMove={onNodeMouseMove}\n                onMouseLeave={onNodeMouseLeave}\n                onClick={onNodeClick}\n                setCurrentNode={setCurrentNode}\n                tooltip={nodeTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('mesh') && isInteractive && useMesh) {\n        layerById.mesh = (\n            <Mesh<Datum>\n                key=\"mesh\"\n                nodes={nodes}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                detectionThreshold={meshDetectionThreshold}\n                debug={debugMesh}\n                onMouseEnter={onNodeMouseEnter}\n                onMouseMove={onNodeMouseMove}\n                onMouseLeave={onNodeMouseLeave}\n                onClick={onNodeClick}\n                setCurrentNode={setCurrentNode}\n            />\n        )\n    }\n\n    const customLayerProps: CustomLayerProps<Datum> = useMemo(\n        () => ({\n            nodes,\n            links,\n            innerWidth,\n            innerHeight,\n        }),\n        [nodes, links, innerWidth, innerHeight]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Tree = <Datum = DefaultDatum,>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: TreeSvgProps<Datum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerTree<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { ResponsiveTreeSvgProps, DefaultDatum } from './types'\nimport { Tree } from './Tree'\n\nexport const ResponsiveTree = <Datum = DefaultDatum,>(props: ResponsiveTreeSvgProps<Datum>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Tree<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["useRoot","_ref","data","mode","getIdentity","useMemo","root","d3Hierarchy","cluster","d3Tree","d3Cluster","eachBefore","node","ancestors","filter","ancestor","reverse","ancestorIds","map","uid","concat","join","ancestorUids","each","descendantUids","descendants","descendant","useCartesianScales","_ref2","width","height","layout","xScale","scaleLinear","domain","yScale","range","useNodeSize","size","useNodeSizeModifier","undefined","useNodes","_ref3","nodeSize","activeNodeSize","inactiveNodeSize","nodeColor","intermediateNodes","x","y","id","path","depth","getNodeSize","getActiveNodeSize","getInactiveNodeSize","getNodeColor","useOrdinalColorScale","_useState","useState","activeNodeUids","setActiveNodeUids","computed","nodeByUid","nodes","intermediateNode","computedNode","_extends","color","isActive","length","includes","useLinkThicknessModifier","thickness","link","useLinks","_ref4","linkThickness","activeLinkThickness","inactiveLinkThickness","linkColor","intermediateLinks","links","source","target","getLinkThickness","getActiveLinkThickness","getInactiveLinkThickness","theme","useTheme","getLinkColor","useInheritedColor","_useState2","activeLinkIds","setActiveLinkIds","intermediateLink","computedLink","useLinkGenerator","_ref5","d3Link","curveBumpY","curveBumpX","useSetCurrentNode","_ref6","highlightAncestorNodes","highlightDescendantNodes","highlightAncestorLinks","highlightDescendantLinks","useCallback","nodeUids","linkIds","forEach","push","useTree","_ref7","_ref7$identity","identity","commonDefaultProps","_ref7$mode","_ref7$layout","_ref7$nodeSize","_ref7$nodeColor","_ref7$highlightAncest","_ref7$highlightDescen","_ref7$linkThickness","_ref7$linkColor","_ref7$highlightAncest2","_ref7$highlightDescen2","usePropertyAccessor","_useCartesianScales","_useNodes","linkGenerator","_useLinks","setCurrentNode","useNodeMouseEventHandlers","_ref8","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","_useTooltip","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","event","createElement","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","useLinkMouseEventHandlers","_ref9","_useTooltip2","Node","animatedProps","eventHandlers","_jsxDEV","animated","circle","r","to","fill","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","_this","Link","d","sourceX","sourceY","targetX","targetY","strokeWidth","stroke","scheme","from","modifiers","useMesh","meshDetectionThreshold","Infinity","debugMesh","role","animate","motionConfig","svgDefaultProps","layers","nodeComponent","linkComponent","regularTransition","leaveTransition","Links","_useMotionConfig","useMotionConfig","springConfig","config","transition","useTransition","keys","enter","update","leave","immediate","_Fragment","children","Nodes","NonMemoizedMesh","margin","detectionThreshold","debug","showTooltipAt","_node$y","left","top","_node$y2","BaseMesh","Mesh","memo","InnerTree","partialMargin","_ref$mode","_ref$layout","_ref$nodeSize","_ref$nodeColor","_ref$nodeComponent","_ref$linkThickness","_ref$linkColor","_ref$linkComponent","_ref$layers","_ref$isInteractive","_ref$useMesh","_ref$meshDetectionThr","_ref$debugMesh","_ref$highlightAncesto","_ref$highlightDescend","_ref$highlightAncesto2","_ref$highlightDescend2","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeClick","nodeTooltip","onLinkMouseEnter","onLinkMouseMove","onLinkMouseLeave","onLinkClick","linkTooltip","_ref$role","ariaLabel","ariaLabelledBy","ariaDescribedBy","_useDimensions","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","_useTree","layerById","labels","mesh","customLayerProps","SvgWrapper","layer","i","_layerById$layer","Fragment","Tree","_ref2$isInteractive","_ref2$animate","_ref2$motionConfig","renderWrapper","otherProps","_objectWithoutPropertiesLoose","_excluded","Container","ResponsiveTree","props","ResponsiveWrapper"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8BaA,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAAA;AAAA,EAAA,IAChBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IACJC,WAAW,GAAAH,IAAA,CAAXG,WAAW,CAAA;EAAA,OAMXC,OAAO,CAAC,YAAM;AACV,IAAA,IAAMC,IAAI,GAAGC,SAAW,CAAQL,IAAI,CAA6B,CAAA;AACjE,IAAA,IAAMM,SAAO,GAAGL,IAAI,KAAK,MAAM,GAAGM,IAAM,EAAS,GAAGC,OAAS,EAAS,CAAA;AAEtEJ,IAAAA,IAAI,CAACK,UAAU,CAAC,UAAAC,IAAI,EAAI;MACpB,IAAMC,SAAS,GAAGD,IAAI,CACjBC,SAAS,EAAE,CACXC,MAAM,CAAC,UAAAC,QAAQ,EAAA;QAAA,OAAIA,QAAQ,KAAKH,IAAI,CAAA;OAAC,CAAA,CACrCI,OAAO,EAAE,CAAA;AACd,MAAA,IAAMC,WAAW,GAAGJ,SAAS,CAACK,GAAG,CAAC,UAAAH,QAAQ,EAAA;AAAA,QAAA,OAAIX,WAAW,CAACW,QAAQ,CAACb,IAAI,CAAC,CAAA;OAAC,CAAA,CAAA;MAEzEU,IAAI,CAACK,WAAW,GAAGA,WAAW,CAAA;AAC9BL,MAAAA,IAAI,CAACO,GAAG,GAAG,GAAAC,MAAA,CAAIH,WAAW,EAAEb,CAAAA,WAAW,CAACQ,IAAI,CAACV,IAAI,CAAC,GAAEmB,IAAI,CAAC,GAAG,CAAC,CAAA;MAC7DT,IAAI,CAACU,YAAY,GAAGT,SAAS,CAACK,GAAG,CAAC,UAAAH,QAAQ,EAAA;QAAA,OAAIA,QAAQ,CAACI,GAAG,CAAA;AAAA,OAAC,CAAC,CAAA;AAChE,KAAC,CAAC,CAAA;AAEFb,IAAAA,IAAI,CAACiB,IAAI,CAAC,UAAAX,IAAI,EAAI;AACdA,MAAAA,IAAI,CAACY,cAAc,GAAGZ,IAAI,CACrBa,WAAW,EAAE,CACbX,MAAM,CAAC,UAAAY,UAAU,EAAA;QAAA,OAAIA,UAAU,KAAKd,IAAI,CAAA;AAAA,OAAA,CAAC,CACzCM,GAAG,CAAC,UAAAQ,UAAU,EAAA;QAAA,OAAIA,UAAU,CAACP,GAAG,CAAA;AAAA,OAAC,CAAC,CAAA;AAC3C,KAAC,CAAC,CAAA;IAEFX,SAAO,CAACF,IAAI,CAAC,CAAA;AAEb,IAAA,OAAOA,IAAI,CAAA;GACd,EAAE,CAACJ,IAAI,EAAEC,IAAI,EAAEC,WAAW,CAAC,CAAC,CAAA;AAAA,EAAA;AAOjC,IAAMuB,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAAC,KAAA,EAAA;AAAA,EAAA,IACpBC,KAAK,GAAAD,KAAA,CAALC,KAAK;IACLC,MAAM,GAAAF,KAAA,CAANE,MAAM;IACNC,MAAM,GAAAH,KAAA,CAANG,MAAM,CAAA;EAAA,OAMN1B,OAAO,CAAC,YAAM;AACV,IAAA,IAAM2B,MAAM,GAAGC,WAAW,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAC3C,IAAA,IAAMC,MAAM,GAAGF,WAAW,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAE3C,IAAIH,MAAM,KAAK,eAAe,EAAE;MAC5BC,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,EAAEP,KAAK,CAAC,CAAC,CAAA;MACxBM,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAEN,MAAM,CAAC,CAAC,CAAA;AAC7B,KAAC,MAAM,IAAIC,MAAM,KAAK,eAAe,EAAE;MACnCC,MAAM,CAACI,KAAK,CAAC,CAACP,KAAK,EAAE,CAAC,CAAC,CAAC,CAAA;MACxBM,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAEN,MAAM,CAAC,CAAC,CAAA;AAC7B,KAAC,MAAM,IAAIC,MAAM,KAAK,eAAe,EAAE;MACnCC,MAAM,CAACI,KAAK,CAAC,CAACP,KAAK,EAAE,CAAC,CAAC,CAAC,CAAA;MACxBM,MAAM,CAACC,KAAK,CAAC,CAACN,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;AAC7B,KAAC,MAAM,IAAIC,MAAM,KAAK,eAAe,EAAE;MACnCC,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,EAAEP,KAAK,CAAC,CAAC,CAAA;MACxBM,MAAM,CAACC,KAAK,CAAC,CAACN,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;AAC7B,KAAA;IAEA,OAAO;AACHE,MAAAA,MAAM,EAANA,MAAM;AACNG,MAAAA,MAAM,EAANA,MAAAA;KACH,CAAA;GACJ,EAAE,CAACN,KAAK,EAAEC,MAAM,EAAEC,MAAM,CAAC,CAAC,CAAA;AAAA,CAAA,CAAA;AAE/B,IAAMM,WAAW,GAAG,SAAdA,WAAWA,CAAWC,IAAwD,EAAA;EAAA,OAChFjC,OAAO,CAAC,YAAM;AACV,IAAA,IAAI,OAAOiC,IAAI,KAAK,UAAU,EAAE,OAAOA,IAAI,CAAA;IAC3C,OAAO,YAAA;AAAA,MAAA,OAAMA,IAAI,CAAA;AAAA,KAAA,CAAA;AACrB,GAAC,EAAE,CAACA,IAAI,CAAC,CAAC,CAAA;AAAA,CAAA,CAAA;AAEd,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAWD,IAA+C,EAAA;EAAA,OAC/EjC,OAAO,CAAC,YAAM;AACV,IAAA,IAAIiC,IAAI,KAAKE,SAAS,EAAE,OAAO,UAAC5B,IAAyB,EAAA;MAAA,OAAKA,IAAI,CAAC0B,IAAI,CAAA;AAAA,KAAA,CAAA;AACvE,IAAA,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE,OAAOA,IAAI,CAAA;IAC3C,OAAO,YAAA;AAAA,MAAA,OAAMA,IAAI,CAAA;AAAA,KAAA,CAAA;AACrB,GAAC,EAAE,CAACA,IAAI,CAAC,CAAC,CAAA;AAAA,CAAA,CAAA;AAEd,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,KAAA,EAoBR;AAAA,EAAA,IAnBFpC,IAAI,GAAAoC,KAAA,CAAJpC,IAAI;IACJ0B,MAAM,GAAAU,KAAA,CAANV,MAAM;IACNG,MAAM,GAAAO,KAAA,CAANP,MAAM;IACNJ,MAAM,GAAAW,KAAA,CAANX,MAAM;IACN3B,WAAW,GAAAsC,KAAA,CAAXtC,WAAW;IACXuC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;IACRC,cAAc,GAAAF,KAAA,CAAdE,cAAc;IACdC,gBAAgB,GAAAH,KAAA,CAAhBG,gBAAgB;IAChBC,SAAS,GAAAJ,KAAA,CAATI,SAAS,CAAA;AAYT,EAAA,IAAMC,iBAAiB,GAAG1C,OAAO,CAAoC,YAAM;IACvE,OAAOC,IAAI,CAACmB,WAAW,EAAE,CAACP,GAAG,CAAC,UAAAN,IAAI,EAAI;AAClC,MAAA,IAAIoC,CAAS,CAAA;AACb,MAAA,IAAIC,CAAS,CAAA;AACb,MAAA,IAAIlB,MAAM,KAAK,eAAe,IAAIA,MAAM,KAAK,eAAe,EAAE;AAC1DiB,QAAAA,CAAC,GAAGhB,MAAM,CAACpB,IAAI,CAACoC,CAAE,CAAC,CAAA;AACnBC,QAAAA,CAAC,GAAGd,MAAM,CAACvB,IAAI,CAACqC,CAAE,CAAC,CAAA;AACvB,OAAC,MAAM;AACHD,QAAAA,CAAC,GAAGhB,MAAM,CAACpB,IAAI,CAACqC,CAAE,CAAC,CAAA;AACnBA,QAAAA,CAAC,GAAGd,MAAM,CAACvB,IAAI,CAACoC,CAAE,CAAC,CAAA;AACvB,OAAA;AAEA,MAAA,IAAME,EAAE,GAAG9C,WAAW,CAACQ,IAAI,CAACV,IAAI,CAAC,CAAA;MAEjC,OAAO;QACHiD,IAAI,EAAA,EAAA,CAAA/B,MAAA,CAAMR,IAAI,CAACK,WAAW,EAAA,CAAGiC,EAAE,CAAC,CAAA;QAChC/B,GAAG,EAAEP,IAAI,CAACO,GAAI;QACdF,WAAW,EAAEL,IAAI,CAACK,WAAY;QAC9BK,YAAY,EAAEV,IAAI,CAACU,YAAa;QAChCE,cAAc,EAAEZ,IAAI,CAACY,cAAe;AACpC0B,QAAAA,EAAE,EAAFA,EAAE;QACFhD,IAAI,EAAEU,IAAI,CAACV,IAAI;QACfkD,KAAK,EAAExC,IAAI,CAACwC,KAAK;QACjBtB,MAAM,EAAElB,IAAI,CAACkB,MAAM;AACnBkB,QAAAA,CAAC,EAADA,CAAC;AACDC,QAAAA,CAAC,EAADA,CAAAA;OACH,CAAA;AACL,KAAC,CAAC,CAAA;AACN,GAAC,EAAE,CAAC3C,IAAI,EAAEF,WAAW,EAAE2B,MAAM,EAAEC,MAAM,EAAEG,MAAM,CAAC,CAAC,CAAA;AAE/C,EAAA,IAAMkB,WAAW,GAAGhB,WAAW,CAAQM,QAAQ,CAAC,CAAA;AAChD,EAAA,IAAMW,iBAAiB,GAAGf,mBAAmB,CAAQK,cAAc,CAAC,CAAA;AACpE,EAAA,IAAMW,mBAAmB,GAAGhB,mBAAmB,CAAQM,gBAAgB,CAAC,CAAA;AACxE,EAAA,IAAMW,YAAY,GAAGC,oBAAoB,CAACX,SAAS,EAAE,KAAK,CAAC,CAAA;AAE3D,EAAA,IAAAY,SAAA,GAA4CC,QAAQ,CAAW,EAAE,CAAC;AAA3DC,IAAAA,cAAc,GAAAF,SAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,iBAAiB,GAAAH,SAAA,CAAA,CAAA,CAAA,CAAA;AAExC,EAAA,IAAMI,QAAQ,GAAGzD,OAAO,CAAC,YAAM;IAC3B,IAAM0D,SAA8C,GAAG,EAAE,CAAA;IAEzD,IAAMC,KAA4B,GAAGjB,iBAAiB,CAAC7B,GAAG,CAAC,UAAA+C,gBAAgB,EAAI;AAC3E,MAAA,IAAMC,YAAiC,GAAAC,QAAA,CAAA,EAAA,EAChCF,gBAAgB,EAAA;AACnB3B,QAAAA,IAAI,EAAEe,WAAW,CAACY,gBAAgB,CAAC;AACnCG,QAAAA,KAAK,EAAEZ,YAAY,CAACS,gBAAgB,CAAC;AACrCI,QAAAA,QAAQ,EAAE,IAAA;OACb,CAAA,CAAA;AAED,MAAA,IAAIT,cAAc,CAACU,MAAM,GAAG,CAAC,EAAE;QAC3BJ,YAAY,CAACG,QAAQ,GAAGT,cAAc,CAACW,QAAQ,CAACL,YAAY,CAAC/C,GAAG,CAAC,CAAA;QACjE,IAAI+C,YAAY,CAACG,QAAQ,EAAE;AACvBH,UAAAA,YAAY,CAAC5B,IAAI,GAAGgB,iBAAiB,CAACY,YAAY,CAAC,CAAA;AACvD,SAAC,MAAM;AACHA,UAAAA,YAAY,CAAC5B,IAAI,GAAGiB,mBAAmB,CAACW,YAAY,CAAC,CAAA;AACzD,SAAA;AACJ,OAAA;AAEAH,MAAAA,SAAS,CAACG,YAAY,CAAC/C,GAAG,CAAC,GAAG+C,YAAY,CAAA;AAE1C,MAAA,OAAOA,YAAY,CAAA;AACvB,KAAC,CAAC,CAAA;IAEF,OAAO;AAAEF,MAAAA,KAAK,EAALA,KAAK;AAAED,MAAAA,SAAS,EAATA,SAAAA;KAAW,CAAA;AAC/B,GAAC,EAAE,CACChB,iBAAiB,EACjBM,WAAW,EACXC,iBAAiB,EACjBC,mBAAmB,EACnBC,YAAY,EACZI,cAAc,CACjB,CAAC,CAAA;EAEF,OAAAO,QAAA,KAAYL,QAAQ,EAAA;AAAED,IAAAA,iBAAiB,EAAjBA,iBAAAA;AAAiB,GAAA,CAAA,CAAA;AAC3C,CAAC,CAAA;AAED,IAAMW,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAC1BC,SAAyD,EAAA;EAAA,OAEzDpE,OAAO,CAAC,YAAM;AACV,IAAA,IAAIoE,SAAS,KAAKjC,SAAS,EAAE,OAAO,UAACkC,IAAyB,EAAA;MAAA,OAAKA,IAAI,CAACD,SAAS,CAAA;AAAA,KAAA,CAAA;AACjF,IAAA,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAE,OAAOA,SAAS,CAAA;IACrD,OAAO,YAAA;AAAA,MAAA,OAAMA,SAAS,CAAA;AAAA,KAAA,CAAA;AAC1B,GAAC,EAAE,CAACA,SAAS,CAAC,CAAC,CAAA;AAAA,CAAA,CAAA;AAEnB,IAAME,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,KAAA,EAcR;AAAA,EAAA,IAbFtE,IAAI,GAAAsE,KAAA,CAAJtE,IAAI;IACJyD,SAAS,GAAAa,KAAA,CAATb,SAAS;IACTc,aAAa,GAAAD,KAAA,CAAbC,aAAa;IACbC,mBAAmB,GAAAF,KAAA,CAAnBE,mBAAmB;IACnBC,qBAAqB,GAAAH,KAAA,CAArBG,qBAAqB;IACrBC,SAAS,GAAAJ,KAAA,CAATI,SAAS,CAAA;AAST,EAAA,IAAMC,iBAAiB,GAAG5E,OAAO,CAAoC,YAAM;IACvE,OAAQC,IAAI,CAAC4E,KAAK,EAAE,CAAgChE,GAAG,CAAC,UAAAwD,IAAI,EAAI;MAC5D,OAAO;QACHxB,EAAE,EAAKwB,IAAI,CAACS,MAAM,CAAChE,GAAG,GAAA,GAAA,GAAIuD,IAAI,CAACU,MAAM,CAACjE,GAAK;QAE3CgE,MAAM,EAAEpB,SAAS,CAACW,IAAI,CAACS,MAAM,CAAChE,GAAG,CAAE;AACnCiE,QAAAA,MAAM,EAAErB,SAAS,CAACW,IAAI,CAACU,MAAM,CAACjE,GAAG,CAAA;OACpC,CAAA;AACL,KAAC,CAAC,CAAA;AACN,GAAC,EAAE,CAACb,IAAI,EAAEyD,SAAS,CAAC,CAAC,CAAA;AAErB,EAAA,IAAMsB,gBAA8C,GAAGhF,OAAO,CAAC,YAAM;AACjE,IAAA,IAAI,OAAOwE,aAAa,KAAK,UAAU,EAAE,OAAOA,aAAa,CAAA;IAC7D,OAAO,YAAA;AAAA,MAAA,OAAMA,aAAa,CAAA;AAAA,KAAA,CAAA;AAC9B,GAAC,EAAE,CAACA,aAAa,CAAC,CAAC,CAAA;AACnB,EAAA,IAAMS,sBAAsB,GAAGd,wBAAwB,CAACM,mBAAmB,CAAC,CAAA;AAC5E,EAAA,IAAMS,wBAAwB,GAAGf,wBAAwB,CAACO,qBAAqB,CAAC,CAAA;AAEhF,EAAA,IAAMS,KAAK,GAAGC,QAAQ,EAAE,CAAA;AACxB,EAAA,IAAMC,YAAY,GAAGC,iBAAiB,CAACX,SAAS,EAAEQ,KAAK,CAAC,CAAA;AAExD,EAAA,IAAAI,UAAA,GAA0CjC,QAAQ,CAAW,EAAE,CAAC;AAAzDkC,IAAAA,aAAa,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAEE,IAAAA,gBAAgB,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;AAEtC,EAAA,IAAMV,KAAK,GAAG7E,OAAO,CAAC,YAAM;AACxB,IAAA,OAAO4E,iBAAiB,CAAC/D,GAAG,CAAC,UAAA6E,gBAAgB,EAAI;AAC7C,MAAA,IAAMC,YAAiC,GAAA7B,QAAA,CAAA,EAAA,EAChC4B,gBAAgB,EAAA;AACnBtB,QAAAA,SAAS,EAAEY,gBAAgB,CAACU,gBAAgB,CAAC;AAC7C3B,QAAAA,KAAK,EAAEsB,YAAY,CAACK,gBAAgB,CAAC;AACrC1B,QAAAA,QAAQ,EAAE,IAAA;OACb,CAAA,CAAA;AAED,MAAA,IAAIwB,aAAa,CAACvB,MAAM,GAAG,CAAC,EAAE;QAC1B0B,YAAY,CAAC3B,QAAQ,GAAGwB,aAAa,CAACtB,QAAQ,CAACyB,YAAY,CAAC9C,EAAE,CAAC,CAAA;QAC/D,IAAI8C,YAAY,CAAC3B,QAAQ,EAAE;AACvB2B,UAAAA,YAAY,CAACvB,SAAS,GAAGa,sBAAsB,CAACU,YAAY,CAAC,CAAA;AACjE,SAAC,MAAM;AACHA,UAAAA,YAAY,CAACvB,SAAS,GAAGc,wBAAwB,CAACS,YAAY,CAAC,CAAA;AACnE,SAAA;AACJ,OAAA;AAEA,MAAA,OAAOA,YAAY,CAAA;AACvB,KAAC,CAAC,CAAA;AACN,GAAC,EAAE,CACCf,iBAAiB,EACjBI,gBAAgB,EAChBC,sBAAsB,EACtBC,wBAAwB,EACxBG,YAAY,EACZG,aAAa,CAChB,CAAC,CAAA;EAEF,OAAO;AACHX,IAAAA,KAAK,EAALA,KAAK;AACLY,IAAAA,gBAAgB,EAAhBA,gBAAAA;GACH,CAAA;AACL,CAAC,CAAA;AAED,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,KAAA,EAAA;AAAA,EAAA,IAAMnE,MAAM,GAAAmE,KAAA,CAANnE,MAAM,CAAA;EAAA,OAC9B1B,OAAO,CAAC,YAAM;AACV,IAAA,IAAI0B,MAAM,KAAK,eAAe,IAAIA,MAAM,KAAK,eAAe,EAAE;MAC1D,OAAOoE,IAAM,CAACC,UAAU,CAAC,CAAA;AAC7B,KAAC,MAAM;MACH,OAAOD,IAAM,CAACE,UAAU,CAAC,CAAA;AAC7B,KAAA;AACJ,GAAC,EAAE,CAACtE,MAAM,CAAC,CAAC,CAAA;AAAA,CAAA,CAAA;AAEhB,IAAMuE,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,KAAA,EAAA;AAAA,EAAA,IACnB1C,iBAAiB,GAAA0C,KAAA,CAAjB1C,iBAAiB;IACjB2C,sBAAsB,GAAAD,KAAA,CAAtBC,sBAAsB;IACtBC,wBAAwB,GAAAF,KAAA,CAAxBE,wBAAwB;IACxBvB,KAAK,GAAAqB,KAAA,CAALrB,KAAK;IACLY,gBAAgB,GAAAS,KAAA,CAAhBT,gBAAgB;IAChBY,sBAAsB,GAAAH,KAAA,CAAtBG,sBAAsB;IACtBC,wBAAwB,GAAAJ,KAAA,CAAxBI,wBAAwB,CAAA;AAAA,EAAA,OAUxBC,WAAW,CACP,UAAChG,IAAgC,EAAK;IAClC,IAAIA,IAAI,KAAK,IAAI,EAAE;MACfiD,iBAAiB,CAAC,EAAE,CAAC,CAAA;MACrBiC,gBAAgB,CAAC,EAAE,CAAC,CAAA;AACxB,KAAC,MAAM;AACH,MAAA,IAAIe,QAAkB,GAAG,CAACjG,IAAI,CAACO,GAAG,CAAC,CAAA;AACnC,MAAA,IAAIqF,sBAAsB,EAAE;QACxBK,QAAQ,GAAA,EAAA,CAAAzF,MAAA,CAAOyF,QAAQ,EAAKjG,IAAI,CAACU,YAAY,CAAC,CAAA;AAClD,OAAA;AACA,MAAA,IAAImF,wBAAwB,EAAE;QAC1BI,QAAQ,GAAA,EAAA,CAAAzF,MAAA,CAAOyF,QAAQ,EAAKjG,IAAI,CAACY,cAAc,CAAC,CAAA;AACpD,OAAA;MACAqC,iBAAiB,CAACgD,QAAQ,CAAC,CAAA;MAE3B,IAAMC,OAAiB,GAAG,EAAE,CAAA;AAC5B,MAAA,IAAIJ,sBAAsB,EAAE;AACxBxB,QAAAA,KAAK,CACApE,MAAM,CAAC,UAAA4D,IAAI,EAAI;UACZ,OACIA,IAAI,CAACU,MAAM,CAACjE,GAAG,KAAKP,IAAI,CAACO,GAAG,IAC5BP,IAAI,CAACU,YAAY,CAACiD,QAAQ,CAACG,IAAI,CAACU,MAAM,CAACjE,GAAG,CAAC,CAAA;AAEnD,SAAC,CAAC,CACD4F,OAAO,CAAC,UAAArC,IAAI,EAAI;AACboC,UAAAA,OAAO,CAACE,IAAI,CAACtC,IAAI,CAACxB,EAAE,CAAC,CAAA;AACzB,SAAC,CAAC,CAAA;AACV,OAAA;AACA,MAAA,IAAIyD,wBAAwB,EAAE;AAC1BzB,QAAAA,KAAK,CACApE,MAAM,CAAC,UAAA4D,IAAI,EAAI;UACZ,OACIA,IAAI,CAACS,MAAM,CAAChE,GAAG,KAAKP,IAAI,CAACO,GAAG,IAC5BP,IAAI,CAACY,cAAc,CAAC+C,QAAQ,CAACG,IAAI,CAACS,MAAM,CAAChE,GAAG,CAAC,CAAA;AAErD,SAAC,CAAC,CACD4F,OAAO,CAAC,UAAArC,IAAI,EAAI;AACboC,UAAAA,OAAO,CAACE,IAAI,CAACtC,IAAI,CAACxB,EAAE,CAAC,CAAA;AACzB,SAAC,CAAC,CAAA;AACV,OAAA;MACA4C,gBAAgB,CAACgB,OAAO,CAAC,CAAA;AAC7B,KAAA;AACJ,GAAC,EACD,CACIjD,iBAAiB,EACjB2C,sBAAsB,EACtBC,wBAAwB,EACxBvB,KAAK,EACLY,gBAAgB,EAChBY,sBAAsB,EACtBC,wBAAwB,CAEhC,CAAC,CAAA;AAAA,CAAA,CAAA;IAEQM,OAAO,GAAG,SAAVA,OAAOA,CAAAC,KAAA,EAsCd;AAAA,EAAA,IArCFhH,IAAI,GAAAgH,KAAA,CAAJhH,IAAI;IACJ2B,KAAK,GAAAqF,KAAA,CAALrF,KAAK;IACLC,MAAM,GAAAoF,KAAA,CAANpF,MAAM;IAAAqF,cAAA,GAAAD,KAAA,CACNE,QAAQ;AAARA,IAAAA,QAAQ,GAAAD,cAAA,KAAA,KAAA,CAAA,GAAGE,kBAAkB,CAACD,QAAQ,GAAAD,cAAA;IAAAG,UAAA,GAAAJ,KAAA,CACtC/G,IAAI;AAAJA,IAAAA,IAAI,GAAAmH,UAAA,KAAA,KAAA,CAAA,GAAGD,kBAAkB,CAAClH,IAAI,GAAAmH,UAAA;IAAAC,YAAA,GAAAL,KAAA,CAC9BnF,MAAM;AAANA,IAAAA,MAAM,GAAAwF,YAAA,KAAA,KAAA,CAAA,GAAGF,kBAAkB,CAACtF,MAAM,GAAAwF,YAAA;IAAAC,cAAA,GAAAN,KAAA,CAClCvE,QAAQ;AAARA,IAAAA,QAAQ,GAAA6E,cAAA,KAAA,KAAA,CAAA,GAAGH,kBAAkB,CAAC1E,QAAQ,GAAA6E,cAAA;IACtC5E,cAAc,GAAAsE,KAAA,CAAdtE,cAAc;IACdC,gBAAgB,GAAAqE,KAAA,CAAhBrE,gBAAgB;IAAA4E,eAAA,GAAAP,KAAA,CAChBpE,SAAS;AAATA,IAAAA,SAAS,GAAA2E,eAAA,KAAA,KAAA,CAAA,GAAGJ,kBAAkB,CAACvE,SAAS,GAAA2E,eAAA;IAAAC,qBAAA,GAAAR,KAAA,CACxCV,sBAAsB;AAAtBA,IAAAA,sBAAsB,GAAAkB,qBAAA,KAAA,KAAA,CAAA,GAAGL,kBAAkB,CAACb,sBAAsB,GAAAkB,qBAAA;IAAAC,qBAAA,GAAAT,KAAA,CAClET,wBAAwB;AAAxBA,IAAAA,wBAAwB,GAAAkB,qBAAA,KAAA,KAAA,CAAA,GAAGN,kBAAkB,CAACZ,wBAAwB,GAAAkB,qBAAA;IAAAC,mBAAA,GAAAV,KAAA,CACtErC,aAAa;AAAbA,IAAAA,aAAa,GAAA+C,mBAAA,KAAA,KAAA,CAAA,GAAGP,kBAAkB,CAACxC,aAAa,GAAA+C,mBAAA;IAAAC,eAAA,GAAAX,KAAA,CAChDlC,SAAS;AAATA,IAAAA,SAAS,GAAA6C,eAAA,KAAA,KAAA,CAAA,GAAGR,kBAAkB,CAACrC,SAAS,GAAA6C,eAAA;IACxC/C,mBAAmB,GAAAoC,KAAA,CAAnBpC,mBAAmB;IACnBC,qBAAqB,GAAAmC,KAAA,CAArBnC,qBAAqB;IAAA+C,sBAAA,GAAAZ,KAAA,CACrBR,sBAAsB;AAAtBA,IAAAA,sBAAsB,GAAAoB,sBAAA,KAAA,KAAA,CAAA,GAAGT,kBAAkB,CAACX,sBAAsB,GAAAoB,sBAAA;IAAAC,sBAAA,GAAAb,KAAA,CAClEP,wBAAwB;AAAxBA,IAAAA,wBAAwB,GAAAoB,sBAAA,KAAA,KAAA,CAAA,GAAGV,kBAAkB,CAACV,wBAAwB,GAAAoB,sBAAA,CAAA;AAqBtE,EAAA,IAAM3H,WAAW,GAAG4H,mBAAmB,CAACZ,QAAQ,CAAC,CAAA;EACjD,IAAM9G,IAAI,GAAGN,OAAO,CAAQ;AAAEE,IAAAA,IAAI,EAAJA,IAAI;AAAEC,IAAAA,IAAI,EAAJA,IAAI;AAAEC,IAAAA,WAAW,EAAXA,WAAAA;AAAY,GAAC,CAAC,CAAA;EAExD,IAAA6H,mBAAA,GAA2BtG,kBAAkB,CAAC;AAAEE,MAAAA,KAAK,EAALA,KAAK;AAAEC,MAAAA,MAAM,EAANA,MAAM;AAAEC,MAAAA,MAAM,EAANA,MAAAA;AAAO,KAAC,CAAC;IAAhEC,MAAM,GAAAiG,mBAAA,CAANjG,MAAM;IAAEG,MAAM,GAAA8F,mBAAA,CAAN9F,MAAM,CAAA;EACtB,IAAA+F,SAAA,GAAgDzF,QAAQ,CAAQ;AAC5DnC,MAAAA,IAAI,EAAJA,IAAI;AACJ0B,MAAAA,MAAM,EAANA,MAAM;AACNG,MAAAA,MAAM,EAANA,MAAM;AACNJ,MAAAA,MAAM,EAANA,MAAM;AACN3B,MAAAA,WAAW,EAAXA,WAAW;AACXuC,MAAAA,QAAQ,EAARA,QAAQ;AACRC,MAAAA,cAAc,EAAdA,cAAc;AACdC,MAAAA,gBAAgB,EAAhBA,gBAAgB;AAChBC,MAAAA,SAAS,EAATA,SAAAA;AACJ,KAAC,CAAC;IAVMkB,KAAK,GAAAkE,SAAA,CAALlE,KAAK;IAAED,SAAS,GAAAmE,SAAA,CAATnE,SAAS;IAAEF,iBAAiB,GAAAqE,SAAA,CAAjBrE,iBAAiB,CAAA;EAY3C,IAAMsE,aAAa,GAAGlC,gBAAgB,CAAC;AAAElE,IAAAA,MAAM,EAANA,MAAAA;AAAO,GAAC,CAAC,CAAA;EAClD,IAAAqG,SAAA,GAAoCzD,QAAQ,CAAQ;AAChDrE,MAAAA,IAAI,EAAJA,IAAI;AACJyD,MAAAA,SAAS,EAATA,SAAS;AACTc,MAAAA,aAAa,EAAbA,aAAa;AACbC,MAAAA,mBAAmB,EAAnBA,mBAAmB;AACnBC,MAAAA,qBAAqB,EAArBA,qBAAqB;AACrBC,MAAAA,SAAS,EAATA,SAAAA;AACJ,KAAC,CAAC;IAPME,KAAK,GAAAkD,SAAA,CAALlD,KAAK;IAAEY,gBAAgB,GAAAsC,SAAA,CAAhBtC,gBAAgB,CAAA;EAS/B,IAAMuC,cAAc,GAAG/B,iBAAiB,CAAQ;AAC5CzC,IAAAA,iBAAiB,EAAjBA,iBAAiB;AACjB2C,IAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBC,IAAAA,wBAAwB,EAAxBA,wBAAwB;AACxBvB,IAAAA,KAAK,EAALA,KAAK;AACLY,IAAAA,gBAAgB,EAAhBA,gBAAgB;AAChBY,IAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBC,IAAAA,wBAAwB,EAAxBA,wBAAAA;AACJ,GAAC,CAAC,CAAA;EAEF,OAAO;AACH3C,IAAAA,KAAK,EAALA,KAAK;AACLkB,IAAAA,KAAK,EAALA,KAAK;AACLiD,IAAAA,aAAa,EAAbA,aAAa;AACbE,IAAAA,cAAc,EAAdA,cAAAA;GACH,CAAA;AACL,EAAC;AAOM,IAAMC,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAClC1H,IAAyB,EAAA2H,KAAA,EAkBxB;AAAA,EAAA,IAhBGC,aAAa,GAAAD,KAAA,CAAbC,aAAa;IACbC,YAAY,GAAAF,KAAA,CAAZE,YAAY;IACZC,WAAW,GAAAH,KAAA,CAAXG,WAAW;IACXC,YAAY,GAAAJ,KAAA,CAAZI,YAAY;IACZC,OAAO,GAAAL,KAAA,CAAPK,OAAO;IACPP,cAAc,GAAAE,KAAA,CAAdF,cAAc;IACdQ,OAAO,GAAAN,KAAA,CAAPM,OAAO,CAAA;AAWX,EAAA,IAAAC,WAAA,GAA8CC,UAAU,EAAE;IAAlDC,oBAAoB,GAAAF,WAAA,CAApBE,oBAAoB;IAAEC,WAAW,GAAAH,WAAA,CAAXG,WAAW,CAAA;AAEzC,EAAA,IAAMC,WAAW,GAAGtC,WAAW,CAC3B,UAACuC,KAAiB,EAAK;IACnBN,OAAO,KAAKrG,SAAS,IACjBwG,oBAAoB,CAChBI,aAAa,CAACP,OAAO,EAAE;AACnBjI,MAAAA,IAAI,EAAJA,IAAAA;KACH,CAAC,EACFuI,KACJ,CAAC,CAAA;GACR,EACD,CAACvI,IAAI,EAAEiI,OAAO,EAAEG,oBAAoB,CACxC,CAAC,CAAA;AAED,EAAA,IAAMK,gBAAgB,GAAGzC,WAAW,CAChC,UAACuC,KAAiB,EAAK;IACnBd,cAAc,CAACzH,IAAI,CAAC,CAAA;IACpBsI,WAAW,CAACC,KAAK,CAAC,CAAA;AAClBV,IAAAA,YAAY,oBAAZA,YAAY,CAAG7H,IAAI,EAAEuI,KAAK,CAAC,CAAA;GAC9B,EACD,CAACvI,IAAI,EAAEsI,WAAW,EAAEb,cAAc,EAAEI,YAAY,CACpD,CAAC,CAAA;AAED,EAAA,IAAMa,eAAe,GAAG1C,WAAW,CAC/B,UAACuC,KAAiB,EAAK;IACnBD,WAAW,CAACC,KAAK,CAAC,CAAA;AAClBT,IAAAA,WAAW,oBAAXA,WAAW,CAAG9H,IAAI,EAAEuI,KAAK,CAAC,CAAA;GAC7B,EACD,CAACvI,IAAI,EAAEsI,WAAW,EAAER,WAAW,CACnC,CAAC,CAAA;AAED,EAAA,IAAMa,gBAAgB,GAAG3C,WAAW,CAChC,UAACuC,KAAiB,EAAK;IACnBd,cAAc,CAAC,IAAI,CAAC,CAAA;AACpBY,IAAAA,WAAW,EAAE,CAAA;AACbN,IAAAA,YAAY,oBAAZA,YAAY,CAAG/H,IAAI,EAAEuI,KAAK,CAAC,CAAA;GAC9B,EACD,CAACvI,IAAI,EAAEqI,WAAW,EAAEZ,cAAc,EAAEM,YAAY,CACpD,CAAC,CAAA;AAED,EAAA,IAAMa,WAAW,GAAG5C,WAAW,CAC3B,UAACuC,KAAiB,EAAK;AACnBP,IAAAA,OAAO,oBAAPA,OAAO,CAAGhI,IAAI,EAAEuI,KAAK,CAAC,CAAA;AAC1B,GAAC,EACD,CAACvI,IAAI,EAAEgI,OAAO,CAClB,CAAC,CAAA;EAED,OAAO;AACHH,IAAAA,YAAY,EAAED,aAAa,GAAGa,gBAAgB,GAAG7G,SAAS;AAC1DkG,IAAAA,WAAW,EAAEF,aAAa,GAAGc,eAAe,GAAG9G,SAAS;AACxDmG,IAAAA,YAAY,EAAEH,aAAa,GAAGe,gBAAgB,GAAG/G,SAAS;AAC1DoG,IAAAA,OAAO,EAAEJ,aAAa,GAAGgB,WAAW,GAAGhH,SAAAA;GAC1C,CAAA;AACL,EAAC;AAOM,IAAMiH,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAClC/E,IAAyB,EAAAgF,KAAA,EAgBxB;AAAA,EAAA,IAdGlB,aAAa,GAAAkB,KAAA,CAAblB,aAAa;IACbC,YAAY,GAAAiB,KAAA,CAAZjB,YAAY;IACZC,WAAW,GAAAgB,KAAA,CAAXhB,WAAW;IACXC,YAAY,GAAAe,KAAA,CAAZf,YAAY;IACZC,OAAO,GAAAc,KAAA,CAAPd,OAAO;IACPC,OAAO,GAAAa,KAAA,CAAPb,OAAO,CAAA;AAUX,EAAA,IAAAc,YAAA,GAA8CZ,UAAU,EAAE;IAAlDC,oBAAoB,GAAAW,YAAA,CAApBX,oBAAoB;IAAEC,WAAW,GAAAU,YAAA,CAAXV,WAAW,CAAA;AAEzC,EAAA,IAAMC,WAAW,GAAGtC,WAAW,CAC3B,UAACuC,KAAiB,EAAK;IACnBN,OAAO,KAAKrG,SAAS,IACjBwG,oBAAoB,CAChBI,aAAa,CAACP,OAAO,EAAE;AACnBnE,MAAAA,IAAI,EAAJA,IAAAA;KACH,CAAC,EACFyE,KACJ,CAAC,CAAA;GACR,EACD,CAACzE,IAAI,EAAEmE,OAAO,EAAEG,oBAAoB,CACxC,CAAC,CAAA;AAED,EAAA,IAAMK,gBAAgB,GAAGzC,WAAW,CAChC,UAACuC,KAAiB,EAAK;IACnBD,WAAW,CAACC,KAAK,CAAC,CAAA;AAClBV,IAAAA,YAAY,oBAAZA,YAAY,CAAG/D,IAAI,EAAEyE,KAAK,CAAC,CAAA;GAC9B,EACD,CAACzE,IAAI,EAAEwE,WAAW,EAAET,YAAY,CACpC,CAAC,CAAA;AAED,EAAA,IAAMa,eAAe,GAAG1C,WAAW,CAC/B,UAACuC,KAAiB,EAAK;IACnBD,WAAW,CAACC,KAAK,CAAC,CAAA;AAClBT,IAAAA,WAAW,oBAAXA,WAAW,CAAGhE,IAAI,EAAEyE,KAAK,CAAC,CAAA;GAC7B,EACD,CAACzE,IAAI,EAAEwE,WAAW,EAAER,WAAW,CACnC,CAAC,CAAA;AAED,EAAA,IAAMa,gBAAgB,GAAG3C,WAAW,CAChC,UAACuC,KAAiB,EAAK;AACnBF,IAAAA,WAAW,EAAE,CAAA;AACbN,IAAAA,YAAY,oBAAZA,YAAY,CAAGjE,IAAI,EAAEyE,KAAK,CAAC,CAAA;GAC9B,EACD,CAACzE,IAAI,EAAEuE,WAAW,EAAEN,YAAY,CACpC,CAAC,CAAA;AAED,EAAA,IAAMa,WAAW,GAAG5C,WAAW,CAC3B,UAACuC,KAAiB,EAAK;AACnBP,IAAAA,OAAO,oBAAPA,OAAO,CAAGlE,IAAI,EAAEyE,KAAK,CAAC,CAAA;AAC1B,GAAC,EACD,CAACzE,IAAI,EAAEkE,OAAO,CAClB,CAAC,CAAA;EAED,OAAO;AACHH,IAAAA,YAAY,EAAED,aAAa,GAAGa,gBAAgB,GAAG7G,SAAS;AAC1DkG,IAAAA,WAAW,EAAEF,aAAa,GAAGc,eAAe,GAAG9G,SAAS;AACxDmG,IAAAA,YAAY,EAAEH,aAAa,GAAGe,gBAAgB,GAAG/G,SAAS;AAC1DoG,IAAAA,OAAO,EAAEJ,aAAa,GAAGgB,WAAW,GAAGhH,SAAAA;GAC1C,CAAA;AACL;;;;ACnmBO,IAAMoH,IAAI,GAAG,SAAPA,IAAIA,CAAA3J,IAAA,EAUgB;AAAA,EAAA,IAT7BW,IAAI,GAAAX,IAAA,CAAJW,IAAI;IACJ4H,aAAa,GAAAvI,IAAA,CAAbuI,aAAa;IACbC,YAAY,GAAAxI,IAAA,CAAZwI,YAAY;IACZC,WAAW,GAAAzI,IAAA,CAAXyI,WAAW;IACXC,YAAY,GAAA1I,IAAA,CAAZ0I,YAAY;IACZC,OAAO,GAAA3I,IAAA,CAAP2I,OAAO;IACPP,cAAc,GAAApI,IAAA,CAAdoI,cAAc;IACdQ,OAAO,GAAA5I,IAAA,CAAP4I,OAAO;IACPgB,aAAa,GAAA5J,IAAA,CAAb4J,aAAa,CAAA;AAEb,EAAA,IAAMC,aAAa,GAAGxB,yBAAyB,CAAQ1H,IAAI,EAAE;AACzD4H,IAAAA,aAAa,EAAbA,aAAa;AACbC,IAAAA,YAAY,EAAZA,YAAY;AACZC,IAAAA,WAAW,EAAXA,WAAW;AACXC,IAAAA,YAAY,EAAZA,YAAY;AACZC,IAAAA,OAAO,EAAPA,OAAO;AACPP,IAAAA,cAAc,EAAdA,cAAc;AACdQ,IAAAA,OAAO,EAAPA,OAAAA;AACJ,GAAC,CAAC,CAAA;AAEF,EAAA,OACIkB,MAAA,CAACC,QAAQ,CAACC,MAAM,EAAA9F,QAAA,CAAA;IACZ+F,CAAC,EAAEL,aAAa,CAACvH,IAAI,CAAC6H,EAAE,CAAC,UAAA7H,IAAI,EAAA;MAAA,OAAIA,IAAI,GAAG,CAAC,CAAA;KAAE,CAAA;IAC3C8H,IAAI,EAAEP,aAAa,CAACzF,KAAM;IAC1BiG,EAAE,EAAER,aAAa,CAAC7G,CAAE;IACpBsH,EAAE,EAAET,aAAa,CAAC5G,CAAAA;AAAE,GAAA,EAChB6G,aAAa,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAAS,IAAAA,QAAA,EAAAC,cAAA;IAAAC,UAAA,EAAA,EAAA;IAAAC,YAAA,EAAA,CAAA;AAAA,GAAA,EAAAC,OACpB,CAAC,CAAA;AAEV,CAAC;;;;AC9BM,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA3K,IAAA,EAUgB;AAAA,EAAA,IAT7ByE,IAAI,GAAAzE,IAAA,CAAJyE,IAAI;IACJyD,aAAa,GAAAlI,IAAA,CAAbkI,aAAa;IACb0B,aAAa,GAAA5J,IAAA,CAAb4J,aAAa;IACbrB,aAAa,GAAAvI,IAAA,CAAbuI,aAAa;IACbC,YAAY,GAAAxI,IAAA,CAAZwI,YAAY;IACZC,WAAW,GAAAzI,IAAA,CAAXyI,WAAW;IACXC,YAAY,GAAA1I,IAAA,CAAZ0I,YAAY;IACZC,OAAO,GAAA3I,IAAA,CAAP2I,OAAO;IACPC,OAAO,GAAA5I,IAAA,CAAP4I,OAAO,CAAA;AAEP,EAAA,IAAMiB,aAAa,GAAGL,yBAAyB,CAAQ/E,IAAI,EAAE;AACzD8D,IAAAA,aAAa,EAAbA,aAAa;AACbC,IAAAA,YAAY,EAAZA,YAAY;AACZC,IAAAA,WAAW,EAAXA,WAAW;AACXC,IAAAA,YAAY,EAAZA,YAAY;AACZC,IAAAA,OAAO,EAAPA,OAAO;AACPC,IAAAA,OAAO,EAAPA,OAAAA;AACJ,GAAC,CAAC,CAAA;AAEF,EAAA,OACIkB,MAAA,CAACC,QAAQ,CAAC7G,IAAI,EAAAgB,QAAA,CAAA;AACV0G,IAAAA,CAAC,EAAEV,EAAE,CACD,CACIN,aAAa,CAACiB,OAAO,EACrBjB,aAAa,CAACkB,OAAO,EACrBlB,aAAa,CAACmB,OAAO,EACrBnB,aAAa,CAACoB,OAAO,CACxB,EACD,UAACH,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAK;AACpC,MAAA,OAAO9C,aAAa,CAAC;AACjBhD,QAAAA,MAAM,EAAE,CAAC2F,OAAO,EAAEC,OAAO,CAAC;AAC1B3F,QAAAA,MAAM,EAAE,CAAC4F,OAAO,EAAEC,OAAO,CAAA;AAC7B,OAAC,CAAC,CAAA;AACN,KACJ,CAAE;AACFb,IAAAA,IAAI,EAAC,MAAM;IACXc,WAAW,EAAErB,aAAa,CAACpF,SAAU;IACrC0G,MAAM,EAAEtB,aAAa,CAACzF,KAAAA;AAAM,GAAA,EACxB0F,aAAa,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAAS,IAAAA,QAAA,EAAAC,cAAA;IAAAC,UAAA,EAAA,EAAA;IAAAC,YAAA,EAAA,CAAA;AAAA,GAAA,EAAAC,OACpB,CAAC,CAAA;AAEV,CAAC;;AC1CM,IAAMtD,kBAoBZ,GAAG;AACAD,EAAAA,QAAQ,EAAE,IAAI;AACdjH,EAAAA,IAAI,EAAE,WAAW;AACjB4B,EAAAA,MAAM,EAAE,eAAe;AACvBY,EAAAA,QAAQ,EAAE,EAAE;AACZG,EAAAA,SAAS,EAAE;AAAEsI,IAAAA,MAAM,EAAE,MAAA;GAAQ;AAC7BvG,EAAAA,aAAa,EAAE,CAAC;AAChBG,EAAAA,SAAS,EAAE;AAAEqG,IAAAA,IAAI,EAAE,cAAc;AAAEC,IAAAA,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAA;GAAG;AAClE9C,EAAAA,aAAa,EAAE,IAAI;AACnB+C,EAAAA,OAAO,EAAE,IAAI;AACbC,EAAAA,sBAAsB,EAAEC,QAAQ;AAChCC,EAAAA,SAAS,EAAE,KAAK;AAChBlF,EAAAA,sBAAsB,EAAE,IAAI;AAC5BC,EAAAA,wBAAwB,EAAE,KAAK;AAC/BC,EAAAA,sBAAsB,EAAE,IAAI;AAC5BC,EAAAA,wBAAwB,EAAE,KAAK;AAC/BgF,EAAAA,IAAI,EAAE,KAAK;AACXC,EAAAA,OAAO,EAAE,IAAI;AACbC,EAAAA,YAAY,EAAE,QAAA;AAClB,EAAC;AAEYC,IAAAA,eACsE,GAAA3H,QAAA,KAC5EkD,kBAAkB,EAAA;AACrB0E,EAAAA,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;AAClCC,EAAAA,aAAa,EAAEpC,IAAI;AACnBqC,EAAAA,aAAa,EAAErB,IAAAA;AAAI,CACtB;;AC3BD,IAAMsB,mBAAiB,GAAG,SAApBA,iBAAiBA,CAAYxH,IAAyB,EAAA;EAAA,OAAyB;AACjFoG,IAAAA,OAAO,EAAEpG,IAAI,CAACS,MAAM,CAACnC,CAAC;AACtB+H,IAAAA,OAAO,EAAErG,IAAI,CAACS,MAAM,CAAClC,CAAC;AACtB+H,IAAAA,OAAO,EAAEtG,IAAI,CAACU,MAAM,CAACpC,CAAC;AACtBiI,IAAAA,OAAO,EAAEvG,IAAI,CAACU,MAAM,CAACnC,CAAC;IACtBwB,SAAS,EAAEC,IAAI,CAACD,SAAS;IACzBL,KAAK,EAAEM,IAAI,CAACN,KAAAA;GACf,CAAA;AAAA,CAAC,CAAA;AACF,IAAM+H,iBAAe,GAAG,SAAlBA,eAAeA,CAAYzH,IAAyB,EAAA;EAAA,OAAyB;AAC/EoG,IAAAA,OAAO,EAAEpG,IAAI,CAACS,MAAM,CAACnC,CAAC;AACtB+H,IAAAA,OAAO,EAAErG,IAAI,CAACS,MAAM,CAAClC,CAAC;AACtB+H,IAAAA,OAAO,EAAEtG,IAAI,CAACU,MAAM,CAACpC,CAAC;AACtBiI,IAAAA,OAAO,EAAEvG,IAAI,CAACU,MAAM,CAACnC,CAAC;IACtBwB,SAAS,EAAEC,IAAI,CAACD,SAAS;IACzBL,KAAK,EAAEM,IAAI,CAACN,KAAAA;GACf,CAAA;AAAA,CAAC,CAAA;AAEK,IAAMgI,KAAK,GAAG,SAARA,KAAKA,CAAAnM,IAAA,EAUO;AAAA,EAAA,IATrBiF,KAAK,GAAAjF,IAAA,CAALiF,KAAK;IACL+G,aAAa,GAAAhM,IAAA,CAAbgM,aAAa;IACb9D,aAAa,GAAAlI,IAAA,CAAbkI,aAAa;IACbK,aAAa,GAAAvI,IAAA,CAAbuI,aAAa;IACbC,YAAY,GAAAxI,IAAA,CAAZwI,YAAY;IACZC,WAAW,GAAAzI,IAAA,CAAXyI,WAAW;IACXC,YAAY,GAAA1I,IAAA,CAAZ0I,YAAY;IACZC,OAAO,GAAA3I,IAAA,CAAP2I,OAAO;IACPC,OAAO,GAAA5I,IAAA,CAAP4I,OAAO,CAAA;AAEP,EAAA,IAAAwD,gBAAA,GAA0CC,eAAe,EAAE;IAAnDV,OAAO,GAAAS,gBAAA,CAAPT,OAAO;IAAUW,YAAY,GAAAF,gBAAA,CAApBG,MAAM,CAAA;AAEvB,EAAA,IAAMC,UAAU,GAAGC,aAAa,CAAyCxH,KAAK,EAAE;IAC5EyH,IAAI,EAAE,SAAAA,IAAAA,CAAAjI,IAAI,EAAA;MAAA,OAAIA,IAAI,CAACxB,EAAE,CAAA;AAAA,KAAA;AACrBmI,IAAAA,IAAI,EAAEa,mBAAiB;AACvBU,IAAAA,KAAK,EAAEV,mBAAiB;AACxBW,IAAAA,MAAM,EAAEX,mBAAiB;AACzBY,IAAAA,KAAK,EAAEX,iBAAe;AACtBK,IAAAA,MAAM,EAAED,YAAY;AACpBQ,IAAAA,SAAS,EAAE,CAACnB,OAAAA;AAChB,GAAC,CAAC,CAAA;EAEF,OACI7B,MAAA,CAAAiD,QAAA,EAAA;AAAAC,IAAAA,QAAA,EACKR,UAAU,CAAC,UAAC5C,aAAa,EAAEnF,IAAI,EAAA;MAAA,OAC5B0E,aAAa,CAAC6C,aAAa,EAAE;AACzBvH,QAAAA,IAAI,EAAJA,IAAI;AACJyD,QAAAA,aAAa,EAAbA,aAAa;AACb0B,QAAAA,aAAa,EAAbA,aAAa;AACbrB,QAAAA,aAAa,EAAbA,aAAa;AACbC,QAAAA,YAAY,EAAZA,YAAY;AACZC,QAAAA,WAAW,EAAXA,WAAW;AACXC,QAAAA,YAAY,EAAZA,YAAY;AACZC,QAAAA,OAAO,EAAPA,OAAO;AACPC,QAAAA,OAAO,EAAPA,OAAAA;AACJ,OAAC,CAAC,CAAA;KACN,CAAA;AAAC,GAAA,EAAA,KAAA,CAAA,EAAA,KACH,CAAC,CAAA;AAEX,CAAC;;ACzDD,IAAMqD,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAYtL,IAAyB,EAAA;EAAA,OAAyB;IACjFoC,CAAC,EAAEpC,IAAI,CAACoC,CAAC;IACTC,CAAC,EAAErC,IAAI,CAACqC,CAAC;IACTX,IAAI,EAAE1B,IAAI,CAAC0B,IAAI;IACf8B,KAAK,EAAExD,IAAI,CAACwD,KAAAA;GACf,CAAA;AAAA,CAAC,CAAA;AACF,IAAM+H,eAAe,GAAG,SAAlBA,eAAeA,CAAYvL,IAAyB,EAAA;EAAA,OAAyB;IAC/EoC,CAAC,EAAEpC,IAAI,CAACoC,CAAC;IACTC,CAAC,EAAErC,IAAI,CAACqC,CAAC;AACTX,IAAAA,IAAI,EAAE,CAAC;IACP8B,KAAK,EAAExD,IAAI,CAACwD,KAAAA;GACf,CAAA;AAAA,CAAC,CAAA;AAEK,IAAM8I,KAAK,GAAG,SAARA,KAAKA,CAAAjN,IAAA,EAUO;AAAA,EAAA,IATrB+D,KAAK,GAAA/D,IAAA,CAAL+D,KAAK;IACLgI,aAAa,GAAA/L,IAAA,CAAb+L,aAAa;IACbxD,aAAa,GAAAvI,IAAA,CAAbuI,aAAa;IACbC,YAAY,GAAAxI,IAAA,CAAZwI,YAAY;IACZC,WAAW,GAAAzI,IAAA,CAAXyI,WAAW;IACXC,YAAY,GAAA1I,IAAA,CAAZ0I,YAAY;IACZC,OAAO,GAAA3I,IAAA,CAAP2I,OAAO;IACPP,cAAc,GAAApI,IAAA,CAAdoI,cAAc;IACdQ,OAAO,GAAA5I,IAAA,CAAP4I,OAAO,CAAA;AAEP,EAAA,IAAAwD,gBAAA,GAA0CC,eAAe,EAAE;IAAnDV,OAAO,GAAAS,gBAAA,CAAPT,OAAO;IAAUW,YAAY,GAAAF,gBAAA,CAApBG,MAAM,CAAA;AAEvB,EAAA,IAAMC,UAAU,GAAGC,aAAa,CAAyC1I,KAAK,EAAE;IAC5E2I,IAAI,EAAE,SAAAA,IAAAA,CAAA/L,IAAI,EAAA;MAAA,OAAIA,IAAI,CAACO,GAAG,CAAA;AAAA,KAAA;AACtBkK,IAAAA,IAAI,EAAEa,iBAAiB;AACvBU,IAAAA,KAAK,EAAEV,iBAAiB;AACxBW,IAAAA,MAAM,EAAEX,iBAAiB;AACzBY,IAAAA,KAAK,EAAEX,eAAe;AACtBK,IAAAA,MAAM,EAAED,YAAY;AACpBQ,IAAAA,SAAS,EAAE,CAACnB,OAAAA;AAChB,GAAC,CAAC,CAAA;EAEF,OACI7B,MAAA,CAAAiD,QAAA,EAAA;AAAAC,IAAAA,QAAA,EACKR,UAAU,CAAC,UAAC5C,aAAa,EAAEjJ,IAAI,EAAA;MAAA,OAC5BwI,aAAa,CAAC4C,aAAa,EAAE;AACzBpL,QAAAA,IAAI,EAAJA,IAAI;AACJ4H,QAAAA,aAAa,EAAbA,aAAa;AACbC,QAAAA,YAAY,EAAZA,YAAY;AACZC,QAAAA,WAAW,EAAXA,WAAW;AACXC,QAAAA,YAAY,EAAZA,YAAY;AACZC,QAAAA,OAAO,EAAPA,OAAO;AACPP,QAAAA,cAAc,EAAdA,cAAc;AACdQ,QAAAA,OAAO,EAAPA,OAAO;AACPgB,QAAAA,aAAa,EAAbA,aAAAA;AACJ,OAAC,CAAC,CAAA;KACN,CAAA;AAAC,GAAA,EAAA,KAAA,CAAA,EAAA,KACH,CAAC,CAAA;AAEX,CAAC;;;;ACvDD,IAAMsD,eAAe,GAAG,SAAlBA,eAAeA,CAAAlN,IAAA,EAaG;AAAA,EAAA,IAZpB+D,KAAK,GAAA/D,IAAA,CAAL+D,KAAK;IACLnC,KAAK,GAAA5B,IAAA,CAAL4B,KAAK;IACLC,MAAM,GAAA7B,IAAA,CAAN6B,MAAM;IACNsL,MAAM,GAAAnN,IAAA,CAANmN,MAAM;IACN3E,YAAY,GAAAxI,IAAA,CAAZwI,YAAY;IACZC,WAAW,GAAAzI,IAAA,CAAXyI,WAAW;IACXC,YAAY,GAAA1I,IAAA,CAAZ0I,YAAY;IACZC,OAAO,GAAA3I,IAAA,CAAP2I,OAAO;IACPP,cAAc,GAAApI,IAAA,CAAdoI,cAAc;IACdQ,OAAO,GAAA5I,IAAA,CAAP4I,OAAO;IACPwE,kBAAkB,GAAApN,IAAA,CAAlBoN,kBAAkB;IAClBC,KAAK,GAAArN,IAAA,CAALqN,KAAK,CAAA;AAEL,EAAA,IAAAxE,WAAA,GAAuCC,UAAU,EAAE;IAA3CwE,aAAa,GAAAzE,WAAA,CAAbyE,aAAa;IAAEtE,WAAW,GAAAH,WAAA,CAAXG,WAAW,CAAA;EAElC,IAAMI,gBAAgB,GAAGzC,WAAW,CAChC,UAAChG,IAAyB,EAAEuI,KAAiB,EAAK;IAC9Cd,cAAc,CAACzH,IAAI,CAAC,CAAA;IACpB,IAAIiI,OAAO,KAAKrG,SAAS,EAAE;AAAA,MAAA,IAAAgL,OAAA,CAAA;AACvBD,MAAAA,aAAa,CACTnE,aAAa,CAACP,OAAO,EAAE;AAAEjI,QAAAA,IAAI,EAAJA,IAAAA;OAAM,CAAC,EAChC,CAACA,IAAI,CAACoC,CAAC,GAAGoK,MAAM,CAACK,IAAI,EAAA,CAAAD,OAAA,GAAE5M,IAAI,CAACqC,CAAC,KAAA,IAAA,GAAAuK,OAAA,GAAI,CAAC,GAAGJ,MAAM,CAACM,GAAG,CAAC,EAChD,KACJ,CAAC,CAAA;AACL,KAAA;AACAjF,IAAAA,YAAY,IAAIA,YAAY,CAAC7H,IAAI,EAAEuI,KAAK,CAAC,CAAA;AAC7C,GAAC,EACD,CAACoE,aAAa,EAAE1E,OAAO,EAAEuE,MAAM,CAACK,IAAI,EAAEL,MAAM,CAACM,GAAG,EAAErF,cAAc,EAAEI,YAAY,CAClF,CAAC,CAAA;EAED,IAAMa,eAAe,GAAG1C,WAAW,CAC/B,UAAChG,IAAyB,EAAEuI,KAAiB,EAAK;IAC9Cd,cAAc,CAACzH,IAAI,CAAC,CAAA;IACpB,IAAIiI,OAAO,KAAKrG,SAAS,EAAE;AAAA,MAAA,IAAAmL,QAAA,CAAA;AACvBJ,MAAAA,aAAa,CACTnE,aAAa,CAACP,OAAO,EAAE;AAAEjI,QAAAA,IAAI,EAAJA,IAAAA;OAAM,CAAC,EAChC,CAACA,IAAI,CAACoC,CAAC,GAAGoK,MAAM,CAACK,IAAI,EAAA,CAAAE,QAAA,GAAE/M,IAAI,CAACqC,CAAC,KAAA,IAAA,GAAA0K,QAAA,GAAI,CAAC,GAAGP,MAAM,CAACM,GAAG,CAAC,EAChD,KACJ,CAAC,CAAA;AACL,KAAA;AACAhF,IAAAA,WAAW,IAAIA,WAAW,CAAC9H,IAAI,EAAEuI,KAAK,CAAC,CAAA;AAC3C,GAAC,EACD,CAACoE,aAAa,EAAE1E,OAAO,EAAEuE,MAAM,CAACK,IAAI,EAAEL,MAAM,CAACM,GAAG,EAAErF,cAAc,EAAEK,WAAW,CACjF,CAAC,CAAA;EAED,IAAMa,gBAAgB,GAAG3C,WAAW,CAChC,UAAChG,IAAyB,EAAEuI,KAAiB,EAAK;IAC9Cd,cAAc,CAAC,IAAI,CAAC,CAAA;AACpBY,IAAAA,WAAW,EAAE,CAAA;AACbN,IAAAA,YAAY,IAAIA,YAAY,CAAC/H,IAAI,EAAEuI,KAAK,CAAC,CAAA;GAC5C,EACD,CAACF,WAAW,EAAEZ,cAAc,EAAEM,YAAY,CAC9C,CAAC,CAAA;EAED,IAAMa,WAAW,GAAG5C,WAAW,CAC3B,UAAChG,IAAyB,EAAEuI,KAAiB,EAAK;AAC9CP,IAAAA,OAAO,IAAIA,OAAO,CAAChI,IAAI,EAAEuI,KAAK,CAAC,CAAA;AACnC,GAAC,EACD,CAACP,OAAO,CACZ,CAAC,CAAA;EAED,OACImB,MAAA,CAAC6D,MAAQ,EAAA;AACL5J,IAAAA,KAAK,EAAEA,KAAM;AACbnC,IAAAA,KAAK,EAAEA,KAAM;AACbC,IAAAA,MAAM,EAAEA,MAAO;AACf2G,IAAAA,YAAY,EAAEY,gBAAiB;AAC/BX,IAAAA,WAAW,EAAEY,eAAgB;AAC7BX,IAAAA,YAAY,EAAEY,gBAAiB;AAC/BX,IAAAA,OAAO,EAAEY,WAAY;AACrB6D,IAAAA,kBAAkB,EAAEA,kBAAmB;AACvCC,IAAAA,KAAK,EAAEA,KAAAA;AAAM,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA/C,IAAAA,QAAA,EAAAC,cAAA;IAAAC,UAAA,EAAA,EAAA;IAAAC,YAAA,EAAA,CAAA;AAAA,GAAA,EAAAC,OAChB,CAAC,CAAA;AAEV,CAAC,CAAA;AAEM,IAAMkD,IAAI,GAAGC,IAAI,CAACX,eAAe,CAA2B;;;;;ACrFnE,IAAMY,SAAS,GAAG,SAAZA,SAASA,CAAA9N,IAAA,EAyCc;AAAA,EAAA,IAxCzB4B,KAAK,GAAA5B,IAAA,CAAL4B,KAAK;IACLC,MAAM,GAAA7B,IAAA,CAAN6B,MAAM;IACEkM,aAAa,GAAA/N,IAAA,CAArBmN,MAAM;IACNlN,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACJkH,QAAQ,GAAAnH,IAAA,CAARmH,QAAQ;IAAA6G,SAAA,GAAAhO,IAAA,CACRE,IAAI;AAAJA,IAAAA,IAAI,GAAA8N,SAAA,KAAA,KAAA,CAAA,GAAGnC,eAAe,CAAC3L,IAAI,GAAA8N,SAAA;IAAAC,WAAA,GAAAjO,IAAA,CAC3B8B,MAAM;AAANA,IAAAA,MAAM,GAAAmM,WAAA,KAAA,KAAA,CAAA,GAAGpC,eAAe,CAAC/J,MAAM,GAAAmM,WAAA;IAAAC,aAAA,GAAAlO,IAAA,CAC/B0C,QAAQ;AAARA,IAAAA,QAAQ,GAAAwL,aAAA,KAAA,KAAA,CAAA,GAAGrC,eAAe,CAACnJ,QAAQ,GAAAwL,aAAA;IACnCvL,cAAc,GAAA3C,IAAA,CAAd2C,cAAc;IACdC,gBAAgB,GAAA5C,IAAA,CAAhB4C,gBAAgB;IAAAuL,cAAA,GAAAnO,IAAA,CAChB6C,SAAS;AAATA,IAAAA,SAAS,GAAAsL,cAAA,KAAA,KAAA,CAAA,GAAGtC,eAAe,CAAChJ,SAAS,GAAAsL,cAAA;IAAAC,kBAAA,GAAApO,IAAA,CACrC+L,aAAa;AAAbA,IAAAA,aAAa,GAAAqC,kBAAA,KAAA,KAAA,CAAA,GAAGvC,eAAe,CAACE,aAAa,GAAAqC,kBAAA;IAAAC,kBAAA,GAAArO,IAAA,CAC7C4E,aAAa;AAAbA,IAAAA,aAAa,GAAAyJ,kBAAA,KAAA,KAAA,CAAA,GAAGxC,eAAe,CAACjH,aAAa,GAAAyJ,kBAAA;IAC7CxJ,mBAAmB,GAAA7E,IAAA,CAAnB6E,mBAAmB;IACnBC,qBAAqB,GAAA9E,IAAA,CAArB8E,qBAAqB;IAAAwJ,cAAA,GAAAtO,IAAA,CACrB+E,SAAS;AAATA,IAAAA,SAAS,GAAAuJ,cAAA,KAAA,KAAA,CAAA,GAAGzC,eAAe,CAAC9G,SAAS,GAAAuJ,cAAA;IAAAC,kBAAA,GAAAvO,IAAA,CACrCgM,aAAa;AAAbA,IAAAA,aAAa,GAAAuC,kBAAA,KAAA,KAAA,CAAA,GAAG1C,eAAe,CAACG,aAAa,GAAAuC,kBAAA;IAAAC,WAAA,GAAAxO,IAAA,CAC7C8L,MAAM;AAANA,IAAAA,MAAM,GAAA0C,WAAA,KAAA,KAAA,CAAA,GAAG3C,eAAe,CAACC,MAAM,GAAA0C,WAAA;IAAAC,kBAAA,GAAAzO,IAAA,CAC/BuI,aAAa;AAAbA,IAAAA,aAAa,GAAAkG,kBAAA,KAAA,KAAA,CAAA,GAAG5C,eAAe,CAACtD,aAAa,GAAAkG,kBAAA;IAAAC,YAAA,GAAA1O,IAAA,CAC7CsL,OAAO;AAAPA,IAAAA,OAAO,GAAAoD,YAAA,KAAA,KAAA,CAAA,GAAG7C,eAAe,CAACP,OAAO,GAAAoD,YAAA;IAAAC,qBAAA,GAAA3O,IAAA,CACjCuL,sBAAsB;AAAtBA,IAAAA,sBAAsB,GAAAoD,qBAAA,KAAA,KAAA,CAAA,GAAG9C,eAAe,CAACN,sBAAsB,GAAAoD,qBAAA;IAAAC,cAAA,GAAA5O,IAAA,CAC/DyL,SAAS;AAATA,IAAAA,SAAS,GAAAmD,cAAA,KAAA,KAAA,CAAA,GAAG/C,eAAe,CAACJ,SAAS,GAAAmD,cAAA;IAAAC,qBAAA,GAAA7O,IAAA,CACrCuG,sBAAsB;AAAtBA,IAAAA,sBAAsB,GAAAsI,qBAAA,KAAA,KAAA,CAAA,GAAGhD,eAAe,CAACtF,sBAAsB,GAAAsI,qBAAA;IAAAC,qBAAA,GAAA9O,IAAA,CAC/DwG,wBAAwB;AAAxBA,IAAAA,wBAAwB,GAAAsI,qBAAA,KAAA,KAAA,CAAA,GAAGjD,eAAe,CAACrF,wBAAwB,GAAAsI,qBAAA;IAAAC,sBAAA,GAAA/O,IAAA,CACnEyG,sBAAsB;AAAtBA,IAAAA,sBAAsB,GAAAsI,sBAAA,KAAA,KAAA,CAAA,GAAGlD,eAAe,CAACpF,sBAAsB,GAAAsI,sBAAA;IAAAC,sBAAA,GAAAhP,IAAA,CAC/D0G,wBAAwB;AAAxBA,IAAAA,wBAAwB,GAAAsI,sBAAA,KAAA,KAAA,CAAA,GAAGnD,eAAe,CAACnF,wBAAwB,GAAAsI,sBAAA;IACnEC,gBAAgB,GAAAjP,IAAA,CAAhBiP,gBAAgB;IAChBC,eAAe,GAAAlP,IAAA,CAAfkP,eAAe;IACfC,gBAAgB,GAAAnP,IAAA,CAAhBmP,gBAAgB;IAChBC,WAAW,GAAApP,IAAA,CAAXoP,WAAW;IACXC,WAAW,GAAArP,IAAA,CAAXqP,WAAW;IACXC,gBAAgB,GAAAtP,IAAA,CAAhBsP,gBAAgB;IAChBC,eAAe,GAAAvP,IAAA,CAAfuP,eAAe;IACfC,gBAAgB,GAAAxP,IAAA,CAAhBwP,gBAAgB;IAChBC,WAAW,GAAAzP,IAAA,CAAXyP,WAAW;IACXC,WAAW,GAAA1P,IAAA,CAAX0P,WAAW;IAAAC,SAAA,GAAA3P,IAAA,CACX0L,IAAI;AAAJA,IAAAA,IAAI,GAAAiE,SAAA,KAAA,KAAA,CAAA,GAAG9D,eAAe,CAACH,IAAI,GAAAiE,SAAA;IAC3BC,SAAS,GAAA5P,IAAA,CAAT4P,SAAS;IACTC,cAAc,GAAA7P,IAAA,CAAd6P,cAAc;IACdC,eAAe,GAAA9P,IAAA,CAAf8P,eAAe,CAAA;EAEf,IAAAC,cAAA,GAAqEC,aAAa,CAC9EpO,KAAK,EACLC,MAAM,EACNkM,aACJ,CAAC;IAJOkC,UAAU,GAAAF,cAAA,CAAVE,UAAU;IAAEC,WAAW,GAAAH,cAAA,CAAXG,WAAW;IAAE/C,MAAM,GAAA4C,cAAA,CAAN5C,MAAM;IAAEgD,UAAU,GAAAJ,cAAA,CAAVI,UAAU;IAAEC,WAAW,GAAAL,cAAA,CAAXK,WAAW,CAAA;EAMhE,IAAAC,QAAA,GAAwDrJ,OAAO,CAAQ;AACnE/G,MAAAA,IAAI,EAAJA,IAAI;AACJkH,MAAAA,QAAQ,EAARA,QAAQ;AACRrF,MAAAA,MAAM,EAANA,MAAM;AACN5B,MAAAA,IAAI,EAAJA,IAAI;AACJ0B,MAAAA,KAAK,EAAEuO,UAAU;AACjBtO,MAAAA,MAAM,EAAEuO,WAAW;AACnB1N,MAAAA,QAAQ,EAARA,QAAQ;AACRC,MAAAA,cAAc,EAAdA,cAAc;AACdC,MAAAA,gBAAgB,EAAhBA,gBAAgB;AAChBC,MAAAA,SAAS,EAATA,SAAS;AACT0D,MAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBC,MAAAA,wBAAwB,EAAxBA,wBAAwB;AACxB5B,MAAAA,aAAa,EAAbA,aAAa;AACbC,MAAAA,mBAAmB,EAAnBA,mBAAmB;AACnBC,MAAAA,qBAAqB,EAArBA,qBAAqB;AACrBC,MAAAA,SAAS,EAATA,SAAS;AACT0B,MAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBC,MAAAA,wBAAwB,EAAxBA,wBAAAA;AACJ,KAAC,CAAC;IAnBM3C,KAAK,GAAAsM,QAAA,CAALtM,KAAK;IAAEkB,KAAK,GAAAoL,QAAA,CAALpL,KAAK;IAAEiD,aAAa,GAAAmI,QAAA,CAAbnI,aAAa;IAAEE,cAAc,GAAAiI,QAAA,CAAdjI,cAAc,CAAA;AAqBnD,EAAA,IAAMkI,SAAqC,GAAG;AAC1CrL,IAAAA,KAAK,EAAE,IAAI;AACXlB,IAAAA,KAAK,EAAE,IAAI;AACXwM,IAAAA,MAAM,EAAE,IAAI;AACZC,IAAAA,IAAI,EAAE,IAAA;GACT,CAAA;AAED,EAAA,IAAI1E,MAAM,CAACxH,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC1BgM,IAAAA,SAAS,CAACrL,KAAK,GACX6E,MAAA,CAACqC,KAAK,EAAA;AAEFlH,MAAAA,KAAK,EAAEA,KAAM;AACb+G,MAAAA,aAAa,EAAEA,aAAc;AAC7B9D,MAAAA,aAAa,EAAEA,aAAc;AAC7BK,MAAAA,aAAa,EAAEA,aAAc;AAC7BC,MAAAA,YAAY,EAAE8G,gBAAiB;AAC/B7G,MAAAA,WAAW,EAAE8G,eAAgB;AAC7B7G,MAAAA,YAAY,EAAE8G,gBAAiB;AAC/B7G,MAAAA,OAAO,EAAE8G,WAAY;AACrB7G,MAAAA,OAAO,EAAE8G,WAAAA;AAAY,KAAA,EATjB,OAAO,EAAA,KAAA,EAAA;AAAApF,MAAAA,QAAA,EAAAC,cAAA;MAAAC,UAAA,EAAA,EAAA;MAAAC,YAAA,EAAA,EAAA;AAAA,KAAA,EAAAC,OAUd,CACJ,CAAA;AACL,GAAA;AAEA,EAAA,IAAIoB,MAAM,CAACxH,QAAQ,CAAC,OAAO,CAAC,EAAE;AAC1BgM,IAAAA,SAAS,CAACvM,KAAK,GACX+F,MAAA,CAACmD,KAAK,EAAA;AAEFlJ,MAAAA,KAAK,EAAEA,KAAM;AACbgI,MAAAA,aAAa,EAAEA,aAAc;AAC7BxD,MAAAA,aAAa,EAAEA,aAAc;AAC7BC,MAAAA,YAAY,EAAEyG,gBAAiB;AAC/BxG,MAAAA,WAAW,EAAEyG,eAAgB;AAC7BxG,MAAAA,YAAY,EAAEyG,gBAAiB;AAC/BxG,MAAAA,OAAO,EAAEyG,WAAY;AACrBhH,MAAAA,cAAc,EAAEA,cAAe;AAC/BQ,MAAAA,OAAO,EAAEyG,WAAAA;AAAY,KAAA,EATjB,OAAO,EAAA,KAAA,EAAA;AAAA/E,MAAAA,QAAA,EAAAC,cAAA;MAAAC,UAAA,EAAA,GAAA;MAAAC,YAAA,EAAA,EAAA;AAAA,KAAA,EAAAC,OAUd,CACJ,CAAA;AACL,GAAA;EAEA,IAAIoB,MAAM,CAACxH,QAAQ,CAAC,MAAM,CAAC,IAAIiE,aAAa,IAAI+C,OAAO,EAAE;AACrDgF,IAAAA,SAAS,CAACE,IAAI,GACV1G,MAAA,CAAC8D,IAAI,EAAA;AAED7J,MAAAA,KAAK,EAAEA,KAAM;AACbnC,MAAAA,KAAK,EAAEuO,UAAW;AAClBtO,MAAAA,MAAM,EAAEuO,WAAY;AACpBjD,MAAAA,MAAM,EAAEA,MAAO;AACfC,MAAAA,kBAAkB,EAAE7B,sBAAuB;AAC3C8B,MAAAA,KAAK,EAAE5B,SAAU;AACjBjD,MAAAA,YAAY,EAAEyG,gBAAiB;AAC/BxG,MAAAA,WAAW,EAAEyG,eAAgB;AAC7BxG,MAAAA,YAAY,EAAEyG,gBAAiB;AAC/BxG,MAAAA,OAAO,EAAEyG,WAAY;AACrBhH,MAAAA,cAAc,EAAEA,cAAAA;AAAe,KAAA,EAX3B,MAAM,EAAA,KAAA,EAAA;AAAAkC,MAAAA,QAAA,EAAAC,cAAA;MAAAC,UAAA,EAAA,GAAA;MAAAC,YAAA,EAAA,EAAA;AAAA,KAAA,EAAAC,OAYb,CACJ,CAAA;AACL,GAAA;EAEA,IAAM+F,gBAAyC,GAAGrQ,OAAO,CACrD,YAAA;IAAA,OAAO;AACH2D,MAAAA,KAAK,EAALA,KAAK;AACLkB,MAAAA,KAAK,EAALA,KAAK;AACLkL,MAAAA,UAAU,EAAVA,UAAU;AACVC,MAAAA,WAAW,EAAXA,WAAAA;KACH,CAAA;GAAC,EACF,CAACrM,KAAK,EAAEkB,KAAK,EAAEkL,UAAU,EAAEC,WAAW,CAC1C,CAAC,CAAA;EAED,OACItG,MAAA,CAAC4G,UAAU,EAAA;AACP9O,IAAAA,KAAK,EAAEqO,UAAW;AAClBpO,IAAAA,MAAM,EAAEqO,WAAY;AACpB/C,IAAAA,MAAM,EAAEA,MAAO;AACfzB,IAAAA,IAAI,EAAEA,IAAK;AACXkE,IAAAA,SAAS,EAAEA,SAAU;AACrBC,IAAAA,cAAc,EAAEA,cAAe;AAC/BC,IAAAA,eAAe,EAAEA,eAAgB;IAAA9C,QAAA,EAEhClB,MAAM,CAAC7K,GAAG,CAAC,UAAC0P,KAAK,EAAEC,CAAC,EAAK;AAAA,MAAA,IAAAC,gBAAA,CAAA;AACtB,MAAA,IAAI,OAAOF,KAAK,KAAK,UAAU,EAAE;QAC7B,OAAO7G,MAAA,CAACgH,UAAQ,EAAA;AAAA9D,UAAAA,QAAA,EAAU7D,aAAa,CAACwH,KAAK,EAAEF,gBAAgB,CAAA;AAAC,SAAA,EAA1CG,CAAC,EAAA,KAAA,EAAA;AAAAtG,UAAAA,QAAA,EAAAC,cAAA;UAAAC,UAAA,EAAA,GAAA;UAAAC,YAAA,EAAA,EAAA;AAAA,SAAA,EAAAC,OAAoD,CAAC,CAAA;AAChF,OAAA;MAEA,OAAAmG,CAAAA,gBAAA,GAAOP,SAAS,IAATA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAGK,KAAK,CAAC,KAAA,IAAA,GAAAE,gBAAA,GAAI,IAAI,CAAA;KACpC,CAAA;AAAC,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAAvG,IAAAA,QAAA,EAAAC,cAAA;IAAAC,UAAA,EAAA,GAAA;IAAAC,YAAA,EAAA,CAAA;AAAA,GAAA,EAAAC,OACM,CAAC,CAAA;AAErB,CAAC,CAAA;IAEYqG,IAAI,GAAG,SAAPA,IAAIA,CAAApP,KAAA,EAAA;AAAA,EAAA,IAAAqP,mBAAA,GAAArP,KAAA,CACb4G,aAAa;AAAbA,IAAAA,aAAa,GAAAyI,mBAAA,KAAA,KAAA,CAAA,GAAGnF,eAAe,CAACtD,aAAa,GAAAyI,mBAAA;IAAAC,aAAA,GAAAtP,KAAA,CAC7CgK,OAAO;AAAPA,IAAAA,OAAO,GAAAsF,aAAA,KAAA,KAAA,CAAA,GAAGpF,eAAe,CAACF,OAAO,GAAAsF,aAAA;IAAAC,kBAAA,GAAAvP,KAAA,CACjCiK,YAAY;AAAZA,IAAAA,YAAY,GAAAsF,kBAAA,KAAA,KAAA,CAAA,GAAGrF,eAAe,CAACD,YAAY,GAAAsF,kBAAA;IAC3C3L,KAAK,GAAA5D,KAAA,CAAL4D,KAAK;IACL4L,aAAa,GAAAxP,KAAA,CAAbwP,aAAa;AACVC,IAAAA,UAAU,GAAAC,6BAAA,CAAA1P,KAAA,EAAA2P,SAAA,CAAA,CAAA;EAAA,OAEbxH,MAAA,CAACyH,SAAS,EAAA;AAEF5F,IAAAA,OAAO,EAAPA,OAAO;AACPpD,IAAAA,aAAa,EAAbA,aAAa;AACbqD,IAAAA,YAAY,EAAZA,YAAY;AACZuF,IAAAA,aAAa,EAAbA,aAAa;AACb5L,IAAAA,KAAK,EAALA,KAAK;AAAAyH,IAAAA,QAAA,EAGTlD,MAAA,CAACgE,SAAS,EAAA5J,QAAA,CAAA;AAAQqE,MAAAA,aAAa,EAAEA,aAAAA;AAAc,KAAA,EAAK6I,UAAU,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA9G,MAAAA,QAAA,EAAAC,cAAA;MAAAC,UAAA,EAAA,GAAA;MAAAC,YAAA,EAAA,CAAA;AAAA,KAAA,EAAAC,OAAG,CAAA;AAAC,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAAJ,IAAAA,QAAA,EAAAC,cAAA;IAAAC,UAAA,EAAA,GAAA;IAAAC,YAAA,EAAA,CAAA;AAAA,GAAA,EAAAC,OAC3D,CAAC,CAAA;AAAA;;;;IC5LH8G,cAAc,GAAG,SAAjBA,cAAcA,CAA2BC,KAAoC,EAAA;EAAA,OACtF3H,MAAA,CAAC4H,iBAAiB,EAAA;IAAA1E,QAAA,EACb,SAAAA,QAAAA,CAAAhN,IAAA,EAAA;AAAA,MAAA,IAAG4B,KAAK,GAAA5B,IAAA,CAAL4B,KAAK;QAAEC,MAAM,GAAA7B,IAAA,CAAN6B,MAAM,CAAA;AAAA,MAAA,OAAOiI,MAAA,CAACiH,IAAI,EAAA7M,QAAA,CAAA;AAAQtC,QAAAA,KAAK,EAAEA,KAAM;AAACC,QAAAA,MAAM,EAAEA,MAAAA;AAAO,OAAA,EAAK4P,KAAK,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAAnH,QAAAA,QAAA,EAAAC,YAAA;QAAAC,UAAA,EAAA,CAAA;QAAAC,YAAA,EAAA,EAAA;AAAA,OAAA,EAAAC,KAAG,CAAC,CAAA;AAAA,KAAA;AAAA,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAAJ,IAAAA,QAAA,EAAAC,YAAA;IAAAC,UAAA,EAAA,CAAA;IAAAC,YAAA,EAAA,CAAA;AAAA,GAAA,EAAAC,KACjE,CAAC,CAAA;AAAA;;;;"}