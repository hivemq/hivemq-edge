{"version":3,"file":"nivo-dendogram.cjs.js","sources":["../src/hooks.ts","../src/Link.tsx","../src/defaults.ts","../src/Node.tsx","../src/Links.tsx","../src/Nodes.tsx","../src/Mesh.tsx","../src/Dendogram.tsx","../src/ResponsiveDendogram.tsx"],"sourcesContent":["import { createElement, MouseEvent, useCallback, useMemo, useState } from 'react'\nimport { hierarchy as d3Hierarchy, cluster as d3Cluster } from 'd3-hierarchy'\nimport { scaleLinear, ScaleLinear } from 'd3-scale'\nimport { link } from 'd3-shape'\nimport { usePropertyAccessor, useTheme } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport {\n    DefaultDatum,\n    HierarchyDendogramNode,\n    HierarchyDendogramLink,\n    DendogramDataProps,\n    CommonProps,\n    Layout,\n    ComputedNode,\n    ComputedLink,\n    NodeMouseEventHandler,\n    NodeTooltip,\n    IntermediateComputedLink,\n    LinkThicknessFunction,\n    LinkMouseEventHandler,\n    LinkTooltip,\n    IntermediateComputedNode,\n    CurrentNodeSetter,\n    NodeSizeModifierFunction,\n    LinkThicknessModifierFunction,\n} from './types'\nimport { commonDefaultProps } from './defaults'\n\nconsole.log(link)\n\nexport const useRoot = <Datum>({\n    data,\n    getIdentity,\n}: {\n    data: DendogramDataProps<Datum>['data']\n    getIdentity: (node: Datum) => string\n}) =>\n    useMemo(() => {\n        const root = d3Hierarchy<Datum>(data) as HierarchyDendogramNode<Datum>\n        const cluster = d3Cluster<Datum>().size([1, 1])\n\n        root.eachBefore(node => {\n            const ancestors = node\n                .ancestors()\n                .filter(ancestor => ancestor !== node)\n                .reverse()\n            const ancestorIds = ancestors.map(ancestor => getIdentity(ancestor.data))\n\n            node.ancestorIds = ancestorIds\n            node.uid = [...ancestorIds, getIdentity(node.data)].join('.')\n            node.ancestorUids = ancestors.map(ancestor => ancestor.uid!)\n        })\n\n        root.each(node => {\n            node.descendantUids = node\n                .descendants()\n                .filter(descendant => descendant !== node)\n                .map(descendant => descendant.uid!)\n        })\n\n        cluster(root)\n\n        return root\n    }, [data, getIdentity])\n\n/**\n * By default, the x/y positions are computed for a 0~1 range,\n * so that we can easily change the layout without having to\n * recompute the nodes.\n */\nconst useCartesianScales = ({\n    width,\n    height,\n    layout,\n}: {\n    width: number\n    height: number\n    layout: Layout\n}) =>\n    useMemo(() => {\n        const xScale = scaleLinear().domain([0, 1])\n        const yScale = scaleLinear().domain([0, 1])\n\n        if (layout === 'top-to-bottom') {\n            xScale.range([0, width])\n            yScale.range([0, height])\n        } else if (layout === 'right-to-left') {\n            xScale.range([width, 0])\n            yScale.range([0, height])\n        } else if (layout === 'bottom-to-top') {\n            xScale.range([width, 0])\n            yScale.range([height, 0])\n        } else if (layout === 'left-to-right') {\n            xScale.range([0, width])\n            yScale.range([height, 0])\n        }\n\n        return {\n            xScale,\n            yScale,\n        }\n    }, [width, height, layout])\n\nconst useNodeSize = <Datum>(size: Exclude<CommonProps<Datum>['nodeSize'], undefined>) =>\n    useMemo(() => {\n        if (typeof size === 'function') return size\n        return () => size\n    }, [size])\n\nconst useNodeSizeModifier = <Datum>(size?: NodeSizeModifierFunction<Datum> | number) =>\n    useMemo(() => {\n        if (size === undefined) return (node: ComputedNode<Datum>) => node.size\n        if (typeof size === 'function') return size\n        return () => size\n    }, [size])\n\nconst useNodes = <Datum>({\n    root,\n    xScale,\n    yScale,\n    layout,\n    getIdentity,\n    nodeSize,\n    activeNodeSize,\n    inactiveNodeSize,\n    nodeColor,\n}: {\n    root: HierarchyDendogramNode<Datum>\n    xScale: ScaleLinear<number, number>\n    yScale: ScaleLinear<number, number>\n    layout: Layout\n    getIdentity: (node: Datum) => string\n    nodeSize: Exclude<CommonProps<Datum>['nodeSize'], undefined>\n    activeNodeSize?: CommonProps<Datum>['activeNodeSize']\n    inactiveNodeSize?: CommonProps<Datum>['inactiveNodeSize']\n    nodeColor: Exclude<CommonProps<Datum>['nodeColor'], undefined>\n}) => {\n    const intermediateNodes = useMemo<IntermediateComputedNode<Datum>[]>(() => {\n        return root.descendants().map(node => {\n            let x: number\n            let y: number\n            if (layout === 'top-to-bottom' || layout === 'bottom-to-top') {\n                x = xScale(node.x!)\n                y = yScale(node.y!)\n            } else {\n                x = xScale(node.y!)\n                y = yScale(node.x!)\n            }\n\n            const id = getIdentity(node.data)\n\n            return {\n                path: [...node.ancestorIds!, id],\n                uid: node.uid!,\n                ancestorIds: node.ancestorIds!,\n                ancestorUids: node.ancestorUids!,\n                descendantUids: node.descendantUids!,\n                id,\n                data: node.data,\n                depth: node.depth,\n                height: node.height,\n                x,\n                y,\n            }\n        })\n    }, [root, getIdentity, layout, xScale, yScale])\n\n    const getNodeSize = useNodeSize<Datum>(nodeSize)\n    const getActiveNodeSize = useNodeSizeModifier<Datum>(activeNodeSize)\n    const getInactiveNodeSize = useNodeSizeModifier<Datum>(inactiveNodeSize)\n    const getNodeColor = useOrdinalColorScale(nodeColor, 'uid')\n\n    const [activeNodeUids, setActiveNodeUids] = useState<string[]>([])\n\n    const computed = useMemo(() => {\n        const nodeByUid: Record<string, ComputedNode<Datum>> = {}\n\n        const nodes: ComputedNode<Datum>[] = intermediateNodes.map(intermediateNode => {\n            const computedNode: ComputedNode<Datum> = {\n                ...intermediateNode,\n                size: getNodeSize(intermediateNode),\n                color: getNodeColor(intermediateNode),\n                isActive: null,\n            }\n\n            if (activeNodeUids.length > 0) {\n                computedNode.isActive = activeNodeUids.includes(computedNode.uid)\n                if (computedNode.isActive) {\n                    computedNode.size = getActiveNodeSize(computedNode)\n                } else {\n                    computedNode.size = getInactiveNodeSize(computedNode)\n                }\n            }\n\n            nodeByUid[computedNode.uid] = computedNode\n\n            return computedNode\n        })\n\n        return { nodes, nodeByUid }\n    }, [\n        intermediateNodes,\n        getNodeSize,\n        getActiveNodeSize,\n        getInactiveNodeSize,\n        getNodeColor,\n        activeNodeUids,\n    ])\n\n    return { ...computed, setActiveNodeUids }\n}\n\nconst useLinkThicknessModifier = <Datum>(\n    thickness?: LinkThicknessModifierFunction<Datum> | number\n) =>\n    useMemo(() => {\n        if (thickness === undefined) return (link: ComputedLink<Datum>) => link.thickness\n        if (typeof thickness === 'function') return thickness\n        return () => thickness\n    }, [thickness])\n\nconst useLinks = <Datum>({\n    root,\n    nodeByUid,\n    linkThickness,\n    activeLinkThickness,\n    inactiveLinkThickness,\n    linkColor,\n}: {\n    root: HierarchyDendogramNode<Datum>\n    nodeByUid: Record<string, ComputedNode<Datum>>\n    linkThickness: Exclude<CommonProps<Datum>['linkThickness'], undefined>\n    activeLinkThickness?: CommonProps<Datum>['activeLinkThickness']\n    inactiveLinkThickness?: CommonProps<Datum>['inactiveLinkThickness']\n    linkColor: Exclude<CommonProps<Datum>['linkColor'], undefined>\n}) => {\n    const intermediateLinks = useMemo<IntermediateComputedLink<Datum>[]>(() => {\n        return (root.links() as HierarchyDendogramLink<Datum>[]).map(link => {\n            return {\n                id: `${link.source.uid}:${link.target.uid}`,\n                // Replace with computed nodes.\n                source: nodeByUid[link.source.uid!],\n                target: nodeByUid[link.target.uid!],\n            }\n        })\n    }, [root, nodeByUid])\n\n    const getLinkThickness: LinkThicknessFunction<Datum> = useMemo(() => {\n        if (typeof linkThickness === 'function') return linkThickness\n        return () => linkThickness\n    }, [linkThickness])\n    const getActiveLinkThickness = useLinkThicknessModifier(activeLinkThickness)\n    const getInactiveLinkThickness = useLinkThicknessModifier(inactiveLinkThickness)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor(linkColor, theme)\n\n    const [activeLinkIds, setActiveLinkIds] = useState<string[]>([])\n\n    const links = useMemo(() => {\n        return intermediateLinks.map(intermediateLink => {\n            const computedLink: ComputedLink<Datum> = {\n                ...intermediateLink,\n                thickness: getLinkThickness(intermediateLink),\n                color: getLinkColor(intermediateLink),\n                isActive: null,\n            }\n\n            if (activeLinkIds.length > 0) {\n                computedLink.isActive = activeLinkIds.includes(computedLink.id)\n                if (computedLink.isActive) {\n                    computedLink.thickness = getActiveLinkThickness(computedLink)\n                } else {\n                    computedLink.thickness = getInactiveLinkThickness(computedLink)\n                }\n            }\n\n            return computedLink\n        })\n    }, [\n        intermediateLinks,\n        getLinkThickness,\n        getActiveLinkThickness,\n        getInactiveLinkThickness,\n        getLinkColor,\n        activeLinkIds,\n    ])\n\n    return {\n        links,\n        setActiveLinkIds,\n    }\n}\n\nconst useSetCurrentNode = <Datum>({\n    setActiveNodeUids,\n    highlightAncestorNodes,\n    highlightDescendantNodes,\n    links,\n    setActiveLinkIds,\n    highlightAncestorLinks,\n    highlightDescendantLinks,\n}: {\n    setActiveNodeUids: (uids: string[]) => void\n    highlightAncestorNodes: boolean\n    highlightDescendantNodes: boolean\n    links: ComputedLink<Datum>[]\n    setActiveLinkIds: (ids: string[]) => void\n    highlightAncestorLinks: boolean\n    highlightDescendantLinks: boolean\n}) =>\n    useCallback(\n        (node: ComputedNode<Datum> | null) => {\n            if (node === null) {\n                setActiveNodeUids([])\n                setActiveLinkIds([])\n            } else {\n                let nodeUids: string[] = [node.uid]\n                if (highlightAncestorNodes) {\n                    nodeUids = [...nodeUids, ...node.ancestorUids]\n                }\n                if (highlightDescendantNodes) {\n                    nodeUids = [...nodeUids, ...node.descendantUids]\n                }\n                setActiveNodeUids(nodeUids)\n\n                const linkIds: string[] = []\n                if (highlightAncestorLinks) {\n                    links\n                        .filter(link => {\n                            return (\n                                link.target.uid === node.uid ||\n                                node.ancestorUids.includes(link.target.uid)\n                            )\n                        })\n                        .forEach(link => {\n                            linkIds.push(link.id)\n                        })\n                }\n                if (highlightDescendantLinks) {\n                    links\n                        .filter(link => {\n                            return (\n                                link.source.uid === node.uid ||\n                                node.descendantUids.includes(link.source.uid)\n                            )\n                        })\n                        .forEach(link => {\n                            linkIds.push(link.id)\n                        })\n                }\n                setActiveLinkIds(linkIds)\n            }\n        },\n        [\n            setActiveNodeUids,\n            highlightAncestorNodes,\n            highlightDescendantNodes,\n            links,\n            setActiveLinkIds,\n            highlightAncestorLinks,\n            highlightDescendantLinks,\n        ]\n    )\n\nexport const useDendogram = <Datum = DefaultDatum>({\n    data,\n    width,\n    height,\n    identity = commonDefaultProps.identity,\n    layout = commonDefaultProps.layout,\n    nodeSize = commonDefaultProps.nodeSize,\n    activeNodeSize,\n    inactiveNodeSize,\n    nodeColor = commonDefaultProps.nodeColor,\n    highlightAncestorNodes = commonDefaultProps.highlightAncestorNodes,\n    highlightDescendantNodes = commonDefaultProps.highlightDescendantNodes,\n    linkThickness = commonDefaultProps.linkThickness,\n    linkColor = commonDefaultProps.linkColor,\n    activeLinkThickness,\n    inactiveLinkThickness,\n    highlightAncestorLinks = commonDefaultProps.highlightAncestorLinks,\n    highlightDescendantLinks = commonDefaultProps.highlightDescendantLinks,\n}: {\n    data: DendogramDataProps<Datum>['data']\n    width: number\n    height: number\n    identity?: CommonProps<Datum>['identity']\n    layout?: Layout\n    nodeSize?: CommonProps<Datum>['nodeSize']\n    activeNodeSize?: CommonProps<Datum>['activeNodeSize']\n    inactiveNodeSize?: CommonProps<Datum>['inactiveNodeSize']\n    nodeColor?: CommonProps<Datum>['nodeColor']\n    highlightAncestorNodes?: boolean\n    highlightDescendantNodes?: boolean\n    linkThickness?: CommonProps<Datum>['linkThickness']\n    activeLinkThickness?: CommonProps<Datum>['activeLinkThickness']\n    inactiveLinkThickness?: CommonProps<Datum>['inactiveLinkThickness']\n    linkColor?: CommonProps<Datum>['linkColor']\n    highlightAncestorLinks?: boolean\n    highlightDescendantLinks?: boolean\n}) => {\n    const getIdentity = usePropertyAccessor(identity)\n    const root = useRoot<Datum>({ data, getIdentity })\n\n    const { xScale, yScale } = useCartesianScales({ width, height, layout })\n    const { nodes, nodeByUid, setActiveNodeUids } = useNodes<Datum>({\n        root,\n        xScale,\n        yScale,\n        layout,\n        getIdentity,\n        nodeSize,\n        activeNodeSize,\n        inactiveNodeSize,\n        nodeColor,\n    })\n\n    const { links, setActiveLinkIds } = useLinks<Datum>({\n        root,\n        nodeByUid,\n        linkThickness,\n        activeLinkThickness,\n        inactiveLinkThickness,\n        linkColor,\n    })\n\n    const setCurrentNode = useSetCurrentNode<Datum>({\n        setActiveNodeUids,\n        highlightAncestorNodes,\n        highlightDescendantNodes,\n        links,\n        setActiveLinkIds,\n        highlightAncestorLinks,\n        highlightDescendantLinks,\n    })\n\n    return {\n        nodes,\n        links,\n        setCurrentNode,\n    }\n}\n\n/**\n * This hook may generates mouse event handlers for a node according to the main chart props.\n * It's used for the default `Node` component and may be used for custom nodes\n * to simplify their implementation.\n */\nexport const useNodeMouseEventHandlers = <Datum>(\n    node: ComputedNode<Datum>,\n    {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrentNode,\n        tooltip,\n    }: {\n        isInteractive: boolean\n        onMouseEnter?: NodeMouseEventHandler<Datum>\n        onMouseMove?: NodeMouseEventHandler<Datum>\n        onMouseLeave?: NodeMouseEventHandler<Datum>\n        onClick?: NodeMouseEventHandler<Datum>\n        setCurrentNode: CurrentNodeSetter<Datum>\n        tooltip?: NodeTooltip<Datum>\n    }\n) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (event: MouseEvent) => {\n            tooltip !== undefined &&\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        node,\n                    }),\n                    event\n                )\n        },\n        [node, tooltip, showTooltipFromEvent]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent) => {\n            setCurrentNode(node)\n            showTooltip(event)\n            onMouseEnter?.(node, event)\n        },\n        [node, showTooltip, setCurrentNode, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent) => {\n            showTooltip(event)\n            onMouseMove?.(node, event)\n        },\n        [node, showTooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent) => {\n            setCurrentNode(null)\n            hideTooltip()\n            onMouseLeave?.(node, event)\n        },\n        [node, hideTooltip, setCurrentNode, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent) => {\n            onClick?.(node, event)\n        },\n        [node, onClick]\n    )\n\n    return {\n        onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n        onMouseMove: isInteractive ? handleMouseMove : undefined,\n        onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n        onClick: isInteractive ? handleClick : undefined,\n    }\n}\n\n/**\n * This hook may generates mouse event handlers for a node according to the main chart props.\n * It's used for the default `Node` component and may be used for custom nodes\n * to simplify their implementation.\n */\nexport const useLinkMouseEventHandlers = <Datum>(\n    link: ComputedLink<Datum>,\n    {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    }: {\n        isInteractive: boolean\n        onMouseEnter?: LinkMouseEventHandler<Datum>\n        onMouseMove?: LinkMouseEventHandler<Datum>\n        onMouseLeave?: LinkMouseEventHandler<Datum>\n        onClick?: LinkMouseEventHandler<Datum>\n        tooltip?: LinkTooltip<Datum>\n    }\n) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const showTooltip = useCallback(\n        (event: MouseEvent) => {\n            tooltip !== undefined &&\n                showTooltipFromEvent(\n                    createElement(tooltip, {\n                        link,\n                    }),\n                    event\n                )\n        },\n        [link, tooltip, showTooltipFromEvent]\n    )\n\n    const handleMouseEnter = useCallback(\n        (event: MouseEvent) => {\n            showTooltip(event)\n            onMouseEnter?.(link, event)\n        },\n        [link, showTooltip, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (event: MouseEvent) => {\n            showTooltip(event)\n            onMouseMove?.(link, event)\n        },\n        [link, showTooltip, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (event: MouseEvent) => {\n            hideTooltip()\n            onMouseLeave?.(link, event)\n        },\n        [link, hideTooltip, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (event: MouseEvent) => {\n            onClick?.(link, event)\n        },\n        [link, onClick]\n    )\n\n    return {\n        onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n        onMouseMove: isInteractive ? handleMouseMove : undefined,\n        onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n        onClick: isInteractive ? handleClick : undefined,\n    }\n}\n","import { animated, to } from '@react-spring/web'\nimport { line as d3Line } from 'd3-shape'\nimport { LinkComponentProps } from './types'\nimport { useLinkMouseEventHandlers } from './hooks'\n\nconst lineGenerator = d3Line()\n\nexport const Link = <Datum,>({\n    link,\n    animatedProps,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: LinkComponentProps<Datum>) => {\n    const eventHandlers = useLinkMouseEventHandlers<Datum>(link, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    return (\n        <animated.path\n            d={to(\n                [\n                    animatedProps.sourceX,\n                    animatedProps.sourceY,\n                    animatedProps.targetX,\n                    animatedProps.targetY,\n                ],\n                (sourceX, sourceY, targetX, targetY) => {\n                    return lineGenerator([\n                        [sourceX, sourceY],\n                        [targetX, targetY],\n                    ])\n                }\n            )}\n            strokeWidth={animatedProps.thickness}\n            stroke={animatedProps.color}\n            {...eventHandlers}\n        />\n    )\n}\n","import { CommonProps, DendogramSvgProps } from './types'\nimport { Node } from './Node'\nimport { Link } from './Link'\n\nexport const commonDefaultProps: Pick<\n    CommonProps<any>,\n    | 'identity'\n    | 'layout'\n    | 'nodeSize'\n    | 'nodeColor'\n    | 'linkThickness'\n    | 'linkColor'\n    | 'isInteractive'\n    | 'useMesh'\n    | 'meshDetectionThreshold'\n    | 'debugMesh'\n    | 'highlightAncestorNodes'\n    | 'highlightDescendantNodes'\n    | 'highlightAncestorLinks'\n    | 'highlightDescendantLinks'\n    | 'role'\n    | 'animate'\n    | 'motionConfig'\n> = {\n    identity: 'id',\n    layout: 'top-to-bottom',\n    nodeSize: 16,\n    nodeColor: { scheme: 'nivo' },\n    linkThickness: 1,\n    linkColor: { from: 'source.color', modifiers: [['opacity', 0.3]] },\n    isInteractive: true,\n    useMesh: true,\n    meshDetectionThreshold: Infinity,\n    debugMesh: false,\n    highlightAncestorNodes: true,\n    highlightDescendantNodes: false,\n    highlightAncestorLinks: true,\n    highlightDescendantLinks: false,\n    role: 'img',\n    animate: true,\n    motionConfig: 'gentle',\n}\n\nexport const svgDefaultProps: typeof commonDefaultProps &\n    Required<Pick<DendogramSvgProps<any>, 'layers' | 'nodeComponent' | 'linkComponent'>> = {\n    ...commonDefaultProps,\n    layers: ['links', 'nodes', 'mesh'],\n    nodeComponent: Node,\n    linkComponent: Link,\n}\n","import { animated } from '@react-spring/web'\nimport { NodeComponentProps } from './types'\nimport { useNodeMouseEventHandlers } from './hooks'\n\nexport const Node = <Datum,>({\n    node,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentNode,\n    tooltip,\n    animatedProps,\n}: NodeComponentProps<Datum>) => {\n    const eventHandlers = useNodeMouseEventHandlers<Datum>(node, {\n        isInteractive,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        setCurrentNode,\n        tooltip,\n    })\n\n    return (\n        <animated.circle\n            r={animatedProps.size.to(size => size / 2)}\n            fill={animatedProps.color}\n            cx={animatedProps.x}\n            cy={animatedProps.y}\n            {...eventHandlers}\n        />\n    )\n}\n","import { createElement } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    ComputedLink,\n    LinkComponent,\n    LinkMouseEventHandler,\n    LinkTooltip,\n    LinkAnimatedProps,\n} from './types'\n\ninterface LinksProps<Datum> {\n    links: ComputedLink<Datum>[]\n    linkComponent: LinkComponent<Datum>\n    isInteractive: boolean\n    onMouseEnter?: LinkMouseEventHandler<Datum>\n    onMouseMove?: LinkMouseEventHandler<Datum>\n    onMouseLeave?: LinkMouseEventHandler<Datum>\n    onClick?: LinkMouseEventHandler<Datum>\n    tooltip?: LinkTooltip<Datum>\n}\n\nconst regularTransition = <Datum,>(link: ComputedLink<Datum>): LinkAnimatedProps => ({\n    sourceX: link.source.x,\n    sourceY: link.source.y,\n    targetX: link.target.x,\n    targetY: link.target.y,\n    thickness: link.thickness,\n    color: link.color,\n})\nconst leaveTransition = <Datum,>(link: ComputedLink<Datum>): LinkAnimatedProps => ({\n    sourceX: link.source.x,\n    sourceY: link.source.y,\n    targetX: link.target.x,\n    targetY: link.target.y,\n    thickness: link.thickness,\n    color: link.color,\n})\n\nexport const Links = <Datum,>({\n    links,\n    linkComponent,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: LinksProps<Datum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<ComputedLink<Datum>, LinkAnimatedProps>(links, {\n        keys: link => link.id,\n        from: regularTransition,\n        enter: regularTransition,\n        update: regularTransition,\n        leave: leaveTransition,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((animatedProps, link) =>\n                createElement(linkComponent, {\n                    link,\n                    animatedProps,\n                    isInteractive,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                    onClick,\n                    tooltip,\n                })\n            )}\n        </>\n    )\n}\n","import { createElement } from 'react'\nimport { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport {\n    ComputedNode,\n    CurrentNodeSetter,\n    NodeComponent,\n    NodeMouseEventHandler,\n    NodeTooltip,\n    NodeAnimatedProps,\n} from './types'\n\ninterface NodesProps<Datum> {\n    nodes: ComputedNode<Datum>[]\n    nodeComponent: NodeComponent<Datum>\n    isInteractive: boolean\n    onMouseEnter?: NodeMouseEventHandler<Datum>\n    onMouseMove?: NodeMouseEventHandler<Datum>\n    onMouseLeave?: NodeMouseEventHandler<Datum>\n    onClick?: NodeMouseEventHandler<Datum>\n    setCurrentNode: CurrentNodeSetter<Datum>\n    tooltip?: NodeTooltip<Datum>\n}\n\nconst regularTransition = <Datum,>(node: ComputedNode<Datum>): NodeAnimatedProps => ({\n    x: node.x,\n    y: node.y,\n    size: node.size,\n    color: node.color,\n})\nconst leaveTransition = <Datum,>(node: ComputedNode<Datum>): NodeAnimatedProps => ({\n    x: node.x,\n    y: node.y,\n    size: 0,\n    color: node.color,\n})\n\nexport const Nodes = <Datum,>({\n    nodes,\n    nodeComponent,\n    isInteractive,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentNode,\n    tooltip,\n}: NodesProps<Datum>) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const transition = useTransition<ComputedNode<Datum>, NodeAnimatedProps>(nodes, {\n        keys: node => node.uid,\n        from: regularTransition,\n        enter: regularTransition,\n        update: regularTransition,\n        leave: leaveTransition,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {transition((animatedProps, node) =>\n                createElement(nodeComponent, {\n                    node,\n                    isInteractive,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                    onClick,\n                    setCurrentNode,\n                    tooltip,\n                    animatedProps,\n                })\n            )}\n        </>\n    )\n}\n","import { MouseEvent } from 'react'\nimport { createElement, memo, useCallback } from 'react'\nimport { Margin } from '@nivo/core'\nimport { useTooltip } from '@nivo/tooltip'\nimport { Mesh as BaseMesh } from '@nivo/voronoi'\nimport { ComputedNode, CurrentNodeSetter, NodeMouseEventHandler, NodeTooltip } from './types'\n\ninterface MeshProps<Datum> {\n    nodes: ComputedNode<Datum>[]\n    width: number\n    height: number\n    margin: Margin\n    onMouseEnter?: NodeMouseEventHandler<Datum>\n    onMouseMove?: NodeMouseEventHandler<Datum>\n    onMouseLeave?: NodeMouseEventHandler<Datum>\n    onClick?: NodeMouseEventHandler<Datum>\n    setCurrentNode: CurrentNodeSetter<Datum>\n    tooltip?: NodeTooltip<Datum>\n    detectionThreshold: number\n    debug: boolean\n}\n\nconst NonMemoizedMesh = <Datum,>({\n    nodes,\n    width,\n    height,\n    margin,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    setCurrentNode,\n    tooltip,\n    detectionThreshold,\n    debug,\n}: MeshProps<Datum>) => {\n    const { showTooltipAt, hideTooltip } = useTooltip()\n\n    const handleMouseEnter = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            setCurrentNode(node)\n            if (tooltip !== undefined) {\n                showTooltipAt(\n                    createElement(tooltip, { node }),\n                    [node.x + margin.left, node.y ?? 0 + margin.top],\n                    'top'\n                )\n            }\n            onMouseEnter && onMouseEnter(node, event)\n        },\n        [showTooltipAt, tooltip, margin.left, margin.top, setCurrentNode, onMouseEnter]\n    )\n\n    const handleMouseMove = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            setCurrentNode(node)\n            if (tooltip !== undefined) {\n                showTooltipAt(\n                    createElement(tooltip, { node }),\n                    [node.x + margin.left, node.y ?? 0 + margin.top],\n                    'top'\n                )\n            }\n            onMouseMove && onMouseMove(node, event)\n        },\n        [showTooltipAt, tooltip, margin.left, margin.top, setCurrentNode, onMouseMove]\n    )\n\n    const handleMouseLeave = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            setCurrentNode(null)\n            hideTooltip()\n            onMouseLeave && onMouseLeave(node, event)\n        },\n        [hideTooltip, setCurrentNode, onMouseLeave]\n    )\n\n    const handleClick = useCallback(\n        (node: ComputedNode<Datum>, event: MouseEvent) => {\n            onClick && onClick(node, event)\n        },\n        [onClick]\n    )\n\n    return (\n        <BaseMesh\n            nodes={nodes}\n            width={width}\n            height={height}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            detectionThreshold={detectionThreshold}\n            debug={debug}\n        />\n    )\n}\n\nexport const Mesh = memo(NonMemoizedMesh) as typeof NonMemoizedMesh\n","import { createElement, Fragment, ReactNode, useMemo } from 'react'\nimport { Container, useDimensions, SvgWrapper } from '@nivo/core'\nimport { DefaultDatum, LayerId, DendogramSvgProps, CustomLayerProps } from './types'\nimport { svgDefaultProps } from './defaults'\nimport { useDendogram } from './hooks'\nimport { Links } from './Links'\nimport { Nodes } from './Nodes'\nimport { Mesh } from './Mesh'\n\ntype InnerDendogramProps<Datum> = Omit<\n    DendogramSvgProps<Datum>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerDendogram = <Datum,>({\n    width,\n    height,\n    margin: partialMargin,\n    data,\n    identity,\n    nodeSize = svgDefaultProps.nodeSize,\n    activeNodeSize,\n    inactiveNodeSize,\n    nodeColor = svgDefaultProps.nodeColor,\n    nodeComponent = svgDefaultProps.nodeComponent,\n    linkThickness = svgDefaultProps.linkThickness,\n    activeLinkThickness,\n    inactiveLinkThickness,\n    linkColor = svgDefaultProps.linkColor,\n    linkComponent = svgDefaultProps.linkComponent,\n    layout = svgDefaultProps.layout,\n    layers = svgDefaultProps.layers,\n    isInteractive = svgDefaultProps.isInteractive,\n    useMesh = svgDefaultProps.useMesh,\n    meshDetectionThreshold = svgDefaultProps.meshDetectionThreshold,\n    debugMesh = svgDefaultProps.debugMesh,\n    highlightAncestorNodes = svgDefaultProps.highlightAncestorNodes,\n    highlightDescendantNodes = svgDefaultProps.highlightDescendantNodes,\n    highlightAncestorLinks = svgDefaultProps.highlightAncestorLinks,\n    highlightDescendantLinks = svgDefaultProps.highlightDescendantLinks,\n    onNodeMouseEnter,\n    onNodeMouseMove,\n    onNodeMouseLeave,\n    onNodeClick,\n    nodeTooltip,\n    onLinkMouseEnter,\n    onLinkMouseMove,\n    onLinkMouseLeave,\n    onLinkClick,\n    linkTooltip,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerDendogramProps<Datum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const { nodes, links, setCurrentNode } = useDendogram<Datum>({\n        data,\n        identity,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        nodeSize,\n        activeNodeSize,\n        inactiveNodeSize,\n        nodeColor,\n        highlightAncestorNodes,\n        highlightDescendantNodes,\n        linkThickness,\n        activeLinkThickness,\n        inactiveLinkThickness,\n        linkColor,\n        highlightAncestorLinks,\n        highlightDescendantLinks,\n    })\n\n    const layerById: Record<LayerId, ReactNode> = {\n        links: null,\n        nodes: null,\n        labels: null,\n        mesh: null,\n    }\n\n    if (layers.includes('links')) {\n        layerById.links = (\n            <Links<Datum>\n                key=\"links\"\n                links={links}\n                linkComponent={linkComponent}\n                isInteractive={isInteractive}\n                onMouseEnter={onLinkMouseEnter}\n                onMouseMove={onLinkMouseMove}\n                onMouseLeave={onLinkMouseLeave}\n                onClick={onLinkClick}\n                tooltip={linkTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('nodes')) {\n        layerById.nodes = (\n            <Nodes<Datum>\n                key=\"nodes\"\n                nodes={nodes}\n                nodeComponent={nodeComponent}\n                isInteractive={isInteractive}\n                onMouseEnter={onNodeMouseEnter}\n                onMouseMove={onNodeMouseMove}\n                onMouseLeave={onNodeMouseLeave}\n                onClick={onNodeClick}\n                setCurrentNode={setCurrentNode}\n                tooltip={nodeTooltip}\n            />\n        )\n    }\n\n    if (layers.includes('mesh') && isInteractive && useMesh) {\n        layerById.mesh = (\n            <Mesh<Datum>\n                key=\"mesh\"\n                nodes={nodes}\n                width={innerWidth}\n                height={innerHeight}\n                margin={margin}\n                detectionThreshold={meshDetectionThreshold}\n                debug={debugMesh}\n                onMouseEnter={onNodeMouseEnter}\n                onMouseMove={onNodeMouseMove}\n                onMouseLeave={onNodeMouseLeave}\n                onClick={onNodeClick}\n                setCurrentNode={setCurrentNode}\n            />\n        )\n    }\n\n    const customLayerProps: CustomLayerProps<Datum> = useMemo(\n        () => ({\n            nodes,\n            links,\n            innerWidth,\n            innerHeight,\n        }),\n        [nodes, links, innerWidth, innerHeight]\n    )\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Dendogram = <Datum = DefaultDatum,>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: DendogramSvgProps<Datum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerDendogram<Datum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { ResponsiveDendogramSvgProps, DefaultDatum } from './types'\nimport { Dendogram } from './Dendogram'\n\nexport const ResponsiveDendogram = <Datum = DefaultDatum,>(\n    props: ResponsiveDendogramSvgProps<Datum>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Dendogram<Datum> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["console","log","link","useRoot","_ref","data","getIdentity","useMemo","root","d3Hierarchy","cluster","d3Cluster","size","eachBefore","node","ancestors","filter","ancestor","reverse","ancestorIds","map","uid","concat","join","ancestorUids","each","descendantUids","descendants","descendant","useNodeSizeModifier","undefined","useNodes","_ref3","xScale","yScale","layout","nodeSize","activeNodeSize","inactiveNodeSize","nodeColor","intermediateNodes","x","y","id","path","depth","height","getNodeSize","getActiveNodeSize","getInactiveNodeSize","getNodeColor","useOrdinalColorScale","_useState","useState","activeNodeUids","setActiveNodeUids","computed","nodeByUid","nodes","intermediateNode","computedNode","_extends","color","isActive","length","includes","useLinkThicknessModifier","thickness","useDendogram","_ref6","width","_ref6$identity","identity","commonDefaultProps","_ref6$layout","_ref6$nodeSize","_ref6$nodeColor","_ref6$highlightAncest","highlightAncestorNodes","_ref6$highlightDescen","highlightDescendantNodes","_ref6$linkThickness","linkThickness","_ref6$linkColor","linkColor","activeLinkThickness","inactiveLinkThickness","_ref6$highlightAncest2","highlightAncestorLinks","_ref6$highlightDescen2","highlightDescendantLinks","usePropertyAccessor","_useCartesianScales","_ref2","scaleLinear","domain","range","useCartesianScales","_useNodes","_useLinks","_ref4","intermediateLinks","links","source","target","getLinkThickness","getActiveLinkThickness","getInactiveLinkThickness","theme","useTheme","getLinkColor","useInheritedColor","_useState2","activeLinkIds","setActiveLinkIds","intermediateLink","computedLink","useLinks","setCurrentNode","_ref5","useCallback","nodeUids","linkIds","forEach","push","useSetCurrentNode","useNodeMouseEventHandlers","_ref7","isInteractive","onMouseEnter","onMouseMove","onMouseLeave","onClick","tooltip","_useTooltip","useTooltip","showTooltipFromEvent","hideTooltip","showTooltip","event","createElement","handleMouseEnter","handleMouseMove","handleMouseLeave","handleClick","useLinkMouseEventHandlers","_ref8","_useTooltip2","lineGenerator","d3Line","line","scheme","from","modifiers","useMesh","meshDetectionThreshold","Infinity","debugMesh","role","animate","motionConfig","svgDefaultProps","layers","nodeComponent","animatedProps","eventHandlers","_jsx","animated","circle","r","to","fill","cx","cy","linkComponent","d","sourceX","sourceY","targetX","targetY","strokeWidth","stroke","regularTransition","leaveTransition","Links","_useMotionConfig","useMotionConfig","springConfig","config","transition","useTransition","keys","enter","update","leave","immediate","_Fragment","children","Nodes","Mesh","memo","margin","detectionThreshold","debug","showTooltipAt","_node$y","left","top","_node$y2","BaseMesh","InnerDendogram","partialMargin","_ref$nodeSize","_ref$nodeColor","_ref$nodeComponent","_ref$linkThickness","_ref$linkColor","_ref$linkComponent","_ref$layout","_ref$layers","_ref$isInteractive","_ref$useMesh","_ref$meshDetectionThr","_ref$debugMesh","_ref$highlightAncesto","_ref$highlightDescend","_ref$highlightAncesto2","_ref$highlightDescend2","onNodeMouseEnter","onNodeMouseMove","onNodeMouseLeave","onNodeClick","nodeTooltip","onLinkMouseEnter","onLinkMouseMove","onLinkMouseLeave","onLinkClick","linkTooltip","_ref$role","ariaLabel","ariaLabelledBy","ariaDescribedBy","_useDimensions","useDimensions","outerWidth","outerHeight","innerWidth","innerHeight","_useDendogram","layerById","labels","mesh","jsx","customLayerProps","SvgWrapper","layer","i","_layerById$layer","Fragment","Dendogram","_ref2$isInteractive","_ref2$animate","_ref2$motionConfig","renderWrapper","otherProps","_objectWithoutPropertiesLoose","_excluded","Container","props","ResponsiveWrapper"],"mappings":"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"}