{"version":3,"file":"nivo-text.es.js","sources":["../src/canvas.ts","../src/Text.tsx"],"sourcesContent":["import { TextStyle } from '@nivo/core'\n\nexport const setCanvasFont = (ctx: CanvasRenderingContext2D, style: TextStyle) => {\n    ctx.font = `${style.fontWeight ? `${style.fontWeight} ` : ''}${style.fontSize}px ${\n        style.fontFamily\n    }`\n}\n\nexport const drawCanvasText = (\n    ctx: CanvasRenderingContext2D,\n    style: TextStyle,\n    text: string,\n    x = 0,\n    y = 0\n) => {\n    if (style.outlineWidth > 0) {\n        ctx.strokeStyle = style.outlineColor\n        ctx.lineWidth = style.outlineWidth * 2\n        ctx.lineJoin = 'round'\n        ctx.strokeText(text, x, y)\n    }\n\n    ctx.fillStyle = style.fill\n    ctx.fillText(text, x, y)\n}\n","import { PropsWithChildren, ComponentType } from 'react'\nimport { animated } from '@react-spring/web'\nimport { TextStyle as ThemeStyle } from '@nivo/core'\n\ntype GetComponentProps<T> = T extends ComponentType<infer P> ? P : never\ntype AnimatedComponentProps = GetComponentProps<(typeof animated)['text']>\n\ntype TextProps = PropsWithChildren<\n    Omit<AnimatedComponentProps, 'style'> & {\n        style: AnimatedComponentProps['style'] &\n            Pick<ThemeStyle, 'outlineWidth' | 'outlineColor' | 'outlineOpacity'>\n    }\n>\n\nexport const Text = ({ style: fullStyle, children, ...attributes }: TextProps) => {\n    const { outlineWidth, outlineColor, outlineOpacity, ...style } = fullStyle\n\n    return (\n        <>\n            {outlineWidth > 0 && (\n                <animated.text\n                    {...attributes}\n                    style={{\n                        ...style,\n                        strokeWidth: outlineWidth * 2,\n                        stroke: outlineColor,\n                        strokeOpacity: outlineOpacity,\n                        strokeLinejoin: 'round',\n                    }}\n                >\n                    {children}\n                </animated.text>\n            )}\n            <animated.text {...attributes} style={style}>\n                {children}\n            </animated.text>\n        </>\n    )\n}\n"],"names":["setCanvasFont","ctx","style","font","fontWeight","fontSize","fontFamily","drawCanvasText","text","x","y","outlineWidth","strokeStyle","outlineColor","lineWidth","lineJoin","strokeText","fillStyle","fill","fillText","Text","_ref","fullStyle","children","attributes","_objectWithoutPropertiesLoose","_excluded","outlineOpacity","_excluded2","_jsxs","_Fragment","_jsx","animated","_extends","strokeWidth","stroke","strokeOpacity","strokeLinejoin"],"mappings":"6GAEO,IAAMA,EAAgB,SAACC,EAA+BC,GACzDD,EAAIE,MAAUD,EAAME,WAAgBF,EAAME,WAAgB,IAAA,IAAKF,EAAMG,SACjEH,MAAAA,EAAMI,UAEd,EAEaC,EAAiB,SAC1BN,EACAC,EACAM,EACAC,EACAC,QADC,IAADD,IAAAA,EAAI,QACH,IAADC,IAAAA,EAAI,GAEAR,EAAMS,aAAe,IACrBV,EAAIW,YAAcV,EAAMW,aACxBZ,EAAIa,UAAiC,EAArBZ,EAAMS,aACtBV,EAAIc,SAAW,QACfd,EAAIe,WAAWR,EAAMC,EAAGC,IAG5BT,EAAIgB,UAAYf,EAAMgB,KACtBjB,EAAIkB,SAASX,EAAMC,EAAGC,EAC1B,0bCVaU,EAAO,SAAHC,GAAiE,IAApDC,EAASD,EAAhBnB,MAAkBqB,EAAQF,EAARE,SAAaC,EAAUC,EAAAJ,EAAAK,GACpDf,EAAyDW,EAAzDX,aAAcE,EAA2CS,EAA3CT,aAAcc,EAA6BL,EAA7BK,eAAmBzB,EAAKuB,EAAKH,EAASM,GAE1E,OACIC,EAAAC,EAAA,CAAAP,SACKZ,CAAAA,EAAe,GACZoB,EAACC,EAASxB,KAAIyB,KACNT,EAAU,CACdtB,MAAK+B,EAAA,CAAA,EACE/B,EAAK,CACRgC,YAA4B,EAAfvB,EACbwB,OAAQtB,EACRuB,cAAeT,EACfU,eAAgB,UAClBd,SAEDA,KAGTQ,EAACC,EAASxB,KAAIyB,EAAA,CAAA,EAAKT,EAAU,CAAEtB,MAAOA,EAAMqB,SACvCA,OAIjB"}