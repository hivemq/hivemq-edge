{"version":3,"sources":["../src/create-standalone-toast.tsx"],"sourcesContent":["import {\n  ColorMode,\n  ColorModeContext,\n  ThemeProvider,\n  useChakra,\n} from \"@chakra-ui/system\"\nimport { theme as defaultTheme } from \"@chakra-ui/theme\"\nimport { ToastProvider, ToastProviderProps } from \"./toast.provider\"\nimport { UseToastOptions } from \"./use-toast\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\n\nconst defaults: UseToastOptions = {\n  duration: 5000,\n  variant: \"solid\",\n}\n\nexport interface CreateStandAloneToastParam\n  extends Partial<\n      ReturnType<typeof useChakra> & {\n        setColorMode: (value: ColorMode) => void\n        defaultOptions: UseToastOptions\n      }\n    >,\n    Omit<ToastProviderProps, \"children\"> {}\n\nexport const defaultStandaloneParam: CreateStandAloneToastParam &\n  Required<Omit<CreateStandAloneToastParam, keyof ToastProviderProps>> = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false,\n}\n\nexport type CreateStandaloneToastReturn = {\n  ToastContainer: () => JSX.Element\n  toast: CreateToastFnReturn\n}\n\n/**\n * Create a toast\n */\nexport function createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced,\n}: CreateStandAloneToastParam = defaultStandaloneParam): CreateStandaloneToastReturn {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced,\n  }\n  const ToastContainer = () => (\n    <ThemeProvider theme={theme}>\n      <ColorModeContext.Provider value={colorModeContextValue}>\n        <ToastProvider\n          defaultOptions={defaultOptions}\n          motionVariants={motionVariants}\n          toastSpacing={toastSpacing}\n          component={component}\n        />\n      </ColorModeContext.Provider>\n    </ThemeProvider>\n  )\n\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions),\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;AAAA,EAEE;AAAA,EACA;AAAA,OAEK;AACP,SAAS,SAAS,oBAAoB;AAyD9B;AApDR,IAAM,WAA4B;AAAA,EAChC,UAAU;AAAA,EACV,SAAS;AACX;AAWO,IAAM,yBAC4D;AAAA,EACvE,OAAO;AAAA,EACP,WAAW;AAAA,EACX,iBAAiB,MAAM;AAAA,EAAC;AAAA,EACxB,cAAc,MAAM;AAAA,EAAC;AAAA,EACrB,gBAAgB;AAAA,EAChB,QAAQ;AACV;AAUO,SAAS,sBAAsB;AAAA,EACpC,QAAQ,uBAAuB;AAAA,EAC/B,YAAY,uBAAuB;AAAA,EACnC,kBAAkB,uBAAuB;AAAA,EACzC,eAAe,uBAAuB;AAAA,EACtC,iBAAiB,uBAAuB;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,IAAgC,wBAAqD;AACnF,QAAM,wBAAwB;AAAA,IAC5B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,iBAAiB,MACrB,oBAAC,iBAAc,OACb,8BAAC,iBAAiB,UAAjB,EAA0B,OAAO,uBAChC;AAAA,IAAC;AAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,EACF,GACF,GACF;AAGF,SAAO;AAAA,IACL;AAAA,IACA,OAAO,cAAc,MAAM,WAAW,cAAc;AAAA,EACtD;AACF;","names":[]}