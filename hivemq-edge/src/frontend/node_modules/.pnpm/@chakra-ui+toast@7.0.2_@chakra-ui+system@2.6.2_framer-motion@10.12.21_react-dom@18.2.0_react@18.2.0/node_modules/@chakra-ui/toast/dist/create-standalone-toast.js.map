{"version":3,"sources":["../src/create-standalone-toast.tsx","../src/toast.provider.tsx","../src/toast.component.tsx","../src/toast.utils.ts","../src/toast.tsx","../src/toast.placement.ts","../src/toast.store.ts"],"sourcesContent":["import {\n  ColorMode,\n  ColorModeContext,\n  ThemeProvider,\n  useChakra,\n} from \"@chakra-ui/system\"\nimport { theme as defaultTheme } from \"@chakra-ui/theme\"\nimport { ToastProvider, ToastProviderProps } from \"./toast.provider\"\nimport { UseToastOptions } from \"./use-toast\"\nimport { createToastFn, CreateToastFnReturn } from \"./toast\"\n\nconst defaults: UseToastOptions = {\n  duration: 5000,\n  variant: \"solid\",\n}\n\nexport interface CreateStandAloneToastParam\n  extends Partial<\n      ReturnType<typeof useChakra> & {\n        setColorMode: (value: ColorMode) => void\n        defaultOptions: UseToastOptions\n      }\n    >,\n    Omit<ToastProviderProps, \"children\"> {}\n\nexport const defaultStandaloneParam: CreateStandAloneToastParam &\n  Required<Omit<CreateStandAloneToastParam, keyof ToastProviderProps>> = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: () => {},\n  setColorMode: () => {},\n  defaultOptions: defaults,\n  forced: false,\n}\n\nexport type CreateStandaloneToastReturn = {\n  ToastContainer: () => JSX.Element\n  toast: CreateToastFnReturn\n}\n\n/**\n * Create a toast\n */\nexport function createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n  motionVariants,\n  toastSpacing,\n  component,\n  forced,\n}: CreateStandAloneToastParam = defaultStandaloneParam): CreateStandaloneToastReturn {\n  const colorModeContextValue = {\n    colorMode,\n    setColorMode,\n    toggleColorMode,\n    forced,\n  }\n  const ToastContainer = () => (\n    <ThemeProvider theme={theme}>\n      <ColorModeContext.Provider value={colorModeContextValue}>\n        <ToastProvider\n          defaultOptions={defaultOptions}\n          motionVariants={motionVariants}\n          toastSpacing={toastSpacing}\n          component={component}\n        />\n      </ColorModeContext.Provider>\n    </ThemeProvider>\n  )\n\n  return {\n    ToastContainer,\n    toast: createToastFn(theme.direction, defaultOptions),\n  }\n}\n","import { AnimatePresence, Variants } from \"framer-motion\"\nimport { Portal, PortalProps } from \"@chakra-ui/portal\"\nimport { ToastComponent, ToastComponentProps } from \"./toast.component\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport { toastStore } from \"./toast.store\"\nimport { getToastListStyle } from \"./toast.utils\"\nimport { useSyncExternalStore } from \"react\"\nimport { createContext } from \"@chakra-ui/react-context\"\n\nexport interface ToastMethods {\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n  notify: (message: ToastMessage, options?: CreateToastOptions) => ToastId\n  /**\n   * Close all toasts at once.\n   * If given positions, will only close those.\n   */\n  closeAll: (options?: CloseAllToastsOptions) => void\n  /**\n   * Requests to close a toast based on its id and position\n   */\n  close: (id: ToastId) => void\n  /**\n   * Update a specific toast with new options based on the\n   * passed `id`\n   */\n  update: (id: ToastId, options: Omit<UseToastOptions, \"id\">) => void\n  isActive: (id: ToastId) => boolean\n}\n\nexport type CreateToastOptions = Partial<\n  Pick<\n    ToastOptions,\n    | \"status\"\n    | \"duration\"\n    | \"position\"\n    | \"id\"\n    | \"onCloseComplete\"\n    | \"containerStyle\"\n  >\n>\n\nexport type ToastProviderProps = React.PropsWithChildren<{\n  /**\n   * Default options for `useToast(options)`\n   *\n   * @example\n   * <ToastProvider defaultOptions={{ duration: 10_000, isClosable: true }} />\n   */\n  defaultOptions?: UseToastOptions\n\n  /**\n   * Customize the default motion config to animate the toasts your way\n   *\n   * @example\n   * const motionVariants =\n   * <ToastProvider motionVariants={motionVariants} />\n   */\n  motionVariants?: Variants\n\n  /**\n   * Are you looking for a way to style the toast? Use a custom `Alert` variant in the theme.\n   * This property overrides the default ToastComponent with your own implementation.\n   *\n   * @example\n   * const CustomToastComponent = (props: ToastComponentProps) => ...\n   * <ToastProvider component={CustomToastComponent} />\n   *\n   * @default ToastComponent\n   */\n  component?: React.FC<ToastComponentProps>\n\n  /**\n   * Define the margin between toasts\n   *\n   * @default 0.5rem\n   */\n  toastSpacing?: string | number\n  /**\n   * Props to be forwarded to the portal component\n   */\n  portalProps?: Pick<PortalProps, \"appendToParentPortal\" | \"containerRef\">\n}>\n\n/**\n * Passes default options down to be used by toast creator function\n */\nexport const [ToastOptionProvider, useToastOptionContext] = createContext<\n  UseToastOptions | undefined\n>({\n  name: `ToastOptionsContext`,\n  strict: false,\n})\n\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\nexport const ToastProvider = (props: ToastProviderProps) => {\n  const state = useSyncExternalStore(\n    toastStore.subscribe,\n    toastStore.getState,\n    toastStore.getState,\n  )\n\n  const {\n    motionVariants,\n    component: Component = ToastComponent,\n    portalProps,\n  } = props\n\n  const stateKeys = Object.keys(state) as Array<keyof typeof state>\n  const toastList = stateKeys.map((position) => {\n    const toasts = state[position]\n\n    return (\n      <div\n        role=\"region\"\n        aria-live=\"polite\"\n        aria-label={`Notifications-${position}`}\n        key={position}\n        id={`chakra-toast-manager-${position}`}\n        style={getToastListStyle(position)}\n      >\n        <AnimatePresence initial={false}>\n          {toasts.map((toast) => (\n            <Component\n              key={toast.id}\n              motionVariants={motionVariants}\n              {...toast}\n            />\n          ))}\n        </AnimatePresence>\n      </div>\n    )\n  })\n\n  return <Portal {...portalProps}>{toastList}</Portal>\n}\n","import { useTimeout } from \"@chakra-ui/react-use-timeout\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport { chakra } from \"@chakra-ui/system\"\nimport type { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\nimport { ToastProviderProps } from \"./toast.provider\"\nimport { memo, useEffect, useMemo, useState } from \"react\"\n\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastComponentProps\n  extends ToastOptions,\n    Pick<ToastProviderProps, \"motionVariants\" | \"toastSpacing\"> {}\n\nexport const ToastComponent = memo((props: ToastComponentProps) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n    containerStyle,\n    motionVariants = toastMotionVariants,\n    toastSpacing = \"0.5rem\",\n  } = props\n\n  const [delay, setDelay] = useState(duration)\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const containerStyles = useMemo(\n    () => ({\n      pointerEvents: \"auto\",\n      maxWidth: 560,\n      minWidth: 300,\n      margin: toastSpacing,\n      ...containerStyle,\n    }),\n    [containerStyle, toastSpacing],\n  )\n\n  const toastStyle = useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.div\n      layout\n      className=\"chakra-toast\"\n      variants={motionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={toastStyle}\n    >\n      <chakra.div\n        role=\"status\"\n        aria-atomic=\"true\"\n        className=\"chakra-toast__inner\"\n        __css={containerStyles}\n      >\n        {runIfFn(message, { id, onClose: close })}\n      </chakra.div>\n    </motion.div>\n  )\n})\n\nToastComponent.displayName = \"ToastComponent\"\n","import type { ToastPosition } from \"./toast.placement\"\nimport type { ToastId, ToastOptions, ToastState } from \"./toast.types\"\n\n/**\n * Given an array of toasts for a specific position.\n * It returns the toast that matches the `id` passed\n */\nexport const findById = (arr: ToastOptions[], id: ToastId) =>\n  arr.find((toast) => toast.id === id)\n\n/**\n * Given the toast manager state, finds the toast that matches\n * the id and return its position and index\n */\nexport function findToast(toasts: ToastState, id: ToastId) {\n  const position = getToastPosition(toasts, id)\n\n  const index = position\n    ? toasts[position].findIndex((toast) => toast.id === id)\n    : -1\n\n  return {\n    position,\n    index,\n  }\n}\n\n/**\n * Given the toast manager state, finds the position of the toast that\n * matches the `id`\n */\nexport function getToastPosition(toasts: ToastState, id: ToastId) {\n  for (const [position, values] of Object.entries(toasts)) {\n    if (findById(values, id)) {\n      return position as ToastPosition\n    }\n  }\n}\n\n/**\n * Given the toast manager state, checks if a specific toast is\n * still in the state, which means it is still visible on screen.\n */\nexport const isVisible = (toasts: ToastState, id: ToastId) =>\n  !!getToastPosition(toasts, id)\n\n/**\n * Gets the styles to be applied to a toast's container\n * based on its position in the manager\n */\nexport function getToastStyle(position: ToastPosition): React.CSSProperties {\n  const isRighty = position.includes(\"right\")\n  const isLefty = position.includes(\"left\")\n\n  let alignItems = \"center\"\n  if (isRighty) alignItems = \"flex-end\"\n  if (isLefty) alignItems = \"flex-start\"\n\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems,\n  }\n}\n\n/**\n * Compute the style of a toast based on its position\n */\nexport function getToastListStyle(\n  position: ToastPosition,\n): React.CSSProperties {\n  const isTopOrBottom = position === \"top\" || position === \"bottom\"\n  const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n  const top = position.includes(\"top\")\n    ? \"env(safe-area-inset-top, 0px)\"\n    : undefined\n  const bottom = position.includes(\"bottom\")\n    ? \"env(safe-area-inset-bottom, 0px)\"\n    : undefined\n  const right = !position.includes(\"left\")\n    ? \"env(safe-area-inset-right, 0px)\"\n    : undefined\n  const left = !position.includes(\"right\")\n    ? \"env(safe-area-inset-left, 0px)\"\n    : undefined\n\n  return {\n    position: \"fixed\",\n    zIndex: \"var(--toast-z-index, 5500)\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin,\n    top,\n    bottom,\n    right,\n    left,\n  }\n}\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertProps,\n  AlertTitle,\n} from \"@chakra-ui/alert\"\nimport { chakra } from \"@chakra-ui/system\"\nimport { CloseButton } from \"@chakra-ui/close-button\"\nimport { runIfFn } from \"@chakra-ui/shared-utils\"\nimport type { UseToastOptions } from \"./use-toast\"\nimport type { RenderProps, ToastId } from \"./toast.types\"\nimport { getToastPlacement } from \"./toast.placement\"\nimport { toastStore } from \"./toast.store\"\n\nexport interface ToastProps\n  extends UseToastOptions,\n    Omit<AlertProps, keyof UseToastOptions> {\n  onClose?: () => void\n}\n\n/**\n * The `Toast` component is used to give feedback to users after an action has taken place.\n *\n * @see Docs https://chakra-ui.com/docs/components/toast\n */\nexport const Toast: React.FC<ToastProps> = (props) => {\n  const {\n    status,\n    variant = \"solid\",\n    id,\n    title,\n    isClosable,\n    onClose,\n    description,\n    colorScheme,\n    icon,\n  } = props\n\n  const ids = id\n    ? {\n        root: `toast-${id}`,\n        title: `toast-${id}-title`,\n        description: `toast-${id}-description`,\n      }\n    : undefined\n\n  return (\n    <Alert\n      addRole={false}\n      status={status}\n      variant={variant}\n      id={ids?.root}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      paddingEnd={8}\n      textAlign=\"start\"\n      width=\"auto\"\n      colorScheme={colorScheme}\n    >\n      <AlertIcon>{icon}</AlertIcon>\n      <chakra.div flex=\"1\" maxWidth=\"100%\">\n        {title && <AlertTitle id={ids?.title}>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription id={ids?.description} display=\"block\">\n            {description}\n          </AlertDescription>\n        )}\n      </chakra.div>\n      {isClosable && (\n        <CloseButton\n          size=\"sm\"\n          onClick={onClose}\n          position=\"absolute\"\n          insetEnd={1}\n          top={1}\n        />\n      )}\n    </Alert>\n  )\n}\n\nexport function createRenderToast(\n  options: UseToastOptions & {\n    toastComponent?: React.FC<ToastProps>\n  } = {},\n) {\n  const { render, toastComponent: ToastComponent = Toast } = options\n  const renderToast: React.FC<RenderProps> = (props) => {\n    if (typeof render === \"function\") {\n      return render({ ...props, ...options }) as JSX.Element\n    }\n    return <ToastComponent {...props} {...options} />\n  }\n  return renderToast\n}\n\ntype UseToastPromiseOption = Omit<UseToastOptions, \"status\">\n\nexport function createToastFn(\n  dir: \"ltr\" | \"rtl\",\n  defaultOptions?: UseToastOptions,\n) {\n  const normalizeToastOptions = (options?: UseToastOptions) => ({\n    ...defaultOptions,\n    ...options,\n    position: getToastPlacement(\n      options?.position ?? defaultOptions?.position,\n      dir,\n    ),\n  })\n\n  const toast = (options?: UseToastOptions) => {\n    const normalizedToastOptions = normalizeToastOptions(options)\n    const Message = createRenderToast(normalizedToastOptions)\n    return toastStore.notify(Message, normalizedToastOptions)\n  }\n\n  toast.update = (id: ToastId, options: Omit<UseToastOptions, \"id\">) => {\n    toastStore.update(id, normalizeToastOptions(options))\n  }\n\n  toast.promise = <Result extends any, Err extends Error = Error>(\n    promise: Promise<Result>,\n    options: {\n      success: MaybeFunction<UseToastPromiseOption, [Result]>\n      error: MaybeFunction<UseToastPromiseOption, [Err]>\n      loading: UseToastPromiseOption\n    },\n  ) => {\n    const id = toast({\n      ...options.loading,\n      status: \"loading\",\n      duration: null,\n    })\n\n    promise\n      .then((data) =>\n        toast.update(id, {\n          status: \"success\",\n          duration: 5_000,\n          ...runIfFn(options.success, data),\n        }),\n      )\n      .catch((error) =>\n        toast.update(id, {\n          status: \"error\",\n          duration: 5_000,\n          ...runIfFn(options.error, error),\n        }),\n      )\n  }\n\n  toast.closeAll = toastStore.closeAll\n  toast.close = toastStore.close\n  toast.isActive = toastStore.isActive\n\n  return toast\n}\n\nexport type CreateToastFnReturn = ReturnType<typeof createToastFn>\n\ntype MaybeFunction<T, Args extends unknown[] = []> = T | ((...args: Args) => T)\n","export type LogicalToastPosition =\n  | \"top-start\"\n  | \"top-end\"\n  | \"bottom-start\"\n  | \"bottom-end\"\n\nexport type ToastPositionWithLogical =\n  | LogicalToastPosition\n  | \"top\"\n  | \"top-left\"\n  | \"top-right\"\n  | \"bottom\"\n  | \"bottom-left\"\n  | \"bottom-right\"\n\nexport type ToastPosition = Exclude<\n  ToastPositionWithLogical,\n  LogicalToastPosition\n>\n\ntype LogicalPlacementMap = Record<\n  LogicalToastPosition,\n  { ltr: ToastPosition; rtl: ToastPosition }\n>\n\nexport function getToastPlacement(\n  position: ToastPosition | undefined,\n  dir: \"ltr\" | \"rtl\",\n): ToastPosition | undefined {\n  const computedPosition = position ?? \"bottom\"\n  const logicals: LogicalPlacementMap = {\n    \"top-start\": { ltr: \"top-left\", rtl: \"top-right\" },\n    \"top-end\": { ltr: \"top-right\", rtl: \"top-left\" },\n    \"bottom-start\": { ltr: \"bottom-left\", rtl: \"bottom-right\" },\n    \"bottom-end\": { ltr: \"bottom-right\", rtl: \"bottom-left\" },\n  }\n\n  const logical = logicals[computedPosition as keyof typeof logicals]\n  return logical?.[dir] ?? computedPosition\n}\n","import { createRenderToast } from \"./toast\"\nimport { ToastPosition } from \"./toast.placement\"\nimport { CreateToastOptions, ToastMethods } from \"./toast.provider\"\nimport type { ToastId, ToastMessage, ToastState } from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\ntype ToastStore = ToastMethods & {\n  getState: () => ToastState\n  subscribe: (onStoreChange: () => void) => () => void\n  removeToast: (id: ToastId, position: ToastPosition) => void\n}\n\nconst initialState = {\n  top: [],\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  bottom: [],\n  \"bottom-right\": [],\n}\n\n/**\n * Store to track all the toast across all positions\n */\nexport const toastStore = createStore(initialState)\n\nfunction createStore(initialState: ToastState): ToastStore {\n  let state = initialState\n  const listeners = new Set<() => void>()\n\n  const setState = (setStateFn: (values: ToastState) => ToastState) => {\n    state = setStateFn(state)\n    listeners.forEach((l) => l())\n  }\n\n  return {\n    getState: () => state,\n\n    subscribe: (listener) => {\n      listeners.add(listener)\n      return () => {\n        // Delete all toasts on unmount\n        setState(() => initialState)\n        listeners.delete(listener)\n      }\n    },\n\n    /**\n     * Delete a toast record at its position\n     */\n    removeToast: (id, position) => {\n      setState((prevState) => ({\n        ...prevState,\n        // id may be string or number\n        // eslint-disable-next-line eqeqeq\n        [position]: prevState[position].filter((toast) => toast.id != id),\n      }))\n    },\n\n    notify: (message, options) => {\n      const toast = createToast(message, options)\n      const { position, id } = toast\n\n      setState((prevToasts) => {\n        const isTop = position.includes(\"top\")\n\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n        const toasts = isTop\n          ? [toast, ...(prevToasts[position] ?? [])]\n          : [...(prevToasts[position] ?? []), toast]\n\n        return {\n          ...prevToasts,\n          [position]: toasts,\n        }\n      })\n\n      return id\n    },\n\n    update: (id, options) => {\n      if (!id) return\n\n      setState((prevState) => {\n        const nextState = { ...prevState }\n        const { position, index } = findToast(nextState, id)\n\n        if (position && index !== -1) {\n          nextState[position][index] = {\n            ...nextState[position][index],\n            ...options,\n            message: createRenderToast(options),\n          }\n        }\n\n        return nextState\n      })\n    },\n\n    closeAll: ({ positions } = {}) => {\n      // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n      setState((prev) => {\n        const allPositions: ToastPosition[] = [\n          \"bottom\",\n          \"bottom-right\",\n          \"bottom-left\",\n          \"top\",\n          \"top-left\",\n          \"top-right\",\n        ]\n\n        const positionsToClose = positions ?? allPositions\n\n        return positionsToClose.reduce(\n          (acc, position) => {\n            acc[position] = prev[position].map((toast) => ({\n              ...toast,\n              requestClose: true,\n            }))\n\n            return acc\n          },\n          { ...prev } as ToastState,\n        )\n      })\n    },\n\n    close: (id) => {\n      setState((prevState) => {\n        const position = getToastPosition(prevState, id)\n\n        if (!position) return prevState\n\n        return {\n          ...prevState,\n          [position]: prevState[position].map((toast) => {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return {\n                ...toast,\n                requestClose: true,\n              }\n            }\n\n            return toast\n          }),\n        }\n      })\n    },\n\n    isActive: (id) => Boolean(findToast(toastStore.getState(), id).position),\n  }\n}\n\n/**\n * Static id counter to create unique ids\n * for each toast\n */\nlet counter = 0\n\n/**\n * Create properties for a new toast\n */\nfunction createToast(message: ToastMessage, options: CreateToastOptions = {}) {\n  counter += 1\n  const id = options.id ?? counter\n\n  const position = options.position ?? \"bottom\"\n\n  return {\n    id,\n    message,\n    position,\n    duration: options.duration,\n    onCloseComplete: options.onCloseComplete,\n    onRequestRemove: () => toastStore.removeToast(String(id), position),\n    status: options.status,\n    requestClose: false,\n    containerStyle: options.containerStyle,\n  }\n}\n"],"mappings":"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","names":["import_system","import_framer_motion","import_system","import_shared_utils","import_jsx_runtime","ToastComponent","initialState","import_react","import_jsx_runtime","import_jsx_runtime","defaultTheme"]}