{"version":3,"sources":["../src/toast.types.ts"],"sourcesContent":["import type { SystemStyleObject } from \"@chakra-ui/system\"\nimport type { ToastPosition } from \"./toast.placement\"\nimport { UseToastOptions } from \"./use-toast\"\n\nexport interface RenderProps extends UseToastOptions {\n  /**\n   * Function to close the toast\n   */\n  onClose(): void\n}\n\nexport type ToastMessage = (props: RenderProps) => React.ReactNode\n\nexport type ToastId = string | number\n\nexport interface ToastOptions {\n  /**\n   * The element or component type to render.\n   * The component will be passed `id` and `onClose`\n   */\n  message: ToastMessage\n  /**\n   * The toast's id\n   */\n  id: ToastId\n  /**\n   * The duration of the toast\n   */\n  duration: number | null\n  /**\n   * The status of the toast's alert component.\n   */\n  status: ToastStatus\n\n  /**\n   * Function that removes the toast from manager's state.\n   */\n  onRequestRemove(): void\n\n  /**\n   * The position of the toast\n   */\n  position: ToastPosition\n\n  /**\n   * Callback function to run side effects after the toast has closed.\n   */\n  onCloseComplete?(): void\n\n  /**\n   * Internally used to queue closing a toast. Should probably not be used by\n   * anyone else, but documented regardless.\n   */\n  requestClose?: boolean\n  /**\n   * Optional style overrides for the toast component.\n   */\n  containerStyle?: SystemStyleObject\n}\n\nexport type ToastState = {\n  [K in ToastPosition]: ToastOptions[]\n}\n\nexport type ToastStatus =\n  | \"default\"\n  | \"success\"\n  | \"error\"\n  | \"warning\"\n  | \"info\"\n  | \"loading\"\n\nexport type UpdateFn = (state: ToastState) => void\n\nexport type CloseAllToastsOptions = {\n  positions?: ToastPosition[]\n}\n\nexport {}\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AAAA;","names":[]}