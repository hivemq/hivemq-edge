{"version":3,"sources":["../src/index.ts","../src/alert.tsx","../src/alert-context.ts","../src/icons.tsx","../src/alert-description.tsx","../src/alert-icon.tsx","../src/alert-title.tsx"],"sourcesContent":["export { Alert } from \"./alert\"\nexport type { AlertProps } from \"./alert\"\nexport { useAlertStyles } from \"./alert-context\"\nexport type { AlertStatus } from \"./alert-context\"\nexport { AlertDescription } from \"./alert-description\"\nexport type { AlertDescriptionProps } from \"./alert-description\"\nexport { AlertIcon } from \"./alert-icon\"\nexport type { AlertIconProps } from \"./alert-icon\"\nexport { AlertTitle } from \"./alert-title\"\nexport type { AlertTitleProps } from \"./alert-title\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport {\n  AlertProvider,\n  AlertStatus,\n  AlertStylesProvider,\n  getStatusColorScheme,\n} from \"./alert-context\"\n\ninterface AlertOptions {\n  /**\n   * The status of the alert\n   * @default \"info\"\n   */\n  status?: AlertStatus\n}\n\nexport interface AlertProps\n  extends HTMLChakraProps<\"div\">,\n    AlertOptions,\n    ThemingProps<\"Alert\"> {\n  /**\n   * @default false\n   */\n  addRole?: boolean\n}\n\n/**\n * Alert is used to communicate the state or status of a\n * page, feature or action\n *\n * @see Docs https://chakra-ui.com/docs/components/alert\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/alert/\n */\nexport const Alert = forwardRef<AlertProps, \"div\">(function Alert(props, ref) {\n  const { status = \"info\", addRole = true, ...rest } = omitThemingProps(props)\n  const colorScheme = props.colorScheme ?? getStatusColorScheme(status)\n\n  const styles = useMultiStyleConfig(\"Alert\", { ...props, colorScheme })\n\n  const alertStyles: SystemStyleObject = {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container,\n  }\n\n  return (\n    <AlertProvider value={{ status }}>\n      <AlertStylesProvider value={styles}>\n        <chakra.div\n          data-status={status}\n          role={addRole ? \"alert\" : undefined}\n          ref={ref}\n          {...rest}\n          className={cx(\"chakra-alert\", props.className)}\n          __css={alertStyles}\n        />\n      </AlertStylesProvider>\n    </AlertProvider>\n  )\n})\n\nAlert.displayName = \"Alert\"\n","import { SystemStyleObject } from \"@chakra-ui/system\"\nimport { createContext } from \"@chakra-ui/react-context\"\nimport { CheckIcon, InfoIcon, WarningIcon } from \"./icons\"\nimport { Spinner } from \"@chakra-ui/spinner\"\n\nexport const [AlertProvider, useAlertContext] = createContext<AlertContext>({\n  name: \"AlertContext\",\n  hookName: \"useAlertContext\",\n  providerName: \"<Alert />\",\n})\n\nexport const [AlertStylesProvider, useAlertStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `AlertStylesContext`,\n  hookName: `useAlertStyles`,\n  providerName: \"<Alert />\",\n})\n\nconst STATUSES = {\n  info: { icon: InfoIcon, colorScheme: \"blue\" },\n  warning: { icon: WarningIcon, colorScheme: \"orange\" },\n  success: { icon: CheckIcon, colorScheme: \"green\" },\n  error: { icon: WarningIcon, colorScheme: \"red\" },\n  loading: { icon: Spinner, colorScheme: \"blue\" },\n}\n\nexport function getStatusColorScheme(status: AlertStatus) {\n  return STATUSES[status].colorScheme\n}\n\nexport function getStatusIcon(status: AlertStatus) {\n  return STATUSES[status].icon\n}\n\nexport type AlertStatus = keyof typeof STATUSES\n\nexport interface AlertContext {\n  status: AlertStatus\n}\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\n\nexport function CheckIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function InfoIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\"\n      />\n    </Icon>\n  )\n}\n\nexport function WarningIcon(props: IconProps) {\n  return (\n    <Icon viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n}\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  HTMLChakraProps,\n  SystemStyleObject,\n  chakra,\n  forwardRef,\n} from \"@chakra-ui/system\"\nimport { useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertDescriptionProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertDescription = forwardRef<AlertDescriptionProps, \"div\">(\n  function AlertDescription(props, ref) {\n    const styles = useAlertStyles()\n    const { status } = useAlertContext()\n    const descriptionStyles: SystemStyleObject = {\n      display: \"inline\",\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        data-status={status}\n        {...props}\n        className={cx(\"chakra-alert__desc\", props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  },\n)\n\nAlertDescription.displayName = \"AlertDescription\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { getStatusIcon, useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertIconProps extends HTMLChakraProps<\"span\"> {}\n\nexport function AlertIcon(props: AlertIconProps) {\n  const { status } = useAlertContext()\n  const BaseIcon = getStatusIcon(status)\n  const styles = useAlertStyles()\n  const css = status === \"loading\" ? styles.spinner : styles.icon\n\n  return (\n    <chakra.span\n      display=\"inherit\"\n      data-status={status}\n      {...props}\n      className={cx(\"chakra-alert__icon\", props.className)}\n      __css={css}\n    >\n      {props.children || <BaseIcon h=\"100%\" w=\"100%\" />}\n    </chakra.span>\n  )\n}\n\nAlertIcon.displayName = \"AlertIcon\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useAlertContext, useAlertStyles } from \"./alert-context\"\n\nexport interface AlertTitleProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertTitle = forwardRef<AlertTitleProps, \"div\">(\n  function AlertTitle(props, ref) {\n    const styles = useAlertStyles()\n    const { status } = useAlertContext()\n\n    return (\n      <chakra.div\n        ref={ref}\n        data-status={status}\n        {...props}\n        className={cx(\"chakra-alert__title\", props.className)}\n        __css={styles.title}\n      />\n    )\n  },\n)\n\nAlertTitle.displayName = \"AlertTitle\"\n"],"mappings":"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","names":["import_jsx_runtime","Alert","import_shared_utils","import_system","import_jsx_runtime","AlertDescription","import_shared_utils","import_system","import_jsx_runtime","import_shared_utils","import_system","import_jsx_runtime","AlertTitle"]}