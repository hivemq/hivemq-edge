{"version":3,"sources":["../src/index.ts","../src/switch.tsx"],"sourcesContent":["export { Switch } from \"./switch\"\nexport type { SwitchProps } from \"./switch\"\n","import { useCheckbox, UseCheckboxProps } from \"@chakra-ui/checkbox\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { useMemo } from \"react\"\n\nexport interface SwitchProps\n  extends Omit<UseCheckboxProps, \"isIndeterminate\">,\n    Omit<HTMLChakraProps<\"label\">, keyof UseCheckboxProps>,\n    ThemingProps<\"Switch\"> {\n  /**\n   * The spacing between the switch and its label text\n   * @default 0.5rem\n   * @type SystemProps[\"marginLeft\"]\n   */\n  spacing?: SystemProps[\"marginLeft\"]\n}\n\n/**\n * The `Switch` component is used as an alternative for the checkbox component for switching between \"enabled\" and \"disabled\" states.\n *\n * @see Docs https://chakra-ui.com/docs/components/switch\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/switch/\n */\nexport const Switch = forwardRef<SwitchProps, \"input\">(function Switch(\n  props,\n  ref,\n) {\n  const styles = useMultiStyleConfig(\"Switch\", props)\n\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props)\n\n  const {\n    getIndicatorProps,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps,\n  } = useCheckbox(ownProps)\n\n  const containerStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"inline-block\",\n      position: \"relative\",\n      verticalAlign: \"middle\",\n      lineHeight: 0,\n      ...styles.container,\n    }),\n    [styles.container],\n  )\n\n  const trackStyles: SystemStyleObject = useMemo(\n    () => ({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\",\n      ...styles.track,\n    }),\n    [styles.track],\n  )\n\n  const labelStyles: SystemStyleObject = useMemo(\n    () => ({\n      userSelect: \"none\",\n      marginStart: spacing,\n      ...styles.label,\n    }),\n    [spacing, styles.label],\n  )\n\n  return (\n    <chakra.label\n      {...getRootProps()}\n      className={cx(\"chakra-switch\", props.className)}\n      __css={containerStyles}\n    >\n      <input className=\"chakra-switch__input\" {...getInputProps({}, ref)} />\n      <chakra.span\n        {...getCheckboxProps()}\n        className=\"chakra-switch__track\"\n        __css={trackStyles}\n      >\n        <chakra.span\n          __css={styles.thumb}\n          className=\"chakra-switch__thumb\"\n          {...getIndicatorProps()}\n        />\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-switch__label\"\n          {...getLabelProps()}\n          __css={labelStyles}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nSwitch.displayName = \"Switch\"\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,sBAA8C;AAC9C,0BAAmB;AACnB,oBASO;AACP,mBAAwB;AAqEpB;AAjDG,IAAM,aAAS,0BAAiC,SAASA,QAC9D,OACA,KACA;AACA,QAAM,aAAS,mCAAoB,UAAU,KAAK;AAElD,QAAM,EAAE,UAAU,UAAU,UAAU,GAAG,SAAS,QAAI,gCAAiB,KAAK;AAE5E,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,QAAI,6BAAY,QAAQ;AAExB,QAAM,sBAAqC;AAAA,IACzC,OAAO;AAAA,MACL,SAAS;AAAA,MACT,UAAU;AAAA,MACV,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,GAAG,OAAO;AAAA,IACZ;AAAA,IACA,CAAC,OAAO,SAAS;AAAA,EACnB;AAEA,QAAM,kBAAiC;AAAA,IACrC,OAAO;AAAA,MACL,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,gBAAgB;AAAA,MAChB,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,GAAG,OAAO;AAAA,IACZ;AAAA,IACA,CAAC,OAAO,KAAK;AAAA,EACf;AAEA,QAAM,kBAAiC;AAAA,IACrC,OAAO;AAAA,MACL,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,GAAG,OAAO;AAAA,IACZ;AAAA,IACA,CAAC,SAAS,OAAO,KAAK;AAAA,EACxB;AAEA,SACE;AAAA,IAAC,qBAAO;AAAA,IAAP;AAAA,MACE,GAAG,aAAa;AAAA,MACjB,eAAW,wBAAG,iBAAiB,MAAM,SAAS;AAAA,MAC9C,OAAO;AAAA,MAEP;AAAA,oDAAC,WAAM,WAAU,wBAAwB,GAAG,cAAc,CAAC,GAAG,GAAG,GAAG;AAAA,QACpE;AAAA,UAAC,qBAAO;AAAA,UAAP;AAAA,YACE,GAAG,iBAAiB;AAAA,YACrB,WAAU;AAAA,YACV,OAAO;AAAA,YAEP;AAAA,cAAC,qBAAO;AAAA,cAAP;AAAA,gBACC,OAAO,OAAO;AAAA,gBACd,WAAU;AAAA,gBACT,GAAG,kBAAkB;AAAA;AAAA,YACxB;AAAA;AAAA,QACF;AAAA,QACC,YACC;AAAA,UAAC,qBAAO;AAAA,UAAP;AAAA,YACC,WAAU;AAAA,YACT,GAAG,cAAc;AAAA,YAClB,OAAO;AAAA,YAEN;AAAA;AAAA,QACH;AAAA;AAAA;AAAA,EAEJ;AAEJ,CAAC;AAED,OAAO,cAAc;","names":["Switch"]}