{"version":3,"sources":["../src/th.tsx","../src/table.tsx"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { useTableStyles } from \"./table\"\n\nexport interface TableColumnHeaderProps extends HTMLChakraProps<\"th\"> {\n  /**\n   * Aligns the cell content to the right\n   * @default false\n   */\n  isNumeric?: boolean\n}\nexport const Th = forwardRef<TableColumnHeaderProps, \"th\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useTableStyles()\n    return (\n      <chakra.th\n        {...rest}\n        ref={ref}\n        __css={styles.th}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n","import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { createContext } from \"@chakra-ui/react-context\"\n\nconst [TableStylesProvider, useTableStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `TableStylesContext`,\n  errorMessage: `useTableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Table />\" `,\n})\n\nexport { useTableStyles }\n\nexport interface TableOptions {\n  layout?: SystemStyleObject[\"tableLayout\"]\n}\n\nexport interface TableProps\n  extends HTMLChakraProps<\"table\">,\n    TableOptions,\n    ThemingProps<\"Table\"> {}\n\n/**\n * The `Table` component is used to organize and display data efficiently. It renders a `<table>` element by default.\n *\n * @see Docs https://chakra-ui.com/docs/components/table\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/table/\n */\nexport const Table = forwardRef<TableProps, \"table\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props)\n  const { className, layout, ...tableProps } = omitThemingProps(props)\n\n  return (\n    <TableStylesProvider value={styles}>\n      <chakra.table\n        ref={ref}\n        __css={{ tableLayout: layout, ...styles.table }}\n        className={cx(\"chakra-table\", className)}\n        {...tableProps}\n      />\n    </TableStylesProvider>\n  )\n})\n\nTable.displayName = \"Table\"\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,iBAAoD;;;ACApD,oBAQO;AACP,0BAAmB;AACnB,2BAA8B;AAgCxB;AA9BN,IAAM,CAAC,qBAAqB,cAAc,QAAI,oCAE5C;AAAA,EACA,MAAM;AAAA,EACN,cAAc;AAChB,CAAC;AAmBM,IAAM,YAAQ,0BAAgC,CAAC,OAAO,QAAQ;AACnE,QAAM,aAAS,mCAAoB,SAAS,KAAK;AACjD,QAAM,EAAE,WAAW,QAAQ,GAAG,WAAW,QAAI,gCAAiB,KAAK;AAEnE,SACE,4CAAC,uBAAoB,OAAO,QAC1B;AAAA,IAAC,qBAAO;AAAA,IAAP;AAAA,MACC;AAAA,MACA,OAAO,EAAE,aAAa,QAAQ,GAAG,OAAO,MAAM;AAAA,MAC9C,eAAW,wBAAG,gBAAgB,SAAS;AAAA,MACtC,GAAG;AAAA;AAAA,EACN,GACF;AAEJ,CAAC;AAED,MAAM,cAAc;;;ADtCd,IAAAC,sBAAA;AAJC,IAAM,SAAK;AAAA,EAChB,CAAC,EAAE,WAAW,GAAG,KAAK,GAAG,QAAQ;AAC/B,UAAM,SAAS,eAAe;AAC9B,WACE;AAAA,MAAC,sBAAO;AAAA,MAAP;AAAA,QACE,GAAG;AAAA,QACJ;AAAA,QACA,OAAO,OAAO;AAAA,QACd,mBAAiB;AAAA;AAAA,IACnB;AAAA,EAEJ;AACF;","names":["import_system","import_jsx_runtime"]}