{"version":3,"file":"immutabilityHelpers.js","names":["_typeguards","require","_utils","shallowClone","value","isJSONArray","copy","slice","Object","getOwnPropertySymbols","forEach","symbol","isJSONObject","applyProp","object","key","updatedObject","getIn","path","i","length","parseInt","undefined","setIn","createPath","arguments","updatedValue","newObject","IS_INTEGER_REGEX","test","Error","updateIn","transform","isObjectOrArray","deleteIn","splice","insertAt","document","parentPath","index","items","Array","isArray","TypeError","JSON","stringify","updatedItems","callback","updated1","updated2","before","after","concat","hasOwnProperty","call","existsIn"],"sources":["../../src/immutabilityHelpers.ts"],"sourcesContent":["/**\n * Immutability helpers\n *\n * inspiration:\n *\n * https://www.npmjs.com/package/seamless-immutable\n * https://www.npmjs.com/package/ih\n * https://www.npmjs.com/package/mutatis\n * https://github.com/mariocasciaro/object-path-immutable\n */\nimport { isJSONArray, isJSONObject } from './typeguards.js'\nimport type { JSONPath } from './types'\nimport { isObjectOrArray } from './utils.js'\n\n/**\n * Shallow clone of an Object, Array, or value\n * Symbols are cloned too.\n */\nexport function shallowClone<T> (value: T) : T {\n  if (isJSONArray(value)) {\n    // copy array items\n    const copy: T = value.slice() as T\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol]\n    })\n\n    return copy\n  } else if (isJSONObject(value)) {\n    // copy object properties\n    const copy: T = { ...value }\n\n    // copy all symbols\n    Object.getOwnPropertySymbols(value).forEach(symbol => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      copy[symbol] = value[symbol]\n    })\n\n    return copy\n  } else {\n    return value\n  }\n}\n\n/**\n * Update a value in an object in an immutable way.\n * If the value is unchanged, the original object will be returned\n */\nexport function applyProp<T, U = unknown> (object: T, key: string | number, value: U) : T {\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (object[key] === value) {\n    // return original object unchanged when the new value is identical to the old one\n    return object\n  } else {\n    const updatedObject = shallowClone(object)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    updatedObject[key] = value\n    return updatedObject\n  }\n}\n\n/**\n * helper function to get a nested property in an object or array\n *\n * @return Returns the field when found, or undefined when the path doesn't exist\n */\nexport function getIn<T, U = unknown> (object: U, path: JSONPath) : T | undefined {\n  let value: T | undefined = object as unknown as T\n  let i = 0\n\n  while (i < path.length) {\n    if (isJSONObject(value)) {\n      value = value[path[i]] as T\n    } else if (isJSONArray(value)) {\n      value = value[parseInt(path[i])] as T\n    } else {\n      value = undefined\n    }\n\n    i++\n  }\n\n  return value\n}\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @param object\n * @param path\n * @param value\n * @param [createPath=false]\n *                    If true, `path` will be created when (partly) missing in\n *                    the object. For correctly creating nested Arrays or\n *                    Objects, the function relies on `path` containing number\n *                    in case of array indexes.\n *                    If false (default), an error will be thrown when the\n *                    path doesn't exist.\n * @return Returns a new, updated object or array\n */\nexport function setIn<T, U = unknown, V = unknown> (object: U, path: JSONPath, value: V, createPath = false) : T {\n  if (path.length === 0) {\n    return value as unknown as T\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = setIn(object ? object[key] : undefined, path.slice(1), value, createPath)\n\n  if (isJSONObject(object) || isJSONArray(object)) {\n    return applyProp(object, key, updatedValue) as T\n  } else {\n    if (createPath) {\n      const newObject = IS_INTEGER_REGEX.test(key)\n        ? []\n        : {}\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      newObject[key] = updatedValue\n      return newObject as T\n    } else {\n      throw new Error('Path does not exist')\n    }\n  }\n}\n\nconst IS_INTEGER_REGEX = /^\\d+$/\n\n/**\n * helper function to replace a nested property in an object with a new value\n * without mutating the object itself.\n *\n * @return  Returns a new, updated object or array\n */\nexport function updateIn<T, U = unknown, V = unknown> (object: T, path: JSONPath, transform: (value: U) => V) : T {\n  if (path.length === 0) {\n    return transform(object as unknown as U) as unknown as T\n  }\n\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path doesn\\'t exist')\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = updateIn(object[key], path.slice(1), transform)\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue)\n}\n\n/**\n * helper function to delete a nested property in an object\n * without mutating the object itself.\n *\n * @return Returns a new, updated object or array\n */\nexport function deleteIn<T, U = unknown> (object: U, path: JSONPath) : T {\n  if (path.length === 0) {\n    return object as unknown as T\n  }\n\n  if (!isObjectOrArray(object)) {\n    throw new Error('Path does not exist')\n  }\n\n  if (path.length === 1) {\n    const key = path[0]\n    if (!(key in (object as object))) {\n      // key doesn't exist. return object unchanged\n      return object as unknown as T\n    } else {\n      const updatedObject = shallowClone(object)\n\n      if (isJSONArray(updatedObject)) {\n        updatedObject.splice(parseInt(key), 1)\n      } if (isJSONObject(updatedObject)) {\n        delete updatedObject[key]\n      }\n\n      return updatedObject as unknown as T\n    }\n  }\n\n  const key = path[0]\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  const updatedValue = deleteIn(object[key], path.slice(1))\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return applyProp(object, key, updatedValue)\n}\n\n/**\n * Insert a new item in an array at a specific index.\n * Example usage:\n *\n *     insertAt({arr: [1,2,3]}, ['arr', '2'], 'inserted')  // [1,2,'inserted',3]\n */\nexport function insertAt<T, U = unknown> (document: T, path: JSONPath, value: U) : T {\n  const parentPath = path.slice(0, path.length - 1)\n  const index = path[path.length - 1]\n\n  return updateIn(document, parentPath, (items) => {\n    if (!Array.isArray(items)) {\n      throw new TypeError('Array expected at path ' + JSON.stringify(parentPath))\n    }\n\n    const updatedItems = shallowClone(items)\n    updatedItems.splice(parseInt(index), 0, value)\n\n    return updatedItems\n  })\n}\n\n/**\n * Transform a JSON object, traverse over the whole object,\n * and allow replacing Objects/Arrays/values.\n */\nexport function transform<T, U = unknown, V = unknown, W = unknown> (document: U, callback: (document: V, path: JSONPath) => W, path: JSONPath = []) : T {\n  // eslint-disable-next-line n/no-callback-literal\n  const updated1 = callback(document as unknown as V, path)\n\n  if (isJSONArray(updated1)) { // array\n    let updated2: unknown[] | undefined\n\n    for (let i = 0; i < updated1.length; i++) {\n      const before = updated1[i]\n      // we stringify the index here, so the path only contains strings and can be safely\n      // stringified/parsed to JSONPointer without loosing information.\n      // We do not want to rely on path keys being numeric/string.\n      const after = transform(before, callback, path.concat(i + ''))\n      if (after !== before) {\n        if (!updated2) {\n          updated2 = shallowClone(updated1)\n        }\n        updated2[i] = after\n      }\n    }\n\n    return (updated2 || updated1) as T\n  } else if (isJSONObject(updated1)) { // object\n    let updated2: Record<string, unknown> | undefined\n\n    for (const key in updated1) {\n      if (Object.hasOwnProperty.call(updated1, key)) {\n        const before = updated1[key]\n        const after = transform(before, callback, path.concat(key))\n        if (after !== before) {\n          if (!updated2) {\n            updated2 = shallowClone(updated1)\n          }\n          updated2[key] = after\n        }\n      }\n    }\n\n    return (updated2 || updated1) as T\n  } else { // number, string, boolean, null\n    return updated1 as unknown as T\n  }\n}\n\n/**\n * Test whether a path exists in a JSON object\n * @return Returns true if the path exists, else returns false\n */\nexport function existsIn<T> (document: T, path: JSONPath) : boolean {\n  if (document === undefined) {\n    return false\n  }\n\n  if (path.length === 0) {\n    return true\n  }\n\n  if (document === null) {\n    return false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return existsIn(document[path[0]], path.slice(1))\n}\n"],"mappings":"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"}