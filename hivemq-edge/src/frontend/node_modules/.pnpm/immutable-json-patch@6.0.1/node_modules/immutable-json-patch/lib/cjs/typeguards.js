"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isJSONArray = isJSONArray;
exports.isJSONObject = isJSONObject;
exports.isJSONPatchAdd = isJSONPatchAdd;
exports.isJSONPatchCopy = isJSONPatchCopy;
exports.isJSONPatchMove = isJSONPatchMove;
exports.isJSONPatchOperation = isJSONPatchOperation;
exports.isJSONPatchRemove = isJSONPatchRemove;
exports.isJSONPatchReplace = isJSONPatchReplace;
exports.isJSONPatchTest = isJSONPatchTest;
function isJSONArray(value) {
  return Array.isArray(value);
}
function isJSONObject(value) {
  return value !== null && typeof value === 'object' && (value.constructor === undefined ||
  // for example Object.create(null)
  value.constructor.name === 'Object') // do not match on classes or Array
  ;
}
function isJSONPatchOperation(value) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return value && typeof value === 'object' ? typeof value.op === 'string' : false;
}
function isJSONPatchAdd(value) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return value && typeof value === 'object' ? value.op === 'add' : false;
}
function isJSONPatchRemove(value) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return value && typeof value === 'object' ? value.op === 'remove' : false;
}
function isJSONPatchReplace(value) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return value && typeof value === 'object' ? value.op === 'replace' : false;
}
function isJSONPatchCopy(value) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return value && typeof value === 'object' ? value.op === 'copy' : false;
}
function isJSONPatchMove(value) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return value && typeof value === 'object' ? value.op === 'move' : false;
}
function isJSONPatchTest(value) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return value && typeof value === 'object' ? value.op === 'test' : false;
}
//# sourceMappingURL=typeguards.js.map