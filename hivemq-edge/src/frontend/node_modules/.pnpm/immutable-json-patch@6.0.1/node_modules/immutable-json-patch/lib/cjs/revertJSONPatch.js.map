{"version":3,"file":"revertJSONPatch.js","names":["_immutabilityHelpers","require","_immutableJSONPatch","_jsonPointer","_utils","revertJSONPatch","document","operations","options","allRevertOperations","before","operation","revertOperations","path","parsePath","op","revertAdd","revertRemove","revertReplace","revertCopy","revertMove","parseFrom","from","Error","JSON","stringify","updatedJson","res","json","concat","undefined","immutableJSONPatch","compileJSONPointer","value","getIn","isArrayItem","existsIn","length","startsWith","move"],"sources":["../../src/revertJSONPatch.ts"],"sourcesContent":["import { existsIn, getIn } from './immutabilityHelpers.js'\nimport {\n  immutableJSONPatch,\n  isArrayItem,\n  parseFrom,\n  parsePath\n} from './immutableJSONPatch.js'\nimport { compileJSONPointer } from './jsonPointer.js'\nimport {\n  JSONPatchAdd,\n  JSONPatchDocument,\n  JSONPatchMove, JSONPatchOperation, JSONPatchOptions,\n  JSONPatchRemove,\n  JSONPatchReplace,\n  JSONPath,\n  RevertJSONPatchOptions\n} from './types.js'\nimport { startsWith } from './utils.js'\n\n/**\n * Create the inverse of a set of json patch operations\n * @param document\n * @param operations Array with JSON patch actions\n * @param [options]\n * @return Returns the operations to revert the changes\n */\nexport function revertJSONPatch<T, U> (document: T, operations: JSONPatchDocument, options?: RevertJSONPatchOptions) : JSONPatchDocument {\n  let allRevertOperations: JSONPatchDocument = []\n\n  const before: JSONPatchOptions['before'] = <TT, UU>(document: TT, operation: JSONPatchOperation) : { document?: UU, operation?: JSONPatchOperation } => {\n    let revertOperations: JSONPatchDocument\n    const path = parsePath(document, operation.path)\n    if (operation.op === 'add') {\n      revertOperations = revertAdd(document, path)\n    } else if (operation.op === 'remove') {\n      revertOperations = revertRemove(document, path)\n    } else if (operation.op === 'replace') {\n      revertOperations = revertReplace(document, path)\n    } else if (operation.op === 'copy') {\n      revertOperations = revertCopy(document, path)\n    } else if (operation.op === 'move') {\n      revertOperations = revertMove(document, path, parseFrom(operation.from))\n    } else if (operation.op === 'test') {\n      revertOperations = []\n    } else {\n      throw new Error('Unknown JSONPatch operation ' + JSON.stringify(operation))\n    }\n\n    let updatedJson: UU\n    if (options && options.before) {\n      const res = options.before(document, operation, revertOperations)\n      if (res && res.revertOperations) {\n        revertOperations = res.revertOperations\n      }\n      if (res && res.document) {\n        updatedJson = res.document as unknown as UU\n      }\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      if (res && res.json) {\n        // TODO: deprecated since v5.0.0. Cleanup this warning some day\n        throw new Error('Deprecation warning: returned object property \".json\" has been renamed to \".document\"')\n      }\n    }\n\n    allRevertOperations = revertOperations.concat(allRevertOperations)\n\n    if (updatedJson !== undefined) {\n      return {\n        document: updatedJson\n      }\n    }\n  }\n\n  immutableJSONPatch<U, T>(document, operations, { before })\n\n  return allRevertOperations\n}\n\nfunction revertReplace<T> (document: T, path: JSONPath) : [JSONPatchReplace] {\n  return [{\n    op: 'replace',\n    path: compileJSONPointer(path),\n    value: getIn(document, path)\n  }]\n}\n\nfunction revertRemove<T> (document: T, path: JSONPath) : [JSONPatchAdd] {\n  return [{\n    op: 'add',\n    path: compileJSONPointer(path),\n    value: getIn(document, path)\n  }]\n}\n\nfunction revertAdd<T> (document: T, path: JSONPath) : [JSONPatchRemove] | [JSONPatchReplace] {\n  if (isArrayItem(document, path) || !existsIn(document, path)) {\n    return [{\n      op: 'remove',\n      path: compileJSONPointer(path)\n    }]\n  } else {\n    return revertReplace(document, path)\n  }\n}\n\nfunction revertCopy<T> (document: T, path: JSONPath) : [JSONPatchRemove] | [JSONPatchReplace] {\n  return revertAdd(document, path)\n}\n\nfunction revertMove<T> (document: T, path: JSONPath, from: JSONPath) : [JSONPatchReplace] | [JSONPatchMove] | [JSONPatchMove, JSONPatchAdd] {\n  if (path.length < from.length && startsWith(from, path)) {\n    // replacing the parent with the child\n    return [\n      {\n        op: 'replace',\n        path: compileJSONPointer(path),\n        value: document\n      }\n    ]\n  }\n\n  const move: JSONPatchMove = {\n    op: 'move',\n    from: compileJSONPointer(path),\n    path: compileJSONPointer(from)\n  }\n\n  if (!isArrayItem(document, path) && existsIn(document, path)) {\n    // the move replaces an existing value in an object\n    return [\n      move,\n      ...revertRemove(document, path)\n    ]\n  } else {\n    return [\n      move\n    ]\n  }\n}\n"],"mappings":"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"}