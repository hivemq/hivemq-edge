{"version":3,"sources":["../src/breadcrumb.tsx","../src/breadcrumb-context.ts"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cloneElement } from \"react\"\nimport { BreadcrumbStylesProvider } from \"./breadcrumb-context\"\nimport { BreadcrumbOptions } from \"./breadcrumb-types\"\n\nexport interface BreadcrumbProps\n  extends HTMLChakraProps<\"nav\">,\n    BreadcrumbOptions,\n    ThemingProps<\"Breadcrumb\"> {\n  listProps?: HTMLChakraProps<\"ol\">\n}\n\n/**\n * Breadcrumb is used to render a breadcrumb navigation landmark.\n * It renders a `nav` element with `aria-label` set to `Breadcrumb`\n *\n * @see Docs https://chakra-ui.com/breadcrumb\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/\n */\nexport const Breadcrumb = forwardRef<BreadcrumbProps, \"nav\">(\n  function Breadcrumb(props, ref) {\n    const styles = useMultiStyleConfig(\"Breadcrumb\", props)\n    const ownProps = omitThemingProps(props)\n\n    const {\n      children,\n      spacing = \"0.5rem\",\n      separator = \"/\",\n      className,\n      listProps,\n      ...rest\n    } = ownProps\n\n    const validChildren = getValidChildren(children)\n    const count = validChildren.length\n\n    const clones = validChildren.map((child, index) =>\n      cloneElement(child, {\n        separator,\n        spacing,\n        isLastChild: count === index + 1,\n      }),\n    )\n\n    const _className = cx(\"chakra-breadcrumb\", className)\n\n    return (\n      <chakra.nav\n        ref={ref}\n        aria-label=\"breadcrumb\"\n        className={_className}\n        __css={styles.container}\n        {...rest}\n      >\n        <BreadcrumbStylesProvider value={styles}>\n          <chakra.ol\n            className=\"chakra-breadcrumb__list\"\n            {...listProps}\n            __css={{\n              display: \"flex\",\n              alignItems: \"center\",\n              ...styles.list,\n            }}\n          >\n            {clones}\n          </chakra.ol>\n        </BreadcrumbStylesProvider>\n      </chakra.nav>\n    )\n  },\n)\n\nBreadcrumb.displayName = \"Breadcrumb\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\n\nexport const [BreadcrumbStylesProvider, useBreadcrumbStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `BreadcrumbStylesContext`,\n  errorMessage: `useBreadcrumbStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Breadcrumb />\" `,\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB;AACnB,kCAAiC;AACjC,oBAOO;AACP,mBAA6B;;;ACV7B,2BAA8B;AAGvB,IAAM,CAAC,0BAA0B,mBAAmB,QAAI,oCAE7D;AAAA,EACA,MAAM;AAAA,EACN,cAAc;AAChB,CAAC;;;ADwDS;AApCH,IAAM,iBAAa;AAAA,EACxB,SAASA,YAAW,OAAO,KAAK;AAC9B,UAAM,aAAS,mCAAoB,cAAc,KAAK;AACtD,UAAM,eAAW,gCAAiB,KAAK;AAEvC,UAAM;AAAA,MACJ;AAAA,MACA,UAAU;AAAA,MACV,YAAY;AAAA,MACZ;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACL,IAAI;AAEJ,UAAM,oBAAgB,8CAAiB,QAAQ;AAC/C,UAAM,QAAQ,cAAc;AAE5B,UAAM,SAAS,cAAc;AAAA,MAAI,CAAC,OAAO,cACvC,2BAAa,OAAO;AAAA,QAClB;AAAA,QACA;AAAA,QACA,aAAa,UAAU,QAAQ;AAAA,MACjC,CAAC;AAAA,IACH;AAEA,UAAM,iBAAa,wBAAG,qBAAqB,SAAS;AAEpD,WACE;AAAA,MAAC,qBAAO;AAAA,MAAP;AAAA,QACC;AAAA,QACA,cAAW;AAAA,QACX,WAAW;AAAA,QACX,OAAO,OAAO;AAAA,QACb,GAAG;AAAA,QAEJ,sDAAC,4BAAyB,OAAO,QAC/B;AAAA,UAAC,qBAAO;AAAA,UAAP;AAAA,YACC,WAAU;AAAA,YACT,GAAG;AAAA,YACJ,OAAO;AAAA,cACL,SAAS;AAAA,cACT,YAAY;AAAA,cACZ,GAAG,OAAO;AAAA,YACZ;AAAA,YAEC;AAAA;AAAA,QACH,GACF;AAAA;AAAA,IACF;AAAA,EAEJ;AACF;AAEA,WAAW,cAAc;","names":["Breadcrumb"]}