{"version":3,"sources":["../src/step-status.tsx","../src/step-context.tsx"],"sourcesContent":["import { runIfFn } from \"@chakra-ui/shared-utils\"\nimport { StepContext, StepStatusType, useStepContext } from \"./step-context\"\n\ntype MaybeRenderProp =\n  | React.ReactNode\n  | ((props: StepContext) => React.ReactNode)\n\nexport interface StepStatusProps\n  extends Partial<Record<StepStatusType, MaybeRenderProp>> {}\n\nexport function StepStatus(props: StepStatusProps) {\n  const { complete, incomplete, active } = props\n  const context = useStepContext()\n\n  let render: React.ReactNode | null = null\n\n  switch (context.status) {\n    case \"complete\":\n      render = runIfFn(complete, context)\n      break\n    case \"incomplete\":\n      render = runIfFn(incomplete, context)\n      break\n    case \"active\":\n      render = runIfFn(active, context)\n      break\n  }\n\n  return render ? <>{render}</> : null\n}\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { createStylesContext } from \"@chakra-ui/system\"\n\nexport type StepStatusType = \"active\" | \"complete\" | \"incomplete\"\n\nexport type Orientation = \"horizontal\" | \"vertical\"\n\nexport interface StepContext {\n  /**\n   * The status of the step\n   * @type \"active\" | \"complete\" | \"incomplete\"\n   */\n  status: StepStatusType\n  /**\n   * The total number of steps\n   */\n  count: number\n  /**\n   * The index of the step\n   */\n  index: number\n  /**\n   * The orientation of the stepper\n   */\n  orientation: Orientation\n  /**\n   * Whether the step is the last step\n   */\n  isLast: boolean\n  /**\n   * Whether the step is the first step\n   */\n  isFirst: boolean\n  /**\n   * Whether to show or not the last separator while in vertical orientation\n   */\n  showLastSeparator?: boolean\n}\n\nexport const [StepContextProvider, useStepContext] = createContext<StepContext>(\n  { name: \"StepContext\" },\n)\n\nexport const [StepperStylesProvider, useStepperStyles] =\n  createStylesContext(\"Stepper\")\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAwB;;;ACAxB,2BAA8B;AAC9B,oBAAoC;AAsC7B,IAAM,CAAC,qBAAqB,cAAc,QAAI;AAAA,EACnD,EAAE,MAAM,cAAc;AACxB;AAEO,IAAM,CAAC,uBAAuB,gBAAgB,QACnD,mCAAoB,SAAS;;;ADhBb;AAlBX,SAAS,WAAW,OAAwB;AACjD,QAAM,EAAE,UAAU,YAAY,OAAO,IAAI;AACzC,QAAM,UAAU,eAAe;AAE/B,MAAI,SAAiC;AAErC,UAAQ,QAAQ,QAAQ;AAAA,IACtB,KAAK;AACH,mBAAS,6BAAQ,UAAU,OAAO;AAClC;AAAA,IACF,KAAK;AACH,mBAAS,6BAAQ,YAAY,OAAO;AACpC;AAAA,IACF,KAAK;AACH,mBAAS,6BAAQ,QAAQ,OAAO;AAChC;AAAA,EACJ;AAEA,SAAO,SAAS,2EAAG,kBAAO,IAAM;AAClC;","names":[]}