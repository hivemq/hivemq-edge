{"version":3,"file":"no-unstable-deps.rule.cjs","sources":["../../../../src/rules/no-unstable-deps/no-unstable-deps.rule.ts"],"sourcesContent":["import { AST_NODE_TYPES, ESLintUtils } from '@typescript-eslint/utils'\nimport { getDocsUrl } from '../../utils/get-docs-url'\nimport { detectTanstackQueryImports } from '../../utils/detect-react-query-imports'\nimport type { TSESTree } from '@typescript-eslint/utils'\nimport type { ExtraRuleDocs } from '../../types'\n\nexport const name = 'no-unstable-deps'\n\nexport const reactHookNames = ['useEffect', 'useCallback', 'useMemo']\nexport const useQueryHookNames = [\n  'useQuery',\n  'useSuspenseQuery',\n  'useQueries',\n  'useSuspenseQueries',\n  'useInfiniteQuery',\n  'useSuspenseInfiniteQuery',\n]\nconst allHookNames = ['useMutation', ...useQueryHookNames]\nconst createRule = ESLintUtils.RuleCreator<ExtraRuleDocs>(getDocsUrl)\n\nexport const rule = createRule({\n  name,\n  meta: {\n    type: 'problem',\n    docs: {\n      description:\n        'Disallow putting the result of query hooks directly in a React hook dependency array',\n      recommended: 'error',\n    },\n    messages: {\n      noUnstableDeps: `The result of {{queryHook}} is not referentially stable, so don't pass it directly into the dependencies array of {{reactHook}}. Instead, destructure the return value of {{queryHook}} and pass the destructured values into the dependency array of {{reactHook}}.`,\n    },\n    schema: [],\n  },\n  defaultOptions: [],\n\n  create: detectTanstackQueryImports((context) => {\n    const trackedVariables: Record<string, string> = {}\n    const hookAliasMap: Record<string, string> = {}\n\n    function getReactHook(node: TSESTree.CallExpression): string | undefined {\n      if (node.callee.type === 'Identifier') {\n        const calleeName = node.callee.name\n        // Check if the identifier is a known React hook or an alias\n        if (reactHookNames.includes(calleeName) || calleeName in hookAliasMap) {\n          return calleeName\n        }\n      } else if (\n        node.callee.type === 'MemberExpression' &&\n        node.callee.object.type === 'Identifier' &&\n        node.callee.object.name === 'React' &&\n        node.callee.property.type === 'Identifier' &&\n        reactHookNames.includes(node.callee.property.name)\n      ) {\n        // Member expression case: `React.useCallback`\n        return node.callee.property.name\n      }\n      return undefined\n    }\n\n    function collectVariableNames(\n      pattern: TSESTree.BindingName,\n      queryHook: string,\n    ) {\n      if (pattern.type === AST_NODE_TYPES.Identifier) {\n        trackedVariables[pattern.name] = queryHook\n      }\n    }\n\n    return {\n      ImportDeclaration(node: TSESTree.ImportDeclaration) {\n        if (\n          node.specifiers.length > 0 &&\n          node.importKind === 'value' &&\n          node.source.value === 'React'\n        ) {\n          node.specifiers.forEach((specifier) => {\n            if (\n              specifier.type === AST_NODE_TYPES.ImportSpecifier &&\n              specifier.imported.type === AST_NODE_TYPES.Identifier &&\n              reactHookNames.includes(specifier.imported.name)\n            ) {\n              // Track alias or direct import\n              hookAliasMap[specifier.local.name] = specifier.imported.name\n            }\n          })\n        }\n      },\n\n      VariableDeclarator(node) {\n        if (\n          node.init !== null &&\n          node.init.type === AST_NODE_TYPES.CallExpression &&\n          node.init.callee.type === AST_NODE_TYPES.Identifier &&\n          allHookNames.includes(node.init.callee.name)\n        ) {\n          collectVariableNames(node.id, node.init.callee.name)\n        }\n      },\n      CallExpression: (node) => {\n        const reactHook = getReactHook(node)\n        if (\n          reactHook !== undefined &&\n          node.arguments.length > 1 &&\n          node.arguments[1]?.type === AST_NODE_TYPES.ArrayExpression\n        ) {\n          const depsArray = node.arguments[1].elements\n          depsArray.forEach((dep) => {\n            if (\n              dep !== null &&\n              dep.type === AST_NODE_TYPES.Identifier &&\n              trackedVariables[dep.name] !== undefined\n            ) {\n              const queryHook = trackedVariables[dep.name]\n              context.report({\n                node: dep,\n                messageId: 'noUnstableDeps',\n                data: {\n                  queryHook,\n                  reactHook,\n                },\n              })\n            }\n          })\n        }\n      },\n    }\n  }),\n})\n"],"names":["ESLintUtils","getDocsUrl","detectTanstackQueryImports","AST_NODE_TYPES"],"mappings":"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"}