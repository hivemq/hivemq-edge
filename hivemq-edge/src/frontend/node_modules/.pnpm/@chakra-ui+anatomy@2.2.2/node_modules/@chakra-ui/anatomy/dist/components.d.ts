/**
 * **Accordion anatomy**
 * - Root: the root container of the accordion
 * - Container: the accordion item contains the button and panel
 * - Button: the button is the trigger for the panel
 * - Panel: the panel is the content of the accordion item
 * - Icon: the expanded/collapsed icon
 */
declare const accordionAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U extends string>(...parts: U[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                            keys: (V | U | U_1 | U_2 | U_3)[];
                            __type: V | U | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2, string>;
                        classnames: () => Record<V | U | U_1 | U_2, string>;
                        keys: (V | U | U_1 | U_2)[];
                        __type: V | U | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1, string>;
                    classnames: () => Record<V | U | U_1, string>;
                    keys: (V | U | U_1)[];
                    __type: V | U | U_1;
                }, "parts">;
                selectors: () => Record<V | U, string>;
                classnames: () => Record<V | U, string>;
                keys: (V | U)[];
                __type: V | U;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U extends string>(...parts: U[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                keys: (V | U | U_1 | U_2 | U_3)[];
                                __type: V | U | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2, string>;
                            classnames: () => Record<V | U | U_1 | U_2, string>;
                            keys: (V | U | U_1 | U_2)[];
                            __type: V | U | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1, string>;
                        classnames: () => Record<V | U | U_1, string>;
                        keys: (V | U | U_1)[];
                        __type: V | U | U_1;
                    }, "parts">;
                    selectors: () => Record<V | U, string>;
                    classnames: () => Record<V | U, string>;
                    keys: (V | U)[];
                    __type: V | U;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U extends string>(...parts: U[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                    keys: (V | U | U_1 | U_2 | U_3)[];
                                    __type: V | U | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2, string>;
                                classnames: () => Record<V | U | U_1 | U_2, string>;
                                keys: (V | U | U_1 | U_2)[];
                                __type: V | U | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1, string>;
                            classnames: () => Record<V | U | U_1, string>;
                            keys: (V | U | U_1)[];
                            __type: V | U | U_1;
                        }, "parts">;
                        selectors: () => Record<V | U, string>;
                        classnames: () => Record<V | U, string>;
                        keys: (V | U)[];
                        __type: V | U;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U extends string>(...parts: U[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                        keys: (V | U | U_1 | U_2 | U_3)[];
                                        __type: V | U | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2, string>;
                                    classnames: () => Record<V | U | U_1 | U_2, string>;
                                    keys: (V | U | U_1 | U_2)[];
                                    __type: V | U | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1, string>;
                                classnames: () => Record<V | U | U_1, string>;
                                keys: (V | U | U_1)[];
                                __type: V | U | U_1;
                            }, "parts">;
                            selectors: () => Record<V | U, string>;
                            classnames: () => Record<V | U, string>;
                            keys: (V | U)[];
                            __type: V | U;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U extends string>(...parts: U[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                            keys: (V | U | U_1 | U_2 | U_3)[];
                                            __type: V | U | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2, string>;
                                        classnames: () => Record<V | U | U_1 | U_2, string>;
                                        keys: (V | U | U_1 | U_2)[];
                                        __type: V | U | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1, string>;
                                    classnames: () => Record<V | U | U_1, string>;
                                    keys: (V | U | U_1)[];
                                    __type: V | U | U_1;
                                }, "parts">;
                                selectors: () => Record<V | U, string>;
                                classnames: () => Record<V | U, string>;
                                keys: (V | U)[];
                                __type: V | U;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U extends string>(...parts: U[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                keys: (V | U | U_1 | U_2 | U_3)[];
                                                __type: V | U | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2, string>;
                                            classnames: () => Record<V | U | U_1 | U_2, string>;
                                            keys: (V | U | U_1 | U_2)[];
                                            __type: V | U | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1, string>;
                                        classnames: () => Record<V | U | U_1, string>;
                                        keys: (V | U | U_1)[];
                                        __type: V | U | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V | U, string>;
                                    classnames: () => Record<V | U, string>;
                                    keys: (V | U)[];
                                    __type: V | U;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U extends string>(...parts: U[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U | U_1 | U_2 | U_3)[];
                                                    __type: V | U | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1 | U_2, string>;
                                                classnames: () => Record<V | U | U_1 | U_2, string>;
                                                keys: (V | U | U_1 | U_2)[];
                                                __type: V | U | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U | U_1, string>;
                                            classnames: () => Record<V | U | U_1, string>;
                                            keys: (V | U | U_1)[];
                                            __type: V | U | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V | U, string>;
                                        classnames: () => Record<V | U, string>;
                                        keys: (V | U)[];
                                        __type: V | U;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U extends string>(...parts: U[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U | U_1 | U_2 | U_3)[];
                                                        __type: V | U | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U | U_1 | U_2, string>;
                                                    keys: (V | U | U_1 | U_2)[];
                                                    __type: V | U | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U | U_1, string>;
                                                classnames: () => Record<V | U | U_1, string>;
                                                keys: (V | U | U_1)[];
                                                __type: V | U | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V | U, string>;
                                            classnames: () => Record<V | U, string>;
                                            keys: (V | U)[];
                                            __type: V | U;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U extends string>(...parts: U[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U | U_1 | U_2 | U_3)[];
                                                            __type: V | U | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U | U_1 | U_2, string>;
                                                        keys: (V | U | U_1 | U_2)[];
                                                        __type: V | U | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U | U_1, string>;
                                                    classnames: () => Record<V | U | U_1, string>;
                                                    keys: (V | U | U_1)[];
                                                    __type: V | U | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V | U, string>;
                                                classnames: () => Record<V | U, string>;
                                                keys: (V | U)[];
                                                __type: V | U;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_19 extends string>(...parts: U_19[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U extends string>(...parts: U[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                                                                    keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                                                                    __type: V | U | U_1 | U_2 | U_3 | U_4;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                                classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                                                                keys: (V | U | U_1 | U_2 | U_3)[];
                                                                __type: V | U | U_1 | U_2 | U_3;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U | U_1 | U_2, string>;
                                                            classnames: () => Record<V | U | U_1 | U_2, string>;
                                                            keys: (V | U | U_1 | U_2)[];
                                                            __type: V | U | U_1 | U_2;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U | U_1, string>;
                                                        classnames: () => Record<V | U | U_1, string>;
                                                        keys: (V | U | U_1)[];
                                                        __type: V | U | U_1;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U, string>;
                                                    classnames: () => Record<V | U, string>;
                                                    keys: (V | U)[];
                                                    __type: V | U;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_20 extends string>(...parts: U_20[]) => Omit<any, "parts">;
                                            selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19, string>;
                                            classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19, string>;
                                            keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19)[];
                                            __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18 | U_19;
                                        }, "parts">;
                                        selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                        classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                        keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                        __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                    }, "parts">;
                                    selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                    classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                    keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                    __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                }, "parts">;
                                selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                            }, "parts">;
                            selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                            classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                            keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                            __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                        }, "parts">;
                        selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                        classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                        keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14)[];
                        __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13 | U_14;
                    }, "parts">;
                    selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13, string>;
                    classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13, string>;
                    keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13)[];
                    __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12 | U_13;
                }, "parts">;
                selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12, string>;
                classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12, string>;
                keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12)[];
                __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11 | U_12;
            }, "parts">;
            selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11, string>;
            classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10 | U_11, string>;
            keys: ("root" | "container" | "button" | "panel" | "icon" | U_10 | U_11)[];
            __type: "root" | "container" | "button" | "panel" | "icon" | U_10 | U_11;
        }, "parts">;
        selectors: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10, string>;
        classnames: () => Record<"root" | "container" | "button" | "panel" | "icon" | U_10, string>;
        keys: ("root" | "container" | "button" | "panel" | "icon" | U_10)[];
        __type: "root" | "container" | "button" | "panel" | "icon" | U_10;
    }, "parts">;
    selectors: () => Record<"root" | "container" | "button" | "panel" | "icon", string>;
    classnames: () => Record<"root" | "container" | "button" | "panel" | "icon", string>;
    keys: ("root" | "container" | "button" | "panel" | "icon")[];
    __type: "root" | "container" | "button" | "panel" | "icon";
}, "parts">;
/**
 * **Alert anatomy**
 * - Title: the alert's title
 * - Description: the alert's description
 * - Icon: the alert's icon
 */
declare const alertAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11, string>;
                keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11)[];
                __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10, string>;
            classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U | U_10, string>;
            keys: ("container" | "icon" | "title" | "description" | "spinner" | U | U_10)[];
            __type: "container" | "icon" | "title" | "description" | "spinner" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U, string>;
        classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner" | U, string>;
        keys: ("container" | "icon" | "title" | "description" | "spinner" | U)[];
        __type: "container" | "icon" | "title" | "description" | "spinner" | U;
    }, "parts">;
    selectors: () => Record<"container" | "icon" | "title" | "description" | "spinner", string>;
    classnames: () => Record<"container" | "icon" | "title" | "description" | "spinner", string>;
    keys: ("container" | "icon" | "title" | "description" | "spinner")[];
    __type: "container" | "icon" | "title" | "description" | "spinner";
}, "parts">;
/**
 * **Avatar anatomy**
 * - Container: the container for the avatar
 * - Label: the avatar initials text
 * - Excess Label: the label or text that represents excess avatar count.
 * Typically used in avatar groups.
 * - Group: the container for the avatar group
 */
declare const avatarAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11, string>;
                keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11)[];
                __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10, string>;
            classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U | U_10, string>;
            keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U | U_10)[];
            __type: "container" | "label" | "badge" | "excessLabel" | "group" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U, string>;
        classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group" | U, string>;
        keys: ("container" | "label" | "badge" | "excessLabel" | "group" | U)[];
        __type: "container" | "label" | "badge" | "excessLabel" | "group" | U;
    }, "parts">;
    selectors: () => Record<"container" | "label" | "badge" | "excessLabel" | "group", string>;
    classnames: () => Record<"container" | "label" | "badge" | "excessLabel" | "group", string>;
    keys: ("container" | "label" | "badge" | "excessLabel" | "group")[];
    __type: "container" | "label" | "badge" | "excessLabel" | "group";
}, "parts">;
/**
 * **Breadcrumb anatomy**
 * - Item: the container for a breadcrumb item
 * - Link: the element that represents the breadcrumb link
 * - Container: the container for the breadcrumb items
 * - Separator: the separator between breadcrumb items
 */
declare const breadcrumbAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10 | U_11, string>;
                keys: ("container" | "link" | "item" | "separator" | U | U_10 | U_11)[];
                __type: "container" | "link" | "item" | "separator" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "link" | "item" | "separator" | U | U_10, string>;
            classnames: () => Record<"container" | "link" | "item" | "separator" | U | U_10, string>;
            keys: ("container" | "link" | "item" | "separator" | U | U_10)[];
            __type: "container" | "link" | "item" | "separator" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "link" | "item" | "separator" | U, string>;
        classnames: () => Record<"container" | "link" | "item" | "separator" | U, string>;
        keys: ("container" | "link" | "item" | "separator" | U)[];
        __type: "container" | "link" | "item" | "separator" | U;
    }, "parts">;
    selectors: () => Record<"container" | "link" | "item" | "separator", string>;
    classnames: () => Record<"container" | "link" | "item" | "separator", string>;
    keys: ("container" | "link" | "item" | "separator")[];
    __type: "container" | "link" | "item" | "separator";
}, "parts">;
declare const buttonAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: (string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: (string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: (string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: (string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: string | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<string | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: (string | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: string | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<string | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<string | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: (string | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: string | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<string | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<string | U | U_10 | U_11 | U_12, string>;
                    keys: (string | U | U_10 | U_11 | U_12)[];
                    __type: string | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<string | U | U_10 | U_11, string>;
                classnames: () => Record<string | U | U_10 | U_11, string>;
                keys: (string | U | U_10 | U_11)[];
                __type: string | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<string | U | U_10, string>;
            classnames: () => Record<string | U | U_10, string>;
            keys: (string | U | U_10)[];
            __type: string | U | U_10;
        }, "parts">;
        selectors: () => Record<string | U, string>;
        classnames: () => Record<string | U, string>;
        keys: (string | U)[];
        __type: string | U;
    }, "parts">;
    selectors: () => Record<string, string>;
    classnames: () => Record<string, string>;
    keys: string[];
    __type: string;
}, "parts">;
declare const checkboxAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10 | U_11, string>;
                keys: ("container" | "icon" | "label" | "control" | U | U_10 | U_11)[];
                __type: "container" | "icon" | "label" | "control" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "icon" | "label" | "control" | U | U_10, string>;
            classnames: () => Record<"container" | "icon" | "label" | "control" | U | U_10, string>;
            keys: ("container" | "icon" | "label" | "control" | U | U_10)[];
            __type: "container" | "icon" | "label" | "control" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "icon" | "label" | "control" | U, string>;
        classnames: () => Record<"container" | "icon" | "label" | "control" | U, string>;
        keys: ("container" | "icon" | "label" | "control" | U)[];
        __type: "container" | "icon" | "label" | "control" | U;
    }, "parts">;
    selectors: () => Record<"container" | "icon" | "label" | "control", string>;
    classnames: () => Record<"container" | "icon" | "label" | "control", string>;
    keys: ("container" | "icon" | "label" | "control")[];
    __type: "container" | "icon" | "label" | "control";
}, "parts">;
declare const circularProgressAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12, string>;
                    keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12)[];
                    __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11, string>;
                classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11, string>;
                keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11)[];
                __type: "label" | "track" | "filledTrack" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10, string>;
            classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10, string>;
            keys: ("label" | "track" | "filledTrack" | U | U_10)[];
            __type: "label" | "track" | "filledTrack" | U | U_10;
        }, "parts">;
        selectors: () => Record<"label" | "track" | "filledTrack" | U, string>;
        classnames: () => Record<"label" | "track" | "filledTrack" | U, string>;
        keys: ("label" | "track" | "filledTrack" | U)[];
        __type: "label" | "track" | "filledTrack" | U;
    }, "parts">;
    selectors: () => Record<"label" | "track" | "filledTrack", string>;
    classnames: () => Record<"label" | "track" | "filledTrack", string>;
    keys: ("label" | "track" | "filledTrack")[];
    __type: "label" | "track" | "filledTrack";
}, "parts">;
declare const drawerAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12, string>;
                    keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12)[];
                    __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11, string>;
                classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11, string>;
                keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11)[];
                __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10, string>;
            classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10, string>;
            keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10)[];
            __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10;
        }, "parts">;
        selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U, string>;
        classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U, string>;
        keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U)[];
        __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U;
    }, "parts">;
    selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer", string>;
    classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer", string>;
    keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer")[];
    __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer";
}, "parts">;
declare const editableAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "preview" | "input" | "textarea" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11 | U_12, string>;
                    keys: ("preview" | "input" | "textarea" | U | U_10 | U_11 | U_12)[];
                    __type: "preview" | "input" | "textarea" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11, string>;
                classnames: () => Record<"preview" | "input" | "textarea" | U | U_10 | U_11, string>;
                keys: ("preview" | "input" | "textarea" | U | U_10 | U_11)[];
                __type: "preview" | "input" | "textarea" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"preview" | "input" | "textarea" | U | U_10, string>;
            classnames: () => Record<"preview" | "input" | "textarea" | U | U_10, string>;
            keys: ("preview" | "input" | "textarea" | U | U_10)[];
            __type: "preview" | "input" | "textarea" | U | U_10;
        }, "parts">;
        selectors: () => Record<"preview" | "input" | "textarea" | U, string>;
        classnames: () => Record<"preview" | "input" | "textarea" | U, string>;
        keys: ("preview" | "input" | "textarea" | U)[];
        __type: "preview" | "input" | "textarea" | U;
    }, "parts">;
    selectors: () => Record<"preview" | "input" | "textarea", string>;
    classnames: () => Record<"preview" | "input" | "textarea", string>;
    keys: ("preview" | "input" | "textarea")[];
    __type: "preview" | "input" | "textarea";
}, "parts">;
declare const formAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10 | U_11, string>;
                keys: ("container" | "requiredIndicator" | "helperText" | U | U_10 | U_11)[];
                __type: "container" | "requiredIndicator" | "helperText" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10, string>;
            classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U | U_10, string>;
            keys: ("container" | "requiredIndicator" | "helperText" | U | U_10)[];
            __type: "container" | "requiredIndicator" | "helperText" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "requiredIndicator" | "helperText" | U, string>;
        classnames: () => Record<"container" | "requiredIndicator" | "helperText" | U, string>;
        keys: ("container" | "requiredIndicator" | "helperText" | U)[];
        __type: "container" | "requiredIndicator" | "helperText" | U;
    }, "parts">;
    selectors: () => Record<"container" | "requiredIndicator" | "helperText", string>;
    classnames: () => Record<"container" | "requiredIndicator" | "helperText", string>;
    keys: ("container" | "requiredIndicator" | "helperText")[];
    __type: "container" | "requiredIndicator" | "helperText";
}, "parts">;
declare const formErrorAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "icon" | "text" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("icon" | "text" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "icon" | "text" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"icon" | "text" | U | U_10 | U_11 | U_12, string>;
                    keys: ("icon" | "text" | U | U_10 | U_11 | U_12)[];
                    __type: "icon" | "text" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"icon" | "text" | U | U_10 | U_11, string>;
                classnames: () => Record<"icon" | "text" | U | U_10 | U_11, string>;
                keys: ("icon" | "text" | U | U_10 | U_11)[];
                __type: "icon" | "text" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"icon" | "text" | U | U_10, string>;
            classnames: () => Record<"icon" | "text" | U | U_10, string>;
            keys: ("icon" | "text" | U | U_10)[];
            __type: "icon" | "text" | U | U_10;
        }, "parts">;
        selectors: () => Record<"icon" | "text" | U, string>;
        classnames: () => Record<"icon" | "text" | U, string>;
        keys: ("icon" | "text" | U)[];
        __type: "icon" | "text" | U;
    }, "parts">;
    selectors: () => Record<"icon" | "text", string>;
    classnames: () => Record<"icon" | "text", string>;
    keys: ("icon" | "text")[];
    __type: "icon" | "text";
}, "parts">;
declare const inputAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12, string>;
                    keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12)[];
                    __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11, string>;
                classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10 | U_11, string>;
                keys: ("group" | "addon" | "field" | "element" | U | U_10 | U_11)[];
                __type: "group" | "addon" | "field" | "element" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"group" | "addon" | "field" | "element" | U | U_10, string>;
            classnames: () => Record<"group" | "addon" | "field" | "element" | U | U_10, string>;
            keys: ("group" | "addon" | "field" | "element" | U | U_10)[];
            __type: "group" | "addon" | "field" | "element" | U | U_10;
        }, "parts">;
        selectors: () => Record<"group" | "addon" | "field" | "element" | U, string>;
        classnames: () => Record<"group" | "addon" | "field" | "element" | U, string>;
        keys: ("group" | "addon" | "field" | "element" | U)[];
        __type: "group" | "addon" | "field" | "element" | U;
    }, "parts">;
    selectors: () => Record<"group" | "addon" | "field" | "element", string>;
    classnames: () => Record<"group" | "addon" | "field" | "element", string>;
    keys: ("group" | "addon" | "field" | "element")[];
    __type: "group" | "addon" | "field" | "element";
}, "parts">;
declare const listAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "icon" | "item" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "icon" | "item" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "icon" | "item" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "icon" | "item" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "icon" | "item" | U | U_10 | U_11, string>;
                keys: ("container" | "icon" | "item" | U | U_10 | U_11)[];
                __type: "container" | "icon" | "item" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "icon" | "item" | U | U_10, string>;
            classnames: () => Record<"container" | "icon" | "item" | U | U_10, string>;
            keys: ("container" | "icon" | "item" | U | U_10)[];
            __type: "container" | "icon" | "item" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "icon" | "item" | U, string>;
        classnames: () => Record<"container" | "icon" | "item" | U, string>;
        keys: ("container" | "icon" | "item" | U)[];
        __type: "container" | "icon" | "item" | U;
    }, "parts">;
    selectors: () => Record<"container" | "icon" | "item", string>;
    classnames: () => Record<"container" | "icon" | "item", string>;
    keys: ("container" | "icon" | "item")[];
    __type: "container" | "icon" | "item";
}, "parts">;
declare const menuAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12, string>;
                    keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12)[];
                    __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11, string>;
                classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11, string>;
                keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11)[];
                __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10, string>;
            classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10, string>;
            keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10)[];
            __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U | U_10;
        }, "parts">;
        selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U, string>;
        classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U, string>;
        keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U)[];
        __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider" | U;
    }, "parts">;
    selectors: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider", string>;
    classnames: () => Record<"button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider", string>;
    keys: ("button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider")[];
    __type: "button" | "icon" | "item" | "list" | "groupTitle" | "command" | "divider";
}, "parts">;
declare const modalAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12, string>;
                    keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12)[];
                    __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11, string>;
                classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11, string>;
                keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11)[];
                __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10, string>;
            classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10, string>;
            keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10)[];
            __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U | U_10;
        }, "parts">;
        selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U, string>;
        classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U, string>;
        keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U)[];
        __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer" | U;
    }, "parts">;
    selectors: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer", string>;
    classnames: () => Record<"overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer", string>;
    keys: ("overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer")[];
    __type: "overlay" | "dialogContainer" | "dialog" | "header" | "closeButton" | "body" | "footer";
}, "parts">;
declare const numberInputAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12, string>;
                    keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12)[];
                    __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11, string>;
                classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11, string>;
                keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11)[];
                __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10, string>;
            classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U | U_10, string>;
            keys: ("root" | "field" | "stepperGroup" | "stepper" | U | U_10)[];
            __type: "root" | "field" | "stepperGroup" | "stepper" | U | U_10;
        }, "parts">;
        selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U, string>;
        classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper" | U, string>;
        keys: ("root" | "field" | "stepperGroup" | "stepper" | U)[];
        __type: "root" | "field" | "stepperGroup" | "stepper" | U;
    }, "parts">;
    selectors: () => Record<"root" | "field" | "stepperGroup" | "stepper", string>;
    classnames: () => Record<"root" | "field" | "stepperGroup" | "stepper", string>;
    keys: ("root" | "field" | "stepperGroup" | "stepper")[];
    __type: "root" | "field" | "stepperGroup" | "stepper";
}, "parts">;
declare const pinInputAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("field" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "field" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"field" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("field" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "field" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"field" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"field" | U | U_10 | U_11 | U_12, string>;
                    keys: ("field" | U | U_10 | U_11 | U_12)[];
                    __type: "field" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"field" | U | U_10 | U_11, string>;
                classnames: () => Record<"field" | U | U_10 | U_11, string>;
                keys: ("field" | U | U_10 | U_11)[];
                __type: "field" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"field" | U | U_10, string>;
            classnames: () => Record<"field" | U | U_10, string>;
            keys: ("field" | U | U_10)[];
            __type: "field" | U | U_10;
        }, "parts">;
        selectors: () => Record<"field" | U, string>;
        classnames: () => Record<"field" | U, string>;
        keys: ("field" | U)[];
        __type: "field" | U;
    }, "parts">;
    selectors: () => Record<"field", string>;
    classnames: () => Record<"field", string>;
    keys: "field"[];
    __type: "field";
}, "parts">;
declare const popoverAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12, string>;
                    keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12)[];
                    __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11, string>;
                classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11, string>;
                keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11)[];
                __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10, string>;
            classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10, string>;
            keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10)[];
            __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U | U_10;
        }, "parts">;
        selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U, string>;
        classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U, string>;
        keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U)[];
        __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow" | U;
    }, "parts">;
    selectors: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow", string>;
    classnames: () => Record<"header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow", string>;
    keys: ("header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow")[];
    __type: "header" | "closeButton" | "body" | "footer" | "content" | "popper" | "arrow";
}, "parts">;
declare const progressAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12, string>;
                    keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12)[];
                    __type: "label" | "track" | "filledTrack" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11, string>;
                classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10 | U_11, string>;
                keys: ("label" | "track" | "filledTrack" | U | U_10 | U_11)[];
                __type: "label" | "track" | "filledTrack" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"label" | "track" | "filledTrack" | U | U_10, string>;
            classnames: () => Record<"label" | "track" | "filledTrack" | U | U_10, string>;
            keys: ("label" | "track" | "filledTrack" | U | U_10)[];
            __type: "label" | "track" | "filledTrack" | U | U_10;
        }, "parts">;
        selectors: () => Record<"label" | "track" | "filledTrack" | U, string>;
        classnames: () => Record<"label" | "track" | "filledTrack" | U, string>;
        keys: ("label" | "track" | "filledTrack" | U)[];
        __type: "label" | "track" | "filledTrack" | U;
    }, "parts">;
    selectors: () => Record<"label" | "track" | "filledTrack", string>;
    classnames: () => Record<"label" | "track" | "filledTrack", string>;
    keys: ("label" | "track" | "filledTrack")[];
    __type: "label" | "track" | "filledTrack";
}, "parts">;
declare const radioAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "label" | "control" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "label" | "control" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "label" | "control" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "label" | "control" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "label" | "control" | U | U_10 | U_11, string>;
                keys: ("container" | "label" | "control" | U | U_10 | U_11)[];
                __type: "container" | "label" | "control" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "label" | "control" | U | U_10, string>;
            classnames: () => Record<"container" | "label" | "control" | U | U_10, string>;
            keys: ("container" | "label" | "control" | U | U_10)[];
            __type: "container" | "label" | "control" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "label" | "control" | U, string>;
        classnames: () => Record<"container" | "label" | "control" | U, string>;
        keys: ("container" | "label" | "control" | U)[];
        __type: "container" | "label" | "control" | U;
    }, "parts">;
    selectors: () => Record<"container" | "label" | "control", string>;
    classnames: () => Record<"container" | "label" | "control", string>;
    keys: ("container" | "label" | "control")[];
    __type: "container" | "label" | "control";
}, "parts">;
declare const selectAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "icon" | "field" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("icon" | "field" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "icon" | "field" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"icon" | "field" | U | U_10 | U_11 | U_12, string>;
                    keys: ("icon" | "field" | U | U_10 | U_11 | U_12)[];
                    __type: "icon" | "field" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"icon" | "field" | U | U_10 | U_11, string>;
                classnames: () => Record<"icon" | "field" | U | U_10 | U_11, string>;
                keys: ("icon" | "field" | U | U_10 | U_11)[];
                __type: "icon" | "field" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"icon" | "field" | U | U_10, string>;
            classnames: () => Record<"icon" | "field" | U | U_10, string>;
            keys: ("icon" | "field" | U | U_10)[];
            __type: "icon" | "field" | U | U_10;
        }, "parts">;
        selectors: () => Record<"icon" | "field" | U, string>;
        classnames: () => Record<"icon" | "field" | U, string>;
        keys: ("icon" | "field" | U)[];
        __type: "icon" | "field" | U;
    }, "parts">;
    selectors: () => Record<"icon" | "field", string>;
    classnames: () => Record<"icon" | "field", string>;
    keys: ("icon" | "field")[];
    __type: "icon" | "field";
}, "parts">;
declare const sliderAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11, string>;
                keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11)[];
                __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10, string>;
            classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10, string>;
            keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10)[];
            __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U, string>;
        classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark" | U, string>;
        keys: ("container" | "track" | "filledTrack" | "thumb" | "mark" | U)[];
        __type: "container" | "track" | "filledTrack" | "thumb" | "mark" | U;
    }, "parts">;
    selectors: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark", string>;
    classnames: () => Record<"container" | "track" | "filledTrack" | "thumb" | "mark", string>;
    keys: ("container" | "track" | "filledTrack" | "thumb" | "mark")[];
    __type: "container" | "track" | "filledTrack" | "thumb" | "mark";
}, "parts">;
declare const statAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12, string>;
                    keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12)[];
                    __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11, string>;
                classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11, string>;
                keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11)[];
                __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10, string>;
            classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U | U_10, string>;
            keys: ("number" | "container" | "icon" | "label" | "helpText" | U | U_10)[];
            __type: "number" | "container" | "icon" | "label" | "helpText" | U | U_10;
        }, "parts">;
        selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U, string>;
        classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText" | U, string>;
        keys: ("number" | "container" | "icon" | "label" | "helpText" | U)[];
        __type: "number" | "container" | "icon" | "label" | "helpText" | U;
    }, "parts">;
    selectors: () => Record<"number" | "container" | "icon" | "label" | "helpText", string>;
    classnames: () => Record<"number" | "container" | "icon" | "label" | "helpText", string>;
    keys: ("number" | "container" | "icon" | "label" | "helpText")[];
    __type: "number" | "container" | "icon" | "label" | "helpText";
}, "parts">;
declare const switchAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10 | U_11, string>;
                keys: ("container" | "label" | "track" | "thumb" | U | U_10 | U_11)[];
                __type: "container" | "label" | "track" | "thumb" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "label" | "track" | "thumb" | U | U_10, string>;
            classnames: () => Record<"container" | "label" | "track" | "thumb" | U | U_10, string>;
            keys: ("container" | "label" | "track" | "thumb" | U | U_10)[];
            __type: "container" | "label" | "track" | "thumb" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "label" | "track" | "thumb" | U, string>;
        classnames: () => Record<"container" | "label" | "track" | "thumb" | U, string>;
        keys: ("container" | "label" | "track" | "thumb" | U)[];
        __type: "container" | "label" | "track" | "thumb" | U;
    }, "parts">;
    selectors: () => Record<"container" | "label" | "track" | "thumb", string>;
    classnames: () => Record<"container" | "label" | "track" | "thumb", string>;
    keys: ("container" | "label" | "track" | "thumb")[];
    __type: "container" | "label" | "track" | "thumb";
}, "parts">;
declare const tableAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12, string>;
                    keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12)[];
                    __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11, string>;
                classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11, string>;
                keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11)[];
                __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10, string>;
            classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10, string>;
            keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10)[];
            __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U | U_10;
        }, "parts">;
        selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U, string>;
        classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U, string>;
        keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U)[];
        __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption" | U;
    }, "parts">;
    selectors: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption", string>;
    classnames: () => Record<"table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption", string>;
    keys: ("table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption")[];
    __type: "table" | "thead" | "tbody" | "tr" | "th" | "td" | "tfoot" | "caption";
}, "parts">;
declare const tabsAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12, string>;
                    keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12)[];
                    __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11, string>;
                classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11, string>;
                keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11)[];
                __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10, string>;
            classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10, string>;
            keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10)[];
            __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U | U_10;
        }, "parts">;
        selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U, string>;
        classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U, string>;
        keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U)[];
        __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator" | U;
    }, "parts">;
    selectors: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator", string>;
    classnames: () => Record<"root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator", string>;
    keys: ("root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator")[];
    __type: "root" | "tab" | "tablist" | "tabpanel" | "tabpanels" | "indicator";
}, "parts">;
/**
 * **Tag anatomy**
 * - Container: the container for the tag
 * - Label: the text content of the tag
 * - closeButton: the close button for the tag
 */
declare const tagAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "label" | "closeButton" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "label" | "closeButton" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "label" | "closeButton" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "label" | "closeButton" | U | U_10 | U_11, string>;
                keys: ("container" | "label" | "closeButton" | U | U_10 | U_11)[];
                __type: "container" | "label" | "closeButton" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "label" | "closeButton" | U | U_10, string>;
            classnames: () => Record<"container" | "label" | "closeButton" | U | U_10, string>;
            keys: ("container" | "label" | "closeButton" | U | U_10)[];
            __type: "container" | "label" | "closeButton" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "label" | "closeButton" | U, string>;
        classnames: () => Record<"container" | "label" | "closeButton" | U, string>;
        keys: ("container" | "label" | "closeButton" | U)[];
        __type: "container" | "label" | "closeButton" | U;
    }, "parts">;
    selectors: () => Record<"container" | "label" | "closeButton", string>;
    classnames: () => Record<"container" | "label" | "closeButton", string>;
    keys: ("container" | "label" | "closeButton")[];
    __type: "container" | "label" | "closeButton";
}, "parts">;
declare const cardAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12, string>;
                    keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12)[];
                    __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11, string>;
                classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10 | U_11, string>;
                keys: ("container" | "header" | "body" | "footer" | U | U_10 | U_11)[];
                __type: "container" | "header" | "body" | "footer" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"container" | "header" | "body" | "footer" | U | U_10, string>;
            classnames: () => Record<"container" | "header" | "body" | "footer" | U | U_10, string>;
            keys: ("container" | "header" | "body" | "footer" | U | U_10)[];
            __type: "container" | "header" | "body" | "footer" | U | U_10;
        }, "parts">;
        selectors: () => Record<"container" | "header" | "body" | "footer" | U, string>;
        classnames: () => Record<"container" | "header" | "body" | "footer" | U, string>;
        keys: ("container" | "header" | "body" | "footer" | U)[];
        __type: "container" | "header" | "body" | "footer" | U;
    }, "parts">;
    selectors: () => Record<"container" | "header" | "body" | "footer", string>;
    classnames: () => Record<"container" | "header" | "body" | "footer", string>;
    keys: ("container" | "header" | "body" | "footer")[];
    __type: "container" | "header" | "body" | "footer";
}, "parts">;
declare const stepperAnatomy: Omit<{
    parts: <V extends string>(...values: V[]) => Omit<{
        parts: any;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U extends string>(...parts: U[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U | U_1 | U_2 | U_3, string>;
                        keys: (V | U | U_1 | U_2 | U_3)[];
                        __type: V | U | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U | U_1 | U_2, string>;
                    classnames: () => Record<V | U | U_1 | U_2, string>;
                    keys: (V | U | U_1 | U_2)[];
                    __type: V | U | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U | U_1, string>;
                classnames: () => Record<V | U | U_1, string>;
                keys: (V | U | U_1)[];
                __type: V | U | U_1;
            }, "parts">;
            selectors: () => Record<V | U, string>;
            classnames: () => Record<V | U, string>;
            keys: (V | U)[];
            __type: V | U;
        }, "parts">;
        selectors: () => Record<V, string>;
        classnames: () => Record<V, string>;
        keys: V[];
        __type: V;
    }, "parts">;
    toPart: (part: string) => {
        className: string;
        selector: string;
        toString: () => string;
    };
    extend: <U extends string>(...parts: U[]) => Omit<{
        parts: <V extends string>(...values: V[]) => Omit<{
            parts: any;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                            __type: V | U_1 | U_2 | U_3 | U_4;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                        keys: (V | U_1 | U_2 | U_3)[];
                        __type: V | U_1 | U_2 | U_3;
                    }, "parts">;
                    selectors: () => Record<V | U_1 | U_2, string>;
                    classnames: () => Record<V | U_1 | U_2, string>;
                    keys: (V | U_1 | U_2)[];
                    __type: V | U_1 | U_2;
                }, "parts">;
                selectors: () => Record<V | U_1, string>;
                classnames: () => Record<V | U_1, string>;
                keys: (V | U_1)[];
                __type: V | U_1;
            }, "parts">;
            selectors: () => Record<V, string>;
            classnames: () => Record<V, string>;
            keys: V[];
            __type: V;
        }, "parts">;
        toPart: (part: string) => {
            className: string;
            selector: string;
            toString: () => string;
        };
        extend: <U_10 extends string>(...parts: U_10[]) => Omit<{
            parts: <V extends string>(...values: V[]) => Omit<{
                parts: any;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                __type: V | U_1 | U_2 | U_3 | U_4;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                            keys: (V | U_1 | U_2 | U_3)[];
                            __type: V | U_1 | U_2 | U_3;
                        }, "parts">;
                        selectors: () => Record<V | U_1 | U_2, string>;
                        classnames: () => Record<V | U_1 | U_2, string>;
                        keys: (V | U_1 | U_2)[];
                        __type: V | U_1 | U_2;
                    }, "parts">;
                    selectors: () => Record<V | U_1, string>;
                    classnames: () => Record<V | U_1, string>;
                    keys: (V | U_1)[];
                    __type: V | U_1;
                }, "parts">;
                selectors: () => Record<V, string>;
                classnames: () => Record<V, string>;
                keys: V[];
                __type: V;
            }, "parts">;
            toPart: (part: string) => {
                className: string;
                selector: string;
                toString: () => string;
            };
            extend: <U_11 extends string>(...parts: U_11[]) => Omit<{
                parts: <V extends string>(...values: V[]) => Omit<{
                    parts: any;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                keys: (V | U_1 | U_2 | U_3)[];
                                __type: V | U_1 | U_2 | U_3;
                            }, "parts">;
                            selectors: () => Record<V | U_1 | U_2, string>;
                            classnames: () => Record<V | U_1 | U_2, string>;
                            keys: (V | U_1 | U_2)[];
                            __type: V | U_1 | U_2;
                        }, "parts">;
                        selectors: () => Record<V | U_1, string>;
                        classnames: () => Record<V | U_1, string>;
                        keys: (V | U_1)[];
                        __type: V | U_1;
                    }, "parts">;
                    selectors: () => Record<V, string>;
                    classnames: () => Record<V, string>;
                    keys: V[];
                    __type: V;
                }, "parts">;
                toPart: (part: string) => {
                    className: string;
                    selector: string;
                    toString: () => string;
                };
                extend: <U_12 extends string>(...parts: U_12[]) => Omit<{
                    parts: <V extends string>(...values: V[]) => Omit<{
                        parts: any;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                    keys: (V | U_1 | U_2 | U_3)[];
                                    __type: V | U_1 | U_2 | U_3;
                                }, "parts">;
                                selectors: () => Record<V | U_1 | U_2, string>;
                                classnames: () => Record<V | U_1 | U_2, string>;
                                keys: (V | U_1 | U_2)[];
                                __type: V | U_1 | U_2;
                            }, "parts">;
                            selectors: () => Record<V | U_1, string>;
                            classnames: () => Record<V | U_1, string>;
                            keys: (V | U_1)[];
                            __type: V | U_1;
                        }, "parts">;
                        selectors: () => Record<V, string>;
                        classnames: () => Record<V, string>;
                        keys: V[];
                        __type: V;
                    }, "parts">;
                    toPart: (part: string) => {
                        className: string;
                        selector: string;
                        toString: () => string;
                    };
                    extend: <U_13 extends string>(...parts: U_13[]) => Omit<{
                        parts: <V extends string>(...values: V[]) => Omit<{
                            parts: any;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                        keys: (V | U_1 | U_2 | U_3)[];
                                        __type: V | U_1 | U_2 | U_3;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1 | U_2, string>;
                                    classnames: () => Record<V | U_1 | U_2, string>;
                                    keys: (V | U_1 | U_2)[];
                                    __type: V | U_1 | U_2;
                                }, "parts">;
                                selectors: () => Record<V | U_1, string>;
                                classnames: () => Record<V | U_1, string>;
                                keys: (V | U_1)[];
                                __type: V | U_1;
                            }, "parts">;
                            selectors: () => Record<V, string>;
                            classnames: () => Record<V, string>;
                            keys: V[];
                            __type: V;
                        }, "parts">;
                        toPart: (part: string) => {
                            className: string;
                            selector: string;
                            toString: () => string;
                        };
                        extend: <U_14 extends string>(...parts: U_14[]) => Omit<{
                            parts: <V extends string>(...values: V[]) => Omit<{
                                parts: any;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                            keys: (V | U_1 | U_2 | U_3)[];
                                            __type: V | U_1 | U_2 | U_3;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1 | U_2, string>;
                                        classnames: () => Record<V | U_1 | U_2, string>;
                                        keys: (V | U_1 | U_2)[];
                                        __type: V | U_1 | U_2;
                                    }, "parts">;
                                    selectors: () => Record<V | U_1, string>;
                                    classnames: () => Record<V | U_1, string>;
                                    keys: (V | U_1)[];
                                    __type: V | U_1;
                                }, "parts">;
                                selectors: () => Record<V, string>;
                                classnames: () => Record<V, string>;
                                keys: V[];
                                __type: V;
                            }, "parts">;
                            toPart: (part: string) => {
                                className: string;
                                selector: string;
                                toString: () => string;
                            };
                            extend: <U_15 extends string>(...parts: U_15[]) => Omit<{
                                parts: <V extends string>(...values: V[]) => Omit<{
                                    parts: any;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                    keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                    __type: V | U_1 | U_2 | U_3 | U_4;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                keys: (V | U_1 | U_2 | U_3)[];
                                                __type: V | U_1 | U_2 | U_3;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1 | U_2, string>;
                                            classnames: () => Record<V | U_1 | U_2, string>;
                                            keys: (V | U_1 | U_2)[];
                                            __type: V | U_1 | U_2;
                                        }, "parts">;
                                        selectors: () => Record<V | U_1, string>;
                                        classnames: () => Record<V | U_1, string>;
                                        keys: (V | U_1)[];
                                        __type: V | U_1;
                                    }, "parts">;
                                    selectors: () => Record<V, string>;
                                    classnames: () => Record<V, string>;
                                    keys: V[];
                                    __type: V;
                                }, "parts">;
                                toPart: (part: string) => {
                                    className: string;
                                    selector: string;
                                    toString: () => string;
                                };
                                extend: <U_16 extends string>(...parts: U_16[]) => Omit<{
                                    parts: <V extends string>(...values: V[]) => Omit<{
                                        parts: any;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                        keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                        __type: V | U_1 | U_2 | U_3 | U_4;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                    keys: (V | U_1 | U_2 | U_3)[];
                                                    __type: V | U_1 | U_2 | U_3;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1 | U_2, string>;
                                                classnames: () => Record<V | U_1 | U_2, string>;
                                                keys: (V | U_1 | U_2)[];
                                                __type: V | U_1 | U_2;
                                            }, "parts">;
                                            selectors: () => Record<V | U_1, string>;
                                            classnames: () => Record<V | U_1, string>;
                                            keys: (V | U_1)[];
                                            __type: V | U_1;
                                        }, "parts">;
                                        selectors: () => Record<V, string>;
                                        classnames: () => Record<V, string>;
                                        keys: V[];
                                        __type: V;
                                    }, "parts">;
                                    toPart: (part: string) => {
                                        className: string;
                                        selector: string;
                                        toString: () => string;
                                    };
                                    extend: <U_17 extends string>(...parts: U_17[]) => Omit<{
                                        parts: <V extends string>(...values: V[]) => Omit<{
                                            parts: any;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                            keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                            __type: V | U_1 | U_2 | U_3 | U_4;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                        keys: (V | U_1 | U_2 | U_3)[];
                                                        __type: V | U_1 | U_2 | U_3;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1 | U_2, string>;
                                                    classnames: () => Record<V | U_1 | U_2, string>;
                                                    keys: (V | U_1 | U_2)[];
                                                    __type: V | U_1 | U_2;
                                                }, "parts">;
                                                selectors: () => Record<V | U_1, string>;
                                                classnames: () => Record<V | U_1, string>;
                                                keys: (V | U_1)[];
                                                __type: V | U_1;
                                            }, "parts">;
                                            selectors: () => Record<V, string>;
                                            classnames: () => Record<V, string>;
                                            keys: V[];
                                            __type: V;
                                        }, "parts">;
                                        toPart: (part: string) => {
                                            className: string;
                                            selector: string;
                                            toString: () => string;
                                        };
                                        extend: <U_18 extends string>(...parts: U_18[]) => Omit<{
                                            parts: <V extends string>(...values: V[]) => Omit<{
                                                parts: any;
                                                toPart: (part: string) => {
                                                    className: string;
                                                    selector: string;
                                                    toString: () => string;
                                                };
                                                extend: <U_1 extends string>(...parts: U_1[]) => Omit<{
                                                    parts: any;
                                                    toPart: (part: string) => {
                                                        className: string;
                                                        selector: string;
                                                        toString: () => string;
                                                    };
                                                    extend: <U_2 extends string>(...parts: U_2[]) => Omit<{
                                                        parts: any;
                                                        toPart: (part: string) => {
                                                            className: string;
                                                            selector: string;
                                                            toString: () => string;
                                                        };
                                                        extend: <U_3 extends string>(...parts: U_3[]) => Omit<{
                                                            parts: any;
                                                            toPart: (part: string) => {
                                                                className: string;
                                                                selector: string;
                                                                toString: () => string;
                                                            };
                                                            extend: <U_4 extends string>(...parts: U_4[]) => Omit<{
                                                                parts: any;
                                                                toPart: (part: string) => {
                                                                    className: string;
                                                                    selector: string;
                                                                    toString: () => string;
                                                                };
                                                                extend: <U_5 extends string>(...parts: U_5[]) => Omit<{
                                                                    parts: any;
                                                                    toPart: (part: string) => {
                                                                        className: string;
                                                                        selector: string;
                                                                        toString: () => string;
                                                                    };
                                                                    extend: <U_6 extends string>(...parts: U_6[]) => Omit<{
                                                                        parts: any;
                                                                        toPart: (part: string) => {
                                                                            className: string;
                                                                            selector: string;
                                                                            toString: () => string;
                                                                        };
                                                                        extend: <U_7 extends string>(...parts: U_7[]) => Omit<{
                                                                            parts: any;
                                                                            toPart: (part: string) => {
                                                                                className: string;
                                                                                selector: string;
                                                                                toString: () => string;
                                                                            };
                                                                            extend: <U_8 extends string>(...parts: U_8[]) => Omit<{
                                                                                parts: any;
                                                                                toPart: (part: string) => {
                                                                                    className: string;
                                                                                    selector: string;
                                                                                    toString: () => string;
                                                                                };
                                                                                extend: <U_9 extends string>(...parts: U_9[]) => Omit<any, "parts">;
                                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8, string>;
                                                                                keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8)[];
                                                                                __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7 | U_8;
                                                                            }, "parts">;
                                                                            selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7, string>;
                                                                            keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7)[];
                                                                            __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6 | U_7;
                                                                        }, "parts">;
                                                                        selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6, string>;
                                                                        keys: (V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6)[];
                                                                        __type: V | U_1 | U_2 | U_3 | U_4 | U_5 | U_6;
                                                                    }, "parts">;
                                                                    selectors: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    classnames: () => Record<V | U_1 | U_2 | U_3 | U_4 | U_5, string>;
                                                                    keys: (V | U_1 | U_2 | U_3 | U_4 | U_5)[];
                                                                    __type: V | U_1 | U_2 | U_3 | U_4 | U_5;
                                                                }, "parts">;
                                                                selectors: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                classnames: () => Record<V | U_1 | U_2 | U_3 | U_4, string>;
                                                                keys: (V | U_1 | U_2 | U_3 | U_4)[];
                                                                __type: V | U_1 | U_2 | U_3 | U_4;
                                                            }, "parts">;
                                                            selectors: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            classnames: () => Record<V | U_1 | U_2 | U_3, string>;
                                                            keys: (V | U_1 | U_2 | U_3)[];
                                                            __type: V | U_1 | U_2 | U_3;
                                                        }, "parts">;
                                                        selectors: () => Record<V | U_1 | U_2, string>;
                                                        classnames: () => Record<V | U_1 | U_2, string>;
                                                        keys: (V | U_1 | U_2)[];
                                                        __type: V | U_1 | U_2;
                                                    }, "parts">;
                                                    selectors: () => Record<V | U_1, string>;
                                                    classnames: () => Record<V | U_1, string>;
                                                    keys: (V | U_1)[];
                                                    __type: V | U_1;
                                                }, "parts">;
                                                selectors: () => Record<V, string>;
                                                classnames: () => Record<V, string>;
                                                keys: V[];
                                                __type: V;
                                            }, "parts">;
                                            toPart: (part: string) => {
                                                className: string;
                                                selector: string;
                                                toString: () => string;
                                            };
                                            extend: <U_19 extends string>(...parts: U_19[]) => Omit<any, "parts">;
                                            selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18, string>;
                                            keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18)[];
                                            __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17 | U_18;
                                        }, "parts">;
                                        selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17, string>;
                                        keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17)[];
                                        __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16 | U_17;
                                    }, "parts">;
                                    selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16, string>;
                                    keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16)[];
                                    __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15 | U_16;
                                }, "parts">;
                                selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15, string>;
                                keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15)[];
                                __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14 | U_15;
                            }, "parts">;
                            selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14, string>;
                            keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14)[];
                            __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13 | U_14;
                        }, "parts">;
                        selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13, string>;
                        classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13, string>;
                        keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13)[];
                        __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12 | U_13;
                    }, "parts">;
                    selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12, string>;
                    classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12, string>;
                    keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12)[];
                    __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11 | U_12;
                }, "parts">;
                selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11, string>;
                classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11, string>;
                keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11)[];
                __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10 | U_11;
            }, "parts">;
            selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10, string>;
            classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10, string>;
            keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10)[];
            __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U | U_10;
        }, "parts">;
        selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U, string>;
        classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U, string>;
        keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U)[];
        __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step" | U;
    }, "parts">;
    selectors: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step", string>;
    classnames: () => Record<"number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step", string>;
    keys: ("number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step")[];
    __type: "number" | "icon" | "title" | "description" | "separator" | "stepper" | "indicator" | "step";
}, "parts">;

export { accordionAnatomy, alertAnatomy, avatarAnatomy, breadcrumbAnatomy, buttonAnatomy, cardAnatomy, checkboxAnatomy, circularProgressAnatomy, drawerAnatomy, editableAnatomy, formAnatomy, formErrorAnatomy, inputAnatomy, listAnatomy, menuAnatomy, modalAnatomy, numberInputAnatomy, pinInputAnatomy, popoverAnatomy, progressAnatomy, radioAnatomy, selectAnatomy, sliderAnatomy, statAnatomy, stepperAnatomy, switchAnatomy, tableAnatomy, tabsAnatomy, tagAnatomy };
