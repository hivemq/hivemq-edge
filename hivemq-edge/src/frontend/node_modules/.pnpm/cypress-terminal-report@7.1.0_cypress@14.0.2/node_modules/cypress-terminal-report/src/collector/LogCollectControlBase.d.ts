import type { ExtendedSupportOptions } from '../installLogsCollector.types';
import LogCollectorState from './LogCollectorState';
import type { MessageData, SetOptional, State, TestData } from '../types';
export default abstract class LogCollectControlBase {
    protected abstract collectorState: LogCollectorState;
    protected abstract config: ExtendedSupportOptions;
    sendLogsToPrinter(logStackIndex: number, mochaRunnable: Mocha.Runnable, options?: {
        state?: State;
        title?: string;
        noQueue?: boolean;
        consoleTitle?: string;
        isHook?: boolean;
        wait?: number;
        continuous?: boolean;
    }): void;
    protected abstract triggerSendTask(buildDataMessage: (continuous?: boolean) => SetOptional<MessageData, 'state'>, noQueue: boolean, wait: number): void;
    prepareLogs(logStackIndex: number, testData: TestData): import("./LogCollectorState").StackLogArray;
    getSpecFilePath(mochaRunnable: Mocha.Runnable): string | null | undefined;
}
