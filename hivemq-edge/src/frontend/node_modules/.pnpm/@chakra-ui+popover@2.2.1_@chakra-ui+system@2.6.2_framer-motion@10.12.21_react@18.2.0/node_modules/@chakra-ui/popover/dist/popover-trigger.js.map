{"version":3,"sources":["../src/popover-trigger.tsx","../src/popover-context.ts"],"sourcesContent":["import { Children, cloneElement } from \"react\"\nimport { usePopoverContext } from \"./popover-context\"\n\n/**\n * PopoverTrigger opens the popover's content. It must be an interactive element\n * such as `button` or `a`.\n */\n\nexport function PopoverTrigger(props: { children: React.ReactNode }) {\n  // enforce a single child\n  const child: any = Children.only(props.children)\n  const { getTriggerProps } = usePopoverContext()\n  return cloneElement(child, getTriggerProps(child.props, child.ref))\n}\n\nPopoverTrigger.displayName = \"PopoverTrigger\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\nimport { UsePopoverReturn } from \"./use-popover\"\n\nexport const [PopoverProvider, usePopoverContext] =\n  createContext<UsePopoverReturn>({\n    name: \"PopoverContext\",\n    errorMessage:\n      \"usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`\",\n  })\n\nexport const [PopoverStylesProvider, usePopoverStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `PopoverStylesContext`,\n  errorMessage: `usePopoverStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Popover />\" `,\n})\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAuC;;;ACAvC,2BAA8B;AAIvB,IAAM,CAAC,iBAAiB,iBAAiB,QAC9C,oCAAgC;AAAA,EAC9B,MAAM;AAAA,EACN,cACE;AACJ,CAAC;AAEI,IAAM,CAAC,uBAAuB,gBAAgB,QAAI,oCAEvD;AAAA,EACA,MAAM;AAAA,EACN,cAAc;AAChB,CAAC;;;ADRM,SAAS,eAAe,OAAsC;AAEnE,QAAM,QAAa,sBAAS,KAAK,MAAM,QAAQ;AAC/C,QAAM,EAAE,gBAAgB,IAAI,kBAAkB;AAC9C,aAAO,2BAAa,OAAO,gBAAgB,MAAM,OAAO,MAAM,GAAG,CAAC;AACpE;AAEA,eAAe,cAAc;","names":[]}