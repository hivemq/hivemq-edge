{"version":3,"sources":["../src/menu-list.tsx"],"sourcesContent":["import { callAll, cx } from \"@chakra-ui/shared-utils\"\nimport { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\n\nimport { HTMLMotionProps, motion, Variants } from \"framer-motion\"\nimport { useMenuStyles } from \"./menu\"\nimport { useMenuContext, useMenuList, useMenuPositioner } from \"./use-menu\"\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * Props for the root element that positions the menu.\n   */\n  rootProps?: HTMLChakraProps<\"div\">\n  /**\n   * The framer-motion props to animate the menu list\n   */\n  motionProps?: HTMLMotionProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst MenuTransition = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">(function MenuList(\n  props,\n  ref,\n) {\n  const { rootProps, motionProps, ...rest } = props\n  const {\n    isOpen,\n    onTransitionEnd,\n    unstable__animationState: animated,\n  } = useMenuContext()\n\n  const listProps = useMenuList(rest, ref) as any\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useMenuStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <MenuTransition\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{ outline: 0, ...styles.list }}\n        {...motionProps}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        {...listProps}\n        onUpdate={onTransitionEnd}\n        onAnimationComplete={callAll(\n          animated.onComplete,\n          listProps.onAnimationComplete,\n        )}\n      />\n    </chakra.div>\n  )\n})\n\nMenuList.displayName = \"MenuList\"\n"],"mappings":";;;;;;;;;;;AAAA,SAAS,SAAS,UAAU;AAC5B,SAAS,QAAQ,kBAAmC;AAEpD,SAA0B,cAAwB;AA6D5C;AA9CN,IAAM,iBAA2B;AAAA,EAC/B,OAAO;AAAA,IACL,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY;AAAA,MACV,UAAU;AAAA,MACV,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AAAA,IACvB;AAAA,EACF;AAAA,EACA,MAAM;AAAA,IACJ,eAAe;AAAA,MACb,YAAY;AAAA,IACd;AAAA,IACA,SAAS;AAAA,IACT,OAAO;AAAA,IACP,YAAY;AAAA,MACV,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,EACF;AACF;AAEA,IAAM,iBAAiB,OAAO,OAAO,GAAG;AAEjC,IAAM,WAAW,WAAiC,SAASA,UAChE,OACA,KACA;AA9CF;AA+CE,QAAM,EAAE,WAAW,aAAa,GAAG,KAAK,IAAI;AAC5C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,0BAA0B;AAAA,EAC5B,IAAI,eAAe;AAEnB,QAAM,YAAY,YAAY,MAAM,GAAG;AACvC,QAAM,kBAAkB,kBAAkB,SAAS;AAEnD,QAAM,SAAS,cAAc;AAE7B,SACE;AAAA,IAAC,OAAO;AAAA,IAAP;AAAA,MACE,GAAG;AAAA,MACJ,OAAO,EAAE,SAAQ,WAAM,WAAN,aAAgB,YAAO,SAAP,mBAAa,OAAO;AAAA,MAErD;AAAA,QAAC;AAAA;AAAA,UACC,UAAU;AAAA,UACV,SAAS;AAAA,UACT,SAAS,SAAS,UAAU;AAAA,UAC5B,OAAO,EAAE,SAAS,GAAG,GAAG,OAAO,KAAK;AAAA,UACnC,GAAG;AAAA,UACJ,WAAW,GAAG,0BAA0B,UAAU,SAAS;AAAA,UAC1D,GAAG;AAAA,UACJ,UAAU;AAAA,UACV,qBAAqB;AAAA,YACnB,SAAS;AAAA,YACT,UAAU;AAAA,UACZ;AAAA;AAAA,MACF;AAAA;AAAA,EACF;AAEJ,CAAC;AAED,SAAS,cAAc;","names":["MenuList"]}