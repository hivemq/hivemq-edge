{"version":3,"sources":["../src/use-focus-on-show.ts"],"sourcesContent":["import {\n  contains,\n  focus,\n  FocusableElement,\n  getAllFocusable,\n  isRefObject,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useRef } from \"react\"\nimport { useEventListener } from \"./use-event-listener\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\nimport { useUpdateEffect } from \"./use-update-effect\"\n\nexport interface UseFocusOnShowOptions {\n  visible?: boolean\n  shouldFocus?: boolean\n  preventScroll?: boolean\n  focusRef?: React.RefObject<FocusableElement>\n}\n\nconst defaultOptions: UseFocusOnShowOptions = {\n  preventScroll: true,\n  shouldFocus: false,\n}\n\nexport function useFocusOnShow<T extends HTMLElement>(\n  target: React.RefObject<T> | T,\n  options = defaultOptions,\n) {\n  const { focusRef, preventScroll, shouldFocus, visible } = options\n  const element = isRefObject(target) ? target.current : target\n  const autoFocusValue = shouldFocus && visible\n  const autoFocusRef = useRef(autoFocusValue)\n  const lastVisibleRef = useRef(visible)\n\n  useSafeLayoutEffect(() => {\n    if (!lastVisibleRef.current && visible) {\n      autoFocusRef.current = autoFocusValue\n    }\n    lastVisibleRef.current = visible\n  }, [visible, autoFocusValue])\n\n  const onFocus = useCallback(() => {\n    if (!visible || !element || !autoFocusRef.current) return\n    autoFocusRef.current = false\n\n    if (contains(element, document.activeElement as HTMLElement)) return\n\n    if (focusRef?.current) {\n      focus(focusRef.current, { preventScroll, nextTick: true })\n    } else {\n      const tabbableEls = getAllFocusable(element)\n      if (tabbableEls.length > 0) {\n        focus(tabbableEls[0], { preventScroll, nextTick: true })\n      }\n    }\n  }, [visible, preventScroll, element, focusRef])\n\n  useUpdateEffect(() => {\n    onFocus()\n  }, [onFocus])\n\n  useEventListener(\"transitionend\", onFocus, element)\n}\n"],"mappings":";;;;;;;;;;;;AAAA;AAAA,EACE;AAAA,EACA;AAAA,EAEA;AAAA,EACA;AAAA,OACK;AACP,SAAS,aAAa,cAAc;AAYpC,IAAM,iBAAwC;AAAA,EAC5C,eAAe;AAAA,EACf,aAAa;AACf;AAEO,SAAS,eACd,QACA,UAAU,gBACV;AACA,QAAM,EAAE,UAAU,eAAe,aAAa,QAAQ,IAAI;AAC1D,QAAM,UAAU,YAAY,MAAM,IAAI,OAAO,UAAU;AACvD,QAAM,iBAAiB,eAAe;AACtC,QAAM,eAAe,OAAO,cAAc;AAC1C,QAAM,iBAAiB,OAAO,OAAO;AAErC,sBAAoB,MAAM;AACxB,QAAI,CAAC,eAAe,WAAW,SAAS;AACtC,mBAAa,UAAU;AAAA,IACzB;AACA,mBAAe,UAAU;AAAA,EAC3B,GAAG,CAAC,SAAS,cAAc,CAAC;AAE5B,QAAM,UAAU,YAAY,MAAM;AAChC,QAAI,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa;AAAS;AACnD,iBAAa,UAAU;AAEvB,QAAI,SAAS,SAAS,SAAS,aAA4B;AAAG;AAE9D,QAAI,qCAAU,SAAS;AACrB,YAAM,SAAS,SAAS,EAAE,eAAe,UAAU,KAAK,CAAC;AAAA,IAC3D,OAAO;AACL,YAAM,cAAc,gBAAgB,OAAO;AAC3C,UAAI,YAAY,SAAS,GAAG;AAC1B,cAAM,YAAY,CAAC,GAAG,EAAE,eAAe,UAAU,KAAK,CAAC;AAAA,MACzD;AAAA,IACF;AAAA,EACF,GAAG,CAAC,SAAS,eAAe,SAAS,QAAQ,CAAC;AAE9C,kBAAgB,MAAM;AACpB,YAAQ;AAAA,EACV,GAAG,CAAC,OAAO,CAAC;AAEZ,mBAAiB,iBAAiB,SAAS,OAAO;AACpD;","names":[]}