{"version":3,"sources":["../src/use-dimensions.ts"],"sourcesContent":["import { getBox, BoxModel } from \"@chakra-ui/utils\"\nimport { useRef, useState } from \"react\"\nimport { useSafeLayoutEffect } from \"./use-safe-layout-effect\"\n\n/**\n * React hook to measure a component's dimensions\n *\n * @param ref ref of the component to measure\n * @param observe if `true`, resize and scroll observers will be turned on\n *\n * @deprecated use the `useSize` hook instead\n *\n * ```jsx\n * import { useSize } from \"@chakra-ui/react-use-size\"\n * ```\n */\nexport function useDimensions(\n  ref: React.RefObject<HTMLElement>,\n  observe?: boolean,\n) {\n  const [dimensions, setDimensions] = useState<BoxModel | null>(null)\n  const rafId = useRef<number>()\n\n  useSafeLayoutEffect(() => {\n    function measure() {\n      const node = ref.current\n      if (!node) return\n      rafId.current = requestAnimationFrame(() => {\n        const boxModel = getBox(node)\n        setDimensions(boxModel)\n      })\n    }\n\n    measure()\n\n    if (observe) {\n      window.addEventListener(\"resize\", measure)\n      window.addEventListener(\"scroll\", measure)\n    }\n\n    return () => {\n      if (observe) {\n        window.removeEventListener(\"resize\", measure)\n        window.removeEventListener(\"scroll\", measure)\n      }\n\n      if (rafId.current) {\n        cancelAnimationFrame(rafId.current)\n      }\n    }\n  }, [observe])\n\n  return dimensions\n}\n"],"mappings":";;;;;;AAAA,SAAS,cAAwB;AACjC,SAAS,QAAQ,gBAAgB;AAe1B,SAAS,cACd,KACA,SACA;AACA,QAAM,CAAC,YAAY,aAAa,IAAI,SAA0B,IAAI;AAClE,QAAM,QAAQ,OAAe;AAE7B,sBAAoB,MAAM;AACxB,aAAS,UAAU;AACjB,YAAM,OAAO,IAAI;AACjB,UAAI,CAAC;AAAM;AACX,YAAM,UAAU,sBAAsB,MAAM;AAC1C,cAAM,WAAW,OAAO,IAAI;AAC5B,sBAAc,QAAQ;AAAA,MACxB,CAAC;AAAA,IACH;AAEA,YAAQ;AAER,QAAI,SAAS;AACX,aAAO,iBAAiB,UAAU,OAAO;AACzC,aAAO,iBAAiB,UAAU,OAAO;AAAA,IAC3C;AAEA,WAAO,MAAM;AACX,UAAI,SAAS;AACX,eAAO,oBAAoB,UAAU,OAAO;AAC5C,eAAO,oBAAoB,UAAU,OAAO;AAAA,MAC9C;AAEA,UAAI,MAAM,SAAS;AACjB,6BAAqB,MAAM,OAAO;AAAA,MACpC;AAAA,IACF;AAAA,EACF,GAAG,CAAC,OAAO,CAAC;AAEZ,SAAO;AACT;","names":[]}