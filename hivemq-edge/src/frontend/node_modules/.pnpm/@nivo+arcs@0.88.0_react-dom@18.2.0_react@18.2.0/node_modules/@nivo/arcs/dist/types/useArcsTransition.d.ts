import { DatumWithArc } from './types';
import { ArcTransitionMode, TransitionExtra } from './arcTransitionMode';
/**
 * This hook can be used to animate a group of arcs,
 * if you want to animate a single arc,
 * please have a look at the `useAnimatedArc` hook.
 */
export declare const useArcsTransition: <Datum extends DatumWithArc, ExtraProps = unknown>(data: Datum[], mode?: ArcTransitionMode, extra?: TransitionExtra<Datum, ExtraProps> | undefined) => {
    transition: import("@react-spring/core").TransitionFn<Datum, [{
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps] extends [import("@react-spring/types").Any] ? import("@react-spring/types").Lookup<any> : [object] extends [{
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps] ? import("@react-spring/types").Lookup<any> : (((({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) extends infer T_10 ? T_10 extends ({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) ? T_10 extends any ? (k: T_10) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_1 ? { [P_1 in keyof T_1]: ({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) extends infer T_9 ? T_9 extends ({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) ? T_9 extends infer U ? P_1 extends keyof U ? U[P_1] : never : never : never : never; } : never) extends infer T ? { [P in keyof T]: (((({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) extends infer T_10 ? T_10 extends ({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) ? T_10 extends any ? (k: T_10) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_1 ? { [P_1 in keyof T_1]: ({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) extends infer T_9 ? T_9 extends ({
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps extends infer T_2 ? T_2 extends {
        progress: number;
        startAngle: number;
        endAngle: number;
        innerRadius: number;
        outerRadius: number;
    } & ExtraProps ? T_2 extends {
        from: infer From;
    } ? From extends () => any ? ReturnType<From> : import("@react-spring/types").ObjectType<From> : import("@react-spring/core").TransitionKey & keyof T_2 extends never ? import("@react-spring/core").ToValues<T_2, true> : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps> extends infer T_3 extends object ? { [P_2 in keyof T_3]: Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2] extends import("@react-spring/shared").FluidValue<infer U_1, any> ? U_1 : Omit<import("@react-spring/types").Constrain<(((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never) extends infer T_4 ? { [P_3 in keyof T_4]: (((import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_8 ? T_8 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_8 extends any ? (k: T_8) => void : never : never : never) extends (k: infer I) => void ? I : never) extends infer T_5 ? { [P_4 in keyof T_5]: import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> extends infer T_7 ? T_7 extends import("@react-spring/types").Constrain<import("@react-spring/types").ObjectType<T_2[import("@react-spring/core").TransitionKey & keyof T_2] extends infer T_6 ? T_6 extends readonly (infer Element_1)[] ? Element_1 : T_6 extends (...args: any[]) => infer Return ? Return extends readonly (infer ReturnElement)[] ? ReturnElement : Return : T_6 : never>, {}> ? T_7 extends infer U ? P_4 extends keyof U ? U[P_4] : never : never : never : never; } : never)[P_3]; } : never, {}>, keyof import("@react-spring/core").ReservedProps>[P_2]; } : never : never : never) ? T_9 extends infer U ? P_1 extends keyof U ? U[P_1] : never : never : never : never; } : never)[P]; } : never>;
    interpolate: (startAngleValue: import("@react-spring/core").SpringValue<number>, endAngleValue: import("@react-spring/core").SpringValue<number>, innerRadiusValue: import("@react-spring/core").SpringValue<number>, outerRadiusValue: import("@react-spring/core").SpringValue<number>, arcGenerator: import("./types").ArcGenerator) => import("@react-spring/core").Interpolation<string | null, any>;
};
//# sourceMappingURL=useArcsTransition.d.ts.map