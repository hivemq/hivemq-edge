{"version":3,"sources":["../src/use-attr-observer.ts"],"sourcesContent":["import { useEffect } from \"react\"\n\nexport function useAttributeObserver(\n  ref: React.RefObject<HTMLElement | null>,\n  attributes: string | string[],\n  fn: (v: MutationRecord) => void,\n  enabled: boolean,\n) {\n  useEffect(() => {\n    if (!ref.current || !enabled) return\n    const win = ref.current.ownerDocument.defaultView ?? window\n    const attrs = Array.isArray(attributes) ? attributes : [attributes]\n    const obs = new win.MutationObserver((changes) => {\n      for (const change of changes) {\n        if (\n          change.type === \"attributes\" &&\n          change.attributeName &&\n          attrs.includes(change.attributeName)\n        ) {\n          fn(change)\n        }\n      }\n    })\n\n    obs.observe(ref.current, { attributes: true, attributeFilter: attrs })\n\n    return () => obs.disconnect()\n  })\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0B;AAEnB,SAAS,qBACd,KACA,YACA,IACA,SACA;AACA,8BAAU,MAAM;AARlB;AASI,QAAI,CAAC,IAAI,WAAW,CAAC;AAAS;AAC9B,UAAM,OAAM,SAAI,QAAQ,cAAc,gBAA1B,YAAyC;AACrD,UAAM,QAAQ,MAAM,QAAQ,UAAU,IAAI,aAAa,CAAC,UAAU;AAClE,UAAM,MAAM,IAAI,IAAI,iBAAiB,CAAC,YAAY;AAChD,iBAAW,UAAU,SAAS;AAC5B,YACE,OAAO,SAAS,gBAChB,OAAO,iBACP,MAAM,SAAS,OAAO,aAAa,GACnC;AACA,aAAG,MAAM;AAAA,QACX;AAAA,MACF;AAAA,IACF,CAAC;AAED,QAAI,QAAQ,IAAI,SAAS,EAAE,YAAY,MAAM,iBAAiB,MAAM,CAAC;AAErE,WAAO,MAAM,IAAI,WAAW;AAAA,EAC9B,CAAC;AACH;","names":[]}