{"version":3,"sources":["../src/components/number-input.ts"],"sourcesContent":["import { numberInputAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport {\n  createMultiStyleConfigHelpers,\n  defineStyle,\n} from \"@chakra-ui/styled-system\"\nimport { calc, cssVar } from \"@chakra-ui/theme-tools\"\nimport typography from \"../foundations/typography\"\nimport { inputTheme } from \"./input\"\nimport { runIfFn } from \"../utils/run-if-fn\"\n\nconst { defineMultiStyleConfig, definePartsStyle } =\n  createMultiStyleConfigHelpers(parts.keys)\n\nconst $stepperWidth = cssVar(\"number-input-stepper-width\")\n\nconst $inputPadding = cssVar(\"number-input-input-padding\")\nconst inputPaddingValue = calc($stepperWidth).add(\"0.5rem\").toString()\n\nconst $bg = cssVar(\"number-input-bg\")\nconst $fg = cssVar(\"number-input-color\")\nconst $border = cssVar(\"number-input-border-color\")\n\nconst baseStyleRoot = defineStyle({\n  [$stepperWidth.variable]: \"sizes.6\",\n  [$inputPadding.variable]: inputPaddingValue,\n})\n\nconst baseStyleField = defineStyle(\n  (props) => runIfFn(inputTheme.baseStyle, props)?.field ?? {},\n)\n\nconst baseStyleStepperGroup = defineStyle({\n  width: $stepperWidth.reference,\n})\n\nconst baseStyleStepper = defineStyle({\n  borderStart: \"1px solid\",\n  borderStartColor: $border.reference,\n  color: $fg.reference,\n  bg: $bg.reference,\n  [$fg.variable]: \"colors.chakra-body-text\",\n  [$border.variable]: \"colors.chakra-border-color\",\n  _dark: {\n    [$fg.variable]: \"colors.whiteAlpha.800\",\n    [$border.variable]: \"colors.whiteAlpha.300\",\n  },\n  _active: {\n    [$bg.variable]: \"colors.gray.200\",\n    _dark: {\n      [$bg.variable]: \"colors.whiteAlpha.300\",\n    },\n  },\n  _disabled: {\n    opacity: 0.4,\n    cursor: \"not-allowed\",\n  },\n})\n\nconst baseStyle = definePartsStyle((props) => ({\n  root: baseStyleRoot,\n  field: runIfFn(baseStyleField, props) ?? {},\n  stepperGroup: baseStyleStepperGroup,\n  stepper: baseStyleStepper,\n}))\n\ntype FontSize = keyof typeof typography.fontSizes\n\nfunction getSize(size: FontSize) {\n  //@ts-expect-error\n  const sizeStyle = inputTheme.sizes?.[size]\n\n  const radius: Partial<Record<FontSize, string>> = {\n    lg: \"md\",\n    md: \"md\",\n    sm: \"sm\",\n    xs: \"sm\",\n  }\n\n  const _fontSize = (sizeStyle.field?.fontSize ?? \"md\") as FontSize\n  const fontSize = typography.fontSizes[_fontSize]\n\n  return definePartsStyle({\n    field: {\n      ...sizeStyle.field,\n      paddingInlineEnd: $inputPadding.reference,\n      verticalAlign: \"top\",\n    },\n    stepper: {\n      fontSize: calc(fontSize).multiply(0.75).toString(),\n      _first: {\n        borderTopEndRadius: radius[size],\n      },\n      _last: {\n        borderBottomEndRadius: radius[size],\n        mt: \"-1px\",\n        borderTopWidth: 1,\n      },\n    },\n  })\n}\n\nconst sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n}\n\nexport const numberInputTheme = defineMultiStyleConfig({\n  baseStyle,\n  sizes,\n  variants: inputTheme.variants,\n  defaultProps: inputTheme.defaultProps,\n})\n"],"mappings":";;;;;;;;;;;AAAA,SAAS,sBAAsB,aAAa;AAC5C;AAAA,EACE;AAAA,EACA;AAAA,OACK;AACP,SAAS,MAAM,cAAc;AAK7B,IAAM,EAAE,wBAAwB,iBAAiB,IAC/C,8BAA8B,MAAM,IAAI;AAE1C,IAAM,gBAAgB,OAAO,4BAA4B;AAEzD,IAAM,gBAAgB,OAAO,4BAA4B;AACzD,IAAM,oBAAoB,KAAK,aAAa,EAAE,IAAI,QAAQ,EAAE,SAAS;AAErE,IAAM,MAAM,OAAO,iBAAiB;AACpC,IAAM,MAAM,OAAO,oBAAoB;AACvC,IAAM,UAAU,OAAO,2BAA2B;AAElD,IAAM,gBAAgB,YAAY;AAAA,EAChC,CAAC,cAAc,QAAQ,GAAG;AAAA,EAC1B,CAAC,cAAc,QAAQ,GAAG;AAC5B,CAAC;AAED,IAAM,iBAAiB;AAAA,EACrB,CAAC,UAAO;AA5BV;AA4Ba,+BAAQ,WAAW,WAAW,KAAK,MAAnC,mBAAsC,UAAtC,YAA+C,CAAC;AAAA;AAC7D;AAEA,IAAM,wBAAwB,YAAY;AAAA,EACxC,OAAO,cAAc;AACvB,CAAC;AAED,IAAM,mBAAmB,YAAY;AAAA,EACnC,aAAa;AAAA,EACb,kBAAkB,QAAQ;AAAA,EAC1B,OAAO,IAAI;AAAA,EACX,IAAI,IAAI;AAAA,EACR,CAAC,IAAI,QAAQ,GAAG;AAAA,EAChB,CAAC,QAAQ,QAAQ,GAAG;AAAA,EACpB,OAAO;AAAA,IACL,CAAC,IAAI,QAAQ,GAAG;AAAA,IAChB,CAAC,QAAQ,QAAQ,GAAG;AAAA,EACtB;AAAA,EACA,SAAS;AAAA,IACP,CAAC,IAAI,QAAQ,GAAG;AAAA,IAChB,OAAO;AAAA,MACL,CAAC,IAAI,QAAQ,GAAG;AAAA,IAClB;AAAA,EACF;AAAA,EACA,WAAW;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACV;AACF,CAAC;AAED,IAAM,YAAY,iBAAiB,CAAC,UAAO;AA1D3C;AA0D+C;AAAA,IAC7C,MAAM;AAAA,IACN,QAAO,aAAQ,gBAAgB,KAAK,MAA7B,YAAkC,CAAC;AAAA,IAC1C,cAAc;AAAA,IACd,SAAS;AAAA,EACX;AAAA,CAAE;AAIF,SAAS,QAAQ,MAAgB;AAnEjC;AAqEE,QAAM,aAAY,gBAAW,UAAX,mBAAmB;AAErC,QAAM,SAA4C;AAAA,IAChD,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACN;AAEA,QAAM,aAAa,qBAAU,UAAV,mBAAiB,aAAjB,YAA6B;AAChD,QAAM,WAAW,mBAAW,UAAU,SAAS;AAE/C,SAAO,iBAAiB;AAAA,IACtB,OAAO;AAAA,MACL,GAAG,UAAU;AAAA,MACb,kBAAkB,cAAc;AAAA,MAChC,eAAe;AAAA,IACjB;AAAA,IACA,SAAS;AAAA,MACP,UAAU,KAAK,QAAQ,EAAE,SAAS,IAAI,EAAE,SAAS;AAAA,MACjD,QAAQ;AAAA,QACN,oBAAoB,OAAO,IAAI;AAAA,MACjC;AAAA,MACA,OAAO;AAAA,QACL,uBAAuB,OAAO,IAAI;AAAA,QAClC,IAAI;AAAA,QACJ,gBAAgB;AAAA,MAClB;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEA,IAAM,QAAQ;AAAA,EACZ,IAAI,QAAQ,IAAI;AAAA,EAChB,IAAI,QAAQ,IAAI;AAAA,EAChB,IAAI,QAAQ,IAAI;AAAA,EAChB,IAAI,QAAQ,IAAI;AAClB;AAEO,IAAM,mBAAmB,uBAAuB;AAAA,EACrD;AAAA,EACA;AAAA,EACA,UAAU,WAAW;AAAA,EACrB,cAAc,WAAW;AAC3B,CAAC;","names":[]}