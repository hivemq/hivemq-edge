{"version":3,"sources":["../src/scale-fade.tsx","../src/transition-utils.ts"],"sourcesContent":["import { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport { forwardRef } from \"react\"\nimport {\n  TRANSITION_DEFAULTS,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\ninterface ScaleFadeOptions {\n  /**\n   * The initial scale of the element\n   * @default 0.95\n   */\n  initialScale?: number\n  /**\n   * If `true`, the element will transition back to exit state\n   * @default true\n   */\n  reverse?: boolean\n}\n\nconst variants: Variants<ScaleFadeOptions> = {\n  exit: ({ reverse, initialScale, transition, transitionEnd, delay }) => ({\n    opacity: 0,\n    ...(reverse\n      ? { scale: initialScale, transitionEnd: transitionEnd?.exit }\n      : { transitionEnd: { scale: initialScale, ...transitionEnd?.exit } }),\n    transition:\n      transition?.exit ?? withDelay.exit(TRANSITION_DEFAULTS.exit, delay),\n  }),\n  enter: ({ transitionEnd, transition, delay }) => ({\n    opacity: 1,\n    scale: 1,\n    transition:\n      transition?.enter ?? withDelay.enter(TRANSITION_DEFAULTS.enter, delay),\n    transitionEnd: transitionEnd?.enter,\n  }),\n}\n\nexport const scaleFadeConfig: HTMLMotionProps<\"div\"> = {\n  initial: \"exit\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants as _Variants,\n}\n\nexport interface ScaleFadeProps\n  extends ScaleFadeOptions,\n    WithTransitionConfig<HTMLMotionProps<\"div\">> {}\n\nexport const ScaleFade = forwardRef<HTMLDivElement, ScaleFadeProps>(\n  function ScaleFade(props, ref) {\n    const {\n      unmountOnExit,\n      in: isOpen,\n      reverse = true,\n      initialScale = 0.95,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { initialScale, reverse, transition, transitionEnd, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            className={cx(\"chakra-offset-slide\", className)}\n            {...scaleFadeConfig}\n            animate={animate}\n            custom={custom}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nScaleFade.displayName = \"ScaleFade\"\n","import type { Target, TargetAndTransition, Transition } from \"framer-motion\"\n\nexport type TransitionProperties = {\n  /**\n   * Custom `transition` definition for `enter` and `exit`\n   */\n  transition?: TransitionConfig\n  /**\n   * Custom `transitionEnd` definition for `enter` and `exit`\n   */\n  transitionEnd?: TransitionEndConfig\n  /**\n   * Custom `delay` definition for `enter` and `exit`\n   */\n  delay?: number | DelayConfig\n}\n\ntype TargetResolver<P = {}> = (\n  props: P & TransitionProperties,\n) => TargetAndTransition\n\ntype Variant<P = {}> = TargetAndTransition | TargetResolver<P>\n\nexport type Variants<P = {}> = {\n  enter: Variant<P>\n  exit: Variant<P>\n  initial?: Variant<P>\n}\n\ntype WithMotionState<P> = Partial<Record<\"enter\" | \"exit\", P>>\n\nexport type TransitionConfig = WithMotionState<Transition>\n\nexport type TransitionEndConfig = WithMotionState<Target>\n\nexport type DelayConfig = WithMotionState<number>\n\nexport const TRANSITION_EASINGS = {\n  ease: [0.25, 0.1, 0.25, 1],\n  easeIn: [0.4, 0, 1, 1],\n  easeOut: [0, 0, 0.2, 1],\n  easeInOut: [0.4, 0, 0.2, 1],\n} as const\n\nexport const TRANSITION_VARIANTS = {\n  scale: {\n    enter: { scale: 1 },\n    exit: { scale: 0.95 },\n  },\n  fade: {\n    enter: { opacity: 1 },\n    exit: { opacity: 0 },\n  },\n  pushLeft: {\n    enter: { x: \"100%\" },\n    exit: { x: \"-30%\" },\n  },\n  pushRight: {\n    enter: { x: \"-100%\" },\n    exit: { x: \"30%\" },\n  },\n  pushUp: {\n    enter: { y: \"100%\" },\n    exit: { y: \"-30%\" },\n  },\n  pushDown: {\n    enter: { y: \"-100%\" },\n    exit: { y: \"30%\" },\n  },\n  slideLeft: {\n    position: { left: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: \"-100%\", y: 0 },\n  },\n  slideRight: {\n    position: { right: 0, top: 0, bottom: 0, width: \"100%\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: \"100%\", y: 0 },\n  },\n  slideUp: {\n    position: { top: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: 0, y: \"-100%\" },\n  },\n  slideDown: {\n    position: { bottom: 0, left: 0, right: 0, maxWidth: \"100vw\" },\n    enter: { x: 0, y: 0 },\n    exit: { x: 0, y: \"100%\" },\n  },\n}\n\nexport type SlideDirection = \"top\" | \"left\" | \"bottom\" | \"right\"\n\nexport function getSlideTransition(options?: { direction?: SlideDirection }) {\n  const side = options?.direction ?? \"right\"\n  switch (side) {\n    case \"right\":\n      return TRANSITION_VARIANTS.slideRight\n    case \"left\":\n      return TRANSITION_VARIANTS.slideLeft\n    case \"bottom\":\n      return TRANSITION_VARIANTS.slideDown\n    case \"top\":\n      return TRANSITION_VARIANTS.slideUp\n    default:\n      return TRANSITION_VARIANTS.slideRight\n  }\n}\n\nexport const TRANSITION_DEFAULTS = {\n  enter: {\n    duration: 0.2,\n    ease: TRANSITION_EASINGS.easeOut,\n  },\n  exit: {\n    duration: 0.1,\n    ease: TRANSITION_EASINGS.easeIn,\n  },\n} as const\n\nexport type WithTransitionConfig<P extends object> = Omit<P, \"transition\"> &\n  TransitionProperties & {\n    /**\n     * If `true`, the element will unmount when `in={false}` and animation is done\n     */\n    unmountOnExit?: boolean\n    /**\n     * Show the component; triggers when enter or exit states\n     */\n    in?: boolean\n  }\n\nexport const withDelay = {\n  enter: (\n    transition: Transition,\n    delay?: number | DelayConfig,\n  ): Transition & { delay: number | undefined } => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay?.[\"enter\"],\n  }),\n  exit: (\n    transition: Transition,\n    delay?: number | DelayConfig,\n  ): Transition & { delay: number | undefined } => ({\n    ...transition,\n    delay: typeof delay === \"number\" ? delay : delay?.[\"exit\"],\n  }),\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB;AACnB,2BAKO;AACP,mBAA2B;;;AC8BpB,IAAM,qBAAqB;AAAA,EAChC,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC;AAAA,EACzB,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC;AAAA,EACrB,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC;AAAA,EACtB,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;AAC5B;AAmEO,IAAM,sBAAsB;AAAA,EACjC,OAAO;AAAA,IACL,UAAU;AAAA,IACV,MAAM,mBAAmB;AAAA,EAC3B;AAAA,EACA,MAAM;AAAA,IACJ,UAAU;AAAA,IACV,MAAM,mBAAmB;AAAA,EAC3B;AACF;AAcO,IAAM,YAAY;AAAA,EACvB,OAAO,CACL,YACA,WACgD;AAAA,IAChD,GAAG;AAAA,IACH,OAAO,OAAO,UAAU,WAAW,QAAQ,+BAAQ;AAAA,EACrD;AAAA,EACA,MAAM,CACJ,YACA,WACgD;AAAA,IAChD,GAAG;AAAA,IACH,OAAO,OAAO,UAAU,WAAW,QAAQ,+BAAQ;AAAA,EACrD;AACF;;;ADpEU;AAnDV,IAAM,WAAuC;AAAA,EAC3C,MAAM,CAAC,EAAE,SAAS,cAAc,YAAY,eAAe,MAAM,MAAG;AA7BtE;AA6B0E;AAAA,MACtE,SAAS;AAAA,MACT,GAAI,UACA,EAAE,OAAO,cAAc,eAAe,+CAAe,KAAK,IAC1D,EAAE,eAAe,EAAE,OAAO,cAAc,GAAG,+CAAe,KAAK,EAAE;AAAA,MACrE,aACE,8CAAY,SAAZ,YAAoB,UAAU,KAAK,oBAAoB,MAAM,KAAK;AAAA,IACtE;AAAA;AAAA,EACA,OAAO,CAAC,EAAE,eAAe,YAAY,MAAM,MAAG;AArChD;AAqCoD;AAAA,MAChD,SAAS;AAAA,MACT,OAAO;AAAA,MACP,aACE,8CAAY,UAAZ,YAAqB,UAAU,MAAM,oBAAoB,OAAO,KAAK;AAAA,MACvE,eAAe,+CAAe;AAAA,IAChC;AAAA;AACF;AAEO,IAAM,kBAA0C;AAAA,EACrD,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AAAA,EACN;AACF;AAMO,IAAM,gBAAY;AAAA,EACvB,SAASA,WAAU,OAAO,KAAK;AAC7B,UAAM;AAAA,MACJ;AAAA,MACA,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,eAAe;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,GAAG;AAAA,IACL,IAAI;AAEJ,UAAM,OAAO,gBAAgB,UAAU,gBAAgB;AACvD,UAAM,UAAU,UAAU,gBAAgB,UAAU;AAEpD,UAAM,SAAS,EAAE,cAAc,SAAS,YAAY,eAAe,MAAM;AAEzE,WACE,4CAAC,wCAAgB,QACd,kBACC;AAAA,MAAC,4BAAO;AAAA,MAAP;AAAA,QACC;AAAA,QACA,eAAW,wBAAG,uBAAuB,SAAS;AAAA,QAC7C,GAAG;AAAA,QACJ;AAAA,QACA;AAAA,QACC,GAAG;AAAA;AAAA,IACN,GAEJ;AAAA,EAEJ;AACF;AAEA,UAAU,cAAc;","names":["ScaleFade"]}