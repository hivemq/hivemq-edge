{"version":3,"sources":["../src/index.ts","../src/stat.tsx","../src/stat-arrow.tsx","../src/stat-group.tsx","../src/stat-help-text.tsx","../src/stat-label.tsx","../src/stat-number.tsx"],"sourcesContent":["export { Stat, useStatStyles } from \"./stat\"\nexport type { StatProps } from \"./stat\"\nexport { StatArrow, StatDownArrow, StatUpArrow } from \"./stat-arrow\"\nexport type { StatArrowProps } from \"./stat-arrow\"\nexport { StatGroup } from \"./stat-group\"\nexport type { StatGroupProps } from \"./stat-group\"\nexport { StatHelpText } from \"./stat-help-text\"\nexport type { StatHelpTextProps } from \"./stat-help-text\"\nexport { StatLabel } from \"./stat-label\"\nexport type { StatLabelProps } from \"./stat-label\"\nexport { StatNumber } from \"./stat-number\"\nexport type { StatNumberProps } from \"./stat-number\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nconst [StatStylesProvider, useStatStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `StatStylesContext`,\n  errorMessage: `useStatStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Stat />\" `,\n})\n\nexport { useStatStyles }\n\nexport interface StatProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Stat\"> {}\n\n/**\n * The `Stat` component is used to display some statistics.\n *\n * @see Docs https://chakra-ui.com/docs/components/stat\n */\nexport const Stat = forwardRef<StatProps, \"div\">(function Stat(props, ref) {\n  const styles = useMultiStyleConfig(\"Stat\", props)\n  const statStyles: SystemStyleObject = {\n    position: \"relative\",\n    flex: \"1 1 0%\",\n    ...styles.container,\n  }\n\n  const { className, children, ...rest } = omitThemingProps(props)\n\n  return (\n    <StatStylesProvider value={styles}>\n      <chakra.div\n        ref={ref}\n        {...rest}\n        className={cx(\"chakra-stat\", className)}\n        __css={statStyles}\n      >\n        <dl>{children}</dl>\n      </chakra.div>\n    </StatStylesProvider>\n  )\n})\n\nStat.displayName = \"Stat\"\n","import { type IconProps, Icon } from \"@chakra-ui/icon\"\nimport { chakra } from \"@chakra-ui/system\"\n\nimport { useStatStyles } from \"./stat\"\n\nexport const StatDownArrow: React.FC<IconProps> = (props) => (\n  <Icon color=\"red.400\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M21,5H3C2.621,5,2.275,5.214,2.105,5.553C1.937,5.892,1.973,6.297,2.2,6.6l9,12 c0.188,0.252,0.485,0.4,0.8,0.4s0.611-0.148,0.8-0.4l9-12c0.228-0.303,0.264-0.708,0.095-1.047C21.725,5.214,21.379,5,21,5z\"\n    />\n  </Icon>\n)\n\nStatDownArrow.displayName = \"StatDownArrow\"\n\nexport function StatUpArrow(props: IconProps) {\n  return (\n    <Icon color=\"green.400\" {...props}>\n      <path\n        fill=\"currentColor\"\n        d=\"M12.8,5.4c-0.377-0.504-1.223-0.504-1.6,0l-9,12c-0.228,0.303-0.264,0.708-0.095,1.047 C2.275,18.786,2.621,19,3,19h18c0.379,0,0.725-0.214,0.895-0.553c0.169-0.339,0.133-0.744-0.095-1.047L12.8,5.4z\"\n      />\n    </Icon>\n  )\n}\n\nStatUpArrow.displayName = \"StatUpArrow\"\n\nexport interface StatArrowProps extends IconProps {\n  type?: \"increase\" | \"decrease\"\n}\n\nexport function StatArrow(props: StatArrowProps) {\n  const { type, \"aria-label\": ariaLabel, ...rest } = props\n  const styles = useStatStyles()\n\n  const BaseIcon = type === \"increase\" ? StatUpArrow : StatDownArrow\n  const defaultAriaLabel = type === \"increase\" ? \"increased by\" : \"decreased by\"\n  const label = ariaLabel || defaultAriaLabel\n\n  return (\n    <>\n      <chakra.span srOnly>{label}</chakra.span>\n      <BaseIcon aria-hidden {...rest} __css={styles.icon} />\n    </>\n  )\n}\n\nStatArrow.displayName = \"StatArrow\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nexport interface StatGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const StatGroup = forwardRef<StatGroupProps, \"div\">(function StatGroup(\n  props,\n  ref,\n) {\n  return (\n    <chakra.div\n      {...props}\n      ref={ref}\n      role=\"group\"\n      className={cx(\"chakra-stat__group\", props.className)}\n      __css={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-around\",\n        alignItems: \"flex-start\",\n      }}\n    />\n  )\n})\n\nStatGroup.displayName = \"StatGroup\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStatStyles } from \"./stat\"\n\nexport interface StatHelpTextProps extends HTMLChakraProps<\"dd\"> {}\n\nexport const StatHelpText = forwardRef<StatHelpTextProps, \"dd\">(\n  function StatHelpText(props, ref) {\n    const styles = useStatStyles()\n\n    return (\n      <chakra.dd\n        ref={ref}\n        {...props}\n        className={cx(\"chakra-stat__help-text\", props.className)}\n        __css={styles.helpText}\n      />\n    )\n  },\n)\n\nStatHelpText.displayName = \"StatHelpText\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStatStyles } from \"./stat\"\n\nexport interface StatLabelProps extends HTMLChakraProps<\"dt\"> {}\n\nexport const StatLabel = forwardRef<StatLabelProps, \"dt\">(function StatLabel(\n  props,\n  ref,\n) {\n  const styles = useStatStyles()\n  return (\n    <chakra.dt\n      ref={ref}\n      {...props}\n      className={cx(\"chakra-stat__label\", props.className)}\n      __css={styles.label}\n    />\n  )\n})\n\nStatLabel.displayName = \"StatLabel\"\n","import { cx } from \"@chakra-ui/shared-utils\"\nimport { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\nimport { useStatStyles } from \"./stat\"\n\nexport interface StatNumberProps extends HTMLChakraProps<\"dd\"> {}\n\nexport const StatNumber = forwardRef<StatNumberProps, \"dd\">(function StatNumber(\n  props,\n  ref,\n) {\n  const styles = useStatStyles()\n  return (\n    <chakra.dd\n      ref={ref}\n      {...props}\n      className={cx(\"chakra-stat__number\", props.className)}\n      __css={{\n        ...styles.number,\n        fontFeatureSettings: \"pnum\",\n        fontVariantNumeric: \"proportional-nums\",\n      }}\n    />\n  )\n})\n\nStatNumber.displayName = \"StatNumber\"\n"],"mappings":"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","names":["Stat","import_system","import_jsx_runtime","import_shared_utils","import_system","import_jsx_runtime","StatGroup","import_shared_utils","import_system","import_jsx_runtime","StatHelpText","import_shared_utils","import_system","import_jsx_runtime","StatLabel","import_shared_utils","import_system","import_jsx_runtime","StatNumber"]}