{"version":3,"sources":["../src/button-group.tsx","../src/button-context.ts"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemStyleObject,\n  ThemingProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useMemo } from \"react\"\nimport { ButtonGroupContext, ButtonGroupProvider } from \"./button-context\"\nimport { ButtonGroupOptions } from \"./button-types\"\n\nexport interface ButtonGroupProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Button\">,\n    ButtonGroupOptions {}\n\nconst attachedStyles: Record<string, SystemStyleObject> = {\n  horizontal: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 },\n  },\n  vertical: {\n    \"> *:first-of-type:not(:last-of-type)\": { borderBottomRadius: 0 },\n    \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n    \"> *:not(:first-of-type):last-of-type\": { borderTopRadius: 0 },\n  },\n}\n\nconst gapStyles = {\n  horizontal: (spacing: any): SystemStyleObject => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing },\n  }),\n  vertical: (spacing: any): SystemStyleObject => ({\n    \"& > *:not(style) ~ *:not(style)\": { marginTop: spacing },\n  }),\n}\n\nexport const ButtonGroup = forwardRef<ButtonGroupProps, \"div\">(\n  function ButtonGroup(props, ref) {\n    const {\n      size,\n      colorScheme,\n      variant,\n      className,\n      spacing = \"0.5rem\",\n      isAttached,\n      isDisabled,\n      orientation = \"horizontal\",\n      ...rest\n    } = props\n\n    const _className = cx(\"chakra-button__group\", className)\n\n    const context: ButtonGroupContext = useMemo(\n      () => ({ size, colorScheme, variant, isDisabled }),\n      [size, colorScheme, variant, isDisabled],\n    )\n\n    let groupStyles: SystemStyleObject = {\n      display: \"inline-flex\",\n      ...(isAttached\n        ? attachedStyles[orientation]\n        : gapStyles[orientation](spacing)),\n    }\n\n    const isVertical = orientation === \"vertical\"\n\n    return (\n      <ButtonGroupProvider value={context}>\n        <chakra.div\n          ref={ref}\n          role=\"group\"\n          __css={groupStyles}\n          className={_className}\n          data-attached={isAttached ? \"\" : undefined}\n          data-orientation={orientation}\n          flexDir={isVertical ? \"column\" : undefined}\n          {...rest}\n        />\n      </ButtonGroupProvider>\n    )\n  },\n)\n\nButtonGroup.displayName = \"ButtonGroup\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { ThemingProps } from \"@chakra-ui/system\"\n\nexport interface ButtonGroupContext extends ThemingProps<\"Button\"> {\n  /**\n   * @default false\n   */\n  isDisabled?: boolean\n}\n\nexport const [ButtonGroupProvider, useButtonGroup] =\n  createContext<ButtonGroupContext>({\n    strict: false,\n    name: \"ButtonGroupContext\",\n  })\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMO;AACP,0BAAmB;AACnB,mBAAwB;;;ACRxB,2BAA8B;AAUvB,IAAM,CAAC,qBAAqB,cAAc,QAC/C,oCAAkC;AAAA,EAChC,QAAQ;AAAA,EACR,MAAM;AACR,CAAC;;;ADyDK;AAtDR,IAAM,iBAAoD;AAAA,EACxD,YAAY;AAAA,IACV,wCAAwC,EAAE,iBAAiB,EAAE;AAAA,IAC7D,8CAA8C,EAAE,cAAc,EAAE;AAAA,IAChE,wCAAwC,EAAE,mBAAmB,EAAE;AAAA,EACjE;AAAA,EACA,UAAU;AAAA,IACR,wCAAwC,EAAE,oBAAoB,EAAE;AAAA,IAChE,8CAA8C,EAAE,cAAc,EAAE;AAAA,IAChE,wCAAwC,EAAE,iBAAiB,EAAE;AAAA,EAC/D;AACF;AAEA,IAAM,YAAY;AAAA,EAChB,YAAY,CAAC,aAAqC;AAAA,IAChD,mCAAmC,EAAE,aAAa,QAAQ;AAAA,EAC5D;AAAA,EACA,UAAU,CAAC,aAAqC;AAAA,IAC9C,mCAAmC,EAAE,WAAW,QAAQ;AAAA,EAC1D;AACF;AAEO,IAAM,kBAAc;AAAA,EACzB,SAASA,aAAY,OAAO,KAAK;AAC/B,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,UAAU;AAAA,MACV;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd,GAAG;AAAA,IACL,IAAI;AAEJ,UAAM,iBAAa,wBAAG,wBAAwB,SAAS;AAEvD,UAAM,cAA8B;AAAA,MAClC,OAAO,EAAE,MAAM,aAAa,SAAS,WAAW;AAAA,MAChD,CAAC,MAAM,aAAa,SAAS,UAAU;AAAA,IACzC;AAEA,QAAI,cAAiC;AAAA,MACnC,SAAS;AAAA,MACT,GAAI,aACA,eAAe,WAAW,IAC1B,UAAU,WAAW,EAAE,OAAO;AAAA,IACpC;AAEA,UAAM,aAAa,gBAAgB;AAEnC,WACE,4CAAC,uBAAoB,OAAO,SAC1B;AAAA,MAAC,qBAAO;AAAA,MAAP;AAAA,QACC;AAAA,QACA,MAAK;AAAA,QACL,OAAO;AAAA,QACP,WAAW;AAAA,QACX,iBAAe,aAAa,KAAK;AAAA,QACjC,oBAAkB;AAAA,QAClB,SAAS,aAAa,WAAW;AAAA,QAChC,GAAG;AAAA;AAAA,IACN,GACF;AAAA,EAEJ;AACF;AAEA,YAAY,cAAc;","names":["ButtonGroup"]}