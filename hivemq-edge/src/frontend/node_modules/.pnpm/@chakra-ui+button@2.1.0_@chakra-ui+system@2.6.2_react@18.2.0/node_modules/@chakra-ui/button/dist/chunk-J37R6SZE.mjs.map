{"version":3,"sources":["../src/use-button-type.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = useState(!value)\n  const refCallback = useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"],"mappings":";;;AAAA,SAAS,aAAa,gBAAgB;AAE/B,SAAS,cAAc,OAA2B;AACvD,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,CAAC,KAAK;AAC/C,QAAM,cAAc,YAAY,CAAC,SAA6B;AAC5D,QAAI,CAAC;AAAM;AACX,gBAAY,KAAK,YAAY,QAAQ;AAAA,EACvC,GAAG,CAAC,CAAC;AACL,QAAM,OAAO,WAAW,WAAW;AACnC,SAAO,EAAE,KAAK,aAAa,KAAK;AAClC;","names":[]}