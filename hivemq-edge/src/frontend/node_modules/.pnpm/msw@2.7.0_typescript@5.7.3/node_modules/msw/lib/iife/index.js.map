{"version":3,"sources":["../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/version.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/devAssert.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/isPromise.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/isObjectLike.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/invariant.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/location.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/printLocation.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/error/GraphQLError.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/error/syntaxError.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/ast.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/directiveLocation.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/kinds.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/characterClasses.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/blockString.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/tokenKind.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/lexer.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/inspect.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/instanceOf.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/source.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/parser.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/didYouMean.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/identityFunc.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/keyMap.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/keyValMap.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/mapValue.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/naturalCompare.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/suggestionList.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/toObjMap.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/printString.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/visitor.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/printer.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/valueFromASTUntyped.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/assertName.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/definition.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/typeComparators.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/scalars.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/directives.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/isIterableObject.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/astFromValue.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/introspection.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/schema.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/validate.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/typeFromAST.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/TypeInfo.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/predicates.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/KnownDirectivesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/KnownFragmentNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/NoFragmentCyclesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/sortValueNode.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/ScalarLeafsRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/printPathArray.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/Path.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/coerceInputValue.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/valueFromAST.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/execution/values.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/execution/collectFields.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/groupBy.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueOperationNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueTypeNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/VariablesAreInputTypesRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/specifiedRules.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/ValidationContext.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/validate.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/memoize3.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/promiseForObject.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/promiseReduce.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/toError.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/error/locatedError.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/execution/execute.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/graphql.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/type/index.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/language/index.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/jsutils/isAsyncIterable.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/execution/mapAsyncIterator.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/execution/subscribe.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/execution/index.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/validation/index.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/error/index.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/getIntrospectionQuery.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/getOperationAST.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/getOperationRootType.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/introspectionFromSchema.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/buildClientSchema.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/extendSchema.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/buildASTSchema.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/lexicographicSortSchema.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/printSchema.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/concatAST.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/separateOperations.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/stripIgnoredCharacters.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/assertValidName.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/findBreakingChanges.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/utilities/index.mjs","../../node_modules/.pnpm/graphql@16.8.2/node_modules/graphql/index.mjs","../../src/iife/index.ts","../../node_modules/.pnpm/outvariant@1.4.3/node_modules/outvariant/src/format.ts","../../node_modules/.pnpm/outvariant@1.4.3/node_modules/outvariant/src/invariant.ts","../../src/core/utils/internal/devUtils.ts","../../src/core/utils/internal/checkGlobals.ts","../../node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/src/MemoryLeakError.ts","../../node_modules/.pnpm/strict-event-emitter@0.5.1/node_modules/strict-event-emitter/src/Emitter.ts","../../src/core/utils/internal/pipeEvents.ts","../../src/core/utils/internal/toReadonlyArray.ts","../../src/core/utils/internal/Disposable.ts","../../src/core/SetupApi.ts","../../src/core/utils/internal/getCallFrame.ts","../../src/core/utils/internal/isIterable.ts","../../src/core/handlers/RequestHandler.ts","../../src/core/utils/internal/isStringEqual.ts","../../src/core/utils/logging/getStatusCodeColor.ts","../../src/core/utils/logging/getTimestamp.ts","../../src/core/utils/logging/serializeRequest.ts","../../node_modules/.pnpm/@bundled-es-modules+statuses@1.0.1/node_modules/@bundled-es-modules/statuses/index-esm.js","../../src/core/utils/logging/serializeResponse.ts","../../node_modules/.pnpm/path-to-regexp@6.3.0/node_modules/path-to-regexp/src/index.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/bufferUtils.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/glossary.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/fetchUtils.ts","../../node_modules/.pnpm/is-node-process@1.2.0/node_modules/is-node-process/src/index.ts","../../node_modules/.pnpm/@open-draft+logger@0.3.0/node_modules/@open-draft/logger/lib/index.mjs","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/Interceptor.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/createRequestId.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/BatchInterceptor.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/getCleanUrl.ts","../../src/core/utils/url/cleanUrl.ts","../../src/core/utils/url/isAbsoluteUrl.ts","../../src/core/utils/url/getAbsoluteUrl.ts","../../src/core/utils/matching/normalizePath.ts","../../src/core/utils/matching/matchRequestUrl.ts","../../src/core/utils/request/toPublicUrl.ts","../../node_modules/.pnpm/@bundled-es-modules+cookie@2.0.1/node_modules/@bundled-es-modules/cookie/index-esm.js","../../node_modules/.pnpm/@bundled-es-modules+tough-cookie@0.1.6/node_modules/@bundled-es-modules/tough-cookie/index-esm.js","../../src/core/utils/cookieStore.ts","../../src/core/utils/request/getRequestCookies.ts","../../src/core/handlers/HttpHandler.ts","../../src/core/http.ts","../../src/core/utils/internal/jsonParse.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/node_modules/set-cookie-parser/lib/set-cookie.js","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/Headers.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/utils/normalizeHeaderName.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/utils/normalizeHeaderValue.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/utils/isValidHeaderName.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/utils/isValidHeaderValue.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/getRawHeaders.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/headersToList.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/headersToString.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/headersToObject.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/stringToHeaders.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/listToHeaders.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/reduceHeadersObject.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/objectToHeaders.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/flattenHeadersList.ts","../../node_modules/.pnpm/headers-polyfill@4.0.3/node_modules/headers-polyfill/src/transformers/flattenHeadersObject.ts","../../src/core/utils/internal/parseMultipartData.ts","../../src/core/utils/internal/parseGraphQLRequest.ts","../../src/core/handlers/GraphQLHandler.ts","../../src/core/graphql.ts","../../src/core/handlers/WebSocketHandler.ts","../../src/core/ws/WebSocketMemoryClientStore.ts","../../node_modules/.pnpm/@open-draft+deferred-promise@2.2.0/node_modules/@open-draft/deferred-promise/src/createDeferredExecutor.ts","../../node_modules/.pnpm/@open-draft+deferred-promise@2.2.0/node_modules/@open-draft/deferred-promise/src/DeferredPromise.ts","../../src/core/ws/WebSocketIndexedDBClientStore.ts","../../src/core/ws/WebSocketClientManager.ts","../../src/core/ws.ts","../../node_modules/.pnpm/@open-draft+until@2.1.0/node_modules/@open-draft/until/src/until.ts","../../src/core/utils/executeHandlers.ts","../../src/core/utils/request/onUnhandledRequest.ts","../../src/core/utils/HttpResponse/decorators.ts","../../src/core/utils/request/storeResponseCookies.ts","../../src/core/utils/handleRequest.ts","../../src/core/getResponse.ts","../../src/core/HttpResponse.ts","../../src/core/delay.ts","../../src/core/bypass.ts","../../src/core/passthrough.ts","../../src/core/index.ts","../../src/browser/utils/getAbsoluteWorkerUrl.ts","../../src/browser/setupWorker/start/utils/getWorkerByRegistration.ts","../../src/browser/setupWorker/start/utils/getWorkerInstance.ts","../../src/browser/setupWorker/start/utils/printStartMessage.ts","../../src/browser/setupWorker/start/utils/enableMocking.ts","../../src/browser/setupWorker/start/utils/createMessageChannel.ts","../../src/browser/utils/pruneGetRequestBody.ts","../../src/browser/utils/parseWorkerRequest.ts","../../src/core/utils/toResponseInit.ts","../../src/core/utils/internal/isHandlerKind.ts","../../src/browser/setupWorker/start/createRequestListener.ts","../../src/browser/utils/checkWorkerIntegrity.ts","../../src/browser/setupWorker/start/createResponseListener.ts","../../src/browser/setupWorker/start/utils/validateWorkerScope.ts","../../src/browser/setupWorker/start/createStartHandler.ts","../../src/browser/setupWorker/stop/utils/printStopMessage.ts","../../src/browser/setupWorker/stop/createStop.ts","../../src/core/utils/internal/isObject.ts","../../src/core/utils/internal/mergeRight.ts","../../src/browser/setupWorker/start/utils/prepareStartHandler.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/RequestController.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/InterceptorError.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/emitAsync.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/handleRequest.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/isPropertyAccessible.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/responseUtils.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/isNodeLikeError.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/hasConfigurableGlobal.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/fetch/index.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/canParseUrl.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/fetch/utils/createNetworkError.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/fetch/utils/followRedirect.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/fetch/utils/brotli-decompress.browser.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/fetch/utils/decompression.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/index.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/XMLHttpRequestController.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/utils/concatArrayBuffer.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/polyfills/EventPolyfill.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/polyfills/ProgressEventPolyfill.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/utils/createEvent.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/findPropertySource.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/createProxy.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/utils/isDomParserSupportedType.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/utils/parseJson.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/utils/createResponse.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/utils/getBodyByteLength.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/XMLHttpRequest/XMLHttpRequestProxy.ts","../../src/browser/setupWorker/start/createFallbackRequestListener.ts","../../src/browser/setupWorker/start/createFallbackStart.ts","../../src/browser/setupWorker/stop/createFallbackStop.ts","../../src/browser/utils/supportsReadableStreamTransfer.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/WebSocket/utils/bindEvent.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/WebSocket/utils/events.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/WebSocket/WebSocketClientConnection.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/WebSocket/WebSocketServerConnection.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/WebSocket/WebSocketOverride.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/WebSocket/WebSocketClassTransport.ts","../../node_modules/.pnpm/@mswjs+interceptors@0.37.1/node_modules/@mswjs/interceptors/src/interceptors/WebSocket/index.ts","../../src/core/ws/webSocketInterceptor.ts","../../src/core/ws/handleWebSocketEvent.ts","../../src/core/ws/utils/getMessageLength.ts","../../src/core/ws/utils/truncateMessage.ts","../../src/core/ws/utils/getPublicData.ts","../../src/core/ws/utils/attachWebSocketLogger.ts","../../src/browser/setupWorker/setupWorker.ts"],"sourcesContent":["// Note: This file is autogenerated using \"resources/gen-version.js\" script and\n// automatically updated by \"npm version\" command.\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nexport const version = '16.8.2';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexport const versionInfo = Object.freeze({\n  major: 16,\n  minor: 8,\n  patch: 2,\n  preReleaseTag: null,\n});\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\nexport function isPromise(value) {\n  return (\n    typeof (value === null || value === void 0 ? void 0 : value.then) ===\n    'function'\n  );\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed directive location values.\n */\nvar DirectiveLocation;\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n\nexport { DirectiveLocation };\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nvar TokenKind;\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n\nexport { TokenKind };\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { inspect } from './inspect.mjs';\n/* c8 ignore next 3 */\n\nconst isProduction =\n  globalThis.process && // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  isProduction\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options = {}) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n    this._tokenCounter = 0;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.allowLegacyFragmentVariables === true) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this.advanceLexer();\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this.advanceLexer();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n    this.advanceLexer();\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    if (this._options.noLocation !== true) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this.advanceLexer();\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n\n  advanceLexer() {\n    const { maxTokens } = this._options;\n\n    const token = this._lexer.advance();\n\n    if (maxTokens !== undefined && token.kind !== TokenKind.EOF) {\n      ++this._tokenCounter;\n\n      if (this._tokenCounter > maxTokens) {\n        throw syntaxError(\n          this._lexer.source,\n          token.start,\n          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,\n        );\n      }\n    }\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","const MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nexport function didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","/**\n * Returns the first argument it receives.\n */\nexport function identityFunc(x) {\n  return x;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nexport function keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nexport function keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n","/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport function mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n","/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport function naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n","import { naturalCompare } from './naturalCompare.mjs';\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport function suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n","export function toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\n\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { isNameContinue, isNameStart } from '../language/characterClasses.mjs';\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertName(name) {\n  name != null || devAssert(false, 'Must provide name.');\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new GraphQLError('Expected name to be a non-empty string.');\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nexport function assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n\n  return assertName(name);\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { identityFunc } from '../jsutils/identityFunc.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { valueFromASTUntyped } from '../utilities/valueFromASTUntyped.mjs';\nimport { assertEnumValueName, assertName } from './assertName.mjs';\nexport function isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL type.`);\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Scalar type.`);\n  }\n\n  return type;\n}\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Object type.`);\n  }\n\n  return type;\n}\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Union type.`);\n  }\n\n  return type;\n}\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Enum type.`);\n  }\n\n  return type;\n}\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL List type.`);\n  }\n\n  return type;\n}\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Non-Null type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL input type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL output type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL leaf type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL abstract type.`);\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nexport class GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      devAssert(false, `Expected ${inspect(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexport class GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      devAssert(\n        false,\n        `Expected ${inspect(ofType)} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL wrapping type.`);\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL nullable type.`);\n  }\n\n  return type;\n}\nexport function getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL named type.`);\n  }\n\n  return type;\n}\nexport function getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nexport function resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\nexport function resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nexport class GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : identityFunc;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) => parseValue(valueFromASTUntyped(node, variables));\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${inspect(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        devAssert(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nexport class GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${inspect(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    devAssert(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${inspect(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: assertName(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: toObjMap(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nexport class GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nexport class GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    devAssert(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport class GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(\n      this._values.map((enumValue) => [enumValue.value, enumValue]),\n    );\n    this._nameLookup = keyMap(this._values, (value) => value.name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${inspect(outputValue)}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = inspect(inputValue);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = keyValMap(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    devAssert(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      devAssert(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${inspect(valueConfig)}.`,\n      );\n    return {\n      name: assertEnumValueName(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nexport class GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = mapValue(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","import {\n  isAbstractType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../type/definition.mjs';\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    isAbstractType(superType) &&\n    (isInterfaceType(maybeSubType) || isObjectType(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { GraphQLScalarType } from './definition.mjs';\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\n\nexport const GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexport const GRAPHQL_MIN_INT = -2147483648;\nexport const GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          inspect(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(inputValue)}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return num;\n  },\n});\nexport const GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexport const GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new GraphQLError(\n      `String cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new GraphQLError(\n      `Boolean cannot represent a non boolean value: ${inspect(coercedValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new GraphQLError(\n      `ID cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new GraphQLError(`ID cannot represent value: ${inspect(inputValue)}`);\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          print(valueNode),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexport function isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { assertName } from './assertName.mjs';\nimport {\n  argsToArgsConfig,\n  defineArguments,\n  GraphQLNonNull,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${inspect(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nexport class GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      devAssert(false, `@${config.name} locations must be an Array.`);\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    (isObjectLike(args) && !Array.isArray(args)) ||\n      devAssert(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = defineArguments(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport const GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport const GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport const DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport const GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    DirectiveLocation.FIELD_DEFINITION,\n    DirectiveLocation.ARGUMENT_DEFINITION,\n    DirectiveLocation.INPUT_FIELD_DEFINITION,\n    DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexport const GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexport const specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n","/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nexport function isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\nimport { GraphQLID } from '../type/scalars.mjs';\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(`Cannot convert value to AST: ${inspect(serialized)}.`);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { print } from '../language/printer.mjs';\nimport { astFromValue } from '../utilities/astFromValue.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  isAbstractType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\nexport const __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Type))),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__Directive)),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\nexport const __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__DirectiveLocation)),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\nexport const __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\nexport const __Type = new GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if (isScalarType(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if (isObjectType(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if (isInterfaceType(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if (isUnionType(type)) {\n          return TypeKind.UNION;\n        }\n\n        if (isEnumType(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if (isInputObjectType(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if (isListType(type)) {\n          return TypeKind.LIST;\n        }\n\n        if (isNonNullType(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false || invariant(false, `Unexpected type: \"${inspect(type)}\".`);\n      },\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new GraphQLList(new GraphQLNonNull(__Field)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if (isAbstractType(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new GraphQLList(new GraphQLNonNull(__EnumValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isEnumType(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new GraphQLList(new GraphQLNonNull(__InputValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isInputObjectType(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n  }),\n});\nexport const __Field = new GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\nexport const __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = astFromValue(defaultValue, type);\n        return valueAST ? print(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\nexport const __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\nvar TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (TypeKind = {}));\n\nexport { TypeKind };\nexport const __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport const SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new GraphQLNonNull(GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexport function isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport {\n  getNamedType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isUnionType,\n} from './definition.mjs';\nimport { isDirective, specifiedDirectives } from './directives.mjs';\nimport { __Schema } from './introspection.mjs';\n/**\n * Test if the given value is a GraphQL schema.\n */\n\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(`Expected ${inspect(schema)} to be a GraphQL schema.`);\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nexport class GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    isObjectLike(config) ||\n      devAssert(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      devAssert(\n        false,\n        `\"types\" must be Array if provided but got: ${inspect(config.types)}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      devAssert(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${inspect(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if (isDirective(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        devAssert(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if (isInterfaceType(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if (isObjectType(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return isUnionType(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if (isUnionType(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = getNamedType(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if (isUnionType(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (isObjectType(namedType) || isInterfaceType(namedType)) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if (isInputObjectType(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { isEqualType, isTypeSubTypeOf } from '../utilities/typeComparators.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isNamedType,\n  isNonNullType,\n  isObjectType,\n  isOutputType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLDeprecatedDirective, isDirective } from './directives.mjs';\nimport { isIntrospectionType } from './introspection.mjs';\nimport { assertSchema } from './schema.mjs';\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(\n      new GraphQLError(message, {\n        nodes: _nodes,\n      }),\n    );\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${inspect(\n        queryType,\n      )}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${inspect(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${inspect(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\n        `Expected directive but got: ${inspect(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${inspect(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${inspect(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${inspect(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!isInterfaceType(iface)) {\n      context.reportError(\n        `Type ${inspect(type)} must only implement Interface types, ` +\n          `it cannot implement ${inspect(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (!isTypeSubTypeOf(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${inspect(ifaceField.type)} but ${type.name}.${fieldName} ` +\n          `is type ${inspect(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!isEqualType(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${inspect(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${inspect(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && isRequiredArgument(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${inspect(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (isRequiredInputField(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) => node.name.value === GraphQLDeprecatedDirective.name,\n      );\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { GraphQLList, GraphQLNonNull } from '../type/definition.mjs';\nexport function typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLList(innerType);\n    }\n\n    case Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLNonNull(innerType);\n    }\n\n    case Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n","import { isNode } from '../language/ast.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { getEnterLeaveForKind } from '../language/visitor.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isCompositeType,\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isListType,\n  isObjectType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { typeFromAST } from './typeFromAST.mjs';\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport class TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET: {\n        const namedType = getNamedType(this.getType());\n\n        this._parentTypeStack.push(\n          isCompositeType(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n        break;\n      }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(isObjectType(rootType) ? rootType : undefined);\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? typeFromAST(schema, typeConditionAST)\n          : getNamedType(this.getType());\n\n        this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n        break;\n      }\n\n      case Kind.VARIABLE_DEFINITION: {\n        const inputType = typeFromAST(schema, node.type);\n\n        this._inputTypeStack.push(\n          isInputType(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n        break;\n      }\n\n      case Kind.LIST: {\n        const listType = getNullableType(this.getInputType());\n        const itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n        break;\n      }\n\n      case Kind.OBJECT_FIELD: {\n        const objectType = getNamedType(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if (isInputObjectType(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          isInputType(inputFieldType) ? inputFieldType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ENUM: {\n        const enumType = getNamedType(this.getInputType());\n        let enumValue;\n\n        if (isEnumType(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = getEnterLeaveForKind(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = getEnterLeaveForKind(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n","import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName =\n            definition.kind === Kind.SCHEMA_DEFINITION ||\n            definition.kind === Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new GraphQLError(`The ${defName} definition is not executable.`, {\n              nodes: definition,\n            }),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { naturalCompare } from '../../jsutils/naturalCompare.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isAbstractType,\n  isInterfaceType,\n  isObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nexport function FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = didYouMean(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = didYouMean(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!isAbstractType(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (isInterfaceType(typeA) && schema.isSubType(typeA, typeB)) {\n        return -1;\n      }\n\n      if (isInterfaceType(typeB) && schema.isSubType(typeB, typeA)) {\n        return 1;\n      }\n\n      return naturalCompare(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          const typeStr = print(typeCondition);\n          context.reportError(\n            new GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        const typeStr = print(node.typeCondition);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nexport function KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(\n          new GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = suggestionList(argName, knownArgs);\n            context.reportError(\n              new GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  didYouMean(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../../language/ast.mjs';\nimport { DirectiveLocation } from '../../language/directiveLocation.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nexport function KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || invariant(false);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || invariant(false);\n      return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? DirectiveLocation.INPUT_FIELD_DEFINITION\n        : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(appliedTo.kind));\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case OperationTypeNode.QUERY:\n      return DirectiveLocation.QUERY;\n\n    case OperationTypeNode.MUTATION:\n      return DirectiveLocation.MUTATION;\n\n    case OperationTypeNode.SUBSCRIPTION:\n      return DirectiveLocation.SUBSCRIPTION;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nexport function KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new GraphQLError(`Unknown fragment \"${fragmentName}\".`, {\n            nodes: node.name,\n          }),\n        );\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeSystemDefinitionNode,\n  isTypeSystemExtensionNode,\n} from '../../language/predicates.mjs';\nimport { introspectionTypes } from '../../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../../type/scalars.mjs';\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nexport function KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = suggestionList(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new GraphQLError(\n            `Unknown type \"${typeName}\".` + didYouMean(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\nconst standardTypeNames = [...specifiedScalarTypes, ...introspectionTypes].map(\n  (type) => type.name,\n);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value))\n  );\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nexport function LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  const oldSchema = context.getSchema();\n  const alreadyDefined =\n    (_ref =\n      (_ref2 =\n        (_oldSchema$astNode =\n          oldSchema === null || oldSchema === void 0\n            ? void 0\n            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0\n          ? _oldSchema$astNode\n          : oldSchema === null || oldSchema === void 0\n          ? void 0\n          : oldSchema.getQueryType()) !== null && _ref2 !== void 0\n        ? _ref2\n        : oldSchema === null || oldSchema === void 0\n        ? void 0\n        : oldSchema.getMutationType()) !== null && _ref !== void 0\n      ? _ref\n      : oldSchema === null || oldSchema === void 0\n      ? void 0\n      : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(\n          new GraphQLError(\n            'Cannot define a new schema within a schema extension.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(\n          new GraphQLError('Must provide only one schema definition.', {\n            nodes: node,\n          }),\n        );\n      }\n\n      ++schemaDefinitionsCount;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nexport function NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                {\n                  nodes: [node, operation],\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new GraphQLError(`Fragment \"${fragName}\" is never used.`, {\n                nodes: fragmentDef,\n              }),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nexport function NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                {\n                  nodes: variableDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n","import { naturalCompare } from '../jsutils/naturalCompare.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\n\nexport function sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case Kind.INT:\n    case Kind.FLOAT:\n    case Kind.STRING:\n    case Kind.BOOLEAN:\n    case Kind.NULL:\n    case Kind.ENUM:\n    case Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      naturalCompare(fieldA.name.value, fieldB.name.value),\n    );\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  isInterfaceType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../../type/definition.mjs';\nimport { sortValueNode } from '../../utilities/sortValueNode.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nexport function OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            {\n              nodes: fields1.concat(fields2),\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (\n      comparedFragmentPairs.has(\n        referencedFragmentName,\n        fragmentName,\n        areMutuallyExclusive,\n      )\n    ) {\n      continue;\n    }\n\n    comparedFragmentPairs.add(\n      referencedFragmentName,\n      fragmentName,\n      areMutuallyExclusive,\n    );\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      isObjectType(parentType1) &&\n      isObjectType(parentType2));\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // Two field calls must have the same arguments.\n\n    if (!sameArguments(node1, node2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${inspect(type1)}\" and \"${inspect(\n          type2,\n        )}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      getNamedType(type1),\n      selectionSet1,\n      getNamedType(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction sameArguments(node1, node2) {\n  const args1 = node1.arguments;\n  const args2 = node2.arguments;\n\n  if (args1 === undefined || args1.length === 0) {\n    return args2 === undefined || args2.length === 0;\n  }\n\n  if (args2 === undefined || args2.length === 0) {\n    return false;\n  }\n  /* c8 ignore next */\n\n  if (args1.length !== args2.length) {\n    /* c8 ignore next */\n    return false;\n    /* c8 ignore next */\n  }\n\n  const values2 = new Map(args2.map(({ name, value }) => [name.value, value]));\n  return args1.every((arg1) => {\n    const value1 = arg1.value;\n    const value2 = values2.get(arg1.name.value);\n\n    if (value2 === undefined) {\n      return false;\n    }\n\n    return stringifyValue(value1) === stringifyValue(value2);\n  });\n}\n\nfunction stringifyValue(value) {\n  return print(sortValueNode(value));\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (isObjectType(parentType) || isInterfaceType(parentType)) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? typeFromAST(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { doTypesOverlap } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        isCompositeType(fragType) &&\n        isCompositeType(parentType) &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isTypeDefinitionNode } from '../../language/predicates.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../../type/definition.mjs';\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nexport function PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new GraphQLError(`Cannot extend non-${kindStr} type \"${typeName}\".`, {\n            nodes: defNode ? [defNode, node] : node,\n          }),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(\n        new GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            didYouMean(suggestedTypes),\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n    }\n  }\n}\nconst defKindToExtKind = {\n  [Kind.SCALAR_TYPE_DEFINITION]: Kind.SCALAR_TYPE_EXTENSION,\n  [Kind.OBJECT_TYPE_DEFINITION]: Kind.OBJECT_TYPE_EXTENSION,\n  [Kind.INTERFACE_TYPE_DEFINITION]: Kind.INTERFACE_TYPE_EXTENSION,\n  [Kind.UNION_TYPE_DEFINITION]: Kind.UNION_TYPE_EXTENSION,\n  [Kind.ENUM_TYPE_DEFINITION]: Kind.ENUM_TYPE_EXTENSION,\n  [Kind.INPUT_OBJECT_TYPE_DEFINITION]: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(kind));\n  }\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isRequiredArgument, isType } from '../../type/definition.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && isRequiredArgument(argDef)) {\n            const argTypeStr = inspect(argDef.type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = keyMap(\n      directive.args.filter(isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = keyMap(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = isType(argDef.type)\n                ? inspect(argDef.type)\n                : print(argDef.type);\n              context.reportError(\n                new GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { getNamedType, isLeafType } from '../../type/definition.mjs';\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = inspect(type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = inspect(type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","/**\n * Build a string describing the path.\n */\nexport function printPathArray(path) {\n  return path\n    .map((key) =>\n      typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key,\n    )\n    .join('');\n}\n","/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n","import { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport {\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nexport function coerceInputValue(inputValue, type, onError = defaultOnError) {\n  return coerceInputValueImpl(inputValue, type, onError, undefined);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  let errorPrefix = 'Invalid value ' + inspect(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += ` at \"value${printPathArray(path)}\"`;\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if (isNonNullType(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(\n      pathToArray(path),\n      inputValue,\n      new GraphQLError(\n        `Expected non-nullable type \"${inspect(type)}\" not to be null.`,\n      ),\n    );\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(inputValue)) {\n      return Array.from(inputValue, (itemValue, index) => {\n        const itemPath = addPath(path, index, undefined);\n        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n      });\n    } // Lists accept a non-list value as a list of one.\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(inputValue)) {\n      onError(\n        pathToArray(path),\n        inputValue,\n        new GraphQLError(`Expected type \"${type.name}\" to be an object.`),\n      );\n      return;\n    }\n\n    const coercedValue = {};\n    const fieldDefs = type.getFields();\n\n    for (const field of Object.values(fieldDefs)) {\n      const fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          const typeStr = inspect(field.type);\n          onError(\n            pathToArray(path),\n            inputValue,\n            new GraphQLError(\n              `Field \"${field.name}\" of required type \"${typeStr}\" was not provided.`,\n            ),\n          );\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(\n        fieldValue,\n        field.type,\n        onError,\n        addPath(path, field.name, type.name),\n      );\n    } // Ensure every provided field is defined.\n\n    for (const fieldName of Object.keys(inputValue)) {\n      if (!fieldDefs[fieldName]) {\n        const suggestions = suggestionList(\n          fieldName,\n          Object.keys(type.getFields()),\n        );\n        onError(\n          pathToArray(path),\n          inputValue,\n          new GraphQLError(\n            `Field \"${fieldName}\" is not defined by type \"${type.name}\".` +\n              didYouMean(suggestions),\n          ),\n        );\n      }\n    }\n\n    return coercedValue;\n  }\n\n  if (isLeafType(type)) {\n    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof GraphQLError) {\n        onError(pathToArray(path), inputValue, error);\n      } else {\n        onError(\n          pathToArray(path),\n          inputValue,\n          new GraphQLError(`Expected type \"${type.name}\". ` + error.message, {\n            originalError: error,\n          }),\n        );\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(\n        pathToArray(path),\n        inputValue,\n        new GraphQLError(`Expected type \"${type.name}\".`),\n      );\n    }\n\n    return parseResult;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\n\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = keyMap(valueNode.fields, (field) => field.name.value);\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if (isLeafType(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { isInputType, isNonNullType } from '../type/definition.mjs';\nimport { coerceInputValue } from '../utilities/coerceInputValue.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { valueFromAST } from '../utilities/valueFromAST.mjs';\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = typeFromAST(schema, varDefNode.type);\n\n    if (!isInputType(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = print(varDefNode.type);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          {\n            nodes: varDefNode.type,\n          },\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n      } else if (isNonNullType(varType)) {\n        const varTypeStr = inspect(varType);\n        onError(\n          new GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            {\n              nodes: varDefNode,\n            },\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && isNonNullType(varType)) {\n      const varTypeStr = inspect(varType);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          {\n            nodes: varDefNode,\n          },\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = coerceInputValue(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` + inspect(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${printPathArray(path)}\"`;\n        }\n\n        onError(\n          new GraphQLError(prefix + '; ' + error.message, {\n            nodes: varDefNode,\n            originalError: error,\n          }),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = keyMap(argumentNodes, (arg) => arg.name.value);\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError(\n          `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n            'was not provided.',\n          {\n            nodes: node,\n          },\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === Kind.NULL;\n\n    if (valueNode.kind === Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if (isNonNullType(argType)) {\n          throw new GraphQLError(\n            `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            {\n              nodes: valueNode,\n            },\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && isNonNullType(argType)) {\n      throw new GraphQLError(\n        `Argument \"${name}\" of non-null type \"${inspect(argType)}\" ` +\n          'must not be null.',\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const coercedValue = valueFromAST(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new GraphQLError(\n        `Argument \"${name}\" has invalid value ${print(valueNode)}.`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { isAbstractType } from '../type/definition.mjs';\nimport {\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n} from '../type/directives.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { getDirectiveValues } from './values.mjs';\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    new Set(),\n  );\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldNodes;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          selection.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (\n          visitedFragmentNames.has(fragName) ||\n          !shouldIncludeNode(variableValues, selection)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          fragment.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = getDirectiveValues(GraphQLSkipDirective, node, variableValues);\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = getDirectiveValues(\n    GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = typeFromAST(schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if (isAbstractType(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { collectFields } from '../../execution/collectFields.mjs';\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const fields = collectFields(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                {\n                  nodes: extraFieldSelections,\n                },\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  {\n                    nodes: fieldNodes,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n","/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nexport function groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nexport function UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes =\n        (_directiveNode$argume = directiveNode.arguments) !== null &&\n        _directiveNode$argume !== void 0\n          ? _directiveNode$argume\n          : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField,\n  };\n\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_typeNode$fields = typeNode.fields) !== null &&\n      _typeNode$fields !== void 0\n        ? _typeNode$fields\n        : [];\n\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes =\n        (_fieldDef$arguments = fieldDef.arguments) !== null &&\n        _fieldDef$arguments !== void 0\n          ? _fieldDef$arguments\n          : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n\n    return false;\n  }\n\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `Argument \"${parentName}(${argName}:)\" can only be defined once.`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n\n    return false;\n  }\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            {\n              nodes: [knownDirectiveNames[directiveName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../../language/predicates.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === Kind.SCHEMA_DEFINITION ||\n        node.kind === Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isEnumType } from '../../type/definition.mjs';\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nexport function UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (isEnumType(existingType) && existingType.getValue(valueName)) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nexport function UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness,\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    const typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_node$fields = node.fields) !== null && _node$fields !== void 0\n        ? _node$fields\n        : [];\n    const fieldNames = knownFieldNames[typeName];\n\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: fieldDef.name,\n            },\n          ),\n        );\n      } else if (fieldNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" can only be defined once.`,\n            {\n              nodes: [fieldNames[fieldName], fieldDef.name],\n            },\n          ),\n        );\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nexport function UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n","import { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nexport function UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || invariant(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nexport function UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            {\n              nodes: operationType,\n            },\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            {\n              nodes: [alreadyDefinedOperationType, operationType],\n            },\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nexport function UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName,\n  };\n\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(\n        new GraphQLError(\n          `Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`,\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(\n        new GraphQLError(`There can be only one type named \"${typeName}\".`, {\n          nodes: [knownTypeNames[typeName], node.name],\n        }),\n      );\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = groupBy(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isRequiredInputField,\n} from '../../type/definition.mjs';\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nexport function ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = keyMap(node.fields, (field) => field.name.value);\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          const typeStr = inspect(fieldDef.type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = getNamedType(context.getParentInputType());\n      const fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        const suggestions = suggestionList(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `Expected value of type \"${inspect(type)}\", found ${print(node)}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = getNamedType(locationType);\n\n  if (!isLeafType(type)) {\n    const typeStr = inspect(locationType);\n    context.reportError(\n      new GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n        {\n          nodes: node,\n        },\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = inspect(locationType);\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n          {\n            nodes: node,\n          },\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = inspect(locationType);\n\n    if (error instanceof GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}; ` +\n            error.message,\n          {\n            nodes: node,\n            originalError: error,\n          },\n        ),\n      );\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isInputType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.type);\n\n      if (type !== undefined && !isInputType(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = print(node.type);\n        context.reportError(\n          new GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isNonNullType } from '../../type/definition.mjs';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nexport function VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = typeFromAST(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = inspect(varType);\n              const typeStr = inspect(type);\n              context.reportError(\n                new GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n","// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Argument Names\"\n\nimport {\n  KnownArgumentNamesOnDirectivesRule,\n  KnownArgumentNamesRule,\n} from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs';\nimport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nimport {\n  ProvidedRequiredArgumentsOnDirectivesRule,\n  ProvidedRequiredArgumentsRule,\n} from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs';\nimport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs';\nimport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs';\nimport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nimport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs';\nimport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nimport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs';\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nexport const specifiedRules = Object.freeze([\n  ExecutableDefinitionsRule,\n  UniqueOperationNamesRule,\n  LoneAnonymousOperationRule,\n  SingleFieldSubscriptionsRule,\n  KnownTypeNamesRule,\n  FragmentsOnCompositeTypesRule,\n  VariablesAreInputTypesRule,\n  ScalarLeafsRule,\n  FieldsOnCorrectTypeRule,\n  UniqueFragmentNamesRule,\n  KnownFragmentNamesRule,\n  NoUnusedFragmentsRule,\n  PossibleFragmentSpreadsRule,\n  NoFragmentCyclesRule,\n  UniqueVariableNamesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedVariablesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  KnownArgumentNamesRule,\n  UniqueArgumentNamesRule,\n  ValuesOfCorrectTypeRule,\n  ProvidedRequiredArgumentsRule,\n  VariablesInAllowedPositionRule,\n  OverlappingFieldsCanBeMergedRule,\n  UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexport const specifiedSDLRules = Object.freeze([\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  KnownArgumentNamesOnDirectivesRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule,\n  ProvidedRequiredArgumentsOnDirectivesRule,\n]);\n","import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport class ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\nexport class SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\nexport class ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new TypeInfo(this._schema);\n      visit(\n        node,\n        visitWithTypeInfo(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { visit, visitInParallel } from '../language/visitor.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\nimport { specifiedRules, specifiedSDLRules } from './specifiedRules.mjs';\nimport {\n  SDLValidationContext,\n  ValidationContext,\n} from './ValidationContext.mjs';\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(\n  schema,\n  documentAST,\n  rules = specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || devAssert(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = visitInParallel(rules.map((rule) => rule(context))); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nexport function validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n","/**\n * Memoizes the provided three-argument function.\n */\nexport function memoize3(fn) {\n  let cache0;\n  return function memoized(a1, a2, a3) {\n    if (cache0 === undefined) {\n      cache0 = new WeakMap();\n    }\n\n    let cache1 = cache0.get(a1);\n\n    if (cache1 === undefined) {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    let cache2 = cache1.get(a2);\n\n    if (cache2 === undefined) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    let fnResult = cache2.get(a3);\n\n    if (fnResult === undefined) {\n      fnResult = fn(a1, a2, a3);\n      cache2.set(a3, fnResult);\n    }\n\n    return fnResult;\n  };\n}\n","/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nexport function promiseForObject(object) {\n  return Promise.all(Object.values(object)).then((resolvedValues) => {\n    const resolvedObject = Object.create(null);\n\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n\n    return resolvedObject;\n  });\n}\n","import { isPromise } from './isPromise.mjs';\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nexport function promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = isPromise(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n","import { inspect } from './inspect.mjs';\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\nexport function toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + inspect(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n","import { toError } from '../jsutils/toError.mjs';\nimport { GraphQLError } from './GraphQLError.mjs';\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = toError(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { isPromise } from '../jsutils/isPromise.mjs';\nimport { memoize3 } from '../jsutils/memoize3.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { promiseForObject } from '../jsutils/promiseForObject.mjs';\nimport { promiseReduce } from '../jsutils/promiseReduce.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { locatedError } from '../error/locatedError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isAbstractType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport {\n  collectFields,\n  collectSubfields as _collectSubfields,\n} from './collectFields.mjs';\nimport { getArgumentValues, getVariableValues } from './values.mjs';\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\n\nconst collectSubfields = memoize3((exeContext, returnType, fieldNodes) =>\n  _collectSubfields(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    returnType,\n    fieldNodes,\n  ),\n);\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g `a`\n * 2) fragment \"spreads\" e.g. `...c`\n * 3) inline fragment \"spreads\" e.g. `...on Type { a }`\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nexport function execute(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const { schema, document, variableValues, rootValue } = args; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  //\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    const { operation } = exeContext;\n    const result = executeOperation(exeContext, operation, rootValue);\n\n    if (isPromise(result)) {\n      return result.then(\n        (data) => buildResponse(data, exeContext.errors),\n        (error) => {\n          exeContext.errors.push(error);\n          return buildResponse(null, exeContext.errors);\n        },\n      );\n    }\n\n    return buildResponse(result, exeContext.errors);\n  } catch (error) {\n    exeContext.errors.push(error);\n    return buildResponse(null, exeContext.errors);\n  }\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function executeSync(args) {\n  const result = execute(args); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\nfunction buildResponse(data, errors) {\n  return errors.length === 0\n    ? {\n        data,\n      }\n    : {\n        errors,\n        data,\n      };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\nexport function assertValidExecutionArguments(\n  schema,\n  document,\n  rawVariableValues,\n) {\n  document || devAssert(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  assertValidSchema(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null ||\n    isObjectLike(rawVariableValues) ||\n    devAssert(\n      false,\n      'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.',\n    );\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nexport function buildExecutionContext(args) {\n  var _definition$name, _operation$variableDe;\n\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues: rawVariableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n    subscribeFieldResolver,\n  } = args;\n  let operation;\n  const fragments = Object.create(null);\n\n  for (const definition of document.definitions) {\n    switch (definition.kind) {\n      case Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [\n              new GraphQLError(\n                'Must provide operation name if query contains multiple operations.',\n              ),\n            ];\n          }\n\n          operation = definition;\n        } else if (\n          ((_definition$name = definition.name) === null ||\n          _definition$name === void 0\n            ? void 0\n            : _definition$name.value) === operationName\n        ) {\n          operation = definition;\n        }\n\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [new GraphQLError(`Unknown operation named \"${operationName}\".`)];\n    }\n\n    return [new GraphQLError('Must provide an operation.')];\n  } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const variableDefinitions =\n    (_operation$variableDe = operation.variableDefinitions) !== null &&\n    _operation$variableDe !== void 0\n      ? _operation$variableDe\n      : [];\n  const coercedVariableValues = getVariableValues(\n    schema,\n    variableDefinitions,\n    rawVariableValues !== null && rawVariableValues !== void 0\n      ? rawVariableValues\n      : {},\n    {\n      maxErrors: 50,\n    },\n  );\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema,\n    fragments,\n    rootValue,\n    contextValue,\n    operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver:\n      fieldResolver !== null && fieldResolver !== void 0\n        ? fieldResolver\n        : defaultFieldResolver,\n    typeResolver:\n      typeResolver !== null && typeResolver !== void 0\n        ? typeResolver\n        : defaultTypeResolver,\n    subscribeFieldResolver:\n      subscribeFieldResolver !== null && subscribeFieldResolver !== void 0\n        ? subscribeFieldResolver\n        : defaultFieldResolver,\n    errors: [],\n  };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  const rootType = exeContext.schema.getRootType(operation.operation);\n\n  if (rootType == null) {\n    throw new GraphQLError(\n      `Schema is not configured to execute ${operation.operation} operation.`,\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = collectFields(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const path = undefined;\n\n  switch (operation.operation) {\n    case OperationTypeNode.QUERY:\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n\n    case OperationTypeNode.MUTATION:\n      return executeFieldsSerially(\n        exeContext,\n        rootType,\n        rootValue,\n        path,\n        rootFields,\n      );\n\n    case OperationTypeNode.SUBSCRIPTION:\n      // TODO: deprecate `subscribe` and move all logic here\n      // Temporary solution until we finish merging execute and subscribe together\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n  }\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\n\nfunction executeFieldsSerially(\n  exeContext,\n  parentType,\n  sourceValue,\n  path,\n  fields,\n) {\n  return promiseReduce(\n    fields.entries(),\n    (results, [responseName, fieldNodes]) => {\n      const fieldPath = addPath(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result === undefined) {\n        return results;\n      }\n\n      if (isPromise(result)) {\n        return result.then((resolvedResult) => {\n          results[responseName] = resolvedResult;\n          return results;\n        });\n      }\n\n      results[responseName] = result;\n      return results;\n    },\n    Object.create(null),\n  );\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  const results = Object.create(null);\n  let containsPromise = false;\n\n  try {\n    for (const [responseName, fieldNodes] of fields.entries()) {\n      const fieldPath = addPath(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result !== undefined) {\n        results[responseName] = result;\n\n        if (isPromise(result)) {\n          containsPromise = true;\n        }\n      }\n    }\n  } catch (error) {\n    if (containsPromise) {\n      // Ensure that any promises returned by other fields are handled, as they may also reject.\n      return promiseForObject(results).finally(() => {\n        throw error;\n      });\n    }\n\n    throw error;\n  } // If there are no promises, we can just return the object\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n  return promiseForObject(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\n\nfunction executeField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  const returnType = fieldDef.type;\n  const resolveFn =\n    (_fieldDef$resolve = fieldDef.resolve) !== null &&\n    _fieldDef$resolve !== void 0\n      ? _fieldDef$resolve\n      : exeContext.fieldResolver;\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    parentType,\n    path,\n  ); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    const args = getArgumentValues(\n      fieldDef,\n      fieldNodes[0],\n      exeContext.variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue;\n    const result = resolveFn(source, args, contextValue, info);\n    let completed;\n\n    if (isPromise(result)) {\n      completed = result.then((resolved) =>\n        completeValue(exeContext, returnType, fieldNodes, info, path, resolved),\n      );\n    } else {\n      completed = completeValue(\n        exeContext,\n        returnType,\n        fieldNodes,\n        info,\n        path,\n        result,\n      );\n    }\n\n    if (isPromise(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, (rawError) => {\n        const error = locatedError(rawError, fieldNodes, pathToArray(path));\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    const error = locatedError(rawError, fieldNodes, pathToArray(path));\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\nexport function buildResolveInfo(\n  exeContext,\n  fieldDef,\n  fieldNodes,\n  parentType,\n  path,\n) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes,\n    returnType: fieldDef.type,\n    parentType,\n    path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues,\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if (isNonNullType(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n  if (isNonNullType(returnType)) {\n    const completed = completeValue(\n      exeContext,\n      returnType.ofType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n\n    if (completed === null) {\n      throw new Error(\n        `Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`,\n      );\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n  if (isListType(returnType)) {\n    return completeListValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n  if (isLeafType(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n  if (isAbstractType(returnType)) {\n    return completeAbstractValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is Object, execute and complete all sub-selections.\n\n  if (isObjectType(returnType)) {\n    return completeObjectValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  }\n  /* c8 ignore next 6 */\n  // Not reachable, all possible output types have been considered.\n\n  false ||\n    invariant(\n      false,\n      'Cannot complete value of unexpected output type: ' + inspect(returnType),\n    );\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\nfunction completeListValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  if (!isIterableObject(result)) {\n    throw new GraphQLError(\n      `Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`,\n    );\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n  const itemType = returnType.ofType;\n  let containsPromise = false;\n  const completedResults = Array.from(result, (item, index) => {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    const itemPath = addPath(path, index, undefined);\n\n    try {\n      let completedItem;\n\n      if (isPromise(item)) {\n        completedItem = item.then((resolved) =>\n          completeValue(\n            exeContext,\n            itemType,\n            fieldNodes,\n            info,\n            itemPath,\n            resolved,\n          ),\n        );\n      } else {\n        completedItem = completeValue(\n          exeContext,\n          itemType,\n          fieldNodes,\n          info,\n          itemPath,\n          item,\n        );\n      }\n\n      if (isPromise(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, (rawError) => {\n          const error = locatedError(\n            rawError,\n            fieldNodes,\n            pathToArray(itemPath),\n          );\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      const error = locatedError(rawError, fieldNodes, pathToArray(itemPath));\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\nfunction completeLeafValue(returnType, result) {\n  const serializedResult = returnType.serialize(result);\n\n  if (serializedResult == null) {\n    throw new Error(\n      `Expected \\`${inspect(returnType)}.serialize(${inspect(result)})\\` to ` +\n        `return non-nullable value, returned: ${inspect(serializedResult)}`,\n    );\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\nfunction completeAbstractValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  var _returnType$resolveTy;\n\n  const resolveTypeFn =\n    (_returnType$resolveTy = returnType.resolveType) !== null &&\n    _returnType$resolveTy !== void 0\n      ? _returnType$resolveTy\n      : exeContext.typeResolver;\n  const contextValue = exeContext.contextValue;\n  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if (isPromise(runtimeType)) {\n    return runtimeType.then((resolvedRuntimeType) =>\n      completeObjectValue(\n        exeContext,\n        ensureValidRuntimeType(\n          resolvedRuntimeType,\n          exeContext,\n          returnType,\n          fieldNodes,\n          info,\n          result,\n        ),\n        fieldNodes,\n        info,\n        path,\n        result,\n      ),\n    );\n  }\n\n  return completeObjectValue(\n    exeContext,\n    ensureValidRuntimeType(\n      runtimeType,\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      result,\n    ),\n    fieldNodes,\n    info,\n    path,\n    result,\n  );\n}\n\nfunction ensureValidRuntimeType(\n  runtimeTypeName,\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  result,\n) {\n  if (runtimeTypeName == null) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`,\n      fieldNodes,\n    );\n  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n  // TODO: remove in 17.0.0 release\n\n  if (isObjectType(runtimeTypeName)) {\n    throw new GraphQLError(\n      'Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.',\n    );\n  }\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n        `value ${inspect(result)}, received \"${inspect(runtimeTypeName)}\".`,\n    );\n  }\n\n  const runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!isObjectType(runtimeType)) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new GraphQLError(\n      `Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\nfunction completeObjectValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  // Collect sub-fields to execute to complete this value.\n  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n\n  if (returnType.isTypeOf) {\n    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if (isPromise(isTypeOf)) {\n      return isTypeOf.then((resolvedIsTypeOf) => {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return executeFields(\n          exeContext,\n          returnType,\n          result,\n          path,\n          subFieldNodes,\n        );\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new GraphQLError(\n    `Expected value of type \"${returnType.name}\" but got: ${inspect(result)}.`,\n    {\n      nodes: fieldNodes,\n    },\n  );\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\nexport const defaultTypeResolver = function (\n  value,\n  contextValue,\n  info,\n  abstractType,\n) {\n  // First, look for `__typename`.\n  if (isObjectLike(value) && typeof value.__typename === 'string') {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n  const possibleTypes = info.schema.getPossibleTypes(abstractType);\n  const promisedIsTypeOfResults = [];\n\n  for (let i = 0; i < possibleTypes.length; i++) {\n    const type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if (isPromise(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then((isTypeOfResults) => {\n      for (let i = 0; i < isTypeOfResults.length; i++) {\n        if (isTypeOfResults[i]) {\n          return possibleTypes[i].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexport const defaultFieldResolver = function (\n  source,\n  args,\n  contextValue,\n  info,\n) {\n  // ensure source is a value for which property access is acceptable.\n  if (isObjectLike(source) || typeof source === 'function') {\n    const property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nexport function getFieldDef(schema, parentType, fieldNode) {\n  const fieldName = fieldNode.name.value;\n\n  if (\n    fieldName === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  } else if (\n    fieldName === TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return TypeMetaFieldDef;\n  } else if (fieldName === TypeNameMetaFieldDef.name) {\n    return TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n","import { devAssert } from './jsutils/devAssert.mjs';\nimport { isPromise } from './jsutils/isPromise.mjs';\nimport { parse } from './language/parser.mjs';\nimport { validateSchema } from './type/validate.mjs';\nimport { validate } from './validation/validate.mjs';\nimport { execute } from './execution/execute.mjs';\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * contextValue:\n *    The context value is provided as an argument to resolver functions after\n *    field arguments. It is used to pass shared information useful at any point\n *    during executing this query, for example the currently logged in user and\n *    connections to databases or other services.\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n * typeResolver:\n *    A type resolver function to use when none is provided by the schema.\n *    If not provided, the default type resolver is used (which looks for a\n *    `__typename` field or alternatively calls the `isTypeOf` method).\n */\n\nexport function graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise((resolve) => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = validateSchema(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors,\n    };\n  } // Parse\n\n  let document;\n\n  try {\n    document = parse(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError],\n    };\n  } // Validate\n\n  const validationErrors = validate(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors,\n    };\n  } // Execute\n\n  return execute({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  });\n}\n","export {\n  // Predicate\n  isSchema, // Assertion\n  assertSchema, // GraphQL Schema definition\n  GraphQLSchema,\n} from './schema.mjs';\nexport {\n  resolveObjMapThunk,\n  resolveReadonlyArrayThunk, // Predicates\n  isType,\n  isScalarType,\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n  isInputType,\n  isOutputType,\n  isLeafType,\n  isCompositeType,\n  isAbstractType,\n  isWrappingType,\n  isNullableType,\n  isNamedType,\n  isRequiredArgument,\n  isRequiredInputField, // Assertions\n  assertType,\n  assertScalarType,\n  assertObjectType,\n  assertInterfaceType,\n  assertUnionType,\n  assertEnumType,\n  assertInputObjectType,\n  assertListType,\n  assertNonNullType,\n  assertInputType,\n  assertOutputType,\n  assertLeafType,\n  assertCompositeType,\n  assertAbstractType,\n  assertWrappingType,\n  assertNullableType,\n  assertNamedType, // Un-modifiers\n  getNullableType,\n  getNamedType, // Definitions\n  GraphQLScalarType,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType,\n  GraphQLInputObjectType, // Type Wrappers\n  GraphQLList,\n  GraphQLNonNull,\n} from './definition.mjs';\nexport {\n  // Predicate\n  isDirective, // Assertion\n  assertDirective, // Directives Definition\n  GraphQLDirective, // Built-in Directives defined by the Spec\n  isSpecifiedDirective,\n  specifiedDirectives,\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective, // Constant Deprecation Reason\n  DEFAULT_DEPRECATION_REASON,\n} from './directives.mjs';\n// Common built-in scalar instances.\nexport {\n  // Predicate\n  isSpecifiedScalarType, // Standard GraphQL Scalars\n  specifiedScalarTypes,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLString,\n  GraphQLBoolean,\n  GraphQLID, // Int boundaries constants\n  GRAPHQL_MAX_INT,\n  GRAPHQL_MIN_INT,\n} from './scalars.mjs';\nexport {\n  // Predicate\n  isIntrospectionType, // GraphQL Types for introspection.\n  introspectionTypes,\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind, // \"Enum\" of Type Kinds\n  TypeKind, // Meta-field definitions.\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from './introspection.mjs'; // Validate GraphQL schema.\n\nexport { validateSchema, assertValidSchema } from './validate.mjs'; // Upholds the spec rules about naming.\n\nexport { assertName, assertEnumValueName } from './assertName.mjs';\n","export { Source } from './source.mjs';\nexport { getLocation } from './location.mjs';\nexport { printLocation, printSourceLocation } from './printLocation.mjs';\nexport { Kind } from './kinds.mjs';\nexport { TokenKind } from './tokenKind.mjs';\nexport { Lexer } from './lexer.mjs';\nexport { parse, parseValue, parseConstValue, parseType } from './parser.mjs';\nexport { print } from './printer.mjs';\nexport {\n  visit,\n  visitInParallel,\n  getVisitFn,\n  getEnterLeaveForKind,\n  BREAK,\n} from './visitor.mjs';\nexport { Location, Token, OperationTypeNode } from './ast.mjs';\nexport {\n  isDefinitionNode,\n  isExecutableDefinitionNode,\n  isSelectionNode,\n  isValueNode,\n  isConstValueNode,\n  isTypeNode,\n  isTypeSystemDefinitionNode,\n  isTypeDefinitionNode,\n  isTypeSystemExtensionNode,\n  isTypeExtensionNode,\n} from './predicates.mjs';\nexport { DirectiveLocation } from './directiveLocation.mjs';\n","/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * implementing a `Symbol.asyncIterator` method.\n */\nexport function isAsyncIterable(maybeAsyncIterable) {\n  return (\n    typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0\n      ? void 0\n      : maybeAsyncIterable[Symbol.asyncIterator]) === 'function'\n  );\n}\n","/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport function mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false,\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function'\n        ? mapResult(await iterator.return())\n        : {\n            value: undefined,\n            done: true,\n          };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isAsyncIterable } from '../jsutils/isAsyncIterable.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { locatedError } from '../error/locatedError.mjs';\nimport { collectFields } from './collectFields.mjs';\nimport {\n  assertValidExecutionArguments,\n  buildExecutionContext,\n  buildResolveInfo,\n  execute,\n  getFieldDef,\n} from './execute.mjs';\nimport { mapAsyncIterator } from './mapAsyncIterator.mjs';\nimport { getArgumentValues } from './values.mjs';\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\nexport async function subscribe(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const resultOrStream = await createSourceEventStream(args);\n\n  if (!isAsyncIterable(resultOrStream)) {\n    return resultOrStream;\n  } // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  const mapSourceToResponse = (payload) =>\n    execute({ ...args, rootValue: payload }); // Map every source value to a ExecutionResult value as described above.\n\n  return mapAsyncIterator(resultOrStream, mapSourceToResponse);\n}\n\nfunction toNormalizedArgs(args) {\n  const firstArg = args[0];\n\n  if (firstArg && 'document' in firstArg) {\n    return firstArg;\n  }\n\n  return {\n    schema: firstArg,\n    // FIXME: when underlying TS bug fixed, see https://github.com/microsoft/TypeScript/issues/31613\n    document: args[1],\n    rootValue: args[2],\n    contextValue: args[3],\n    variableValues: args[4],\n    operationName: args[5],\n    subscribeFieldResolver: args[6],\n  };\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\nexport async function createSourceEventStream(...rawArgs) {\n  const args = toNormalizedArgs(rawArgs);\n  const { schema, document, variableValues } = args; // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  }\n\n  try {\n    const eventStream = await executeSubscription(exeContext); // Assert field returned an event stream, otherwise yield an error.\n\n    if (!isAsyncIterable(eventStream)) {\n      throw new Error(\n        'Subscription field must return Async Iterable. ' +\n          `Received: ${inspect(eventStream)}.`,\n      );\n    }\n\n    return eventStream;\n  } catch (error) {\n    // If it GraphQLError, report it as an ExecutionResult, containing only errors and no data.\n    // Otherwise treat the error as a system-class error and re-throw it.\n    if (error instanceof GraphQLError) {\n      return {\n        errors: [error],\n      };\n    }\n\n    throw error;\n  }\n}\n\nasync function executeSubscription(exeContext) {\n  const { schema, fragments, operation, variableValues, rootValue } =\n    exeContext;\n  const rootType = schema.getSubscriptionType();\n\n  if (rootType == null) {\n    throw new GraphQLError(\n      'Schema is not configured to execute subscription operation.',\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = collectFields(\n    schema,\n    fragments,\n    variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const [responseName, fieldNodes] = [...rootFields.entries()][0];\n  const fieldDef = getFieldDef(schema, rootType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    const fieldName = fieldNodes[0].name.value;\n    throw new GraphQLError(\n      `The subscription field \"${fieldName}\" is not defined.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  const path = addPath(undefined, responseName, rootType.name);\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    rootType,\n    path,\n  );\n\n  try {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    const args = getArgumentValues(fieldDef, fieldNodes[0], variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    const resolveFn =\n      (_fieldDef$subscribe = fieldDef.subscribe) !== null &&\n      _fieldDef$subscribe !== void 0\n        ? _fieldDef$subscribe\n        : exeContext.subscribeFieldResolver;\n    const eventStream = await resolveFn(rootValue, args, contextValue, info);\n\n    if (eventStream instanceof Error) {\n      throw eventStream;\n    }\n\n    return eventStream;\n  } catch (error) {\n    throw locatedError(error, fieldNodes, pathToArray(path));\n  }\n}\n","export { pathToArray as responsePathAsArray } from '../jsutils/Path.mjs';\nexport {\n  execute,\n  executeSync,\n  defaultFieldResolver,\n  defaultTypeResolver,\n} from './execute.mjs';\nexport { subscribe, createSourceEventStream } from './subscribe.mjs';\nexport {\n  getArgumentValues,\n  getVariableValues,\n  getDirectiveValues,\n} from './values.mjs';\n","import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) || invariant(false);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType } from '../../../type/definition.mjs';\nimport { isIntrospectionType } from '../../../type/introspection.mjs';\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nexport function NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = getNamedType(context.getType());\n\n      if (type && isIntrospectionType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","export { validate } from './validate.mjs';\nexport { ValidationContext } from './ValidationContext.mjs';\n// All validation rules in the GraphQL Specification.\nexport { specifiedRules } from './specifiedRules.mjs'; // Spec Section: \"Executable Definitions\"\n\nexport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nexport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nexport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Argument Names\"\n\nexport { KnownArgumentNamesRule } from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nexport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nexport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nexport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nexport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nexport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nexport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nexport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"All Variables Used\"\n\nexport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nexport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nexport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nexport { ProvidedRequiredArgumentsRule } from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nexport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nexport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nexport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nexport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nexport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nexport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nexport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nexport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"Values Type Correctness\"\n\nexport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nexport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nexport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs'; // SDL-specific validation rules\n\nexport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs';\nexport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nexport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs';\nexport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nexport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs';\nexport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs';\nexport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs';\nexport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs'; // Optional rules not defined by the GraphQL Specification\n\nexport { NoDeprecatedCustomRule } from './rules/custom/NoDeprecatedCustomRule.mjs';\nexport { NoSchemaIntrospectionCustomRule } from './rules/custom/NoSchemaIntrospectionCustomRule.mjs';\n","export { GraphQLError, printError, formatError } from './GraphQLError.mjs';\nexport { syntaxError } from './syntaxError.mjs';\nexport { locatedError } from './locatedError.mjs';\n","/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nexport function getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                    ofType {\n                      kind\n                      name\n                      ofType {\n                        kind\n                        name\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n","import { Kind } from '../language/kinds.mjs';\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nexport function getOperationAST(documentAST, operationName) {\n  let operation = null;\n\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (\n        ((_definition$name = definition.name) === null ||\n        _definition$name === void 0\n          ? void 0\n          : _definition$name.value) === operationName\n      ) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n","import { GraphQLError } from '../error/GraphQLError.mjs';\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation,\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation,\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { executeSync } from '../execution/execute.mjs';\nimport { getIntrospectionQuery } from './getIntrospectionQuery.mjs';\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options,\n  };\n  const document = parse(getIntrospectionQuery(optionsWithDefaults));\n  const result = executeSync({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || invariant(false);\n  return result.data;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { parseValue } from '../language/parser.mjs';\nimport {\n  assertInterfaceType,\n  assertNullableType,\n  assertObjectType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLUnionType,\n  isInputType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { introspectionTypes, TypeKind } from '../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../type/scalars.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nexport function buildClientSchema(introspection, options) {\n  (isObjectLike(introspection) && isObjectLike(introspection.__schema)) ||\n    devAssert(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${inspect(\n        introspection,\n      )}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = keyValMap(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [...specifiedScalarTypes, ...introspectionTypes]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(`Unknown type reference: ${inspect(typeRef)}.`);\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return assertObjectType(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return assertInterfaceType(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = inspect(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = inspect(implementingIntrospection);\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = inspect(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = inspect(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = inspect(inputObjectIntrospection);\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${inspect(typeIntrospection)}.`,\n      );\n    }\n\n    return keyValMap(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!isOutputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = inspect(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!isInputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type)\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../language/predicates.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLUnionType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport {\n  GraphQLDeprecatedDirective,\n  GraphQLDirective,\n  GraphQLSpecifiedByDirective,\n} from '../type/directives.mjs';\nimport {\n  introspectionTypes,\n  isIntrospectionType,\n} from '../type/introspection.mjs';\nimport {\n  isSpecifiedScalarType,\n  specifiedScalarTypes,\n} from '../type/scalars.mjs';\nimport { assertSchema, GraphQLSchema } from '../type/schema.mjs';\nimport { assertValidSDLExtension } from '../validation/validate.mjs';\nimport { getDirectiveValues } from '../execution/values.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nexport function extendSchema(schema, documentAST, options) {\n  assertSchema(schema);\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDLExtension(documentAST, schema);\n  }\n\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig\n    ? schema\n    : new GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nexport function extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n\n  for (const def of documentAST.definitions) {\n    if (def.kind === Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if (isTypeDefinitionNode(def)) {\n      typeDefs.push(def);\n    } else if (isTypeExtensionNode(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions\n        ? existingTypeExtensions.concat([def])\n        : [def];\n    } else if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (\n    Object.keys(typeExtensionsMap).length === 0 &&\n    typeDefs.length === 0 &&\n    directiveDefs.length === 0 &&\n    schemaExtensions.length === 0 &&\n    schemaDef == null\n  ) {\n    return schemaConfig;\n  }\n\n  const typeMap = Object.create(null);\n\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n\n    const name = typeNode.name.value;\n    typeMap[name] =\n      (_stdTypeMap$name = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name !== void 0\n        ? _stdTypeMap$name\n        : buildType(typeNode);\n  }\n\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription:\n      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions),\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description:\n      (_schemaDef = schemaDef) === null || _schemaDef === void 0\n        ? void 0\n        : (_schemaDef$descriptio = _schemaDef.description) === null ||\n          _schemaDef$descriptio === void 0\n        ? void 0\n        : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [\n      ...schemaConfig.directives.map(replaceDirective),\n      ...directiveDefs.map(buildDirective),\n    ],\n    extensions: Object.create(null),\n    astNode:\n      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0\n        ? _schemaDef2\n        : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid:\n      (_options$assumeValid =\n        options === null || options === void 0\n          ? void 0\n          : options.assumeValid) !== null && _options$assumeValid !== void 0\n        ? _options$assumeValid\n        : false,\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // @ts-expect-error\n      return new GraphQLList(replaceType(type.ofType));\n    }\n\n    if (isNonNullType(type)) {\n      // @ts-expect-error\n      return new GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new GraphQLDirective({\n      ...config,\n      args: mapValue(config.args, extendArg),\n    });\n  }\n\n  function extendNamedType(type) {\n    if (isIntrospectionType(type) || isSpecifiedScalarType(type)) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if (isScalarType(type)) {\n      return extendScalarType(type);\n    }\n\n    if (isObjectType(type)) {\n      return extendObjectType(type);\n    }\n\n    if (isInterfaceType(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if (isUnionType(type)) {\n      return extendUnionType(type);\n    }\n\n    if (isEnumType(type)) {\n      return extendEnumType(type);\n    }\n\n    if (isInputObjectType(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n    false || invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co !== void 0\n        ? _typeExtensionsMap$co\n        : [];\n    return new GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...mapValue(config.fields, (field) => ({\n          ...field,\n          type: replaceType(field.type),\n        })),\n        ...buildInputFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&\n      _typeExtensionsMap$ty !== void 0\n        ? _typeExtensionsMap$ty\n        : [];\n    return new GraphQLEnumType({\n      ...config,\n      values: { ...config.values, ...buildEnumValueMap(extensions) },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co2 !== void 0\n        ? _typeExtensionsMap$co2\n        : [];\n    let specifiedByURL = config.specifiedByURL;\n\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n\n      specifiedByURL =\n        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&\n        _getSpecifiedByURL !== void 0\n          ? _getSpecifiedByURL\n          : specifiedByURL;\n    }\n\n    return new GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co3 !== void 0\n        ? _typeExtensionsMap$co3\n        : [];\n    return new GraphQLObjectType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co4 !== void 0\n        ? _typeExtensionsMap$co4\n        : [];\n    return new GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co5 !== void 0\n        ? _typeExtensionsMap$co5\n        : [];\n    return new GraphQLUnionType({\n      ...config,\n      types: () => [\n        ...type.getTypes().map(replaceNamedType),\n        ...buildUnionTypes(extensions),\n      ],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && mapValue(field.args, extendArg),\n    };\n  }\n\n  function extendArg(arg) {\n    return { ...arg, type: replaceType(arg.type) };\n  }\n\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes =\n        /* c8 ignore next */\n        (_node$operationTypes = node.operationTypes) !== null &&\n        _node$operationTypes !== void 0\n          ? _node$operationTypes\n          : [];\n\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    const name = node.name.value;\n    const type =\n      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name2 !== void 0\n        ? _stdTypeMap$name2\n        : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === Kind.LIST_TYPE) {\n      return new GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === Kind.NON_NULL_TYPE) {\n      return new GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var _node$description;\n\n    return new GraphQLDirective({\n      name: node.name.value,\n      description:\n        (_node$description = node.description) === null ||\n        _node$description === void 0\n          ? void 0\n          : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({ value }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node,\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields =\n        /* c8 ignore next */\n        (_node$fields = node.fields) !== null && _node$fields !== void 0\n          ? _node$fields\n          : [];\n\n      for (const field of nodeFields) {\n        var _field$description;\n\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description:\n            (_field$description = field.description) === null ||\n            _field$description === void 0\n              ? void 0\n              : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes =\n      /* c8 ignore next */\n      args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description:\n          (_arg$description = arg.description) === null ||\n          _arg$description === void 0\n            ? void 0\n            : _arg$description.value,\n        defaultValue: valueFromAST(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg,\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes =\n        /* c8 ignore next */\n        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0\n          ? _node$fields2\n          : [];\n\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description:\n            (_field$description2 = field.description) === null ||\n            _field$description2 === void 0\n              ? void 0\n              : _field$description2.value,\n          defaultValue: valueFromAST(field.defaultValue, type),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes =\n        /* c8 ignore next */\n        (_node$values = node.values) !== null && _node$values !== void 0\n          ? _node$values\n          : [];\n\n      for (const value of valuesNodes) {\n        var _value$description;\n\n        enumValueMap[value.name.value] = {\n          description:\n            (_value$description = value.description) === null ||\n            _value$description === void 0\n              ? void 0\n              : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value,\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$interfaces$map, _node$interfaces;\n\n        return (\n          /* c8 ignore next */\n          (_node$interfaces$map =\n            (_node$interfaces = node.interfaces) === null ||\n            _node$interfaces === void 0\n              ? void 0\n              : _node$interfaces.map(getNamedType)) !== null &&\n            _node$interfaces$map !== void 0\n            ? _node$interfaces$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$types$map, _node$types;\n\n        return (\n          /* c8 ignore next */\n          (_node$types$map =\n            (_node$types = node.types) === null || _node$types === void 0\n              ? void 0\n              : _node$types.map(getNamedType)) !== null &&\n            _node$types$map !== void 0\n            ? _node$types$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    const name = astNode.name.value;\n    const extensionASTNodes =\n      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&\n      _typeExtensionsMap$na !== void 0\n        ? _typeExtensionsMap$na\n        : [];\n\n    switch (astNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION: {\n        var _astNode$description;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLObjectType({\n          name,\n          description:\n            (_astNode$description = astNode.description) === null ||\n            _astNode$description === void 0\n              ? void 0\n              : _astNode$description.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INTERFACE_TYPE_DEFINITION: {\n        var _astNode$description2;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInterfaceType({\n          name,\n          description:\n            (_astNode$description2 = astNode.description) === null ||\n            _astNode$description2 === void 0\n              ? void 0\n              : _astNode$description2.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.ENUM_TYPE_DEFINITION: {\n        var _astNode$description3;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLEnumType({\n          name,\n          description:\n            (_astNode$description3 = astNode.description) === null ||\n            _astNode$description3 === void 0\n              ? void 0\n              : _astNode$description3.value,\n          values: buildEnumValueMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.UNION_TYPE_DEFINITION: {\n        var _astNode$description4;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLUnionType({\n          name,\n          description:\n            (_astNode$description4 = astNode.description) === null ||\n            _astNode$description4 === void 0\n              ? void 0\n              : _astNode$description4.value,\n          types: () => buildUnionTypes(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.SCALAR_TYPE_DEFINITION: {\n        var _astNode$description5;\n\n        return new GraphQLScalarType({\n          name,\n          description:\n            (_astNode$description5 = astNode.description) === null ||\n            _astNode$description5 === void 0\n              ? void 0\n              : _astNode$description5.value,\n          specifiedByURL: getSpecifiedByURL(astNode),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION: {\n        var _astNode$description6;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInputObjectType({\n          name,\n          description:\n            (_astNode$description6 = astNode.description) === null ||\n            _astNode$description6 === void 0\n              ? void 0\n              : _astNode$description6.value,\n          fields: () => buildInputFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n    }\n  }\n}\nconst stdTypeMap = keyMap(\n  [...specifiedScalarTypes, ...introspectionTypes],\n  (type) => type.name,\n);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0\n    ? void 0\n    : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = getDirectiveValues(GraphQLSpecifiedByDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0\n    ? void 0\n    : specifiedBy.url;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { specifiedDirectives } from '../type/directives.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { assertValidSDL } from '../validation/validate.mjs';\nimport { extendSchemaImpl } from './extendSchema.mjs';\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nexport function buildASTSchema(documentAST, options) {\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDL(documentAST);\n  }\n\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false,\n  };\n  const config = extendSchemaImpl(emptySchemaConfig, documentAST, options);\n\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  const directives = [\n    ...config.directives, // If specified directives were not explicitly declared, add them.\n    ...specifiedDirectives.filter((stdDirective) =>\n      config.directives.every(\n        (directive) => directive.name !== stdDirective.name,\n      ),\n    ),\n  ];\n  return new GraphQLSchema({ ...config, directives });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nexport function buildSchema(source, options) {\n  const document = parse(source, {\n    noLocation:\n      options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables:\n      options === null || options === void 0\n        ? void 0\n        : options.allowLegacyFragmentVariables,\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL:\n      options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  });\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { naturalCompare } from '../jsutils/naturalCompare.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLUnionType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\n\nexport function lexicographicSortSchema(schema) {\n  const schemaConfig = schema.toConfig();\n  const typeMap = keyValMap(\n    sortByName(schemaConfig.types),\n    (type) => type.name,\n    sortNamedType,\n  );\n  return new GraphQLSchema({\n    ...schemaConfig,\n    types: Object.values(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription),\n  });\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // @ts-expect-error\n      return new GraphQLList(replaceType(type.ofType));\n    } else if (isNonNullType(type)) {\n      // @ts-expect-error\n      return new GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME: TS Conversion\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    const config = directive.toConfig();\n    return new GraphQLDirective({\n      ...config,\n      locations: sortBy(config.locations, (x) => x),\n      args: sortArgs(config.args),\n    });\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, (arg) => ({ ...arg, type: replaceType(arg.type) }));\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && sortArgs(field.args),\n    }));\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n    }));\n  }\n\n  function sortTypes(array) {\n    return sortByName(array).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (isScalarType(type) || isIntrospectionType(type)) {\n      return type;\n    }\n\n    if (isObjectType(type)) {\n      const config = type.toConfig();\n      return new GraphQLObjectType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if (isInterfaceType(type)) {\n      const config = type.toConfig();\n      return new GraphQLInterfaceType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if (isUnionType(type)) {\n      const config = type.toConfig();\n      return new GraphQLUnionType({\n        ...config,\n        types: () => sortTypes(config.types),\n      });\n    }\n\n    if (isEnumType(type)) {\n      const config = type.toConfig();\n      return new GraphQLEnumType({\n        ...config,\n        values: sortObjMap(config.values, (value) => value),\n      });\n    }\n\n    if (isInputObjectType(type)) {\n      const config = type.toConfig();\n      return new GraphQLInputObjectType({\n        ...config,\n        fields: () => sortInputFields(config.fields),\n      });\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n\n    false || invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  const sortedMap = Object.create(null);\n\n  for (const key of Object.keys(map).sort(naturalCompare)) {\n    sortedMap[key] = sortValueFn(map[key]);\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, (obj) => obj.name);\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort((obj1, obj2) => {\n    const key1 = mapToKey(obj1);\n    const key2 = mapToKey(obj2);\n    return naturalCompare(key1, key2);\n  });\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isPrintableAsBlockString } from '../language/blockString.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport {\n  DEFAULT_DEPRECATION_REASON,\n  isSpecifiedDirective,\n} from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nexport function printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !isSpecifiedDirective(n),\n    isDefinedType,\n  );\n}\nexport function printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type) {\n  if (isScalarType(type)) {\n    return printScalar(type);\n  }\n\n  if (isObjectType(type)) {\n    return printObject(type);\n  }\n\n  if (isInterfaceType(type)) {\n    return printInterface(type);\n  }\n\n  if (isUnionType(type)) {\n    return printUnion(type);\n  }\n\n  if (isEnumType(type)) {\n    return printEnum(type);\n  }\n\n  if (isInputObjectType(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = astFromValue(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${print(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== DEFAULT_DEPRECATION_REASON) {\n    const astValue = print({\n      kind: Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = print({\n    kind: Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = print({\n    kind: Kind.STRING,\n    value: description,\n    block: isPrintableAsBlockString(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n","import { Kind } from '../language/kinds.mjs';\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\n\nexport function concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions,\n  };\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\n\nexport function separateOperations(documentAST) {\n  const operations = [];\n  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (const definitionNode of documentAST.definitions) {\n    switch (definitionNode.kind) {\n      case Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(\n          definitionNode.selectionSet,\n        );\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  const separatedDocumentASTs = Object.create(null);\n\n  for (const operation of operations) {\n    const dependencies = new Set();\n\n    for (const fragmentName of collectDependencies(operation.selectionSet)) {\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(\n        (node) =>\n          node === operation ||\n          (node.kind === Kind.FRAGMENT_DEFINITION &&\n            dependencies.has(node.name.value)),\n      ),\n    };\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    const immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (const toName of immediateDeps) {\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  const dependencies = [];\n  visit(selectionSet, {\n    FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    },\n  });\n  return dependencies;\n}\n","import { printBlockString } from '../language/blockString.mjs';\nimport { isPunctuatorTokenKind, Lexer } from '../language/lexer.mjs';\nimport { isSource, Source } from '../language/source.mjs';\nimport { TokenKind } from '../language/tokenKind.mjs';\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * ```graphql\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n * ```\n *\n * SDL example:\n *\n * ```graphql\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n * ```\n */\n\nexport function stripIgnoredCharacters(source) {\n  const sourceObj = isSource(source) ? source : new Source(source);\n  const body = sourceObj.body;\n  const lexer = new Lexer(sourceObj);\n  let strippedBody = '';\n  let wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== TokenKind.EOF) {\n    const currentToken = lexer.token;\n    const tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    const isNonPunctuator = !isPunctuatorTokenKind(currentToken.kind);\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (isNonPunctuator || currentToken.kind === TokenKind.SPREAD) {\n        strippedBody += ' ';\n      }\n    }\n\n    const tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === TokenKind.BLOCK_STRING) {\n      strippedBody += printBlockString(currentToken.value, {\n        minimize: true,\n      });\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { assertName } from '../type/assertName.mjs';\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nexport function assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    assertName(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { print } from '../language/printer.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNamedType,\n  isNonNullType,\n  isObjectType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nimport { sortValueNode } from './sortValueNode.mjs';\nvar BreakingChangeType;\n\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =\n    'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =\n    'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =\n    'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =\n    'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =\n    'DIRECTIVE_LOCATION_REMOVED';\n})(BreakingChangeType || (BreakingChangeType = {}));\n\nexport { BreakingChangeType };\nvar DangerousChangeType;\n\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =\n    'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =\n    'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(DangerousChangeType || (DangerousChangeType = {}));\n\nexport { DangerousChangeType };\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in BreakingChangeType,\n  );\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in DangerousChangeType,\n  );\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [\n    ...findTypeChanges(oldSchema, newSchema),\n    ...findDirectiveChanges(oldSchema, newSchema),\n  ];\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(\n    oldSchema.getDirectives(),\n    newSchema.getDirectives(),\n  );\n\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`,\n    });\n  }\n\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n\n    for (const newArg of argsDiff.added) {\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,\n        });\n      }\n    }\n\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`,\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(\n    Object.values(oldSchema.getTypeMap()),\n    Object.values(newSchema.getTypeMap()),\n  );\n\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: isSpecifiedScalarType(oldType)\n        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`\n        : `${oldType.name} was removed.`,\n    });\n  }\n\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if (isEnumType(oldType) && isEnumType(newType)) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if (isUnionType(oldType) && isUnionType(newType)) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if (isInputObjectType(oldType) && isInputObjectType(newType)) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if (isObjectType(oldType) && isObjectType(newType)) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (isInterfaceType(oldType) && isInterfaceType(newType)) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description:\n          `${oldType.name} changed from ` +\n          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const newField of fieldsDiff.added) {\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    }\n  }\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,\n    });\n  }\n\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,\n    });\n  }\n\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldArg.type,\n      newArg.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +\n          `${String(oldArg.type)} to ${String(newArg.type)}.`,\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,\n          });\n        }\n      }\n    }\n  }\n\n  for (const newArg of argsDiff.added) {\n    if (isRequiredArgument(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      (isListType(newType) &&\n        isChangeSafeForObjectOrInterfaceField(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from nullable to non-null of the same underlying type is safe\n      (isNonNullType(newType) &&\n        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (\n      isNonNullType(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)\n    );\n  }\n\n  return (\n    // if they're both named types, see if their names are equivalent\n    (isNamedType(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe\n    (isNonNullType(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (\n      isListType(newType) &&\n      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      (isNonNullType(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from non-null to nullable of the same underlying type is safe\n      (!isNonNullType(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  }\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction stringifyValue(value, type) {\n  const ast = astFromValue(value, type);\n  ast != null || invariant(false);\n  return print(sortValueNode(ast));\n}\n\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = keyMap(oldArray, ({ name }) => name);\n  const newMap = keyMap(newArray, ({ name }) => name);\n\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n\n  return {\n    added,\n    persisted,\n    removed,\n  };\n}\n","// Produce the GraphQL query recommended for a full schema introspection.\nexport { getIntrospectionQuery } from './getIntrospectionQuery.mjs';\n// Gets the target Operation from a Document.\nexport { getOperationAST } from './getOperationAST.mjs'; // Gets the Type for the target Operation AST.\n\nexport { getOperationRootType } from './getOperationRootType.mjs'; // Convert a GraphQLSchema to an IntrospectionQuery.\n\nexport { introspectionFromSchema } from './introspectionFromSchema.mjs'; // Build a GraphQLSchema from an introspection result.\n\nexport { buildClientSchema } from './buildClientSchema.mjs'; // Build a GraphQLSchema from GraphQL Schema language.\n\nexport { buildASTSchema, buildSchema } from './buildASTSchema.mjs';\n// Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\nexport { extendSchema } from './extendSchema.mjs'; // Sort a GraphQLSchema.\n\nexport { lexicographicSortSchema } from './lexicographicSortSchema.mjs'; // Print a GraphQLSchema to GraphQL Schema language.\n\nexport {\n  printSchema,\n  printType,\n  printIntrospectionSchema,\n} from './printSchema.mjs'; // Create a GraphQLType from a GraphQL language AST.\n\nexport { typeFromAST } from './typeFromAST.mjs'; // Create a JavaScript value from a GraphQL language AST with a type.\n\nexport { valueFromAST } from './valueFromAST.mjs'; // Create a JavaScript value from a GraphQL language AST without a type.\n\nexport { valueFromASTUntyped } from './valueFromASTUntyped.mjs'; // Create a GraphQL language AST from a JavaScript value.\n\nexport { astFromValue } from './astFromValue.mjs'; // A helper to use within recursive-descent visitors which need to be aware of the GraphQL type system.\n\nexport { TypeInfo, visitWithTypeInfo } from './TypeInfo.mjs'; // Coerces a JavaScript value to a GraphQL type, or produces errors.\n\nexport { coerceInputValue } from './coerceInputValue.mjs'; // Concatenates multiple AST together.\n\nexport { concatAST } from './concatAST.mjs'; // Separates an AST into an AST per Operation.\n\nexport { separateOperations } from './separateOperations.mjs'; // Strips characters that are not significant to the validity or execution of a GraphQL document.\n\nexport { stripIgnoredCharacters } from './stripIgnoredCharacters.mjs'; // Comparators for types\n\nexport {\n  isEqualType,\n  isTypeSubTypeOf,\n  doTypesOverlap,\n} from './typeComparators.mjs'; // Asserts that a string is a valid GraphQL name\n\nexport { assertValidName, isValidNameError } from './assertValidName.mjs'; // Compares two GraphQLSchemas and detects breaking changes.\n\nexport {\n  BreakingChangeType,\n  DangerousChangeType,\n  findBreakingChanges,\n  findDangerousChanges,\n} from './findBreakingChanges.mjs';\n","/**\n * GraphQL.js provides a reference implementation for the GraphQL specification\n * but is also a useful utility for operating on GraphQL files and building\n * sophisticated tools.\n *\n * This primary module exports a general purpose function for fulfilling all\n * steps of the GraphQL specification in a single operation, but also includes\n * utilities for every part of the GraphQL specification:\n *\n *   - Parsing the GraphQL language.\n *   - Building a GraphQL type schema.\n *   - Validating a GraphQL request against a type schema.\n *   - Executing a GraphQL request against a type schema.\n *\n * This also includes utility functions for operating on GraphQL types and\n * GraphQL documents to facilitate building tools.\n *\n * You may also import from each sub-directory directly. For example, the\n * following two import statements are equivalent:\n *\n * ```ts\n * import { parse } from 'graphql';\n * import { parse } from 'graphql/language';\n * ```\n *\n * @packageDocumentation\n */\n// The GraphQL.js version info.\nexport { version, versionInfo } from './version.mjs'; // The primary entry point into fulfilling a GraphQL request.\n\nexport { graphql, graphqlSync } from './graphql.mjs'; // Create and operate on GraphQL type definitions and schema.\n\nexport {\n  resolveObjMapThunk,\n  resolveReadonlyArrayThunk, // Definitions\n  GraphQLSchema,\n  GraphQLDirective,\n  GraphQLScalarType,\n  GraphQLObjectType,\n  GraphQLInterfaceType,\n  GraphQLUnionType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLNonNull, // Standard GraphQL Scalars\n  specifiedScalarTypes,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLString,\n  GraphQLBoolean,\n  GraphQLID, // Int boundaries constants\n  GRAPHQL_MAX_INT,\n  GRAPHQL_MIN_INT, // Built-in Directives defined by the Spec\n  specifiedDirectives,\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective, // \"Enum\" of Type Kinds\n  TypeKind, // Constant Deprecation Reason\n  DEFAULT_DEPRECATION_REASON, // GraphQL Types for introspection.\n  introspectionTypes,\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind, // Meta-field definitions.\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef, // Predicates\n  isSchema,\n  isDirective,\n  isType,\n  isScalarType,\n  isObjectType,\n  isInterfaceType,\n  isUnionType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n  isInputType,\n  isOutputType,\n  isLeafType,\n  isCompositeType,\n  isAbstractType,\n  isWrappingType,\n  isNullableType,\n  isNamedType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isSpecifiedScalarType,\n  isIntrospectionType,\n  isSpecifiedDirective, // Assertions\n  assertSchema,\n  assertDirective,\n  assertType,\n  assertScalarType,\n  assertObjectType,\n  assertInterfaceType,\n  assertUnionType,\n  assertEnumType,\n  assertInputObjectType,\n  assertListType,\n  assertNonNullType,\n  assertInputType,\n  assertOutputType,\n  assertLeafType,\n  assertCompositeType,\n  assertAbstractType,\n  assertWrappingType,\n  assertNullableType,\n  assertNamedType, // Un-modifiers\n  getNullableType,\n  getNamedType, // Validate GraphQL schema.\n  validateSchema,\n  assertValidSchema, // Upholds the spec rules about naming.\n  assertName,\n  assertEnumValueName,\n} from './type/index.mjs';\n// Parse and operate on GraphQL language source files.\nexport {\n  Token,\n  Source,\n  Location,\n  OperationTypeNode,\n  getLocation, // Print source location.\n  printLocation,\n  printSourceLocation, // Lex\n  Lexer,\n  TokenKind, // Parse\n  parse,\n  parseValue,\n  parseConstValue,\n  parseType, // Print\n  print, // Visit\n  visit,\n  visitInParallel,\n  getVisitFn,\n  getEnterLeaveForKind,\n  BREAK,\n  Kind,\n  DirectiveLocation, // Predicates\n  isDefinitionNode,\n  isExecutableDefinitionNode,\n  isSelectionNode,\n  isValueNode,\n  isConstValueNode,\n  isTypeNode,\n  isTypeSystemDefinitionNode,\n  isTypeDefinitionNode,\n  isTypeSystemExtensionNode,\n  isTypeExtensionNode,\n} from './language/index.mjs';\n// Execute GraphQL queries.\nexport {\n  execute,\n  executeSync,\n  defaultFieldResolver,\n  defaultTypeResolver,\n  responsePathAsArray,\n  getArgumentValues,\n  getVariableValues,\n  getDirectiveValues,\n  subscribe,\n  createSourceEventStream,\n} from './execution/index.mjs';\n// Validate GraphQL documents.\nexport {\n  validate,\n  ValidationContext, // All validation rules in the GraphQL Specification.\n  specifiedRules, // Individual validation rules.\n  ExecutableDefinitionsRule,\n  FieldsOnCorrectTypeRule,\n  FragmentsOnCompositeTypesRule,\n  KnownArgumentNamesRule,\n  KnownDirectivesRule,\n  KnownFragmentNamesRule,\n  KnownTypeNamesRule,\n  LoneAnonymousOperationRule,\n  NoFragmentCyclesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedFragmentsRule,\n  NoUnusedVariablesRule,\n  OverlappingFieldsCanBeMergedRule,\n  PossibleFragmentSpreadsRule,\n  ProvidedRequiredArgumentsRule,\n  ScalarLeafsRule,\n  SingleFieldSubscriptionsRule,\n  UniqueArgumentNamesRule,\n  UniqueDirectivesPerLocationRule,\n  UniqueFragmentNamesRule,\n  UniqueInputFieldNamesRule,\n  UniqueOperationNamesRule,\n  UniqueVariableNamesRule,\n  ValuesOfCorrectTypeRule,\n  VariablesAreInputTypesRule,\n  VariablesInAllowedPositionRule, // SDL-specific validation rules\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  PossibleTypeExtensionsRule, // Custom validation rules\n  NoDeprecatedCustomRule,\n  NoSchemaIntrospectionCustomRule,\n} from './validation/index.mjs';\n// Create, format, and print GraphQL errors.\nexport {\n  GraphQLError,\n  syntaxError,\n  locatedError,\n  printError,\n  formatError,\n} from './error/index.mjs';\n// Utilities for operating on GraphQL type schema and parsed sources.\nexport {\n  // Produce the GraphQL query recommended for a full schema introspection.\n  // Accepts optional IntrospectionOptions.\n  getIntrospectionQuery, // Gets the target Operation from a Document.\n  getOperationAST, // Gets the Type for the target Operation AST.\n  getOperationRootType, // Convert a GraphQLSchema to an IntrospectionQuery.\n  introspectionFromSchema, // Build a GraphQLSchema from an introspection result.\n  buildClientSchema, // Build a GraphQLSchema from a parsed GraphQL Schema language AST.\n  buildASTSchema, // Build a GraphQLSchema from a GraphQL schema language document.\n  buildSchema, // Extends an existing GraphQLSchema from a parsed GraphQL Schema language AST.\n  extendSchema, // Sort a GraphQLSchema.\n  lexicographicSortSchema, // Print a GraphQLSchema to GraphQL Schema language.\n  printSchema, // Print a GraphQLType to GraphQL Schema language.\n  printType, // Prints the built-in introspection schema in the Schema Language format.\n  printIntrospectionSchema, // Create a GraphQLType from a GraphQL language AST.\n  typeFromAST, // Create a JavaScript value from a GraphQL language AST with a Type.\n  valueFromAST, // Create a JavaScript value from a GraphQL language AST without a Type.\n  valueFromASTUntyped, // Create a GraphQL language AST from a JavaScript value.\n  astFromValue, // A helper to use within recursive-descent visitors which need to be aware of the GraphQL type system.\n  TypeInfo,\n  visitWithTypeInfo, // Coerces a JavaScript value to a GraphQL type, or produces errors.\n  coerceInputValue, // Concatenates multiple AST together.\n  concatAST, // Separates an AST into an AST per Operation.\n  separateOperations, // Strips characters that are not significant to the validity or execution of a GraphQL document.\n  stripIgnoredCharacters, // Comparators for types\n  isEqualType,\n  isTypeSubTypeOf,\n  doTypesOverlap, // Asserts a string is a valid GraphQL name.\n  assertValidName, // Determine if a string is a valid GraphQL name.\n  isValidNameError, // Compares two GraphQLSchemas and detects breaking changes.\n  BreakingChangeType,\n  DangerousChangeType,\n  findBreakingChanges,\n  findDangerousChanges,\n} from './utilities/index.mjs';\n","export * from '~/core'\nexport * from '../browser'\n","const POSITIONALS_EXP = /(%?)(%([sdijo]))/g\n\nfunction serializePositional(positional: any, flag: string): any {\n  switch (flag) {\n    // Strings.\n    case 's':\n      return positional\n\n    // Digits.\n    case 'd':\n    case 'i':\n      return Number(positional)\n\n    // JSON.\n    case 'j':\n      return JSON.stringify(positional)\n\n    // Objects.\n    case 'o': {\n      // Preserve stings to prevent extra quotes around them.\n      if (typeof positional === 'string') {\n        return positional\n      }\n\n      const json = JSON.stringify(positional)\n\n      // If the positional isn't serializable, return it as-is.\n      if (json === '{}' || json === '[]' || /^\\[object .+?\\]$/.test(json)) {\n        return positional\n      }\n\n      return json\n    }\n  }\n}\n\nexport function format(message: string, ...positionals: any[]): string {\n  if (positionals.length === 0) {\n    return message\n  }\n\n  let positionalIndex = 0\n  let formattedMessage = message.replace(\n    POSITIONALS_EXP,\n    (match, isEscaped, _, flag) => {\n      const positional = positionals[positionalIndex]\n      const value = serializePositional(positional, flag)\n\n      if (!isEscaped) {\n        positionalIndex++\n        return value\n      }\n\n      return match\n    }\n  )\n\n  // Append unresolved positionals to string as-is.\n  if (positionalIndex < positionals.length) {\n    formattedMessage += ` ${positionals.slice(positionalIndex).join(' ')}`\n  }\n\n  formattedMessage = formattedMessage.replace(/%{2,2}/g, '%')\n\n  return formattedMessage\n}\n","import { format } from './format'\n\nconst STACK_FRAMES_TO_IGNORE = 2\n\n/**\n * Remove the \"outvariant\" package trace from the given error.\n * This scopes down the error stack to the relevant parts\n * when used in other applications.\n */\nfunction cleanErrorStack(error: Error): void {\n  if (!error.stack) {\n    return\n  }\n\n  const nextStack = error.stack.split('\\n')\n  nextStack.splice(1, STACK_FRAMES_TO_IGNORE)\n  error.stack = nextStack.join('\\n')\n}\n\nexport class InvariantError extends Error {\n  name = 'Invariant Violation'\n\n  constructor(public readonly message: string, ...positionals: any[]) {\n    super(message)\n    this.message = format(message, ...positionals)\n    cleanErrorStack(this)\n  }\n}\n\nexport interface CustomErrorConstructor {\n  new (message: string): Error\n}\n\nexport interface CustomErrorFactory {\n  (message: string): Error\n}\n\nexport type CustomError = CustomErrorConstructor | CustomErrorFactory\n\ntype Invariant = {\n  (\n    predicate: unknown,\n    message: string,\n    ...positionals: any[]\n  ): asserts predicate\n\n  as(\n    ErrorConstructor: CustomError,\n    predicate: unknown,\n    message: string,\n    ...positionals: unknown[]\n  ): asserts predicate\n}\n\nexport const invariant: Invariant = (\n  predicate,\n  message,\n  ...positionals\n): asserts predicate => {\n  if (!predicate) {\n    throw new InvariantError(message, ...positionals)\n  }\n}\n\ninvariant.as = (ErrorConstructor, predicate, message, ...positionals) => {\n  if (!predicate) {\n    const formatMessage =\n      positionals.length === 0 ? message : format(message, ...positionals)\n    let error: Error\n\n    try {\n      error = Reflect.construct(ErrorConstructor as CustomErrorConstructor, [\n        formatMessage,\n      ])\n    } catch (err) {\n      error = (ErrorConstructor as CustomErrorFactory)(formatMessage)\n    }\n\n    throw error\n  }\n}\n","import { format } from 'outvariant'\n\nconst LIBRARY_PREFIX = '[MSW]'\n\n/**\n * Formats a given message by appending the library's prefix string.\n */\nfunction formatMessage(message: string, ...positionals: any[]): string {\n  const interpolatedMessage = format(message, ...positionals)\n  return `${LIBRARY_PREFIX} ${interpolatedMessage}`\n}\n\n/**\n * Prints a library-specific warning.\n */\nfunction warn(message: string, ...positionals: any[]): void {\n  // eslint-disable-next-line no-console\n  console.warn(formatMessage(message, ...positionals))\n}\n\n/**\n * Prints a library-specific error.\n */\nfunction error(message: string, ...positionals: any[]): void {\n  // eslint-disable-next-line no-console\n  console.error(formatMessage(message, ...positionals))\n}\n\nexport const devUtils = {\n  formatMessage,\n  warn,\n  error,\n}\n\n/**\n * Internal error instance.\n * Used to differentiate the library errors that must be forwarded\n * to the user from the unhandled exceptions. Use this if you don't\n * wish for the error to be coerced to a 500 fallback response.\n */\nexport class InternalError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'InternalError'\n  }\n}\n","import { invariant } from 'outvariant'\nimport { devUtils } from './devUtils'\n\nexport function checkGlobals() {\n  /**\n   * MSW expects the \"URL\" constructor to be defined.\n   * It's not present in React Native so suggest a polyfill\n   * instead of failing silently.\n   * @see https://github.com/mswjs/msw/issues/1408\n   */\n  invariant(\n    typeof URL !== 'undefined',\n    devUtils.formatMessage(\n      `Global \"URL\" class is not defined. This likely means that you're running MSW in an environment that doesn't support all Node.js standard API (e.g. React Native). If that's the case, please use an appropriate polyfill for the \"URL\" class, like \"react-native-url-polyfill\".`,\n    ),\n  )\n}\n","import type { Emitter } from './Emitter'\n\nexport class MemoryLeakError extends Error {\n  constructor(\n    public readonly emitter: Emitter<any>,\n    public readonly type: string | number | symbol,\n    public readonly count: number\n  ) {\n    super(\n      `Possible EventEmitter memory leak detected. ${count} ${type.toString()} listeners added. Use emitter.setMaxListeners() to increase limit`\n    )\n    this.name = 'MaxListenersExceededWarning'\n  }\n}\n","import { MemoryLeakError } from './MemoryLeakError'\n\nexport type EventMap = {\n  [eventName: string]: Array<unknown>\n}\n\nexport type InternalEventNames = 'newListener' | 'removeListener'\n\nexport type InternalListener<Events extends EventMap> = Listener<\n  [eventName: keyof Events, listener: Listener<Array<unknown>>]\n>\n\nexport type Listener<Data extends Array<unknown>> = (...data: Data) => void\n\n/**\n * Node.js-compatible implementation of `EventEmitter`.\n *\n * @example\n * const emitter = new Emitter<{ hello: [string] }>()\n * emitter.on('hello', (name) => console.log(name))\n * emitter.emit('hello', 'John')\n */\nexport class Emitter<Events extends EventMap> {\n  private events: Map<keyof Events, Array<Listener<any>>>\n  private maxListeners: number\n  private hasWarnedAboutPotentialMemoryLeak: boolean\n\n  static defaultMaxListeners = 10\n\n  static listenerCount<Events extends EventMap>(\n    emitter: Emitter<EventMap>,\n    eventName: keyof Events\n  ): number {\n    return emitter.listenerCount<any>(eventName)\n  }\n\n  constructor() {\n    this.events = new Map()\n    this.maxListeners = Emitter.defaultMaxListeners\n    this.hasWarnedAboutPotentialMemoryLeak = false\n  }\n\n  private _emitInternalEvent(\n    internalEventName: InternalEventNames,\n    eventName: keyof Events,\n    listener: Listener<Array<unknown>>\n  ): void {\n    this.emit(\n      internalEventName,\n      // Anything to make TypeScript happy.\n      ...([eventName, listener] as Events['newListener'] &\n        Events['removeListener'])\n    )\n  }\n\n  private _getListeners<EventName extends keyof Events>(\n    eventName: EventName\n  ): Array<Listener<Array<unknown>>> {\n    // Always return a copy of the listeners array\n    // so they are fixed at the time of the \"_getListeners\" call.\n    return Array.prototype.concat.apply([], this.events.get(eventName)) || []\n  }\n\n  private _removeListener<EventName extends keyof Events>(\n    listeners: Array<Listener<Events[EventName]>>,\n    listener: Listener<Events[EventName]>\n  ): Array<Listener<Events[EventName]>> {\n    const index = listeners.indexOf(listener)\n\n    if (index > -1) {\n      listeners.splice(index, 1)\n    }\n\n    return []\n  }\n\n  private _wrapOnceListener<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): Listener<Events[EventName]> {\n    const onceListener = (...data: Events[keyof Events]) => {\n      this.removeListener(eventName, onceListener)\n\n      /**\n       * @note Return the result of the original listener.\n       * This way this wrapped preserves listeners that are async.\n       */\n      return listener.apply(this, data)\n    }\n\n    // Inherit the name of the original listener.\n    Object.defineProperty(onceListener, 'name', { value: listener.name })\n\n    return onceListener\n  }\n\n  public setMaxListeners(maxListeners: number): this {\n    this.maxListeners = maxListeners\n    return this\n  }\n\n  /**\n   * Returns the current max listener value for the `Emitter` which is\n   * either set by `emitter.setMaxListeners(n)` or defaults to\n   * `Emitter.defaultMaxListeners`.\n   */\n  public getMaxListeners(): number {\n    return this.maxListeners\n  }\n\n  /**\n   * Returns an array listing the events for which the emitter has registered listeners.\n   * The values in the array will be strings or Symbols.\n   */\n  public eventNames(): Array<keyof Events> {\n    return Array.from(this.events.keys())\n  }\n\n  /**\n   * Synchronously calls each of the listeners registered for the event named `eventName`,\n   * in the order they were registered, passing the supplied arguments to each.\n   * Returns `true` if the event has listeners, `false` otherwise.\n   *\n   * @example\n   * const emitter = new Emitter<{ hello: [string] }>()\n   * emitter.emit('hello', 'John')\n   */\n  public emit<EventName extends keyof Events>(\n    eventName: EventName,\n    ...data: Events[EventName]\n  ): boolean {\n    const listeners = this._getListeners(eventName)\n    listeners.forEach((listener) => {\n      listener.apply(this, data)\n    })\n\n    return listeners.length > 0\n  }\n\n  public addListener(\n    eventName: InternalEventNames,\n    listener: InternalListener<Events>\n  ): this\n  public addListener<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): this\n  public addListener(\n    eventName: InternalEventNames | keyof Events,\n    listener: InternalListener<Events> | Listener<Events[any]>\n  ): this {\n    // Emit the `newListener` event before adding the listener.\n    this._emitInternalEvent('newListener', eventName, listener)\n\n    const nextListeners = this._getListeners(eventName).concat(listener)\n    this.events.set(eventName, nextListeners)\n\n    if (\n      this.maxListeners > 0 &&\n      this.listenerCount(eventName) > this.maxListeners &&\n      !this.hasWarnedAboutPotentialMemoryLeak\n    ) {\n      this.hasWarnedAboutPotentialMemoryLeak = true\n\n      const memoryLeakWarning = new MemoryLeakError(\n        this,\n        eventName,\n        this.listenerCount(eventName)\n      )\n      console.warn(memoryLeakWarning)\n    }\n\n    return this\n  }\n\n  public on(\n    eventName: InternalEventNames,\n    listener: InternalListener<Events>\n  ): this\n  public on<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): this\n  public on<EventName extends keyof Events>(\n    eventName: 'removeListener' | EventName,\n    listener: Listener<any>\n  ): this {\n    return this.addListener(eventName, listener)\n  }\n\n  public once(\n    eventName: InternalEventNames,\n    listener: InternalListener<Events>\n  ): this\n  public once<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): this\n  public once<EventName extends keyof Events>(\n    eventName: InternalEventNames | EventName,\n    listener: Listener<any>\n  ): this {\n    return this.addListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    )\n  }\n\n  public prependListener(\n    eventName: InternalEventNames,\n    listener: InternalListener<Events>\n  ): this\n  public prependListener<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): this\n  public prependListener(\n    eventName: InternalEventNames | keyof Events,\n    listener: Listener<any>\n  ): this {\n    const listeners = this._getListeners(eventName)\n\n    if (listeners.length > 0) {\n      const nextListeners = [listener].concat(listeners)\n      this.events.set(eventName, nextListeners)\n    } else {\n      this.events.set(eventName, listeners.concat(listener))\n    }\n\n    return this\n  }\n\n  public prependOnceListener(\n    eventName: InternalEventNames,\n    listener: InternalListener<Events>\n  ): this\n  public prependOnceListener<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): this\n  public prependOnceListener(\n    eventName: InternalEventNames | keyof Events,\n    listener: Listener<any>\n  ): this {\n    return this.prependListener(\n      eventName,\n      this._wrapOnceListener(eventName, listener)\n    )\n  }\n\n  public removeListener(\n    eventName: InternalEventNames,\n    listener: InternalListener<Events>\n  ): this\n  public removeListener<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): this\n  public removeListener(\n    eventName: InternalEventNames | keyof Events,\n    listener: Listener<any>\n  ): this {\n    const listeners = this._getListeners(eventName)\n\n    if (listeners.length > 0) {\n      this._removeListener(listeners, listener)\n      this.events.set(eventName, listeners)\n\n      // Emit the `removeListener` event after removing the listener.\n      this._emitInternalEvent('removeListener', eventName, listener)\n    }\n\n    return this\n  }\n\n  public off(\n    eventName: InternalEventNames,\n    listener: InternalListener<Events>\n  ): this\n  public off<EventName extends keyof Events>(\n    eventName: EventName,\n    listener: Listener<Events[EventName]>\n  ): this\n  /**\n   * Alias for `emitter.removeListener()`.\n   *\n   * @example\n   * emitter.off('hello', listener)\n   */\n  public off(\n    eventName: InternalEventNames | keyof Events,\n    listener: Listener<any>\n  ): this {\n    return this.removeListener(eventName, listener)\n  }\n\n  public removeAllListeners(eventName?: InternalEventNames): this\n  public removeAllListeners<EventName extends keyof Events>(\n    eventName?: EventName\n  ): this\n  public removeAllListeners(\n    eventName?: InternalEventNames | keyof Events\n  ): this {\n    if (eventName) {\n      this.events.delete(eventName)\n    } else {\n      this.events.clear()\n    }\n\n    return this\n  }\n\n  public listeners(eventName: InternalEventNames): Array<Listener<any>>\n  public listeners<EventName extends keyof Events>(\n    eventName: EventName\n  ): Array<Listener<Events[EventName]>>\n  /**\n   * Returns a copy of the array of listeners for the event named `eventName`.\n   */\n  public listeners(eventName: InternalEventNames | keyof Events) {\n    return Array.from(this._getListeners(eventName))\n  }\n\n  public listenerCount(eventName: InternalEventNames): number\n  public listenerCount<EventName extends keyof Events>(\n    eventName: EventName\n  ): number\n  /**\n   * Returns the number of listeners listening to the event named `eventName`.\n   */\n  public listenerCount(eventName: InternalEventNames | keyof Events): number {\n    return this._getListeners(eventName).length\n  }\n\n  public rawListeners<EventName extends keyof Events>(\n    eventName: EventName\n  ): Array<Listener<Events[EventName]>> {\n    return this.listeners(eventName)\n  }\n}\n","import { Emitter, EventMap } from 'strict-event-emitter'\n\n/**\n * Pipes all emitted events from one emitter to another.\n */\nexport function pipeEvents<Events extends EventMap>(\n  source: Emitter<Events>,\n  destination: Emitter<Events>,\n): void {\n  const rawEmit: typeof source.emit & { _isPiped?: boolean } = source.emit\n\n  if (rawEmit._isPiped) {\n    return\n  }\n\n  const sourceEmit: typeof source.emit & { _isPiped?: boolean } =\n    function sourceEmit(this: typeof source, event, ...data) {\n      destination.emit(event, ...data)\n      return rawEmit.call(this, event, ...data)\n    }\n\n  sourceEmit._isPiped = true\n\n  source.emit = sourceEmit\n}\n","/**\n * Creates an immutable copy of the given array.\n */\nexport function toReadonlyArray<T>(source: Array<T>): ReadonlyArray<T> {\n  const clone = [...source] as Array<T>\n  Object.freeze(clone)\n  return clone\n}\n","export type DisposableSubscription = () => void\n\nexport class Disposable {\n  protected subscriptions: Array<DisposableSubscription> = []\n\n  public dispose() {\n    let subscription: DisposableSubscription | undefined\n    while ((subscription = this.subscriptions.shift())) {\n      subscription()\n    }\n  }\n}\n","import { invariant } from 'outvariant'\nimport { EventMap, Emitter } from 'strict-event-emitter'\nimport { RequestHandler } from './handlers/RequestHandler'\nimport { LifeCycleEventEmitter } from './sharedOptions'\nimport { devUtils } from './utils/internal/devUtils'\nimport { pipeEvents } from './utils/internal/pipeEvents'\nimport { toReadonlyArray } from './utils/internal/toReadonlyArray'\nimport { Disposable } from './utils/internal/Disposable'\nimport type { WebSocketHandler } from './handlers/WebSocketHandler'\n\nexport abstract class HandlersController {\n  abstract prepend(\n    runtimeHandlers: Array<RequestHandler | WebSocketHandler>,\n  ): void\n  abstract reset(nextHandles: Array<RequestHandler | WebSocketHandler>): void\n  abstract currentHandlers(): Array<RequestHandler | WebSocketHandler>\n}\n\nexport class InMemoryHandlersController implements HandlersController {\n  private handlers: Array<RequestHandler | WebSocketHandler>\n\n  constructor(\n    private initialHandlers: Array<RequestHandler | WebSocketHandler>,\n  ) {\n    this.handlers = [...initialHandlers]\n  }\n\n  public prepend(\n    runtimeHandles: Array<RequestHandler | WebSocketHandler>,\n  ): void {\n    this.handlers.unshift(...runtimeHandles)\n  }\n\n  public reset(nextHandlers: Array<RequestHandler | WebSocketHandler>): void {\n    this.handlers =\n      nextHandlers.length > 0 ? [...nextHandlers] : [...this.initialHandlers]\n  }\n\n  public currentHandlers(): Array<RequestHandler | WebSocketHandler> {\n    return this.handlers\n  }\n}\n\n/**\n * Generic class for the mock API setup.\n */\nexport abstract class SetupApi<EventsMap extends EventMap> extends Disposable {\n  protected handlersController: HandlersController\n  protected readonly emitter: Emitter<EventsMap>\n  protected readonly publicEmitter: Emitter<EventsMap>\n\n  public readonly events: LifeCycleEventEmitter<EventsMap>\n\n  constructor(...initialHandlers: Array<RequestHandler | WebSocketHandler>) {\n    super()\n\n    invariant(\n      this.validateHandlers(initialHandlers),\n      devUtils.formatMessage(\n        `Failed to apply given request handlers: invalid input. Did you forget to spread the request handlers Array?`,\n      ),\n    )\n\n    this.handlersController = new InMemoryHandlersController(initialHandlers)\n\n    this.emitter = new Emitter<EventsMap>()\n    this.publicEmitter = new Emitter<EventsMap>()\n    pipeEvents(this.emitter, this.publicEmitter)\n\n    this.events = this.createLifeCycleEvents()\n\n    this.subscriptions.push(() => {\n      this.emitter.removeAllListeners()\n      this.publicEmitter.removeAllListeners()\n    })\n  }\n\n  private validateHandlers(handlers: ReadonlyArray<unknown>): boolean {\n    // Guard against incorrect call signature of the setup API.\n    return handlers.every((handler) => !Array.isArray(handler))\n  }\n\n  public use(\n    ...runtimeHandlers: Array<RequestHandler | WebSocketHandler>\n  ): void {\n    invariant(\n      this.validateHandlers(runtimeHandlers),\n      devUtils.formatMessage(\n        `Failed to call \"use()\" with the given request handlers: invalid input. Did you forget to spread the array of request handlers?`,\n      ),\n    )\n\n    this.handlersController.prepend(runtimeHandlers)\n  }\n\n  public restoreHandlers(): void {\n    this.handlersController.currentHandlers().forEach((handler) => {\n      if ('isUsed' in handler) {\n        handler.isUsed = false\n      }\n    })\n  }\n\n  public resetHandlers(\n    ...nextHandlers: Array<RequestHandler | WebSocketHandler>\n  ): void {\n    this.handlersController.reset(nextHandlers)\n  }\n\n  public listHandlers(): ReadonlyArray<RequestHandler | WebSocketHandler> {\n    return toReadonlyArray(this.handlersController.currentHandlers())\n  }\n\n  private createLifeCycleEvents(): LifeCycleEventEmitter<EventsMap> {\n    return {\n      on: (...args: any[]) => {\n        return (this.publicEmitter.on as any)(...args)\n      },\n      removeListener: (...args: any[]) => {\n        return (this.publicEmitter.removeListener as any)(...args)\n      },\n      removeAllListeners: (...args: any[]) => {\n        return this.publicEmitter.removeAllListeners(...args)\n      },\n    }\n  }\n}\n","// Ignore the source files traces for local testing.\nconst SOURCE_FRAME = /[\\/\\\\]msw[\\/\\\\]src[\\/\\\\](.+)/\n\nconst BUILD_FRAME =\n  /(node_modules)?[\\/\\\\]lib[\\/\\\\](core|browser|node|native|iife)[\\/\\\\]|^[^\\/\\\\]*$/\n\n/**\n * Return the stack trace frame of a function's invocation.\n */\nexport function getCallFrame(error: Error) {\n  // In <IE11, new Error may return an undefined stack\n  const stack = error.stack\n\n  if (!stack) {\n    return\n  }\n\n  const frames: string[] = stack.split('\\n').slice(1)\n\n  // Get the first frame that doesn't reference the library's internal trace.\n  // Assume that frame is the invocation frame.\n  const declarationFrame = frames.find((frame) => {\n    return !(SOURCE_FRAME.test(frame) || BUILD_FRAME.test(frame))\n  })\n\n  if (!declarationFrame) {\n    return\n  }\n\n  // Extract file reference from the stack frame.\n  const declarationPath = declarationFrame\n    .replace(/\\s*at [^()]*\\(([^)]+)\\)/, '$1')\n    .replace(/^@/, '')\n  return declarationPath\n}\n","/**\n * This is the same as TypeScript's `Iterable`, but with all three type parameters.\n * @todo Remove once TypeScript 5.6 is the minimum.\n */\nexport interface Iterable<T, TReturn, TNext> {\n  [Symbol.iterator](): Iterator<T, TReturn, TNext>\n}\n\n/**\n * This is the same as TypeScript's `AsyncIterable`, but with all three type parameters.\n * @todo Remove once TypeScript 5.6 is the minimum.\n */\nexport interface AsyncIterable<T, TReturn, TNext> {\n  [Symbol.asyncIterator](): AsyncIterator<T, TReturn, TNext>\n}\n\n/**\n * Determines if the given function is an iterator.\n */\nexport function isIterable<IteratorType>(\n  fn: any,\n): fn is\n  | Iterable<IteratorType, IteratorType, IteratorType>\n  | AsyncIterable<IteratorType, IteratorType, IteratorType> {\n  if (!fn) {\n    return false\n  }\n\n  return (\n    Reflect.has(fn, Symbol.iterator) || Reflect.has(fn, Symbol.asyncIterator)\n  )\n}\n","import { getCallFrame } from '../utils/internal/getCallFrame'\nimport {\n  AsyncIterable,\n  Iterable,\n  isIterable,\n} from '../utils/internal/isIterable'\nimport type { ResponseResolutionContext } from '../utils/executeHandlers'\nimport type { MaybePromise } from '../typeUtils'\nimport { StrictRequest, StrictResponse } from '..//HttpResponse'\nimport type { HandlerKind } from './common'\n\nexport type DefaultRequestMultipartBody = Record<\n  string,\n  string | File | Array<string | File>\n>\n\nexport type DefaultBodyType =\n  | Record<string, any>\n  | DefaultRequestMultipartBody\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n\nexport type JsonBodyType =\n  | Record<string, any>\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n\nexport interface RequestHandlerDefaultInfo {\n  header: string\n}\n\nexport interface RequestHandlerInternalInfo {\n  callFrame?: string\n}\n\nexport type ResponseResolverReturnType<\n  ResponseBodyType extends DefaultBodyType = undefined,\n> =\n  | ([ResponseBodyType] extends [undefined]\n      ? Response\n      : StrictResponse<ResponseBodyType>)\n  | undefined\n  | void\n\nexport type MaybeAsyncResponseResolverReturnType<\n  ResponseBodyType extends DefaultBodyType,\n> = MaybePromise<ResponseResolverReturnType<ResponseBodyType>>\n\nexport type AsyncResponseResolverReturnType<\n  ResponseBodyType extends DefaultBodyType,\n> = MaybePromise<\n  | ResponseResolverReturnType<ResponseBodyType>\n  | Iterable<\n      MaybeAsyncResponseResolverReturnType<ResponseBodyType>,\n      MaybeAsyncResponseResolverReturnType<ResponseBodyType>,\n      MaybeAsyncResponseResolverReturnType<ResponseBodyType>\n    >\n  | AsyncIterable<\n      MaybeAsyncResponseResolverReturnType<ResponseBodyType>,\n      MaybeAsyncResponseResolverReturnType<ResponseBodyType>,\n      MaybeAsyncResponseResolverReturnType<ResponseBodyType>\n    >\n>\n\nexport type ResponseResolverInfo<\n  ResolverExtraInfo extends Record<string, unknown>,\n  RequestBodyType extends DefaultBodyType = DefaultBodyType,\n> = {\n  request: StrictRequest<RequestBodyType>\n  requestId: string\n} & ResolverExtraInfo\n\nexport type ResponseResolver<\n  ResolverExtraInfo extends Record<string, unknown> = Record<string, unknown>,\n  RequestBodyType extends DefaultBodyType = DefaultBodyType,\n  ResponseBodyType extends DefaultBodyType = undefined,\n> = (\n  info: ResponseResolverInfo<ResolverExtraInfo, RequestBodyType>,\n) => AsyncResponseResolverReturnType<ResponseBodyType>\n\nexport interface RequestHandlerArgs<\n  HandlerInfo,\n  HandlerOptions extends RequestHandlerOptions,\n> {\n  info: HandlerInfo\n  resolver: ResponseResolver<any>\n  options?: HandlerOptions\n}\n\nexport interface RequestHandlerOptions {\n  once?: boolean\n}\n\nexport interface RequestHandlerExecutionResult<\n  ParsedResult extends Record<string, unknown> | undefined,\n> {\n  handler: RequestHandler\n  parsedResult?: ParsedResult\n  request: Request\n  requestId: string\n  response?: Response\n}\n\nexport abstract class RequestHandler<\n  HandlerInfo extends RequestHandlerDefaultInfo = RequestHandlerDefaultInfo,\n  ParsedResult extends Record<string, any> | undefined = any,\n  ResolverExtras extends Record<string, unknown> = any,\n  HandlerOptions extends RequestHandlerOptions = RequestHandlerOptions,\n> {\n  static cache = new WeakMap<\n    StrictRequest<DefaultBodyType>,\n    StrictRequest<DefaultBodyType>\n  >()\n\n  private readonly __kind: HandlerKind\n\n  public info: HandlerInfo & RequestHandlerInternalInfo\n  /**\n   * Indicates whether this request handler has been used\n   * (its resolver has successfully executed).\n   */\n  public isUsed: boolean\n\n  protected resolver: ResponseResolver<ResolverExtras, any, any>\n  private resolverIterator?:\n    | Iterator<\n        MaybeAsyncResponseResolverReturnType<any>,\n        MaybeAsyncResponseResolverReturnType<any>,\n        MaybeAsyncResponseResolverReturnType<any>\n      >\n    | AsyncIterator<\n        MaybeAsyncResponseResolverReturnType<any>,\n        MaybeAsyncResponseResolverReturnType<any>,\n        MaybeAsyncResponseResolverReturnType<any>\n      >\n  private resolverIteratorResult?: Response | StrictResponse<any>\n  private options?: HandlerOptions\n\n  constructor(args: RequestHandlerArgs<HandlerInfo, HandlerOptions>) {\n    this.resolver = args.resolver\n    this.options = args.options\n\n    const callFrame = getCallFrame(new Error())\n\n    this.info = {\n      ...args.info,\n      callFrame,\n    }\n\n    this.isUsed = false\n    this.__kind = 'RequestHandler'\n  }\n\n  /**\n   * Determine if the intercepted request should be mocked.\n   */\n  abstract predicate(args: {\n    request: Request\n    parsedResult: ParsedResult\n    resolutionContext?: ResponseResolutionContext\n  }): boolean\n\n  /**\n   * Print out the successfully handled request.\n   */\n  abstract log(args: {\n    request: Request\n    response: Response\n    parsedResult: ParsedResult\n  }): void\n\n  /**\n   * Parse the intercepted request to extract additional information from it.\n   * Parsed result is then exposed to other methods of this request handler.\n   */\n  async parse(_args: {\n    request: Request\n    resolutionContext?: ResponseResolutionContext\n  }): Promise<ParsedResult> {\n    return {} as ParsedResult\n  }\n\n  /**\n   * Test if this handler matches the given request.\n   *\n   * This method is not used internally but is exposed\n   * as a convenience method for consumers writing custom\n   * handlers.\n   */\n  public async test(args: {\n    request: Request\n    resolutionContext?: ResponseResolutionContext\n  }): Promise<boolean> {\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext,\n    })\n\n    return this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext,\n    })\n  }\n\n  protected extendResolverArgs(_args: {\n    request: Request\n    parsedResult: ParsedResult\n  }): ResolverExtras {\n    return {} as ResolverExtras\n  }\n\n  // Clone the request instance before it's passed to the handler phases\n  // and the response resolver so we can always read it for logging.\n  // We only clone it once per request to avoid unnecessary overhead.\n  private cloneRequestOrGetFromCache(\n    request: StrictRequest<DefaultBodyType>,\n  ): StrictRequest<DefaultBodyType> {\n    const existingClone = RequestHandler.cache.get(request)\n\n    if (typeof existingClone !== 'undefined') {\n      return existingClone\n    }\n\n    const clonedRequest = request.clone()\n    RequestHandler.cache.set(request, clonedRequest)\n\n    return clonedRequest\n  }\n\n  /**\n   * Execute this request handler and produce a mocked response\n   * using the given resolver function.\n   */\n  public async run(args: {\n    request: StrictRequest<any>\n    requestId: string\n    resolutionContext?: ResponseResolutionContext\n  }): Promise<RequestHandlerExecutionResult<ParsedResult> | null> {\n    if (this.isUsed && this.options?.once) {\n      return null\n    }\n\n    // Clone the request.\n    // If this is the first time MSW handles this request, a fresh clone\n    // will be created and cached. Upon further handling of the same request,\n    // the request clone from the cache will be reused to prevent abundant\n    // \"abort\" listeners and save up resources on cloning.\n    const requestClone = this.cloneRequestOrGetFromCache(args.request)\n\n    const parsedResult = await this.parse({\n      request: args.request,\n      resolutionContext: args.resolutionContext,\n    })\n    const shouldInterceptRequest = this.predicate({\n      request: args.request,\n      parsedResult,\n      resolutionContext: args.resolutionContext,\n    })\n\n    if (!shouldInterceptRequest) {\n      return null\n    }\n\n    // Re-check isUsed, in case another request hit this handler while we were\n    // asynchronously parsing the request.\n    if (this.isUsed && this.options?.once) {\n      return null\n    }\n\n    // Preemptively mark the handler as used.\n    // Generators will undo this because only when the resolver reaches the\n    // \"done\" state of the generator that it considers the handler used.\n    this.isUsed = true\n\n    // Create a response extraction wrapper around the resolver\n    // since it can be both an async function and a generator.\n    const executeResolver = this.wrapResolver(this.resolver)\n\n    const resolverExtras = this.extendResolverArgs({\n      request: args.request,\n      parsedResult,\n    })\n\n    const mockedResponsePromise = (\n      executeResolver({\n        ...resolverExtras,\n        requestId: args.requestId,\n        request: args.request,\n      }) as Promise<Response>\n    ).catch((errorOrResponse) => {\n      // Allow throwing a Response instance in a response resolver.\n      if (errorOrResponse instanceof Response) {\n        return errorOrResponse\n      }\n\n      // Otherwise, throw the error as-is.\n      throw errorOrResponse\n    })\n\n    const mockedResponse = await mockedResponsePromise\n\n    const executionResult = this.createExecutionResult({\n      // Pass the cloned request to the result so that logging\n      // and other consumers could read its body once more.\n      request: requestClone,\n      requestId: args.requestId,\n      response: mockedResponse,\n      parsedResult,\n    })\n\n    return executionResult\n  }\n\n  private wrapResolver(\n    resolver: ResponseResolver<ResolverExtras>,\n  ): ResponseResolver<ResolverExtras> {\n    return async (info): Promise<ResponseResolverReturnType<any>> => {\n      if (!this.resolverIterator) {\n        const result = await resolver(info)\n        if (!isIterable(result)) {\n          return result\n        }\n        this.resolverIterator =\n          Symbol.iterator in result\n            ? result[Symbol.iterator]()\n            : result[Symbol.asyncIterator]()\n      }\n\n      // Opt-out from marking this handler as used.\n      this.isUsed = false\n\n      const { done, value } = await this.resolverIterator.next()\n      const nextResponse = await value\n\n      if (nextResponse) {\n        this.resolverIteratorResult = nextResponse.clone()\n      }\n\n      if (done) {\n        // A one-time generator resolver stops affecting the network\n        // only after it's been completely exhausted.\n        this.isUsed = true\n\n        // Clone the previously stored response so it can be read\n        // when receiving it repeatedly from the \"done\" generator.\n        return this.resolverIteratorResult?.clone()\n      }\n\n      return nextResponse\n    }\n  }\n\n  private createExecutionResult(args: {\n    request: Request\n    requestId: string\n    parsedResult: ParsedResult\n    response?: Response\n  }): RequestHandlerExecutionResult<ParsedResult> {\n    return {\n      handler: this,\n      request: args.request,\n      requestId: args.requestId,\n      response: args.response,\n      parsedResult: args.parsedResult,\n    }\n  }\n}\n","/**\n * Performs a case-insensitive comparison of two given strings.\n */\nexport function isStringEqual(actual: string, expected: string): boolean {\n  return actual.toLowerCase() === expected.toLowerCase()\n}\n","export enum StatusCodeColor {\n  Success = '#69AB32',\n  Warning = '#F0BB4B',\n  Danger = '#E95F5D',\n}\n\n/**\n * Returns a HEX color for a given response status code number.\n */\nexport function getStatusCodeColor(status: number): StatusCodeColor {\n  if (status < 300) {\n    return StatusCodeColor.Success\n  }\n\n  if (status < 400) {\n    return StatusCodeColor.Warning\n  }\n\n  return StatusCodeColor.Danger\n}\n","interface GetTimestampOptions {\n  milliseconds?: boolean\n}\n\n/**\n * Returns a timestamp string in a \"HH:MM:SS\" format.\n */\nexport function getTimestamp(options?: GetTimestampOptions): string {\n  const now = new Date()\n  const timestamp = `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}`\n\n  if (options?.milliseconds) {\n    return `${timestamp}.${now.getMilliseconds().toString().padStart(3, '0')}`\n  }\n\n  return timestamp\n}\n","export interface LoggedRequest {\n  url: URL\n  method: string\n  headers: Record<string, string>\n  body: string\n}\n\n/**\n * Formats a mocked request for introspection in browser's console.\n */\nexport async function serializeRequest(\n  request: Request,\n): Promise<LoggedRequest> {\n  const requestClone = request.clone()\n  const requestText = await requestClone.text()\n\n  return {\n    url: new URL(request.url),\n    method: request.method,\n    headers: Object.fromEntries(request.headers.entries()),\n    body: requestText,\n  }\n}\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/statuses/codes.json\nvar require_codes = __commonJS({\n  \"node_modules/statuses/codes.json\"(exports, module) {\n    module.exports = {\n      \"100\": \"Continue\",\n      \"101\": \"Switching Protocols\",\n      \"102\": \"Processing\",\n      \"103\": \"Early Hints\",\n      \"200\": \"OK\",\n      \"201\": \"Created\",\n      \"202\": \"Accepted\",\n      \"203\": \"Non-Authoritative Information\",\n      \"204\": \"No Content\",\n      \"205\": \"Reset Content\",\n      \"206\": \"Partial Content\",\n      \"207\": \"Multi-Status\",\n      \"208\": \"Already Reported\",\n      \"226\": \"IM Used\",\n      \"300\": \"Multiple Choices\",\n      \"301\": \"Moved Permanently\",\n      \"302\": \"Found\",\n      \"303\": \"See Other\",\n      \"304\": \"Not Modified\",\n      \"305\": \"Use Proxy\",\n      \"307\": \"Temporary Redirect\",\n      \"308\": \"Permanent Redirect\",\n      \"400\": \"Bad Request\",\n      \"401\": \"Unauthorized\",\n      \"402\": \"Payment Required\",\n      \"403\": \"Forbidden\",\n      \"404\": \"Not Found\",\n      \"405\": \"Method Not Allowed\",\n      \"406\": \"Not Acceptable\",\n      \"407\": \"Proxy Authentication Required\",\n      \"408\": \"Request Timeout\",\n      \"409\": \"Conflict\",\n      \"410\": \"Gone\",\n      \"411\": \"Length Required\",\n      \"412\": \"Precondition Failed\",\n      \"413\": \"Payload Too Large\",\n      \"414\": \"URI Too Long\",\n      \"415\": \"Unsupported Media Type\",\n      \"416\": \"Range Not Satisfiable\",\n      \"417\": \"Expectation Failed\",\n      \"418\": \"I'm a Teapot\",\n      \"421\": \"Misdirected Request\",\n      \"422\": \"Unprocessable Entity\",\n      \"423\": \"Locked\",\n      \"424\": \"Failed Dependency\",\n      \"425\": \"Too Early\",\n      \"426\": \"Upgrade Required\",\n      \"428\": \"Precondition Required\",\n      \"429\": \"Too Many Requests\",\n      \"431\": \"Request Header Fields Too Large\",\n      \"451\": \"Unavailable For Legal Reasons\",\n      \"500\": \"Internal Server Error\",\n      \"501\": \"Not Implemented\",\n      \"502\": \"Bad Gateway\",\n      \"503\": \"Service Unavailable\",\n      \"504\": \"Gateway Timeout\",\n      \"505\": \"HTTP Version Not Supported\",\n      \"506\": \"Variant Also Negotiates\",\n      \"507\": \"Insufficient Storage\",\n      \"508\": \"Loop Detected\",\n      \"509\": \"Bandwidth Limit Exceeded\",\n      \"510\": \"Not Extended\",\n      \"511\": \"Network Authentication Required\"\n    };\n  }\n});\n\n// node_modules/statuses/index.js\nvar require_statuses = __commonJS({\n  \"node_modules/statuses/index.js\"(exports, module) {\n    \"use strict\";\n    var codes = require_codes();\n    module.exports = status2;\n    status2.message = codes;\n    status2.code = createMessageToStatusCodeMap(codes);\n    status2.codes = createStatusCodeList(codes);\n    status2.redirect = {\n      300: true,\n      301: true,\n      302: true,\n      303: true,\n      305: true,\n      307: true,\n      308: true\n    };\n    status2.empty = {\n      204: true,\n      205: true,\n      304: true\n    };\n    status2.retry = {\n      502: true,\n      503: true,\n      504: true\n    };\n    function createMessageToStatusCodeMap(codes2) {\n      var map = {};\n      Object.keys(codes2).forEach(function forEachCode(code) {\n        var message = codes2[code];\n        var status3 = Number(code);\n        map[message.toLowerCase()] = status3;\n      });\n      return map;\n    }\n    function createStatusCodeList(codes2) {\n      return Object.keys(codes2).map(function mapCode(code) {\n        return Number(code);\n      });\n    }\n    function getStatusCode(message) {\n      var msg = message.toLowerCase();\n      if (!Object.prototype.hasOwnProperty.call(status2.code, msg)) {\n        throw new Error('invalid status message: \"' + message + '\"');\n      }\n      return status2.code[msg];\n    }\n    function getStatusMessage(code) {\n      if (!Object.prototype.hasOwnProperty.call(status2.message, code)) {\n        throw new Error(\"invalid status code: \" + code);\n      }\n      return status2.message[code];\n    }\n    function status2(code) {\n      if (typeof code === \"number\") {\n        return getStatusMessage(code);\n      }\n      if (typeof code !== \"string\") {\n        throw new TypeError(\"code must be a number or string\");\n      }\n      var n = parseInt(code, 10);\n      if (!isNaN(n)) {\n        return getStatusMessage(n);\n      }\n      return getStatusCode(code);\n    }\n  }\n});\n\n// source.js\nvar import_statuses = __toESM(require_statuses(), 1);\nvar source_default = import_statuses.default;\nexport {\n  source_default as default\n};\n/*! Bundled license information:\n\nstatuses/index.js:\n  (*!\n   * statuses\n   * Copyright(c) 2014 Jonathan Ong\n   * Copyright(c) 2016 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n","import statuses from '@bundled-es-modules/statuses'\n\nconst { message } = statuses\n\nexport interface SerializedResponse {\n  status: number\n  statusText: string\n  headers: Record<string, any>\n  body: string\n}\n\nexport async function serializeResponse(\n  response: Response,\n): Promise<SerializedResponse> {\n  const responseClone = response.clone()\n  const responseText = await responseClone.text()\n\n  // Normalize the response status and status text when logging\n  // since the default Response instance doesn't infer status texts\n  // from status codes. This has no effect on the actual response instance.\n  const responseStatus = responseClone.status || 200\n  const responseStatusText =\n    responseClone.statusText || message[responseStatus] || 'OK'\n\n  return {\n    status: responseStatus,\n    statusText: responseStatusText,\n    headers: Object.fromEntries(responseClone.headers.entries()),\n    body: responseText,\n  }\n}\n","/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n","const encoder = new TextEncoder()\n\nexport function encodeBuffer(text: string): Uint8Array {\n  return encoder.encode(text)\n}\n\nexport function decodeBuffer(buffer: ArrayBuffer, encoding?: string): string {\n  const decoder = new TextDecoder(encoding)\n  return decoder.decode(buffer)\n}\n\n/**\n * Create an `ArrayBuffer` from the given `Uint8Array`.\n * Takes the byte offset into account to produce the right buffer\n * in the case when the buffer is bigger than the data view.\n */\nexport function toArrayBuffer(array: Uint8Array): ArrayBuffer {\n  return array.buffer.slice(\n    array.byteOffset,\n    array.byteOffset + array.byteLength\n  )\n}\n","import type { RequestController } from './RequestController'\n\nexport const IS_PATCHED_MODULE: unique symbol = Symbol('isPatchedModule')\n\n/**\n * @note Export `RequestController` as a type only.\n * It's never meant to be created in the userland.\n */\nexport type { RequestController }\n\nexport type RequestCredentials = 'omit' | 'include' | 'same-origin'\n\nexport type HttpRequestEventMap = {\n  request: [\n    args: {\n      request: Request\n      requestId: string\n      controller: RequestController\n    }\n  ]\n  response: [\n    args: {\n      response: Response\n      isMockedResponse: boolean\n      request: Request\n      requestId: string\n    }\n  ]\n  unhandledException: [\n    args: {\n      error: unknown\n      request: Request\n      requestId: string\n      controller: RequestController\n    }\n  ]\n}\n","export interface FetchResponseInit extends ResponseInit {\n  url?: string\n}\n\nexport class FetchResponse extends Response {\n  /**\n   * Response status codes for responses that cannot have body.\n   * @see https://fetch.spec.whatwg.org/#statuses\n   */\n  static readonly STATUS_CODES_WITHOUT_BODY = [101, 103, 204, 205, 304]\n\n  static readonly STATUS_CODES_WITH_REDIRECT = [301, 302, 303, 307, 308]\n\n  static isConfigurableStatusCode(status: number): boolean {\n    return status >= 200 && status <= 599\n  }\n\n  static isRedirectResponse(status: number): boolean {\n    return FetchResponse.STATUS_CODES_WITH_REDIRECT.includes(status)\n  }\n\n  /**\n   * Returns a boolean indicating whether the given response status\n   * code represents a response that can have a body.\n   */\n  static isResponseWithBody(status: number): boolean {\n    return !FetchResponse.STATUS_CODES_WITHOUT_BODY.includes(status)\n  }\n\n  static setUrl(url: string | undefined, response: Response): void {\n    if (!url) {\n      return\n    }\n\n    if (response.url != '') {\n      return\n    }\n\n    Object.defineProperty(response, 'url', {\n      value: url,\n      enumerable: true,\n      configurable: true,\n      writable: false,\n    })\n  }\n\n  constructor(body?: BodyInit | null, init: FetchResponseInit = {}) {\n    const status = init.status ?? 200\n    const safeStatus = FetchResponse.isConfigurableStatusCode(status)\n      ? status\n      : 200\n    const finalBody = FetchResponse.isResponseWithBody(status) ? body : null\n\n    super(finalBody, {\n      ...init,\n      status: safeStatus,\n    })\n\n    if (status !== safeStatus) {\n      /**\n       * @note Undici keeps an internal \"Symbol(state)\" that holds\n       * the actual value of response status. Update that in Node.js.\n       */\n      const stateSymbol = Object.getOwnPropertySymbols(this).find(\n        (symbol) => symbol.description === 'state'\n      )\n      if (stateSymbol) {\n        const state = Reflect.get(this, stateSymbol) as object\n        Reflect.set(state, 'status', status)\n      } else {\n        Object.defineProperty(this, 'status', {\n          value: status,\n          enumerable: true,\n          configurable: true,\n          writable: false,\n        })\n      }\n    }\n\n    FetchResponse.setUrl(init.url, this)\n  }\n}\n","/**\n * Determines if the current process is a Node.js process.\n */\nexport function isNodeProcess(): boolean {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return true\n  }\n\n  if (typeof process !== 'undefined') {\n    // Electron (https://www.electronjs.org/docs/latest/api/process#processtype-readonly)\n    const type = (process as any).type\n    if (type === 'renderer' || type === 'worker') {\n      return false\n    }\n\n\n    return !!(\n      process.versions &&\n      process.versions.node\n    )\n  }\n\n  return false\n}\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// src/index.ts\nimport { isNodeProcess } from \"is-node-process\";\nimport { format } from \"outvariant\";\n\n// src/colors.ts\nvar colors_exports = {};\n__export(colors_exports, {\n  blue: () => blue,\n  gray: () => gray,\n  green: () => green,\n  red: () => red,\n  yellow: () => yellow\n});\nfunction yellow(text) {\n  return `\\x1B[33m${text}\\x1B[0m`;\n}\nfunction blue(text) {\n  return `\\x1B[34m${text}\\x1B[0m`;\n}\nfunction gray(text) {\n  return `\\x1B[90m${text}\\x1B[0m`;\n}\nfunction red(text) {\n  return `\\x1B[31m${text}\\x1B[0m`;\n}\nfunction green(text) {\n  return `\\x1B[32m${text}\\x1B[0m`;\n}\n\n// src/index.ts\nvar IS_NODE = isNodeProcess();\nvar Logger = class {\n  constructor(name) {\n    this.name = name;\n    this.prefix = `[${this.name}]`;\n    const LOGGER_NAME = getVariable(\"DEBUG\");\n    const LOGGER_LEVEL = getVariable(\"LOG_LEVEL\");\n    const isLoggingEnabled = LOGGER_NAME === \"1\" || LOGGER_NAME === \"true\" || typeof LOGGER_NAME !== \"undefined\" && this.name.startsWith(LOGGER_NAME);\n    if (isLoggingEnabled) {\n      this.debug = isDefinedAndNotEquals(LOGGER_LEVEL, \"debug\") ? noop : this.debug;\n      this.info = isDefinedAndNotEquals(LOGGER_LEVEL, \"info\") ? noop : this.info;\n      this.success = isDefinedAndNotEquals(LOGGER_LEVEL, \"success\") ? noop : this.success;\n      this.warning = isDefinedAndNotEquals(LOGGER_LEVEL, \"warning\") ? noop : this.warning;\n      this.error = isDefinedAndNotEquals(LOGGER_LEVEL, \"error\") ? noop : this.error;\n    } else {\n      this.info = noop;\n      this.success = noop;\n      this.warning = noop;\n      this.error = noop;\n      this.only = noop;\n    }\n  }\n  prefix;\n  extend(domain) {\n    return new Logger(`${this.name}:${domain}`);\n  }\n  /**\n   * Print a debug message.\n   * @example\n   * logger.debug('no duplicates found, creating a document...')\n   */\n  debug(message, ...positionals) {\n    this.logEntry({\n      level: \"debug\",\n      message: gray(message),\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"gray\"\n      }\n    });\n  }\n  /**\n   * Print an info message.\n   * @example\n   * logger.info('start parsing...')\n   */\n  info(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: this.prefix,\n      colors: {\n        prefix: \"blue\"\n      }\n    });\n    const performance2 = new PerformanceEntry();\n    return (message2, ...positionals2) => {\n      performance2.measure();\n      this.logEntry({\n        level: \"info\",\n        message: `${message2} ${gray(`${performance2.deltaTime}ms`)}`,\n        positionals: positionals2,\n        prefix: this.prefix,\n        colors: {\n          prefix: \"blue\"\n        }\n      });\n    };\n  }\n  /**\n   * Print a success message.\n   * @example\n   * logger.success('successfully created document')\n   */\n  success(message, ...positionals) {\n    this.logEntry({\n      level: \"info\",\n      message,\n      positionals,\n      prefix: `\\u2714 ${this.prefix}`,\n      colors: {\n        timestamp: \"green\",\n        prefix: \"green\"\n      }\n    });\n  }\n  /**\n   * Print a warning.\n   * @example\n   * logger.warning('found legacy document format')\n   */\n  warning(message, ...positionals) {\n    this.logEntry({\n      level: \"warning\",\n      message,\n      positionals,\n      prefix: `\\u26A0 ${this.prefix}`,\n      colors: {\n        timestamp: \"yellow\",\n        prefix: \"yellow\"\n      }\n    });\n  }\n  /**\n   * Print an error message.\n   * @example\n   * logger.error('something went wrong')\n   */\n  error(message, ...positionals) {\n    this.logEntry({\n      level: \"error\",\n      message,\n      positionals,\n      prefix: `\\u2716 ${this.prefix}`,\n      colors: {\n        timestamp: \"red\",\n        prefix: \"red\"\n      }\n    });\n  }\n  /**\n   * Execute the given callback only when the logging is enabled.\n   * This is skipped in its entirety and has no runtime cost otherwise.\n   * This executes regardless of the log level.\n   * @example\n   * logger.only(() => {\n   *   logger.info('additional info')\n   * })\n   */\n  only(callback) {\n    callback();\n  }\n  createEntry(level, message) {\n    return {\n      timestamp: /* @__PURE__ */ new Date(),\n      level,\n      message\n    };\n  }\n  logEntry(args) {\n    const {\n      level,\n      message,\n      prefix,\n      colors: customColors,\n      positionals = []\n    } = args;\n    const entry = this.createEntry(level, message);\n    const timestampColor = customColors?.timestamp || \"gray\";\n    const prefixColor = customColors?.prefix || \"gray\";\n    const colorize = {\n      timestamp: colors_exports[timestampColor],\n      prefix: colors_exports[prefixColor]\n    };\n    const write = this.getWriter(level);\n    write(\n      [colorize.timestamp(this.formatTimestamp(entry.timestamp))].concat(prefix != null ? colorize.prefix(prefix) : []).concat(serializeInput(message)).join(\" \"),\n      ...positionals.map(serializeInput)\n    );\n  }\n  formatTimestamp(timestamp) {\n    return `${timestamp.toLocaleTimeString(\n      \"en-GB\"\n    )}:${timestamp.getMilliseconds()}`;\n  }\n  getWriter(level) {\n    switch (level) {\n      case \"debug\":\n      case \"success\":\n      case \"info\": {\n        return log;\n      }\n      case \"warning\": {\n        return warn;\n      }\n      case \"error\": {\n        return error;\n      }\n    }\n  }\n};\nvar PerformanceEntry = class {\n  startTime;\n  endTime;\n  deltaTime;\n  constructor() {\n    this.startTime = performance.now();\n  }\n  measure() {\n    this.endTime = performance.now();\n    const deltaTime = this.endTime - this.startTime;\n    this.deltaTime = deltaTime.toFixed(2);\n  }\n};\nvar noop = () => void 0;\nfunction log(message, ...positionals) {\n  if (IS_NODE) {\n    process.stdout.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.log(message, ...positionals);\n}\nfunction warn(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.warn(message, ...positionals);\n}\nfunction error(message, ...positionals) {\n  if (IS_NODE) {\n    process.stderr.write(format(message, ...positionals) + \"\\n\");\n    return;\n  }\n  console.error(message, ...positionals);\n}\nfunction getVariable(variableName) {\n  if (IS_NODE) {\n    return process.env[variableName];\n  }\n  return globalThis[variableName]?.toString();\n}\nfunction isDefinedAndNotEquals(value, expected) {\n  return value !== void 0 && value !== expected;\n}\nfunction serializeInput(message) {\n  if (typeof message === \"undefined\") {\n    return \"undefined\";\n  }\n  if (message === null) {\n    return \"null\";\n  }\n  if (typeof message === \"string\") {\n    return message;\n  }\n  if (typeof message === \"object\") {\n    return JSON.stringify(message);\n  }\n  return message.toString();\n}\nexport {\n  Logger\n};\n","import { Logger } from '@open-draft/logger'\nimport { Emitter, Listener } from 'strict-event-emitter'\n\nexport type InterceptorEventMap = Record<string, any>\nexport type InterceptorSubscription = () => void\n\n/**\n * Request header name to detect when a single request\n * is being handled by nested interceptors (XHR -> ClientRequest).\n * Obscure by design to prevent collisions with user-defined headers.\n * Ideally, come up with the Interceptor-level mechanism for this.\n * @see https://github.com/mswjs/interceptors/issues/378\n */\nexport const INTERNAL_REQUEST_ID_HEADER_NAME =\n  'x-interceptors-internal-request-id'\n\nexport function getGlobalSymbol<V>(symbol: Symbol): V | undefined {\n  return (\n    // @ts-ignore https://github.com/Microsoft/TypeScript/issues/24587\n    globalThis[symbol] || undefined\n  )\n}\n\nfunction setGlobalSymbol(symbol: Symbol, value: any): void {\n  // @ts-ignore\n  globalThis[symbol] = value\n}\n\nexport function deleteGlobalSymbol(symbol: Symbol): void {\n  // @ts-ignore\n  delete globalThis[symbol]\n}\n\nexport enum InterceptorReadyState {\n  INACTIVE = 'INACTIVE',\n  APPLYING = 'APPLYING',\n  APPLIED = 'APPLIED',\n  DISPOSING = 'DISPOSING',\n  DISPOSED = 'DISPOSED',\n}\n\nexport type ExtractEventNames<Events extends Record<string, any>> =\n  Events extends Record<infer EventName, any> ? EventName : never\n\nexport class Interceptor<Events extends InterceptorEventMap> {\n  protected emitter: Emitter<Events>\n  protected subscriptions: Array<InterceptorSubscription>\n  protected logger: Logger\n\n  public readyState: InterceptorReadyState\n\n  constructor(private readonly symbol: symbol) {\n    this.readyState = InterceptorReadyState.INACTIVE\n\n    this.emitter = new Emitter()\n    this.subscriptions = []\n    this.logger = new Logger(symbol.description!)\n\n    // Do not limit the maximum number of listeners\n    // so not to limit the maximum amount of parallel events emitted.\n    this.emitter.setMaxListeners(0)\n\n    this.logger.info('constructing the interceptor...')\n  }\n\n  /**\n   * Determine if this interceptor can be applied\n   * in the current environment.\n   */\n  protected checkEnvironment(): boolean {\n    return true\n  }\n\n  /**\n   * Apply this interceptor to the current process.\n   * Returns an already running interceptor instance if it's present.\n   */\n  public apply(): void {\n    const logger = this.logger.extend('apply')\n    logger.info('applying the interceptor...')\n\n    if (this.readyState === InterceptorReadyState.APPLIED) {\n      logger.info('intercepted already applied!')\n      return\n    }\n\n    const shouldApply = this.checkEnvironment()\n\n    if (!shouldApply) {\n      logger.info('the interceptor cannot be applied in this environment!')\n      return\n    }\n\n    this.readyState = InterceptorReadyState.APPLYING\n\n    // Whenever applying a new interceptor, check if it hasn't been applied already.\n    // This enables to apply the same interceptor multiple times, for example from a different\n    // interceptor, only proxying events but keeping the stubs in a single place.\n    const runningInstance = this.getInstance()\n\n    if (runningInstance) {\n      logger.info('found a running instance, reusing...')\n\n      // Proxy any listeners you set on this instance to the running instance.\n      this.on = (event, listener) => {\n        logger.info('proxying the \"%s\" listener', event)\n\n        // Add listeners to the running instance so they appear\n        // at the top of the event listeners list and are executed first.\n        runningInstance.emitter.addListener(event, listener)\n\n        // Ensure that once this interceptor instance is disposed,\n        // it removes all listeners it has appended to the running interceptor instance.\n        this.subscriptions.push(() => {\n          runningInstance.emitter.removeListener(event, listener)\n          logger.info('removed proxied \"%s\" listener!', event)\n        })\n\n        return this\n      }\n\n      this.readyState = InterceptorReadyState.APPLIED\n\n      return\n    }\n\n    logger.info('no running instance found, setting up a new instance...')\n\n    // Setup the interceptor.\n    this.setup()\n\n    // Store the newly applied interceptor instance globally.\n    this.setInstance()\n\n    this.readyState = InterceptorReadyState.APPLIED\n  }\n\n  /**\n   * Setup the module augments and stubs necessary for this interceptor.\n   * This method is not run if there's a running interceptor instance\n   * to prevent instantiating an interceptor multiple times.\n   */\n  protected setup(): void {}\n\n  /**\n   * Listen to the interceptor's public events.\n   */\n  public on<EventName extends ExtractEventNames<Events>>(\n    event: EventName,\n    listener: Listener<Events[EventName]>\n  ): this {\n    const logger = this.logger.extend('on')\n\n    if (\n      this.readyState === InterceptorReadyState.DISPOSING ||\n      this.readyState === InterceptorReadyState.DISPOSED\n    ) {\n      logger.info('cannot listen to events, already disposed!')\n      return this\n    }\n\n    logger.info('adding \"%s\" event listener:', event, listener)\n\n    this.emitter.on(event, listener)\n    return this\n  }\n\n  public once<EventName extends ExtractEventNames<Events>>(\n    event: EventName,\n    listener: Listener<Events[EventName]>\n  ): this {\n    this.emitter.once(event, listener)\n    return this\n  }\n\n  public off<EventName extends ExtractEventNames<Events>>(\n    event: EventName,\n    listener: Listener<Events[EventName]>\n  ): this {\n    this.emitter.off(event, listener)\n    return this\n  }\n\n  public removeAllListeners<EventName extends ExtractEventNames<Events>>(\n    event?: EventName\n  ): this {\n    this.emitter.removeAllListeners(event)\n    return this\n  }\n\n  /**\n   * Disposes of any side-effects this interceptor has introduced.\n   */\n  public dispose(): void {\n    const logger = this.logger.extend('dispose')\n\n    if (this.readyState === InterceptorReadyState.DISPOSED) {\n      logger.info('cannot dispose, already disposed!')\n      return\n    }\n\n    logger.info('disposing the interceptor...')\n    this.readyState = InterceptorReadyState.DISPOSING\n\n    if (!this.getInstance()) {\n      logger.info('no interceptors running, skipping dispose...')\n      return\n    }\n\n    // Delete the global symbol as soon as possible,\n    // indicating that the interceptor is no longer running.\n    this.clearInstance()\n\n    logger.info('global symbol deleted:', getGlobalSymbol(this.symbol))\n\n    if (this.subscriptions.length > 0) {\n      logger.info('disposing of %d subscriptions...', this.subscriptions.length)\n\n      for (const dispose of this.subscriptions) {\n        dispose()\n      }\n\n      this.subscriptions = []\n\n      logger.info('disposed of all subscriptions!', this.subscriptions.length)\n    }\n\n    this.emitter.removeAllListeners()\n    logger.info('destroyed the listener!')\n\n    this.readyState = InterceptorReadyState.DISPOSED\n  }\n\n  private getInstance(): this | undefined {\n    const instance = getGlobalSymbol<this>(this.symbol)\n    this.logger.info('retrieved global instance:', instance?.constructor?.name)\n    return instance\n  }\n\n  private setInstance(): void {\n    setGlobalSymbol(this.symbol, this)\n    this.logger.info('set global instance!', this.symbol.description)\n  }\n\n  private clearInstance(): void {\n    deleteGlobalSymbol(this.symbol)\n    this.logger.info('cleared global instance!', this.symbol.description)\n  }\n}\n","/**\n * Generate a random ID string to represent a request.\n * @example\n * createRequestId()\n * // \"f774b6c9c600f\"\n */\nexport function createRequestId(): string {\n  return Math.random().toString(16).slice(2)\n}\n","import { EventMap, Listener } from 'strict-event-emitter'\nimport { Interceptor, ExtractEventNames } from './Interceptor'\n\nexport interface BatchInterceptorOptions<\n  InterceptorList extends ReadonlyArray<Interceptor<any>>\n> {\n  name: string\n  interceptors: InterceptorList\n}\n\nexport type ExtractEventMapType<\n  InterceptorList extends ReadonlyArray<Interceptor<any>>\n> = InterceptorList extends ReadonlyArray<infer InterceptorType>\n  ? InterceptorType extends Interceptor<infer EventMap>\n    ? EventMap\n    : never\n  : never\n\n/**\n * A batch interceptor that exposes a single interface\n * to apply and operate with multiple interceptors at once.\n */\nexport class BatchInterceptor<\n  InterceptorList extends ReadonlyArray<Interceptor<any>>,\n  Events extends EventMap = ExtractEventMapType<InterceptorList>\n> extends Interceptor<Events> {\n  static symbol: symbol\n\n  private interceptors: InterceptorList\n\n  constructor(options: BatchInterceptorOptions<InterceptorList>) {\n    BatchInterceptor.symbol = Symbol(options.name)\n    super(BatchInterceptor.symbol)\n    this.interceptors = options.interceptors\n  }\n\n  protected setup() {\n    const logger = this.logger.extend('setup')\n\n    logger.info('applying all %d interceptors...', this.interceptors.length)\n\n    for (const interceptor of this.interceptors) {\n      logger.info('applying \"%s\" interceptor...', interceptor.constructor.name)\n      interceptor.apply()\n\n      logger.info('adding interceptor dispose subscription')\n      this.subscriptions.push(() => interceptor.dispose())\n    }\n  }\n\n  public on<EventName extends ExtractEventNames<Events>>(\n    event: EventName,\n    listener: Listener<Events[EventName]>\n  ): this {\n    // Instead of adding a listener to the batch interceptor,\n    // propagate the listener to each of the individual interceptors.\n    for (const interceptor of this.interceptors) {\n      interceptor.on(event, listener)\n    }\n\n    return this\n  }\n\n  public once<EventName extends ExtractEventNames<Events>>(\n    event: EventName,\n    listener: Listener<Events[EventName]>\n  ): this {\n    for (const interceptor of this.interceptors) {\n      interceptor.once(event, listener)\n    }\n\n    return this\n  }\n\n  public off<EventName extends ExtractEventNames<Events>>(\n    event: EventName,\n    listener: Listener<Events[EventName]>\n  ): this {\n    for (const interceptor of this.interceptors) {\n      interceptor.off(event, listener)\n    }\n\n    return this\n  }\n\n  public removeAllListeners<EventName extends ExtractEventNames<Events>>(\n    event?: EventName | undefined\n  ): this {\n    for (const interceptors of this.interceptors) {\n      interceptors.removeAllListeners(event)\n    }\n\n    return this\n  }\n}\n","/**\n * Removes query parameters and hashes from a given URL.\n */\nexport function getCleanUrl(url: URL, isAbsolute: boolean = true): string {\n  return [isAbsolute && url.origin, url.pathname].filter(Boolean).join('')\n}\n","const REDUNDANT_CHARACTERS_EXP = /[\\?|#].*$/g\n\nexport function getSearchParams(path: string) {\n  return new URL(`/${path}`, 'http://localhost').searchParams\n}\n\n/**\n * Removes search parameters and the fragment\n * from a given URL string.\n */\nexport function cleanUrl(path: string): string {\n  // If the path ends with an optional path parameter,\n  // return it as-is.\n  if (path.endsWith('?')) {\n    return path\n  }\n\n  // Otherwise, remove the search and fragment from it.\n  return path.replace(REDUNDANT_CHARACTERS_EXP, '')\n}\n","/**\n * Determines if the given URL string is an absolute URL.\n */\nexport function isAbsoluteUrl(url: string): boolean {\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\n}\n","import { isAbsoluteUrl } from './isAbsoluteUrl'\n\n/**\n * Returns an absolute URL based on the given path.\n */\nexport function getAbsoluteUrl(path: string, baseUrl?: string): string {\n  // already absolute URL\n  if (isAbsoluteUrl(path)) {\n    return path\n  }\n\n  // Ignore path with pattern start with *\n  if (path.startsWith('*')) {\n    return path\n  }\n\n  // Resolve a relative request URL against a given custom \"baseUrl\"\n  // or the document baseURI (in the case of browser/browser-like environments).\n  const origin =\n    baseUrl || (typeof document !== 'undefined' && document.baseURI)\n\n  return origin\n    ? // Encode and decode the path to preserve escaped characters.\n      decodeURI(new URL(encodeURI(path), origin).href)\n    : path\n}\n","import type { Path } from './matchRequestUrl'\nimport { cleanUrl } from '../url/cleanUrl'\nimport { getAbsoluteUrl } from '../url/getAbsoluteUrl'\n\n/**\n * Normalizes a given request handler path:\n * - Preserves RegExp.\n * - Removes query parameters and hashes.\n * - Rebases relative URLs against the \"baseUrl\" or the current location.\n * - Preserves relative URLs in Node.js, unless specified otherwise.\n * - Preserves optional path parameters.\n */\nexport function normalizePath(path: Path, baseUrl?: string): Path {\n  // RegExp paths do not need normalization.\n  if (path instanceof RegExp) {\n    return path\n  }\n\n  const maybeAbsoluteUrl = getAbsoluteUrl(path, baseUrl)\n\n  return cleanUrl(maybeAbsoluteUrl)\n}\n","import { match } from 'path-to-regexp'\nimport { getCleanUrl } from '@mswjs/interceptors'\nimport { normalizePath } from './normalizePath'\n\nexport type Path = string | RegExp\nexport type PathParams<KeyType extends keyof any = string> = {\n  [ParamName in KeyType]?: string | ReadonlyArray<string>\n}\n\nexport interface Match {\n  matches: boolean\n  params?: PathParams\n}\n\n/**\n * Coerce a path supported by MSW into a path\n * supported by \"path-to-regexp\".\n */\nexport function coercePath(path: string): string {\n  return (\n    path\n      /**\n       * Replace wildcards (\"*\") with unnamed capturing groups\n       * because \"path-to-regexp\" doesn't support wildcards.\n       * Ignore path parameter' modifiers (i.e. \":name*\").\n       */\n      .replace(\n        /([:a-zA-Z_-]*)(\\*{1,2})+/g,\n        (_, parameterName: string | undefined, wildcard: string) => {\n          const expression = '(.*)'\n\n          if (!parameterName) {\n            return expression\n          }\n\n          return parameterName.startsWith(':')\n            ? `${parameterName}${wildcard}`\n            : `${parameterName}${expression}`\n        },\n      )\n      /**\n       * Escape the port so that \"path-to-regexp\" can match\n       * absolute URLs including port numbers.\n       */\n      .replace(/([^\\/])(:)(?=\\d+)/, '$1\\\\$2')\n      /**\n       * Escape the protocol so that \"path-to-regexp\" could match\n       * absolute URL.\n       * @see https://github.com/pillarjs/path-to-regexp/issues/259\n       */\n      .replace(/^([^\\/]+)(:)(?=\\/\\/)/, '$1\\\\$2')\n  )\n}\n\n/**\n * Returns the result of matching given request URL against a mask.\n */\nexport function matchRequestUrl(url: URL, path: Path, baseUrl?: string): Match {\n  const normalizedPath = normalizePath(path, baseUrl)\n  const cleanPath =\n    typeof normalizedPath === 'string'\n      ? coercePath(normalizedPath)\n      : normalizedPath\n\n  const cleanUrl = getCleanUrl(url)\n  const result = match(cleanPath, { decode: decodeURIComponent })(cleanUrl)\n  const params = (result && (result.params as PathParams)) || {}\n\n  return {\n    matches: result !== false,\n    params,\n  }\n}\n\nexport function isPath(value: unknown): value is Path {\n  return typeof value === 'string' || value instanceof RegExp\n}\n","/**\n * Returns a relative URL if the given request URL is relative\n * to the current origin. Otherwise returns an absolute URL.\n */\nexport function toPublicUrl(url: string | URL): string {\n  if (typeof location === 'undefined') {\n    return url.toString()\n  }\n\n  const urlInstance = url instanceof URL ? url : new URL(url)\n\n  return urlInstance.origin === location.origin\n    ? urlInstance.pathname\n    : urlInstance.origin + urlInstance.pathname\n}\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __commonJS = (cb, mod) => function __require() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/cookie/index.js\nvar require_cookie = __commonJS({\n  \"node_modules/cookie/index.js\"(exports) {\n    \"use strict\";\n    exports.parse = parse;\n    exports.serialize = serialize;\n    var __toString = Object.prototype.toString;\n    var __hasOwnProperty = Object.prototype.hasOwnProperty;\n    var cookieNameRegExp = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n    var cookieValueRegExp = /^(\"?)[\\u0021\\u0023-\\u002B\\u002D-\\u003A\\u003C-\\u005B\\u005D-\\u007E]*\\1$/;\n    var domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n    var pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\n    function parse(str, opt) {\n      if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n      }\n      var obj = {};\n      var len = str.length;\n      if (len < 2) return obj;\n      var dec = opt && opt.decode || decode;\n      var index = 0;\n      var eqIdx = 0;\n      var endIdx = 0;\n      do {\n        eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1) break;\n        endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n          endIdx = len;\n        } else if (eqIdx > endIdx) {\n          index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n          continue;\n        }\n        var keyStartIdx = startIndex(str, index, eqIdx);\n        var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        var key = str.slice(keyStartIdx, keyEndIdx);\n        if (!__hasOwnProperty.call(obj, key)) {\n          var valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n          var valEndIdx = endIndex(str, endIdx, valStartIdx);\n          if (str.charCodeAt(valStartIdx) === 34 && str.charCodeAt(valEndIdx - 1) === 34) {\n            valStartIdx++;\n            valEndIdx--;\n          }\n          var val = str.slice(valStartIdx, valEndIdx);\n          obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n      } while (index < len);\n      return obj;\n    }\n    function startIndex(str, index, max) {\n      do {\n        var code = str.charCodeAt(index);\n        if (code !== 32 && code !== 9) return index;\n      } while (++index < max);\n      return max;\n    }\n    function endIndex(str, index, min) {\n      while (index > min) {\n        var code = str.charCodeAt(--index);\n        if (code !== 32 && code !== 9) return index + 1;\n      }\n      return min;\n    }\n    function serialize(name, val, opt) {\n      var enc = opt && opt.encode || encodeURIComponent;\n      if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n      }\n      if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n      }\n      var value = enc(val);\n      if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n      }\n      var str = name + \"=\" + value;\n      if (!opt) return str;\n      if (null != opt.maxAge) {\n        var maxAge = Math.floor(opt.maxAge);\n        if (!isFinite(maxAge)) {\n          throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + maxAge;\n      }\n      if (opt.domain) {\n        if (!domainValueRegExp.test(opt.domain)) {\n          throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n      }\n      if (opt.path) {\n        if (!pathValueRegExp.test(opt.path)) {\n          throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n      }\n      if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n          throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n      }\n      if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n      }\n      if (opt.secure) {\n        str += \"; Secure\";\n      }\n      if (opt.partitioned) {\n        str += \"; Partitioned\";\n      }\n      if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch (priority) {\n          case \"low\":\n            str += \"; Priority=Low\";\n            break;\n          case \"medium\":\n            str += \"; Priority=Medium\";\n            break;\n          case \"high\":\n            str += \"; Priority=High\";\n            break;\n          default:\n            throw new TypeError(\"option priority is invalid\");\n        }\n      }\n      if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n          case true:\n            str += \"; SameSite=Strict\";\n            break;\n          case \"lax\":\n            str += \"; SameSite=Lax\";\n            break;\n          case \"strict\":\n            str += \"; SameSite=Strict\";\n            break;\n          case \"none\":\n            str += \"; SameSite=None\";\n            break;\n          default:\n            throw new TypeError(\"option sameSite is invalid\");\n        }\n      }\n      return str;\n    }\n    function decode(str) {\n      return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n    }\n    function isDate(val) {\n      return __toString.call(val) === \"[object Date]\";\n    }\n    function tryDecode(str, decode2) {\n      try {\n        return decode2(str);\n      } catch (e) {\n        return str;\n      }\n    }\n  }\n});\n\n// source.js\nvar import_cookie = __toESM(require_cookie(), 1);\nvar source_default = import_cookie.default;\nexport {\n  source_default as default\n};\n/*! Bundled license information:\n\ncookie/index.js:\n  (*!\n   * cookie\n   * Copyright(c) 2012-2014 Roman Shtylman\n   * Copyright(c) 2015 Douglas Christopher Wilson\n   * MIT Licensed\n   *)\n*/\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __require = /* @__PURE__ */ ((x) => typeof require !== \"undefined\" ? require : typeof Proxy !== \"undefined\" ? new Proxy(x, {\n  get: (a, b) => (typeof require !== \"undefined\" ? require : a)[b]\n}) : x)(function(x) {\n  if (typeof require !== \"undefined\") return require.apply(this, arguments);\n  throw Error('Dynamic require of \"' + x + '\" is not supported');\n});\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\n\n// node_modules/punycode/punycode.js\nvar require_punycode = __commonJS({\n  \"node_modules/punycode/punycode.js\"(exports, module) {\n    \"use strict\";\n    var maxInt = 2147483647;\n    var base = 36;\n    var tMin = 1;\n    var tMax = 26;\n    var skew = 38;\n    var damp = 700;\n    var initialBias = 72;\n    var initialN = 128;\n    var delimiter = \"-\";\n    var regexPunycode = /^xn--/;\n    var regexNonASCII = /[^\\0-\\x7F]/;\n    var regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g;\n    var errors = {\n      \"overflow\": \"Overflow: input needs wider integers to process\",\n      \"not-basic\": \"Illegal input >= 0x80 (not a basic code point)\",\n      \"invalid-input\": \"Invalid input\"\n    };\n    var baseMinusTMin = base - tMin;\n    var floor = Math.floor;\n    var stringFromCharCode = String.fromCharCode;\n    function error(type) {\n      throw new RangeError(errors[type]);\n    }\n    function map(array, callback) {\n      const result = [];\n      let length = array.length;\n      while (length--) {\n        result[length] = callback(array[length]);\n      }\n      return result;\n    }\n    function mapDomain(domain, callback) {\n      const parts = domain.split(\"@\");\n      let result = \"\";\n      if (parts.length > 1) {\n        result = parts[0] + \"@\";\n        domain = parts[1];\n      }\n      domain = domain.replace(regexSeparators, \".\");\n      const labels = domain.split(\".\");\n      const encoded = map(labels, callback).join(\".\");\n      return result + encoded;\n    }\n    function ucs2decode(string) {\n      const output = [];\n      let counter = 0;\n      const length = string.length;\n      while (counter < length) {\n        const value = string.charCodeAt(counter++);\n        if (value >= 55296 && value <= 56319 && counter < length) {\n          const extra = string.charCodeAt(counter++);\n          if ((extra & 64512) == 56320) {\n            output.push(((value & 1023) << 10) + (extra & 1023) + 65536);\n          } else {\n            output.push(value);\n            counter--;\n          }\n        } else {\n          output.push(value);\n        }\n      }\n      return output;\n    }\n    var ucs2encode = (codePoints) => String.fromCodePoint(...codePoints);\n    var basicToDigit = function(codePoint) {\n      if (codePoint >= 48 && codePoint < 58) {\n        return 26 + (codePoint - 48);\n      }\n      if (codePoint >= 65 && codePoint < 91) {\n        return codePoint - 65;\n      }\n      if (codePoint >= 97 && codePoint < 123) {\n        return codePoint - 97;\n      }\n      return base;\n    };\n    var digitToBasic = function(digit, flag) {\n      return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n    };\n    var adapt = function(delta, numPoints, firstTime) {\n      let k = 0;\n      delta = firstTime ? floor(delta / damp) : delta >> 1;\n      delta += floor(delta / numPoints);\n      for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n        delta = floor(delta / baseMinusTMin);\n      }\n      return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n    };\n    var decode = function(input) {\n      const output = [];\n      const inputLength = input.length;\n      let i = 0;\n      let n = initialN;\n      let bias = initialBias;\n      let basic = input.lastIndexOf(delimiter);\n      if (basic < 0) {\n        basic = 0;\n      }\n      for (let j = 0; j < basic; ++j) {\n        if (input.charCodeAt(j) >= 128) {\n          error(\"not-basic\");\n        }\n        output.push(input.charCodeAt(j));\n      }\n      for (let index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {\n        const oldi = i;\n        for (let w = 1, k = base; ; k += base) {\n          if (index >= inputLength) {\n            error(\"invalid-input\");\n          }\n          const digit = basicToDigit(input.charCodeAt(index++));\n          if (digit >= base) {\n            error(\"invalid-input\");\n          }\n          if (digit > floor((maxInt - i) / w)) {\n            error(\"overflow\");\n          }\n          i += digit * w;\n          const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n          if (digit < t) {\n            break;\n          }\n          const baseMinusT = base - t;\n          if (w > floor(maxInt / baseMinusT)) {\n            error(\"overflow\");\n          }\n          w *= baseMinusT;\n        }\n        const out = output.length + 1;\n        bias = adapt(i - oldi, out, oldi == 0);\n        if (floor(i / out) > maxInt - n) {\n          error(\"overflow\");\n        }\n        n += floor(i / out);\n        i %= out;\n        output.splice(i++, 0, n);\n      }\n      return String.fromCodePoint(...output);\n    };\n    var encode = function(input) {\n      const output = [];\n      input = ucs2decode(input);\n      const inputLength = input.length;\n      let n = initialN;\n      let delta = 0;\n      let bias = initialBias;\n      for (const currentValue of input) {\n        if (currentValue < 128) {\n          output.push(stringFromCharCode(currentValue));\n        }\n      }\n      const basicLength = output.length;\n      let handledCPCount = basicLength;\n      if (basicLength) {\n        output.push(delimiter);\n      }\n      while (handledCPCount < inputLength) {\n        let m = maxInt;\n        for (const currentValue of input) {\n          if (currentValue >= n && currentValue < m) {\n            m = currentValue;\n          }\n        }\n        const handledCPCountPlusOne = handledCPCount + 1;\n        if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n          error(\"overflow\");\n        }\n        delta += (m - n) * handledCPCountPlusOne;\n        n = m;\n        for (const currentValue of input) {\n          if (currentValue < n && ++delta > maxInt) {\n            error(\"overflow\");\n          }\n          if (currentValue === n) {\n            let q = delta;\n            for (let k = base; ; k += base) {\n              const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n              if (q < t) {\n                break;\n              }\n              const qMinusT = q - t;\n              const baseMinusT = base - t;\n              output.push(\n                stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n              );\n              q = floor(qMinusT / baseMinusT);\n            }\n            output.push(stringFromCharCode(digitToBasic(q, 0)));\n            bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n            delta = 0;\n            ++handledCPCount;\n          }\n        }\n        ++delta;\n        ++n;\n      }\n      return output.join(\"\");\n    };\n    var toUnicode = function(input) {\n      return mapDomain(input, function(string) {\n        return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n      });\n    };\n    var toASCII = function(input) {\n      return mapDomain(input, function(string) {\n        return regexNonASCII.test(string) ? \"xn--\" + encode(string) : string;\n      });\n    };\n    var punycode = {\n      /**\n       * A string representing the current Punycode.js version number.\n       * @memberOf punycode\n       * @type String\n       */\n      \"version\": \"2.3.1\",\n      /**\n       * An object of methods to convert from JavaScript's internal character\n       * representation (UCS-2) to Unicode code points, and back.\n       * @see <https://mathiasbynens.be/notes/javascript-encoding>\n       * @memberOf punycode\n       * @type Object\n       */\n      \"ucs2\": {\n        \"decode\": ucs2decode,\n        \"encode\": ucs2encode\n      },\n      \"decode\": decode,\n      \"encode\": encode,\n      \"toASCII\": toASCII,\n      \"toUnicode\": toUnicode\n    };\n    module.exports = punycode;\n  }\n});\n\n// node_modules/requires-port/index.js\nvar require_requires_port = __commonJS({\n  \"node_modules/requires-port/index.js\"(exports, module) {\n    \"use strict\";\n    module.exports = function required(port, protocol) {\n      protocol = protocol.split(\":\")[0];\n      port = +port;\n      if (!port) return false;\n      switch (protocol) {\n        case \"http\":\n        case \"ws\":\n          return port !== 80;\n        case \"https\":\n        case \"wss\":\n          return port !== 443;\n        case \"ftp\":\n          return port !== 21;\n        case \"gopher\":\n          return port !== 70;\n        case \"file\":\n          return false;\n      }\n      return port !== 0;\n    };\n  }\n});\n\n// node_modules/querystringify/index.js\nvar require_querystringify = __commonJS({\n  \"node_modules/querystringify/index.js\"(exports) {\n    \"use strict\";\n    var has = Object.prototype.hasOwnProperty;\n    var undef;\n    function decode(input) {\n      try {\n        return decodeURIComponent(input.replace(/\\+/g, \" \"));\n      } catch (e) {\n        return null;\n      }\n    }\n    function encode(input) {\n      try {\n        return encodeURIComponent(input);\n      } catch (e) {\n        return null;\n      }\n    }\n    function querystring(query) {\n      var parser = /([^=?#&]+)=?([^&]*)/g, result = {}, part;\n      while (part = parser.exec(query)) {\n        var key = decode(part[1]), value = decode(part[2]);\n        if (key === null || value === null || key in result) continue;\n        result[key] = value;\n      }\n      return result;\n    }\n    function querystringify(obj, prefix) {\n      prefix = prefix || \"\";\n      var pairs = [], value, key;\n      if (\"string\" !== typeof prefix) prefix = \"?\";\n      for (key in obj) {\n        if (has.call(obj, key)) {\n          value = obj[key];\n          if (!value && (value === null || value === undef || isNaN(value))) {\n            value = \"\";\n          }\n          key = encode(key);\n          value = encode(value);\n          if (key === null || value === null) continue;\n          pairs.push(key + \"=\" + value);\n        }\n      }\n      return pairs.length ? prefix + pairs.join(\"&\") : \"\";\n    }\n    exports.stringify = querystringify;\n    exports.parse = querystring;\n  }\n});\n\n// node_modules/url-parse/index.js\nvar require_url_parse = __commonJS({\n  \"node_modules/url-parse/index.js\"(exports, module) {\n    \"use strict\";\n    var required = require_requires_port();\n    var qs = require_querystringify();\n    var controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/;\n    var CRHTLF = /[\\n\\r\\t]/g;\n    var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n    var port = /:\\d+$/;\n    var protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i;\n    var windowsDriveLetter = /^[a-zA-Z]:/;\n    function trimLeft(str) {\n      return (str ? str : \"\").toString().replace(controlOrWhitespace, \"\");\n    }\n    var rules = [\n      [\"#\", \"hash\"],\n      // Extract from the back.\n      [\"?\", \"query\"],\n      // Extract from the back.\n      function sanitize(address, url) {\n        return isSpecial(url.protocol) ? address.replace(/\\\\/g, \"/\") : address;\n      },\n      [\"/\", \"pathname\"],\n      // Extract from the back.\n      [\"@\", \"auth\", 1],\n      // Extract from the front.\n      [NaN, \"host\", void 0, 1, 1],\n      // Set left over value.\n      [/:(\\d*)$/, \"port\", void 0, 1],\n      // RegExp the back.\n      [NaN, \"hostname\", void 0, 1, 1]\n      // Set left over.\n    ];\n    var ignore = { hash: 1, query: 1 };\n    function lolcation(loc) {\n      var globalVar;\n      if (typeof window !== \"undefined\") globalVar = window;\n      else if (typeof global !== \"undefined\") globalVar = global;\n      else if (typeof self !== \"undefined\") globalVar = self;\n      else globalVar = {};\n      var location = globalVar.location || {};\n      loc = loc || location;\n      var finaldestination = {}, type = typeof loc, key;\n      if (\"blob:\" === loc.protocol) {\n        finaldestination = new Url(unescape(loc.pathname), {});\n      } else if (\"string\" === type) {\n        finaldestination = new Url(loc, {});\n        for (key in ignore) delete finaldestination[key];\n      } else if (\"object\" === type) {\n        for (key in loc) {\n          if (key in ignore) continue;\n          finaldestination[key] = loc[key];\n        }\n        if (finaldestination.slashes === void 0) {\n          finaldestination.slashes = slashes.test(loc.href);\n        }\n      }\n      return finaldestination;\n    }\n    function isSpecial(scheme) {\n      return scheme === \"file:\" || scheme === \"ftp:\" || scheme === \"http:\" || scheme === \"https:\" || scheme === \"ws:\" || scheme === \"wss:\";\n    }\n    function extractProtocol(address, location) {\n      address = trimLeft(address);\n      address = address.replace(CRHTLF, \"\");\n      location = location || {};\n      var match = protocolre.exec(address);\n      var protocol = match[1] ? match[1].toLowerCase() : \"\";\n      var forwardSlashes = !!match[2];\n      var otherSlashes = !!match[3];\n      var slashesCount = 0;\n      var rest;\n      if (forwardSlashes) {\n        if (otherSlashes) {\n          rest = match[2] + match[3] + match[4];\n          slashesCount = match[2].length + match[3].length;\n        } else {\n          rest = match[2] + match[4];\n          slashesCount = match[2].length;\n        }\n      } else {\n        if (otherSlashes) {\n          rest = match[3] + match[4];\n          slashesCount = match[3].length;\n        } else {\n          rest = match[4];\n        }\n      }\n      if (protocol === \"file:\") {\n        if (slashesCount >= 2) {\n          rest = rest.slice(2);\n        }\n      } else if (isSpecial(protocol)) {\n        rest = match[4];\n      } else if (protocol) {\n        if (forwardSlashes) {\n          rest = rest.slice(2);\n        }\n      } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n        rest = match[4];\n      }\n      return {\n        protocol,\n        slashes: forwardSlashes || isSpecial(protocol),\n        slashesCount,\n        rest\n      };\n    }\n    function resolve(relative, base) {\n      if (relative === \"\") return base;\n      var path = (base || \"/\").split(\"/\").slice(0, -1).concat(relative.split(\"/\")), i = path.length, last = path[i - 1], unshift = false, up = 0;\n      while (i--) {\n        if (path[i] === \".\") {\n          path.splice(i, 1);\n        } else if (path[i] === \"..\") {\n          path.splice(i, 1);\n          up++;\n        } else if (up) {\n          if (i === 0) unshift = true;\n          path.splice(i, 1);\n          up--;\n        }\n      }\n      if (unshift) path.unshift(\"\");\n      if (last === \".\" || last === \"..\") path.push(\"\");\n      return path.join(\"/\");\n    }\n    function Url(address, location, parser) {\n      address = trimLeft(address);\n      address = address.replace(CRHTLF, \"\");\n      if (!(this instanceof Url)) {\n        return new Url(address, location, parser);\n      }\n      var relative, extracted, parse, instruction, index, key, instructions = rules.slice(), type = typeof location, url = this, i = 0;\n      if (\"object\" !== type && \"string\" !== type) {\n        parser = location;\n        location = null;\n      }\n      if (parser && \"function\" !== typeof parser) parser = qs.parse;\n      location = lolcation(location);\n      extracted = extractProtocol(address || \"\", location);\n      relative = !extracted.protocol && !extracted.slashes;\n      url.slashes = extracted.slashes || relative && location.slashes;\n      url.protocol = extracted.protocol || location.protocol || \"\";\n      address = extracted.rest;\n      if (extracted.protocol === \"file:\" && (extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) || !extracted.slashes && (extracted.protocol || extracted.slashesCount < 2 || !isSpecial(url.protocol))) {\n        instructions[3] = [/(.*)/, \"pathname\"];\n      }\n      for (; i < instructions.length; i++) {\n        instruction = instructions[i];\n        if (typeof instruction === \"function\") {\n          address = instruction(address, url);\n          continue;\n        }\n        parse = instruction[0];\n        key = instruction[1];\n        if (parse !== parse) {\n          url[key] = address;\n        } else if (\"string\" === typeof parse) {\n          index = parse === \"@\" ? address.lastIndexOf(parse) : address.indexOf(parse);\n          if (~index) {\n            if (\"number\" === typeof instruction[2]) {\n              url[key] = address.slice(0, index);\n              address = address.slice(index + instruction[2]);\n            } else {\n              url[key] = address.slice(index);\n              address = address.slice(0, index);\n            }\n          }\n        } else if (index = parse.exec(address)) {\n          url[key] = index[1];\n          address = address.slice(0, index.index);\n        }\n        url[key] = url[key] || (relative && instruction[3] ? location[key] || \"\" : \"\");\n        if (instruction[4]) url[key] = url[key].toLowerCase();\n      }\n      if (parser) url.query = parser(url.query);\n      if (relative && location.slashes && url.pathname.charAt(0) !== \"/\" && (url.pathname !== \"\" || location.pathname !== \"\")) {\n        url.pathname = resolve(url.pathname, location.pathname);\n      }\n      if (url.pathname.charAt(0) !== \"/\" && isSpecial(url.protocol)) {\n        url.pathname = \"/\" + url.pathname;\n      }\n      if (!required(url.port, url.protocol)) {\n        url.host = url.hostname;\n        url.port = \"\";\n      }\n      url.username = url.password = \"\";\n      if (url.auth) {\n        index = url.auth.indexOf(\":\");\n        if (~index) {\n          url.username = url.auth.slice(0, index);\n          url.username = encodeURIComponent(decodeURIComponent(url.username));\n          url.password = url.auth.slice(index + 1);\n          url.password = encodeURIComponent(decodeURIComponent(url.password));\n        } else {\n          url.username = encodeURIComponent(decodeURIComponent(url.auth));\n        }\n        url.auth = url.password ? url.username + \":\" + url.password : url.username;\n      }\n      url.origin = url.protocol !== \"file:\" && isSpecial(url.protocol) && url.host ? url.protocol + \"//\" + url.host : \"null\";\n      url.href = url.toString();\n    }\n    function set(part, value, fn) {\n      var url = this;\n      switch (part) {\n        case \"query\":\n          if (\"string\" === typeof value && value.length) {\n            value = (fn || qs.parse)(value);\n          }\n          url[part] = value;\n          break;\n        case \"port\":\n          url[part] = value;\n          if (!required(value, url.protocol)) {\n            url.host = url.hostname;\n            url[part] = \"\";\n          } else if (value) {\n            url.host = url.hostname + \":\" + value;\n          }\n          break;\n        case \"hostname\":\n          url[part] = value;\n          if (url.port) value += \":\" + url.port;\n          url.host = value;\n          break;\n        case \"host\":\n          url[part] = value;\n          if (port.test(value)) {\n            value = value.split(\":\");\n            url.port = value.pop();\n            url.hostname = value.join(\":\");\n          } else {\n            url.hostname = value;\n            url.port = \"\";\n          }\n          break;\n        case \"protocol\":\n          url.protocol = value.toLowerCase();\n          url.slashes = !fn;\n          break;\n        case \"pathname\":\n        case \"hash\":\n          if (value) {\n            var char = part === \"pathname\" ? \"/\" : \"#\";\n            url[part] = value.charAt(0) !== char ? char + value : value;\n          } else {\n            url[part] = value;\n          }\n          break;\n        case \"username\":\n        case \"password\":\n          url[part] = encodeURIComponent(value);\n          break;\n        case \"auth\":\n          var index = value.indexOf(\":\");\n          if (~index) {\n            url.username = value.slice(0, index);\n            url.username = encodeURIComponent(decodeURIComponent(url.username));\n            url.password = value.slice(index + 1);\n            url.password = encodeURIComponent(decodeURIComponent(url.password));\n          } else {\n            url.username = encodeURIComponent(decodeURIComponent(value));\n          }\n      }\n      for (var i = 0; i < rules.length; i++) {\n        var ins = rules[i];\n        if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n      }\n      url.auth = url.password ? url.username + \":\" + url.password : url.username;\n      url.origin = url.protocol !== \"file:\" && isSpecial(url.protocol) && url.host ? url.protocol + \"//\" + url.host : \"null\";\n      url.href = url.toString();\n      return url;\n    }\n    function toString(stringify) {\n      if (!stringify || \"function\" !== typeof stringify) stringify = qs.stringify;\n      var query, url = this, host = url.host, protocol = url.protocol;\n      if (protocol && protocol.charAt(protocol.length - 1) !== \":\") protocol += \":\";\n      var result = protocol + (url.protocol && url.slashes || isSpecial(url.protocol) ? \"//\" : \"\");\n      if (url.username) {\n        result += url.username;\n        if (url.password) result += \":\" + url.password;\n        result += \"@\";\n      } else if (url.password) {\n        result += \":\" + url.password;\n        result += \"@\";\n      } else if (url.protocol !== \"file:\" && isSpecial(url.protocol) && !host && url.pathname !== \"/\") {\n        result += \"@\";\n      }\n      if (host[host.length - 1] === \":\" || port.test(url.hostname) && !url.port) {\n        host += \":\";\n      }\n      result += host + url.pathname;\n      query = \"object\" === typeof url.query ? stringify(url.query) : url.query;\n      if (query) result += \"?\" !== query.charAt(0) ? \"?\" + query : query;\n      if (url.hash) result += url.hash;\n      return result;\n    }\n    Url.prototype = { set, toString };\n    Url.extractProtocol = extractProtocol;\n    Url.location = lolcation;\n    Url.trimLeft = trimLeft;\n    Url.qs = qs;\n    module.exports = Url;\n  }\n});\n\n// node_modules/psl/data/rules.json\nvar require_rules = __commonJS({\n  \"node_modules/psl/data/rules.json\"(exports, module) {\n    module.exports = [\n      \"ac\",\n      \"com.ac\",\n      \"edu.ac\",\n      \"gov.ac\",\n      \"net.ac\",\n      \"mil.ac\",\n      \"org.ac\",\n      \"ad\",\n      \"nom.ad\",\n      \"ae\",\n      \"co.ae\",\n      \"net.ae\",\n      \"org.ae\",\n      \"sch.ae\",\n      \"ac.ae\",\n      \"gov.ae\",\n      \"mil.ae\",\n      \"aero\",\n      \"accident-investigation.aero\",\n      \"accident-prevention.aero\",\n      \"aerobatic.aero\",\n      \"aeroclub.aero\",\n      \"aerodrome.aero\",\n      \"agents.aero\",\n      \"aircraft.aero\",\n      \"airline.aero\",\n      \"airport.aero\",\n      \"air-surveillance.aero\",\n      \"airtraffic.aero\",\n      \"air-traffic-control.aero\",\n      \"ambulance.aero\",\n      \"amusement.aero\",\n      \"association.aero\",\n      \"author.aero\",\n      \"ballooning.aero\",\n      \"broker.aero\",\n      \"caa.aero\",\n      \"cargo.aero\",\n      \"catering.aero\",\n      \"certification.aero\",\n      \"championship.aero\",\n      \"charter.aero\",\n      \"civilaviation.aero\",\n      \"club.aero\",\n      \"conference.aero\",\n      \"consultant.aero\",\n      \"consulting.aero\",\n      \"control.aero\",\n      \"council.aero\",\n      \"crew.aero\",\n      \"design.aero\",\n      \"dgca.aero\",\n      \"educator.aero\",\n      \"emergency.aero\",\n      \"engine.aero\",\n      \"engineer.aero\",\n      \"entertainment.aero\",\n      \"equipment.aero\",\n      \"exchange.aero\",\n      \"express.aero\",\n      \"federation.aero\",\n      \"flight.aero\",\n      \"fuel.aero\",\n      \"gliding.aero\",\n      \"government.aero\",\n      \"groundhandling.aero\",\n      \"group.aero\",\n      \"hanggliding.aero\",\n      \"homebuilt.aero\",\n      \"insurance.aero\",\n      \"journal.aero\",\n      \"journalist.aero\",\n      \"leasing.aero\",\n      \"logistics.aero\",\n      \"magazine.aero\",\n      \"maintenance.aero\",\n      \"media.aero\",\n      \"microlight.aero\",\n      \"modelling.aero\",\n      \"navigation.aero\",\n      \"parachuting.aero\",\n      \"paragliding.aero\",\n      \"passenger-association.aero\",\n      \"pilot.aero\",\n      \"press.aero\",\n      \"production.aero\",\n      \"recreation.aero\",\n      \"repbody.aero\",\n      \"res.aero\",\n      \"research.aero\",\n      \"rotorcraft.aero\",\n      \"safety.aero\",\n      \"scientist.aero\",\n      \"services.aero\",\n      \"show.aero\",\n      \"skydiving.aero\",\n      \"software.aero\",\n      \"student.aero\",\n      \"trader.aero\",\n      \"trading.aero\",\n      \"trainer.aero\",\n      \"union.aero\",\n      \"workinggroup.aero\",\n      \"works.aero\",\n      \"af\",\n      \"gov.af\",\n      \"com.af\",\n      \"org.af\",\n      \"net.af\",\n      \"edu.af\",\n      \"ag\",\n      \"com.ag\",\n      \"org.ag\",\n      \"net.ag\",\n      \"co.ag\",\n      \"nom.ag\",\n      \"ai\",\n      \"off.ai\",\n      \"com.ai\",\n      \"net.ai\",\n      \"org.ai\",\n      \"al\",\n      \"com.al\",\n      \"edu.al\",\n      \"gov.al\",\n      \"mil.al\",\n      \"net.al\",\n      \"org.al\",\n      \"am\",\n      \"co.am\",\n      \"com.am\",\n      \"commune.am\",\n      \"net.am\",\n      \"org.am\",\n      \"ao\",\n      \"ed.ao\",\n      \"gv.ao\",\n      \"og.ao\",\n      \"co.ao\",\n      \"pb.ao\",\n      \"it.ao\",\n      \"aq\",\n      \"ar\",\n      \"bet.ar\",\n      \"com.ar\",\n      \"coop.ar\",\n      \"edu.ar\",\n      \"gob.ar\",\n      \"gov.ar\",\n      \"int.ar\",\n      \"mil.ar\",\n      \"musica.ar\",\n      \"mutual.ar\",\n      \"net.ar\",\n      \"org.ar\",\n      \"senasa.ar\",\n      \"tur.ar\",\n      \"arpa\",\n      \"e164.arpa\",\n      \"in-addr.arpa\",\n      \"ip6.arpa\",\n      \"iris.arpa\",\n      \"uri.arpa\",\n      \"urn.arpa\",\n      \"as\",\n      \"gov.as\",\n      \"asia\",\n      \"at\",\n      \"ac.at\",\n      \"co.at\",\n      \"gv.at\",\n      \"or.at\",\n      \"sth.ac.at\",\n      \"au\",\n      \"com.au\",\n      \"net.au\",\n      \"org.au\",\n      \"edu.au\",\n      \"gov.au\",\n      \"asn.au\",\n      \"id.au\",\n      \"info.au\",\n      \"conf.au\",\n      \"oz.au\",\n      \"act.au\",\n      \"nsw.au\",\n      \"nt.au\",\n      \"qld.au\",\n      \"sa.au\",\n      \"tas.au\",\n      \"vic.au\",\n      \"wa.au\",\n      \"act.edu.au\",\n      \"catholic.edu.au\",\n      \"nsw.edu.au\",\n      \"nt.edu.au\",\n      \"qld.edu.au\",\n      \"sa.edu.au\",\n      \"tas.edu.au\",\n      \"vic.edu.au\",\n      \"wa.edu.au\",\n      \"qld.gov.au\",\n      \"sa.gov.au\",\n      \"tas.gov.au\",\n      \"vic.gov.au\",\n      \"wa.gov.au\",\n      \"schools.nsw.edu.au\",\n      \"aw\",\n      \"com.aw\",\n      \"ax\",\n      \"az\",\n      \"com.az\",\n      \"net.az\",\n      \"int.az\",\n      \"gov.az\",\n      \"org.az\",\n      \"edu.az\",\n      \"info.az\",\n      \"pp.az\",\n      \"mil.az\",\n      \"name.az\",\n      \"pro.az\",\n      \"biz.az\",\n      \"ba\",\n      \"com.ba\",\n      \"edu.ba\",\n      \"gov.ba\",\n      \"mil.ba\",\n      \"net.ba\",\n      \"org.ba\",\n      \"bb\",\n      \"biz.bb\",\n      \"co.bb\",\n      \"com.bb\",\n      \"edu.bb\",\n      \"gov.bb\",\n      \"info.bb\",\n      \"net.bb\",\n      \"org.bb\",\n      \"store.bb\",\n      \"tv.bb\",\n      \"*.bd\",\n      \"be\",\n      \"ac.be\",\n      \"bf\",\n      \"gov.bf\",\n      \"bg\",\n      \"a.bg\",\n      \"b.bg\",\n      \"c.bg\",\n      \"d.bg\",\n      \"e.bg\",\n      \"f.bg\",\n      \"g.bg\",\n      \"h.bg\",\n      \"i.bg\",\n      \"j.bg\",\n      \"k.bg\",\n      \"l.bg\",\n      \"m.bg\",\n      \"n.bg\",\n      \"o.bg\",\n      \"p.bg\",\n      \"q.bg\",\n      \"r.bg\",\n      \"s.bg\",\n      \"t.bg\",\n      \"u.bg\",\n      \"v.bg\",\n      \"w.bg\",\n      \"x.bg\",\n      \"y.bg\",\n      \"z.bg\",\n      \"0.bg\",\n      \"1.bg\",\n      \"2.bg\",\n      \"3.bg\",\n      \"4.bg\",\n      \"5.bg\",\n      \"6.bg\",\n      \"7.bg\",\n      \"8.bg\",\n      \"9.bg\",\n      \"bh\",\n      \"com.bh\",\n      \"edu.bh\",\n      \"net.bh\",\n      \"org.bh\",\n      \"gov.bh\",\n      \"bi\",\n      \"co.bi\",\n      \"com.bi\",\n      \"edu.bi\",\n      \"or.bi\",\n      \"org.bi\",\n      \"biz\",\n      \"bj\",\n      \"asso.bj\",\n      \"barreau.bj\",\n      \"gouv.bj\",\n      \"bm\",\n      \"com.bm\",\n      \"edu.bm\",\n      \"gov.bm\",\n      \"net.bm\",\n      \"org.bm\",\n      \"bn\",\n      \"com.bn\",\n      \"edu.bn\",\n      \"gov.bn\",\n      \"net.bn\",\n      \"org.bn\",\n      \"bo\",\n      \"com.bo\",\n      \"edu.bo\",\n      \"gob.bo\",\n      \"int.bo\",\n      \"org.bo\",\n      \"net.bo\",\n      \"mil.bo\",\n      \"tv.bo\",\n      \"web.bo\",\n      \"academia.bo\",\n      \"agro.bo\",\n      \"arte.bo\",\n      \"blog.bo\",\n      \"bolivia.bo\",\n      \"ciencia.bo\",\n      \"cooperativa.bo\",\n      \"democracia.bo\",\n      \"deporte.bo\",\n      \"ecologia.bo\",\n      \"economia.bo\",\n      \"empresa.bo\",\n      \"indigena.bo\",\n      \"industria.bo\",\n      \"info.bo\",\n      \"medicina.bo\",\n      \"movimiento.bo\",\n      \"musica.bo\",\n      \"natural.bo\",\n      \"nombre.bo\",\n      \"noticias.bo\",\n      \"patria.bo\",\n      \"politica.bo\",\n      \"profesional.bo\",\n      \"plurinacional.bo\",\n      \"pueblo.bo\",\n      \"revista.bo\",\n      \"salud.bo\",\n      \"tecnologia.bo\",\n      \"tksat.bo\",\n      \"transporte.bo\",\n      \"wiki.bo\",\n      \"br\",\n      \"9guacu.br\",\n      \"abc.br\",\n      \"adm.br\",\n      \"adv.br\",\n      \"agr.br\",\n      \"aju.br\",\n      \"am.br\",\n      \"anani.br\",\n      \"aparecida.br\",\n      \"app.br\",\n      \"arq.br\",\n      \"art.br\",\n      \"ato.br\",\n      \"b.br\",\n      \"barueri.br\",\n      \"belem.br\",\n      \"bhz.br\",\n      \"bib.br\",\n      \"bio.br\",\n      \"blog.br\",\n      \"bmd.br\",\n      \"boavista.br\",\n      \"bsb.br\",\n      \"campinagrande.br\",\n      \"campinas.br\",\n      \"caxias.br\",\n      \"cim.br\",\n      \"cng.br\",\n      \"cnt.br\",\n      \"com.br\",\n      \"contagem.br\",\n      \"coop.br\",\n      \"coz.br\",\n      \"cri.br\",\n      \"cuiaba.br\",\n      \"curitiba.br\",\n      \"def.br\",\n      \"des.br\",\n      \"det.br\",\n      \"dev.br\",\n      \"ecn.br\",\n      \"eco.br\",\n      \"edu.br\",\n      \"emp.br\",\n      \"enf.br\",\n      \"eng.br\",\n      \"esp.br\",\n      \"etc.br\",\n      \"eti.br\",\n      \"far.br\",\n      \"feira.br\",\n      \"flog.br\",\n      \"floripa.br\",\n      \"fm.br\",\n      \"fnd.br\",\n      \"fortal.br\",\n      \"fot.br\",\n      \"foz.br\",\n      \"fst.br\",\n      \"g12.br\",\n      \"geo.br\",\n      \"ggf.br\",\n      \"goiania.br\",\n      \"gov.br\",\n      \"ac.gov.br\",\n      \"al.gov.br\",\n      \"am.gov.br\",\n      \"ap.gov.br\",\n      \"ba.gov.br\",\n      \"ce.gov.br\",\n      \"df.gov.br\",\n      \"es.gov.br\",\n      \"go.gov.br\",\n      \"ma.gov.br\",\n      \"mg.gov.br\",\n      \"ms.gov.br\",\n      \"mt.gov.br\",\n      \"pa.gov.br\",\n      \"pb.gov.br\",\n      \"pe.gov.br\",\n      \"pi.gov.br\",\n      \"pr.gov.br\",\n      \"rj.gov.br\",\n      \"rn.gov.br\",\n      \"ro.gov.br\",\n      \"rr.gov.br\",\n      \"rs.gov.br\",\n      \"sc.gov.br\",\n      \"se.gov.br\",\n      \"sp.gov.br\",\n      \"to.gov.br\",\n      \"gru.br\",\n      \"imb.br\",\n      \"ind.br\",\n      \"inf.br\",\n      \"jab.br\",\n      \"jampa.br\",\n      \"jdf.br\",\n      \"joinville.br\",\n      \"jor.br\",\n      \"jus.br\",\n      \"leg.br\",\n      \"lel.br\",\n      \"log.br\",\n      \"londrina.br\",\n      \"macapa.br\",\n      \"maceio.br\",\n      \"manaus.br\",\n      \"maringa.br\",\n      \"mat.br\",\n      \"med.br\",\n      \"mil.br\",\n      \"morena.br\",\n      \"mp.br\",\n      \"mus.br\",\n      \"natal.br\",\n      \"net.br\",\n      \"niteroi.br\",\n      \"*.nom.br\",\n      \"not.br\",\n      \"ntr.br\",\n      \"odo.br\",\n      \"ong.br\",\n      \"org.br\",\n      \"osasco.br\",\n      \"palmas.br\",\n      \"poa.br\",\n      \"ppg.br\",\n      \"pro.br\",\n      \"psc.br\",\n      \"psi.br\",\n      \"pvh.br\",\n      \"qsl.br\",\n      \"radio.br\",\n      \"rec.br\",\n      \"recife.br\",\n      \"rep.br\",\n      \"ribeirao.br\",\n      \"rio.br\",\n      \"riobranco.br\",\n      \"riopreto.br\",\n      \"salvador.br\",\n      \"sampa.br\",\n      \"santamaria.br\",\n      \"santoandre.br\",\n      \"saobernardo.br\",\n      \"saogonca.br\",\n      \"seg.br\",\n      \"sjc.br\",\n      \"slg.br\",\n      \"slz.br\",\n      \"sorocaba.br\",\n      \"srv.br\",\n      \"taxi.br\",\n      \"tc.br\",\n      \"tec.br\",\n      \"teo.br\",\n      \"the.br\",\n      \"tmp.br\",\n      \"trd.br\",\n      \"tur.br\",\n      \"tv.br\",\n      \"udi.br\",\n      \"vet.br\",\n      \"vix.br\",\n      \"vlog.br\",\n      \"wiki.br\",\n      \"zlg.br\",\n      \"bs\",\n      \"com.bs\",\n      \"net.bs\",\n      \"org.bs\",\n      \"edu.bs\",\n      \"gov.bs\",\n      \"bt\",\n      \"com.bt\",\n      \"edu.bt\",\n      \"gov.bt\",\n      \"net.bt\",\n      \"org.bt\",\n      \"bv\",\n      \"bw\",\n      \"co.bw\",\n      \"org.bw\",\n      \"by\",\n      \"gov.by\",\n      \"mil.by\",\n      \"com.by\",\n      \"of.by\",\n      \"bz\",\n      \"com.bz\",\n      \"net.bz\",\n      \"org.bz\",\n      \"edu.bz\",\n      \"gov.bz\",\n      \"ca\",\n      \"ab.ca\",\n      \"bc.ca\",\n      \"mb.ca\",\n      \"nb.ca\",\n      \"nf.ca\",\n      \"nl.ca\",\n      \"ns.ca\",\n      \"nt.ca\",\n      \"nu.ca\",\n      \"on.ca\",\n      \"pe.ca\",\n      \"qc.ca\",\n      \"sk.ca\",\n      \"yk.ca\",\n      \"gc.ca\",\n      \"cat\",\n      \"cc\",\n      \"cd\",\n      \"gov.cd\",\n      \"cf\",\n      \"cg\",\n      \"ch\",\n      \"ci\",\n      \"org.ci\",\n      \"or.ci\",\n      \"com.ci\",\n      \"co.ci\",\n      \"edu.ci\",\n      \"ed.ci\",\n      \"ac.ci\",\n      \"net.ci\",\n      \"go.ci\",\n      \"asso.ci\",\n      \"a\\xE9roport.ci\",\n      \"int.ci\",\n      \"presse.ci\",\n      \"md.ci\",\n      \"gouv.ci\",\n      \"*.ck\",\n      \"!www.ck\",\n      \"cl\",\n      \"co.cl\",\n      \"gob.cl\",\n      \"gov.cl\",\n      \"mil.cl\",\n      \"cm\",\n      \"co.cm\",\n      \"com.cm\",\n      \"gov.cm\",\n      \"net.cm\",\n      \"cn\",\n      \"ac.cn\",\n      \"com.cn\",\n      \"edu.cn\",\n      \"gov.cn\",\n      \"net.cn\",\n      \"org.cn\",\n      \"mil.cn\",\n      \"\\u516C\\u53F8.cn\",\n      \"\\u7F51\\u7EDC.cn\",\n      \"\\u7DB2\\u7D61.cn\",\n      \"ah.cn\",\n      \"bj.cn\",\n      \"cq.cn\",\n      \"fj.cn\",\n      \"gd.cn\",\n      \"gs.cn\",\n      \"gz.cn\",\n      \"gx.cn\",\n      \"ha.cn\",\n      \"hb.cn\",\n      \"he.cn\",\n      \"hi.cn\",\n      \"hl.cn\",\n      \"hn.cn\",\n      \"jl.cn\",\n      \"js.cn\",\n      \"jx.cn\",\n      \"ln.cn\",\n      \"nm.cn\",\n      \"nx.cn\",\n      \"qh.cn\",\n      \"sc.cn\",\n      \"sd.cn\",\n      \"sh.cn\",\n      \"sn.cn\",\n      \"sx.cn\",\n      \"tj.cn\",\n      \"xj.cn\",\n      \"xz.cn\",\n      \"yn.cn\",\n      \"zj.cn\",\n      \"hk.cn\",\n      \"mo.cn\",\n      \"tw.cn\",\n      \"co\",\n      \"arts.co\",\n      \"com.co\",\n      \"edu.co\",\n      \"firm.co\",\n      \"gov.co\",\n      \"info.co\",\n      \"int.co\",\n      \"mil.co\",\n      \"net.co\",\n      \"nom.co\",\n      \"org.co\",\n      \"rec.co\",\n      \"web.co\",\n      \"com\",\n      \"coop\",\n      \"cr\",\n      \"ac.cr\",\n      \"co.cr\",\n      \"ed.cr\",\n      \"fi.cr\",\n      \"go.cr\",\n      \"or.cr\",\n      \"sa.cr\",\n      \"cu\",\n      \"com.cu\",\n      \"edu.cu\",\n      \"org.cu\",\n      \"net.cu\",\n      \"gov.cu\",\n      \"inf.cu\",\n      \"cv\",\n      \"com.cv\",\n      \"edu.cv\",\n      \"int.cv\",\n      \"nome.cv\",\n      \"org.cv\",\n      \"cw\",\n      \"com.cw\",\n      \"edu.cw\",\n      \"net.cw\",\n      \"org.cw\",\n      \"cx\",\n      \"gov.cx\",\n      \"cy\",\n      \"ac.cy\",\n      \"biz.cy\",\n      \"com.cy\",\n      \"ekloges.cy\",\n      \"gov.cy\",\n      \"ltd.cy\",\n      \"mil.cy\",\n      \"net.cy\",\n      \"org.cy\",\n      \"press.cy\",\n      \"pro.cy\",\n      \"tm.cy\",\n      \"cz\",\n      \"de\",\n      \"dj\",\n      \"dk\",\n      \"dm\",\n      \"com.dm\",\n      \"net.dm\",\n      \"org.dm\",\n      \"edu.dm\",\n      \"gov.dm\",\n      \"do\",\n      \"art.do\",\n      \"com.do\",\n      \"edu.do\",\n      \"gob.do\",\n      \"gov.do\",\n      \"mil.do\",\n      \"net.do\",\n      \"org.do\",\n      \"sld.do\",\n      \"web.do\",\n      \"dz\",\n      \"art.dz\",\n      \"asso.dz\",\n      \"com.dz\",\n      \"edu.dz\",\n      \"gov.dz\",\n      \"org.dz\",\n      \"net.dz\",\n      \"pol.dz\",\n      \"soc.dz\",\n      \"tm.dz\",\n      \"ec\",\n      \"com.ec\",\n      \"info.ec\",\n      \"net.ec\",\n      \"fin.ec\",\n      \"k12.ec\",\n      \"med.ec\",\n      \"pro.ec\",\n      \"org.ec\",\n      \"edu.ec\",\n      \"gov.ec\",\n      \"gob.ec\",\n      \"mil.ec\",\n      \"edu\",\n      \"ee\",\n      \"edu.ee\",\n      \"gov.ee\",\n      \"riik.ee\",\n      \"lib.ee\",\n      \"med.ee\",\n      \"com.ee\",\n      \"pri.ee\",\n      \"aip.ee\",\n      \"org.ee\",\n      \"fie.ee\",\n      \"eg\",\n      \"com.eg\",\n      \"edu.eg\",\n      \"eun.eg\",\n      \"gov.eg\",\n      \"mil.eg\",\n      \"name.eg\",\n      \"net.eg\",\n      \"org.eg\",\n      \"sci.eg\",\n      \"*.er\",\n      \"es\",\n      \"com.es\",\n      \"nom.es\",\n      \"org.es\",\n      \"gob.es\",\n      \"edu.es\",\n      \"et\",\n      \"com.et\",\n      \"gov.et\",\n      \"org.et\",\n      \"edu.et\",\n      \"biz.et\",\n      \"name.et\",\n      \"info.et\",\n      \"net.et\",\n      \"eu\",\n      \"fi\",\n      \"aland.fi\",\n      \"fj\",\n      \"ac.fj\",\n      \"biz.fj\",\n      \"com.fj\",\n      \"gov.fj\",\n      \"info.fj\",\n      \"mil.fj\",\n      \"name.fj\",\n      \"net.fj\",\n      \"org.fj\",\n      \"pro.fj\",\n      \"*.fk\",\n      \"com.fm\",\n      \"edu.fm\",\n      \"net.fm\",\n      \"org.fm\",\n      \"fm\",\n      \"fo\",\n      \"fr\",\n      \"asso.fr\",\n      \"com.fr\",\n      \"gouv.fr\",\n      \"nom.fr\",\n      \"prd.fr\",\n      \"tm.fr\",\n      \"aeroport.fr\",\n      \"avocat.fr\",\n      \"avoues.fr\",\n      \"cci.fr\",\n      \"chambagri.fr\",\n      \"chirurgiens-dentistes.fr\",\n      \"experts-comptables.fr\",\n      \"geometre-expert.fr\",\n      \"greta.fr\",\n      \"huissier-justice.fr\",\n      \"medecin.fr\",\n      \"notaires.fr\",\n      \"pharmacien.fr\",\n      \"port.fr\",\n      \"veterinaire.fr\",\n      \"ga\",\n      \"gb\",\n      \"edu.gd\",\n      \"gov.gd\",\n      \"gd\",\n      \"ge\",\n      \"com.ge\",\n      \"edu.ge\",\n      \"gov.ge\",\n      \"org.ge\",\n      \"mil.ge\",\n      \"net.ge\",\n      \"pvt.ge\",\n      \"gf\",\n      \"gg\",\n      \"co.gg\",\n      \"net.gg\",\n      \"org.gg\",\n      \"gh\",\n      \"com.gh\",\n      \"edu.gh\",\n      \"gov.gh\",\n      \"org.gh\",\n      \"mil.gh\",\n      \"gi\",\n      \"com.gi\",\n      \"ltd.gi\",\n      \"gov.gi\",\n      \"mod.gi\",\n      \"edu.gi\",\n      \"org.gi\",\n      \"gl\",\n      \"co.gl\",\n      \"com.gl\",\n      \"edu.gl\",\n      \"net.gl\",\n      \"org.gl\",\n      \"gm\",\n      \"gn\",\n      \"ac.gn\",\n      \"com.gn\",\n      \"edu.gn\",\n      \"gov.gn\",\n      \"org.gn\",\n      \"net.gn\",\n      \"gov\",\n      \"gp\",\n      \"com.gp\",\n      \"net.gp\",\n      \"mobi.gp\",\n      \"edu.gp\",\n      \"org.gp\",\n      \"asso.gp\",\n      \"gq\",\n      \"gr\",\n      \"com.gr\",\n      \"edu.gr\",\n      \"net.gr\",\n      \"org.gr\",\n      \"gov.gr\",\n      \"gs\",\n      \"gt\",\n      \"com.gt\",\n      \"edu.gt\",\n      \"gob.gt\",\n      \"ind.gt\",\n      \"mil.gt\",\n      \"net.gt\",\n      \"org.gt\",\n      \"gu\",\n      \"com.gu\",\n      \"edu.gu\",\n      \"gov.gu\",\n      \"guam.gu\",\n      \"info.gu\",\n      \"net.gu\",\n      \"org.gu\",\n      \"web.gu\",\n      \"gw\",\n      \"gy\",\n      \"co.gy\",\n      \"com.gy\",\n      \"edu.gy\",\n      \"gov.gy\",\n      \"net.gy\",\n      \"org.gy\",\n      \"hk\",\n      \"com.hk\",\n      \"edu.hk\",\n      \"gov.hk\",\n      \"idv.hk\",\n      \"net.hk\",\n      \"org.hk\",\n      \"\\u516C\\u53F8.hk\",\n      \"\\u6559\\u80B2.hk\",\n      \"\\u654E\\u80B2.hk\",\n      \"\\u653F\\u5E9C.hk\",\n      \"\\u500B\\u4EBA.hk\",\n      \"\\u4E2A\\uFFFD\\uFFFD.hk\",\n      \"\\u7B87\\u4EBA.hk\",\n      \"\\u7DB2\\u7EDC.hk\",\n      \"\\u7F51\\u7EDC.hk\",\n      \"\\u7EC4\\u7E54.hk\",\n      \"\\u7DB2\\u7D61.hk\",\n      \"\\u7F51\\u7D61.hk\",\n      \"\\u7EC4\\u7EC7.hk\",\n      \"\\u7D44\\u7E54.hk\",\n      \"\\u7D44\\u7EC7.hk\",\n      \"hm\",\n      \"hn\",\n      \"com.hn\",\n      \"edu.hn\",\n      \"org.hn\",\n      \"net.hn\",\n      \"mil.hn\",\n      \"gob.hn\",\n      \"hr\",\n      \"iz.hr\",\n      \"from.hr\",\n      \"name.hr\",\n      \"com.hr\",\n      \"ht\",\n      \"com.ht\",\n      \"shop.ht\",\n      \"firm.ht\",\n      \"info.ht\",\n      \"adult.ht\",\n      \"net.ht\",\n      \"pro.ht\",\n      \"org.ht\",\n      \"med.ht\",\n      \"art.ht\",\n      \"coop.ht\",\n      \"pol.ht\",\n      \"asso.ht\",\n      \"edu.ht\",\n      \"rel.ht\",\n      \"gouv.ht\",\n      \"perso.ht\",\n      \"hu\",\n      \"co.hu\",\n      \"info.hu\",\n      \"org.hu\",\n      \"priv.hu\",\n      \"sport.hu\",\n      \"tm.hu\",\n      \"2000.hu\",\n      \"agrar.hu\",\n      \"bolt.hu\",\n      \"casino.hu\",\n      \"city.hu\",\n      \"erotica.hu\",\n      \"erotika.hu\",\n      \"film.hu\",\n      \"forum.hu\",\n      \"games.hu\",\n      \"hotel.hu\",\n      \"ingatlan.hu\",\n      \"jogasz.hu\",\n      \"konyvelo.hu\",\n      \"lakas.hu\",\n      \"media.hu\",\n      \"news.hu\",\n      \"reklam.hu\",\n      \"sex.hu\",\n      \"shop.hu\",\n      \"suli.hu\",\n      \"szex.hu\",\n      \"tozsde.hu\",\n      \"utazas.hu\",\n      \"video.hu\",\n      \"id\",\n      \"ac.id\",\n      \"biz.id\",\n      \"co.id\",\n      \"desa.id\",\n      \"go.id\",\n      \"mil.id\",\n      \"my.id\",\n      \"net.id\",\n      \"or.id\",\n      \"ponpes.id\",\n      \"sch.id\",\n      \"web.id\",\n      \"ie\",\n      \"gov.ie\",\n      \"il\",\n      \"ac.il\",\n      \"co.il\",\n      \"gov.il\",\n      \"idf.il\",\n      \"k12.il\",\n      \"muni.il\",\n      \"net.il\",\n      \"org.il\",\n      \"im\",\n      \"ac.im\",\n      \"co.im\",\n      \"com.im\",\n      \"ltd.co.im\",\n      \"net.im\",\n      \"org.im\",\n      \"plc.co.im\",\n      \"tt.im\",\n      \"tv.im\",\n      \"in\",\n      \"co.in\",\n      \"firm.in\",\n      \"net.in\",\n      \"org.in\",\n      \"gen.in\",\n      \"ind.in\",\n      \"nic.in\",\n      \"ac.in\",\n      \"edu.in\",\n      \"res.in\",\n      \"gov.in\",\n      \"mil.in\",\n      \"info\",\n      \"int\",\n      \"eu.int\",\n      \"io\",\n      \"com.io\",\n      \"iq\",\n      \"gov.iq\",\n      \"edu.iq\",\n      \"mil.iq\",\n      \"com.iq\",\n      \"org.iq\",\n      \"net.iq\",\n      \"ir\",\n      \"ac.ir\",\n      \"co.ir\",\n      \"gov.ir\",\n      \"id.ir\",\n      \"net.ir\",\n      \"org.ir\",\n      \"sch.ir\",\n      \"\\u0627\\u06CC\\u0631\\u0627\\u0646.ir\",\n      \"\\u0627\\u064A\\u0631\\u0627\\u0646.ir\",\n      \"is\",\n      \"net.is\",\n      \"com.is\",\n      \"edu.is\",\n      \"gov.is\",\n      \"org.is\",\n      \"int.is\",\n      \"it\",\n      \"gov.it\",\n      \"edu.it\",\n      \"abr.it\",\n      \"abruzzo.it\",\n      \"aosta-valley.it\",\n      \"aostavalley.it\",\n      \"bas.it\",\n      \"basilicata.it\",\n      \"cal.it\",\n      \"calabria.it\",\n      \"cam.it\",\n      \"campania.it\",\n      \"emilia-romagna.it\",\n      \"emiliaromagna.it\",\n      \"emr.it\",\n      \"friuli-v-giulia.it\",\n      \"friuli-ve-giulia.it\",\n      \"friuli-vegiulia.it\",\n      \"friuli-venezia-giulia.it\",\n      \"friuli-veneziagiulia.it\",\n      \"friuli-vgiulia.it\",\n      \"friuliv-giulia.it\",\n      \"friulive-giulia.it\",\n      \"friulivegiulia.it\",\n      \"friulivenezia-giulia.it\",\n      \"friuliveneziagiulia.it\",\n      \"friulivgiulia.it\",\n      \"fvg.it\",\n      \"laz.it\",\n      \"lazio.it\",\n      \"lig.it\",\n      \"liguria.it\",\n      \"lom.it\",\n      \"lombardia.it\",\n      \"lombardy.it\",\n      \"lucania.it\",\n      \"mar.it\",\n      \"marche.it\",\n      \"mol.it\",\n      \"molise.it\",\n      \"piedmont.it\",\n      \"piemonte.it\",\n      \"pmn.it\",\n      \"pug.it\",\n      \"puglia.it\",\n      \"sar.it\",\n      \"sardegna.it\",\n      \"sardinia.it\",\n      \"sic.it\",\n      \"sicilia.it\",\n      \"sicily.it\",\n      \"taa.it\",\n      \"tos.it\",\n      \"toscana.it\",\n      \"trentin-sud-tirol.it\",\n      \"trentin-s\\xFCd-tirol.it\",\n      \"trentin-sudtirol.it\",\n      \"trentin-s\\xFCdtirol.it\",\n      \"trentin-sued-tirol.it\",\n      \"trentin-suedtirol.it\",\n      \"trentino-a-adige.it\",\n      \"trentino-aadige.it\",\n      \"trentino-alto-adige.it\",\n      \"trentino-altoadige.it\",\n      \"trentino-s-tirol.it\",\n      \"trentino-stirol.it\",\n      \"trentino-sud-tirol.it\",\n      \"trentino-s\\xFCd-tirol.it\",\n      \"trentino-sudtirol.it\",\n      \"trentino-s\\xFCdtirol.it\",\n      \"trentino-sued-tirol.it\",\n      \"trentino-suedtirol.it\",\n      \"trentino.it\",\n      \"trentinoa-adige.it\",\n      \"trentinoaadige.it\",\n      \"trentinoalto-adige.it\",\n      \"trentinoaltoadige.it\",\n      \"trentinos-tirol.it\",\n      \"trentinostirol.it\",\n      \"trentinosud-tirol.it\",\n      \"trentinos\\xFCd-tirol.it\",\n      \"trentinosudtirol.it\",\n      \"trentinos\\xFCdtirol.it\",\n      \"trentinosued-tirol.it\",\n      \"trentinosuedtirol.it\",\n      \"trentinsud-tirol.it\",\n      \"trentins\\xFCd-tirol.it\",\n      \"trentinsudtirol.it\",\n      \"trentins\\xFCdtirol.it\",\n      \"trentinsued-tirol.it\",\n      \"trentinsuedtirol.it\",\n      \"tuscany.it\",\n      \"umb.it\",\n      \"umbria.it\",\n      \"val-d-aosta.it\",\n      \"val-daosta.it\",\n      \"vald-aosta.it\",\n      \"valdaosta.it\",\n      \"valle-aosta.it\",\n      \"valle-d-aosta.it\",\n      \"valle-daosta.it\",\n      \"valleaosta.it\",\n      \"valled-aosta.it\",\n      \"valledaosta.it\",\n      \"vallee-aoste.it\",\n      \"vall\\xE9e-aoste.it\",\n      \"vallee-d-aoste.it\",\n      \"vall\\xE9e-d-aoste.it\",\n      \"valleeaoste.it\",\n      \"vall\\xE9eaoste.it\",\n      \"valleedaoste.it\",\n      \"vall\\xE9edaoste.it\",\n      \"vao.it\",\n      \"vda.it\",\n      \"ven.it\",\n      \"veneto.it\",\n      \"ag.it\",\n      \"agrigento.it\",\n      \"al.it\",\n      \"alessandria.it\",\n      \"alto-adige.it\",\n      \"altoadige.it\",\n      \"an.it\",\n      \"ancona.it\",\n      \"andria-barletta-trani.it\",\n      \"andria-trani-barletta.it\",\n      \"andriabarlettatrani.it\",\n      \"andriatranibarletta.it\",\n      \"ao.it\",\n      \"aosta.it\",\n      \"aoste.it\",\n      \"ap.it\",\n      \"aq.it\",\n      \"aquila.it\",\n      \"ar.it\",\n      \"arezzo.it\",\n      \"ascoli-piceno.it\",\n      \"ascolipiceno.it\",\n      \"asti.it\",\n      \"at.it\",\n      \"av.it\",\n      \"avellino.it\",\n      \"ba.it\",\n      \"balsan-sudtirol.it\",\n      \"balsan-s\\xFCdtirol.it\",\n      \"balsan-suedtirol.it\",\n      \"balsan.it\",\n      \"bari.it\",\n      \"barletta-trani-andria.it\",\n      \"barlettatraniandria.it\",\n      \"belluno.it\",\n      \"benevento.it\",\n      \"bergamo.it\",\n      \"bg.it\",\n      \"bi.it\",\n      \"biella.it\",\n      \"bl.it\",\n      \"bn.it\",\n      \"bo.it\",\n      \"bologna.it\",\n      \"bolzano-altoadige.it\",\n      \"bolzano.it\",\n      \"bozen-sudtirol.it\",\n      \"bozen-s\\xFCdtirol.it\",\n      \"bozen-suedtirol.it\",\n      \"bozen.it\",\n      \"br.it\",\n      \"brescia.it\",\n      \"brindisi.it\",\n      \"bs.it\",\n      \"bt.it\",\n      \"bulsan-sudtirol.it\",\n      \"bulsan-s\\xFCdtirol.it\",\n      \"bulsan-suedtirol.it\",\n      \"bulsan.it\",\n      \"bz.it\",\n      \"ca.it\",\n      \"cagliari.it\",\n      \"caltanissetta.it\",\n      \"campidano-medio.it\",\n      \"campidanomedio.it\",\n      \"campobasso.it\",\n      \"carbonia-iglesias.it\",\n      \"carboniaiglesias.it\",\n      \"carrara-massa.it\",\n      \"carraramassa.it\",\n      \"caserta.it\",\n      \"catania.it\",\n      \"catanzaro.it\",\n      \"cb.it\",\n      \"ce.it\",\n      \"cesena-forli.it\",\n      \"cesena-forl\\xEC.it\",\n      \"cesenaforli.it\",\n      \"cesenaforl\\xEC.it\",\n      \"ch.it\",\n      \"chieti.it\",\n      \"ci.it\",\n      \"cl.it\",\n      \"cn.it\",\n      \"co.it\",\n      \"como.it\",\n      \"cosenza.it\",\n      \"cr.it\",\n      \"cremona.it\",\n      \"crotone.it\",\n      \"cs.it\",\n      \"ct.it\",\n      \"cuneo.it\",\n      \"cz.it\",\n      \"dell-ogliastra.it\",\n      \"dellogliastra.it\",\n      \"en.it\",\n      \"enna.it\",\n      \"fc.it\",\n      \"fe.it\",\n      \"fermo.it\",\n      \"ferrara.it\",\n      \"fg.it\",\n      \"fi.it\",\n      \"firenze.it\",\n      \"florence.it\",\n      \"fm.it\",\n      \"foggia.it\",\n      \"forli-cesena.it\",\n      \"forl\\xEC-cesena.it\",\n      \"forlicesena.it\",\n      \"forl\\xECcesena.it\",\n      \"fr.it\",\n      \"frosinone.it\",\n      \"ge.it\",\n      \"genoa.it\",\n      \"genova.it\",\n      \"go.it\",\n      \"gorizia.it\",\n      \"gr.it\",\n      \"grosseto.it\",\n      \"iglesias-carbonia.it\",\n      \"iglesiascarbonia.it\",\n      \"im.it\",\n      \"imperia.it\",\n      \"is.it\",\n      \"isernia.it\",\n      \"kr.it\",\n      \"la-spezia.it\",\n      \"laquila.it\",\n      \"laspezia.it\",\n      \"latina.it\",\n      \"lc.it\",\n      \"le.it\",\n      \"lecce.it\",\n      \"lecco.it\",\n      \"li.it\",\n      \"livorno.it\",\n      \"lo.it\",\n      \"lodi.it\",\n      \"lt.it\",\n      \"lu.it\",\n      \"lucca.it\",\n      \"macerata.it\",\n      \"mantova.it\",\n      \"massa-carrara.it\",\n      \"massacarrara.it\",\n      \"matera.it\",\n      \"mb.it\",\n      \"mc.it\",\n      \"me.it\",\n      \"medio-campidano.it\",\n      \"mediocampidano.it\",\n      \"messina.it\",\n      \"mi.it\",\n      \"milan.it\",\n      \"milano.it\",\n      \"mn.it\",\n      \"mo.it\",\n      \"modena.it\",\n      \"monza-brianza.it\",\n      \"monza-e-della-brianza.it\",\n      \"monza.it\",\n      \"monzabrianza.it\",\n      \"monzaebrianza.it\",\n      \"monzaedellabrianza.it\",\n      \"ms.it\",\n      \"mt.it\",\n      \"na.it\",\n      \"naples.it\",\n      \"napoli.it\",\n      \"no.it\",\n      \"novara.it\",\n      \"nu.it\",\n      \"nuoro.it\",\n      \"og.it\",\n      \"ogliastra.it\",\n      \"olbia-tempio.it\",\n      \"olbiatempio.it\",\n      \"or.it\",\n      \"oristano.it\",\n      \"ot.it\",\n      \"pa.it\",\n      \"padova.it\",\n      \"padua.it\",\n      \"palermo.it\",\n      \"parma.it\",\n      \"pavia.it\",\n      \"pc.it\",\n      \"pd.it\",\n      \"pe.it\",\n      \"perugia.it\",\n      \"pesaro-urbino.it\",\n      \"pesarourbino.it\",\n      \"pescara.it\",\n      \"pg.it\",\n      \"pi.it\",\n      \"piacenza.it\",\n      \"pisa.it\",\n      \"pistoia.it\",\n      \"pn.it\",\n      \"po.it\",\n      \"pordenone.it\",\n      \"potenza.it\",\n      \"pr.it\",\n      \"prato.it\",\n      \"pt.it\",\n      \"pu.it\",\n      \"pv.it\",\n      \"pz.it\",\n      \"ra.it\",\n      \"ragusa.it\",\n      \"ravenna.it\",\n      \"rc.it\",\n      \"re.it\",\n      \"reggio-calabria.it\",\n      \"reggio-emilia.it\",\n      \"reggiocalabria.it\",\n      \"reggioemilia.it\",\n      \"rg.it\",\n      \"ri.it\",\n      \"rieti.it\",\n      \"rimini.it\",\n      \"rm.it\",\n      \"rn.it\",\n      \"ro.it\",\n      \"roma.it\",\n      \"rome.it\",\n      \"rovigo.it\",\n      \"sa.it\",\n      \"salerno.it\",\n      \"sassari.it\",\n      \"savona.it\",\n      \"si.it\",\n      \"siena.it\",\n      \"siracusa.it\",\n      \"so.it\",\n      \"sondrio.it\",\n      \"sp.it\",\n      \"sr.it\",\n      \"ss.it\",\n      \"suedtirol.it\",\n      \"s\\xFCdtirol.it\",\n      \"sv.it\",\n      \"ta.it\",\n      \"taranto.it\",\n      \"te.it\",\n      \"tempio-olbia.it\",\n      \"tempioolbia.it\",\n      \"teramo.it\",\n      \"terni.it\",\n      \"tn.it\",\n      \"to.it\",\n      \"torino.it\",\n      \"tp.it\",\n      \"tr.it\",\n      \"trani-andria-barletta.it\",\n      \"trani-barletta-andria.it\",\n      \"traniandriabarletta.it\",\n      \"tranibarlettaandria.it\",\n      \"trapani.it\",\n      \"trento.it\",\n      \"treviso.it\",\n      \"trieste.it\",\n      \"ts.it\",\n      \"turin.it\",\n      \"tv.it\",\n      \"ud.it\",\n      \"udine.it\",\n      \"urbino-pesaro.it\",\n      \"urbinopesaro.it\",\n      \"va.it\",\n      \"varese.it\",\n      \"vb.it\",\n      \"vc.it\",\n      \"ve.it\",\n      \"venezia.it\",\n      \"venice.it\",\n      \"verbania.it\",\n      \"vercelli.it\",\n      \"verona.it\",\n      \"vi.it\",\n      \"vibo-valentia.it\",\n      \"vibovalentia.it\",\n      \"vicenza.it\",\n      \"viterbo.it\",\n      \"vr.it\",\n      \"vs.it\",\n      \"vt.it\",\n      \"vv.it\",\n      \"je\",\n      \"co.je\",\n      \"net.je\",\n      \"org.je\",\n      \"*.jm\",\n      \"jo\",\n      \"com.jo\",\n      \"org.jo\",\n      \"net.jo\",\n      \"edu.jo\",\n      \"sch.jo\",\n      \"gov.jo\",\n      \"mil.jo\",\n      \"name.jo\",\n      \"jobs\",\n      \"jp\",\n      \"ac.jp\",\n      \"ad.jp\",\n      \"co.jp\",\n      \"ed.jp\",\n      \"go.jp\",\n      \"gr.jp\",\n      \"lg.jp\",\n      \"ne.jp\",\n      \"or.jp\",\n      \"aichi.jp\",\n      \"akita.jp\",\n      \"aomori.jp\",\n      \"chiba.jp\",\n      \"ehime.jp\",\n      \"fukui.jp\",\n      \"fukuoka.jp\",\n      \"fukushima.jp\",\n      \"gifu.jp\",\n      \"gunma.jp\",\n      \"hiroshima.jp\",\n      \"hokkaido.jp\",\n      \"hyogo.jp\",\n      \"ibaraki.jp\",\n      \"ishikawa.jp\",\n      \"iwate.jp\",\n      \"kagawa.jp\",\n      \"kagoshima.jp\",\n      \"kanagawa.jp\",\n      \"kochi.jp\",\n      \"kumamoto.jp\",\n      \"kyoto.jp\",\n      \"mie.jp\",\n      \"miyagi.jp\",\n      \"miyazaki.jp\",\n      \"nagano.jp\",\n      \"nagasaki.jp\",\n      \"nara.jp\",\n      \"niigata.jp\",\n      \"oita.jp\",\n      \"okayama.jp\",\n      \"okinawa.jp\",\n      \"osaka.jp\",\n      \"saga.jp\",\n      \"saitama.jp\",\n      \"shiga.jp\",\n      \"shimane.jp\",\n      \"shizuoka.jp\",\n      \"tochigi.jp\",\n      \"tokushima.jp\",\n      \"tokyo.jp\",\n      \"tottori.jp\",\n      \"toyama.jp\",\n      \"wakayama.jp\",\n      \"yamagata.jp\",\n      \"yamaguchi.jp\",\n      \"yamanashi.jp\",\n      \"\\u6803\\u6728.jp\",\n      \"\\u611B\\u77E5.jp\",\n      \"\\u611B\\u5A9B.jp\",\n      \"\\u5175\\u5EAB.jp\",\n      \"\\u718A\\u672C.jp\",\n      \"\\u8328\\u57CE.jp\",\n      \"\\u5317\\u6D77\\u9053.jp\",\n      \"\\u5343\\u8449.jp\",\n      \"\\u548C\\u6B4C\\u5C71.jp\",\n      \"\\u9577\\u5D0E.jp\",\n      \"\\u9577\\u91CE.jp\",\n      \"\\u65B0\\u6F5F.jp\",\n      \"\\u9752\\u68EE.jp\",\n      \"\\u9759\\u5CA1.jp\",\n      \"\\u6771\\u4EAC.jp\",\n      \"\\u77F3\\u5DDD.jp\",\n      \"\\u57FC\\u7389.jp\",\n      \"\\u4E09\\u91CD.jp\",\n      \"\\u4EAC\\u90FD.jp\",\n      \"\\u4F50\\u8CC0.jp\",\n      \"\\u5927\\u5206.jp\",\n      \"\\u5927\\u962A.jp\",\n      \"\\u5948\\u826F.jp\",\n      \"\\u5BAE\\u57CE.jp\",\n      \"\\u5BAE\\u5D0E.jp\",\n      \"\\u5BCC\\u5C71.jp\",\n      \"\\u5C71\\u53E3.jp\",\n      \"\\u5C71\\u5F62.jp\",\n      \"\\u5C71\\u68A8.jp\",\n      \"\\u5CA9\\u624B.jp\",\n      \"\\u5C90\\u961C.jp\",\n      \"\\u5CA1\\u5C71.jp\",\n      \"\\u5CF6\\u6839.jp\",\n      \"\\u5E83\\u5CF6.jp\",\n      \"\\u5FB3\\u5CF6.jp\",\n      \"\\u6C96\\u7E04.jp\",\n      \"\\u6ECB\\u8CC0.jp\",\n      \"\\u795E\\u5948\\u5DDD.jp\",\n      \"\\u798F\\u4E95.jp\",\n      \"\\u798F\\u5CA1.jp\",\n      \"\\u798F\\u5CF6.jp\",\n      \"\\u79CB\\u7530.jp\",\n      \"\\u7FA4\\u99AC.jp\",\n      \"\\u9999\\u5DDD.jp\",\n      \"\\u9AD8\\u77E5.jp\",\n      \"\\u9CE5\\u53D6.jp\",\n      \"\\u9E7F\\u5150\\u5CF6.jp\",\n      \"*.kawasaki.jp\",\n      \"*.kitakyushu.jp\",\n      \"*.kobe.jp\",\n      \"*.nagoya.jp\",\n      \"*.sapporo.jp\",\n      \"*.sendai.jp\",\n      \"*.yokohama.jp\",\n      \"!city.kawasaki.jp\",\n      \"!city.kitakyushu.jp\",\n      \"!city.kobe.jp\",\n      \"!city.nagoya.jp\",\n      \"!city.sapporo.jp\",\n      \"!city.sendai.jp\",\n      \"!city.yokohama.jp\",\n      \"aisai.aichi.jp\",\n      \"ama.aichi.jp\",\n      \"anjo.aichi.jp\",\n      \"asuke.aichi.jp\",\n      \"chiryu.aichi.jp\",\n      \"chita.aichi.jp\",\n      \"fuso.aichi.jp\",\n      \"gamagori.aichi.jp\",\n      \"handa.aichi.jp\",\n      \"hazu.aichi.jp\",\n      \"hekinan.aichi.jp\",\n      \"higashiura.aichi.jp\",\n      \"ichinomiya.aichi.jp\",\n      \"inazawa.aichi.jp\",\n      \"inuyama.aichi.jp\",\n      \"isshiki.aichi.jp\",\n      \"iwakura.aichi.jp\",\n      \"kanie.aichi.jp\",\n      \"kariya.aichi.jp\",\n      \"kasugai.aichi.jp\",\n      \"kira.aichi.jp\",\n      \"kiyosu.aichi.jp\",\n      \"komaki.aichi.jp\",\n      \"konan.aichi.jp\",\n      \"kota.aichi.jp\",\n      \"mihama.aichi.jp\",\n      \"miyoshi.aichi.jp\",\n      \"nishio.aichi.jp\",\n      \"nisshin.aichi.jp\",\n      \"obu.aichi.jp\",\n      \"oguchi.aichi.jp\",\n      \"oharu.aichi.jp\",\n      \"okazaki.aichi.jp\",\n      \"owariasahi.aichi.jp\",\n      \"seto.aichi.jp\",\n      \"shikatsu.aichi.jp\",\n      \"shinshiro.aichi.jp\",\n      \"shitara.aichi.jp\",\n      \"tahara.aichi.jp\",\n      \"takahama.aichi.jp\",\n      \"tobishima.aichi.jp\",\n      \"toei.aichi.jp\",\n      \"togo.aichi.jp\",\n      \"tokai.aichi.jp\",\n      \"tokoname.aichi.jp\",\n      \"toyoake.aichi.jp\",\n      \"toyohashi.aichi.jp\",\n      \"toyokawa.aichi.jp\",\n      \"toyone.aichi.jp\",\n      \"toyota.aichi.jp\",\n      \"tsushima.aichi.jp\",\n      \"yatomi.aichi.jp\",\n      \"akita.akita.jp\",\n      \"daisen.akita.jp\",\n      \"fujisato.akita.jp\",\n      \"gojome.akita.jp\",\n      \"hachirogata.akita.jp\",\n      \"happou.akita.jp\",\n      \"higashinaruse.akita.jp\",\n      \"honjo.akita.jp\",\n      \"honjyo.akita.jp\",\n      \"ikawa.akita.jp\",\n      \"kamikoani.akita.jp\",\n      \"kamioka.akita.jp\",\n      \"katagami.akita.jp\",\n      \"kazuno.akita.jp\",\n      \"kitaakita.akita.jp\",\n      \"kosaka.akita.jp\",\n      \"kyowa.akita.jp\",\n      \"misato.akita.jp\",\n      \"mitane.akita.jp\",\n      \"moriyoshi.akita.jp\",\n      \"nikaho.akita.jp\",\n      \"noshiro.akita.jp\",\n      \"odate.akita.jp\",\n      \"oga.akita.jp\",\n      \"ogata.akita.jp\",\n      \"semboku.akita.jp\",\n      \"yokote.akita.jp\",\n      \"yurihonjo.akita.jp\",\n      \"aomori.aomori.jp\",\n      \"gonohe.aomori.jp\",\n      \"hachinohe.aomori.jp\",\n      \"hashikami.aomori.jp\",\n      \"hiranai.aomori.jp\",\n      \"hirosaki.aomori.jp\",\n      \"itayanagi.aomori.jp\",\n      \"kuroishi.aomori.jp\",\n      \"misawa.aomori.jp\",\n      \"mutsu.aomori.jp\",\n      \"nakadomari.aomori.jp\",\n      \"noheji.aomori.jp\",\n      \"oirase.aomori.jp\",\n      \"owani.aomori.jp\",\n      \"rokunohe.aomori.jp\",\n      \"sannohe.aomori.jp\",\n      \"shichinohe.aomori.jp\",\n      \"shingo.aomori.jp\",\n      \"takko.aomori.jp\",\n      \"towada.aomori.jp\",\n      \"tsugaru.aomori.jp\",\n      \"tsuruta.aomori.jp\",\n      \"abiko.chiba.jp\",\n      \"asahi.chiba.jp\",\n      \"chonan.chiba.jp\",\n      \"chosei.chiba.jp\",\n      \"choshi.chiba.jp\",\n      \"chuo.chiba.jp\",\n      \"funabashi.chiba.jp\",\n      \"futtsu.chiba.jp\",\n      \"hanamigawa.chiba.jp\",\n      \"ichihara.chiba.jp\",\n      \"ichikawa.chiba.jp\",\n      \"ichinomiya.chiba.jp\",\n      \"inzai.chiba.jp\",\n      \"isumi.chiba.jp\",\n      \"kamagaya.chiba.jp\",\n      \"kamogawa.chiba.jp\",\n      \"kashiwa.chiba.jp\",\n      \"katori.chiba.jp\",\n      \"katsuura.chiba.jp\",\n      \"kimitsu.chiba.jp\",\n      \"kisarazu.chiba.jp\",\n      \"kozaki.chiba.jp\",\n      \"kujukuri.chiba.jp\",\n      \"kyonan.chiba.jp\",\n      \"matsudo.chiba.jp\",\n      \"midori.chiba.jp\",\n      \"mihama.chiba.jp\",\n      \"minamiboso.chiba.jp\",\n      \"mobara.chiba.jp\",\n      \"mutsuzawa.chiba.jp\",\n      \"nagara.chiba.jp\",\n      \"nagareyama.chiba.jp\",\n      \"narashino.chiba.jp\",\n      \"narita.chiba.jp\",\n      \"noda.chiba.jp\",\n      \"oamishirasato.chiba.jp\",\n      \"omigawa.chiba.jp\",\n      \"onjuku.chiba.jp\",\n      \"otaki.chiba.jp\",\n      \"sakae.chiba.jp\",\n      \"sakura.chiba.jp\",\n      \"shimofusa.chiba.jp\",\n      \"shirako.chiba.jp\",\n      \"shiroi.chiba.jp\",\n      \"shisui.chiba.jp\",\n      \"sodegaura.chiba.jp\",\n      \"sosa.chiba.jp\",\n      \"tako.chiba.jp\",\n      \"tateyama.chiba.jp\",\n      \"togane.chiba.jp\",\n      \"tohnosho.chiba.jp\",\n      \"tomisato.chiba.jp\",\n      \"urayasu.chiba.jp\",\n      \"yachimata.chiba.jp\",\n      \"yachiyo.chiba.jp\",\n      \"yokaichiba.chiba.jp\",\n      \"yokoshibahikari.chiba.jp\",\n      \"yotsukaido.chiba.jp\",\n      \"ainan.ehime.jp\",\n      \"honai.ehime.jp\",\n      \"ikata.ehime.jp\",\n      \"imabari.ehime.jp\",\n      \"iyo.ehime.jp\",\n      \"kamijima.ehime.jp\",\n      \"kihoku.ehime.jp\",\n      \"kumakogen.ehime.jp\",\n      \"masaki.ehime.jp\",\n      \"matsuno.ehime.jp\",\n      \"matsuyama.ehime.jp\",\n      \"namikata.ehime.jp\",\n      \"niihama.ehime.jp\",\n      \"ozu.ehime.jp\",\n      \"saijo.ehime.jp\",\n      \"seiyo.ehime.jp\",\n      \"shikokuchuo.ehime.jp\",\n      \"tobe.ehime.jp\",\n      \"toon.ehime.jp\",\n      \"uchiko.ehime.jp\",\n      \"uwajima.ehime.jp\",\n      \"yawatahama.ehime.jp\",\n      \"echizen.fukui.jp\",\n      \"eiheiji.fukui.jp\",\n      \"fukui.fukui.jp\",\n      \"ikeda.fukui.jp\",\n      \"katsuyama.fukui.jp\",\n      \"mihama.fukui.jp\",\n      \"minamiechizen.fukui.jp\",\n      \"obama.fukui.jp\",\n      \"ohi.fukui.jp\",\n      \"ono.fukui.jp\",\n      \"sabae.fukui.jp\",\n      \"sakai.fukui.jp\",\n      \"takahama.fukui.jp\",\n      \"tsuruga.fukui.jp\",\n      \"wakasa.fukui.jp\",\n      \"ashiya.fukuoka.jp\",\n      \"buzen.fukuoka.jp\",\n      \"chikugo.fukuoka.jp\",\n      \"chikuho.fukuoka.jp\",\n      \"chikujo.fukuoka.jp\",\n      \"chikushino.fukuoka.jp\",\n      \"chikuzen.fukuoka.jp\",\n      \"chuo.fukuoka.jp\",\n      \"dazaifu.fukuoka.jp\",\n      \"fukuchi.fukuoka.jp\",\n      \"hakata.fukuoka.jp\",\n      \"higashi.fukuoka.jp\",\n      \"hirokawa.fukuoka.jp\",\n      \"hisayama.fukuoka.jp\",\n      \"iizuka.fukuoka.jp\",\n      \"inatsuki.fukuoka.jp\",\n      \"kaho.fukuoka.jp\",\n      \"kasuga.fukuoka.jp\",\n      \"kasuya.fukuoka.jp\",\n      \"kawara.fukuoka.jp\",\n      \"keisen.fukuoka.jp\",\n      \"koga.fukuoka.jp\",\n      \"kurate.fukuoka.jp\",\n      \"kurogi.fukuoka.jp\",\n      \"kurume.fukuoka.jp\",\n      \"minami.fukuoka.jp\",\n      \"miyako.fukuoka.jp\",\n      \"miyama.fukuoka.jp\",\n      \"miyawaka.fukuoka.jp\",\n      \"mizumaki.fukuoka.jp\",\n      \"munakata.fukuoka.jp\",\n      \"nakagawa.fukuoka.jp\",\n      \"nakama.fukuoka.jp\",\n      \"nishi.fukuoka.jp\",\n      \"nogata.fukuoka.jp\",\n      \"ogori.fukuoka.jp\",\n      \"okagaki.fukuoka.jp\",\n      \"okawa.fukuoka.jp\",\n      \"oki.fukuoka.jp\",\n      \"omuta.fukuoka.jp\",\n      \"onga.fukuoka.jp\",\n      \"onojo.fukuoka.jp\",\n      \"oto.fukuoka.jp\",\n      \"saigawa.fukuoka.jp\",\n      \"sasaguri.fukuoka.jp\",\n      \"shingu.fukuoka.jp\",\n      \"shinyoshitomi.fukuoka.jp\",\n      \"shonai.fukuoka.jp\",\n      \"soeda.fukuoka.jp\",\n      \"sue.fukuoka.jp\",\n      \"tachiarai.fukuoka.jp\",\n      \"tagawa.fukuoka.jp\",\n      \"takata.fukuoka.jp\",\n      \"toho.fukuoka.jp\",\n      \"toyotsu.fukuoka.jp\",\n      \"tsuiki.fukuoka.jp\",\n      \"ukiha.fukuoka.jp\",\n      \"umi.fukuoka.jp\",\n      \"usui.fukuoka.jp\",\n      \"yamada.fukuoka.jp\",\n      \"yame.fukuoka.jp\",\n      \"yanagawa.fukuoka.jp\",\n      \"yukuhashi.fukuoka.jp\",\n      \"aizubange.fukushima.jp\",\n      \"aizumisato.fukushima.jp\",\n      \"aizuwakamatsu.fukushima.jp\",\n      \"asakawa.fukushima.jp\",\n      \"bandai.fukushima.jp\",\n      \"date.fukushima.jp\",\n      \"fukushima.fukushima.jp\",\n      \"furudono.fukushima.jp\",\n      \"futaba.fukushima.jp\",\n      \"hanawa.fukushima.jp\",\n      \"higashi.fukushima.jp\",\n      \"hirata.fukushima.jp\",\n      \"hirono.fukushima.jp\",\n      \"iitate.fukushima.jp\",\n      \"inawashiro.fukushima.jp\",\n      \"ishikawa.fukushima.jp\",\n      \"iwaki.fukushima.jp\",\n      \"izumizaki.fukushima.jp\",\n      \"kagamiishi.fukushima.jp\",\n      \"kaneyama.fukushima.jp\",\n      \"kawamata.fukushima.jp\",\n      \"kitakata.fukushima.jp\",\n      \"kitashiobara.fukushima.jp\",\n      \"koori.fukushima.jp\",\n      \"koriyama.fukushima.jp\",\n      \"kunimi.fukushima.jp\",\n      \"miharu.fukushima.jp\",\n      \"mishima.fukushima.jp\",\n      \"namie.fukushima.jp\",\n      \"nango.fukushima.jp\",\n      \"nishiaizu.fukushima.jp\",\n      \"nishigo.fukushima.jp\",\n      \"okuma.fukushima.jp\",\n      \"omotego.fukushima.jp\",\n      \"ono.fukushima.jp\",\n      \"otama.fukushima.jp\",\n      \"samegawa.fukushima.jp\",\n      \"shimogo.fukushima.jp\",\n      \"shirakawa.fukushima.jp\",\n      \"showa.fukushima.jp\",\n      \"soma.fukushima.jp\",\n      \"sukagawa.fukushima.jp\",\n      \"taishin.fukushima.jp\",\n      \"tamakawa.fukushima.jp\",\n      \"tanagura.fukushima.jp\",\n      \"tenei.fukushima.jp\",\n      \"yabuki.fukushima.jp\",\n      \"yamato.fukushima.jp\",\n      \"yamatsuri.fukushima.jp\",\n      \"yanaizu.fukushima.jp\",\n      \"yugawa.fukushima.jp\",\n      \"anpachi.gifu.jp\",\n      \"ena.gifu.jp\",\n      \"gifu.gifu.jp\",\n      \"ginan.gifu.jp\",\n      \"godo.gifu.jp\",\n      \"gujo.gifu.jp\",\n      \"hashima.gifu.jp\",\n      \"hichiso.gifu.jp\",\n      \"hida.gifu.jp\",\n      \"higashishirakawa.gifu.jp\",\n      \"ibigawa.gifu.jp\",\n      \"ikeda.gifu.jp\",\n      \"kakamigahara.gifu.jp\",\n      \"kani.gifu.jp\",\n      \"kasahara.gifu.jp\",\n      \"kasamatsu.gifu.jp\",\n      \"kawaue.gifu.jp\",\n      \"kitagata.gifu.jp\",\n      \"mino.gifu.jp\",\n      \"minokamo.gifu.jp\",\n      \"mitake.gifu.jp\",\n      \"mizunami.gifu.jp\",\n      \"motosu.gifu.jp\",\n      \"nakatsugawa.gifu.jp\",\n      \"ogaki.gifu.jp\",\n      \"sakahogi.gifu.jp\",\n      \"seki.gifu.jp\",\n      \"sekigahara.gifu.jp\",\n      \"shirakawa.gifu.jp\",\n      \"tajimi.gifu.jp\",\n      \"takayama.gifu.jp\",\n      \"tarui.gifu.jp\",\n      \"toki.gifu.jp\",\n      \"tomika.gifu.jp\",\n      \"wanouchi.gifu.jp\",\n      \"yamagata.gifu.jp\",\n      \"yaotsu.gifu.jp\",\n      \"yoro.gifu.jp\",\n      \"annaka.gunma.jp\",\n      \"chiyoda.gunma.jp\",\n      \"fujioka.gunma.jp\",\n      \"higashiagatsuma.gunma.jp\",\n      \"isesaki.gunma.jp\",\n      \"itakura.gunma.jp\",\n      \"kanna.gunma.jp\",\n      \"kanra.gunma.jp\",\n      \"katashina.gunma.jp\",\n      \"kawaba.gunma.jp\",\n      \"kiryu.gunma.jp\",\n      \"kusatsu.gunma.jp\",\n      \"maebashi.gunma.jp\",\n      \"meiwa.gunma.jp\",\n      \"midori.gunma.jp\",\n      \"minakami.gunma.jp\",\n      \"naganohara.gunma.jp\",\n      \"nakanojo.gunma.jp\",\n      \"nanmoku.gunma.jp\",\n      \"numata.gunma.jp\",\n      \"oizumi.gunma.jp\",\n      \"ora.gunma.jp\",\n      \"ota.gunma.jp\",\n      \"shibukawa.gunma.jp\",\n      \"shimonita.gunma.jp\",\n      \"shinto.gunma.jp\",\n      \"showa.gunma.jp\",\n      \"takasaki.gunma.jp\",\n      \"takayama.gunma.jp\",\n      \"tamamura.gunma.jp\",\n      \"tatebayashi.gunma.jp\",\n      \"tomioka.gunma.jp\",\n      \"tsukiyono.gunma.jp\",\n      \"tsumagoi.gunma.jp\",\n      \"ueno.gunma.jp\",\n      \"yoshioka.gunma.jp\",\n      \"asaminami.hiroshima.jp\",\n      \"daiwa.hiroshima.jp\",\n      \"etajima.hiroshima.jp\",\n      \"fuchu.hiroshima.jp\",\n      \"fukuyama.hiroshima.jp\",\n      \"hatsukaichi.hiroshima.jp\",\n      \"higashihiroshima.hiroshima.jp\",\n      \"hongo.hiroshima.jp\",\n      \"jinsekikogen.hiroshima.jp\",\n      \"kaita.hiroshima.jp\",\n      \"kui.hiroshima.jp\",\n      \"kumano.hiroshima.jp\",\n      \"kure.hiroshima.jp\",\n      \"mihara.hiroshima.jp\",\n      \"miyoshi.hiroshima.jp\",\n      \"naka.hiroshima.jp\",\n      \"onomichi.hiroshima.jp\",\n      \"osakikamijima.hiroshima.jp\",\n      \"otake.hiroshima.jp\",\n      \"saka.hiroshima.jp\",\n      \"sera.hiroshima.jp\",\n      \"seranishi.hiroshima.jp\",\n      \"shinichi.hiroshima.jp\",\n      \"shobara.hiroshima.jp\",\n      \"takehara.hiroshima.jp\",\n      \"abashiri.hokkaido.jp\",\n      \"abira.hokkaido.jp\",\n      \"aibetsu.hokkaido.jp\",\n      \"akabira.hokkaido.jp\",\n      \"akkeshi.hokkaido.jp\",\n      \"asahikawa.hokkaido.jp\",\n      \"ashibetsu.hokkaido.jp\",\n      \"ashoro.hokkaido.jp\",\n      \"assabu.hokkaido.jp\",\n      \"atsuma.hokkaido.jp\",\n      \"bibai.hokkaido.jp\",\n      \"biei.hokkaido.jp\",\n      \"bifuka.hokkaido.jp\",\n      \"bihoro.hokkaido.jp\",\n      \"biratori.hokkaido.jp\",\n      \"chippubetsu.hokkaido.jp\",\n      \"chitose.hokkaido.jp\",\n      \"date.hokkaido.jp\",\n      \"ebetsu.hokkaido.jp\",\n      \"embetsu.hokkaido.jp\",\n      \"eniwa.hokkaido.jp\",\n      \"erimo.hokkaido.jp\",\n      \"esan.hokkaido.jp\",\n      \"esashi.hokkaido.jp\",\n      \"fukagawa.hokkaido.jp\",\n      \"fukushima.hokkaido.jp\",\n      \"furano.hokkaido.jp\",\n      \"furubira.hokkaido.jp\",\n      \"haboro.hokkaido.jp\",\n      \"hakodate.hokkaido.jp\",\n      \"hamatonbetsu.hokkaido.jp\",\n      \"hidaka.hokkaido.jp\",\n      \"higashikagura.hokkaido.jp\",\n      \"higashikawa.hokkaido.jp\",\n      \"hiroo.hokkaido.jp\",\n      \"hokuryu.hokkaido.jp\",\n      \"hokuto.hokkaido.jp\",\n      \"honbetsu.hokkaido.jp\",\n      \"horokanai.hokkaido.jp\",\n      \"horonobe.hokkaido.jp\",\n      \"ikeda.hokkaido.jp\",\n      \"imakane.hokkaido.jp\",\n      \"ishikari.hokkaido.jp\",\n      \"iwamizawa.hokkaido.jp\",\n      \"iwanai.hokkaido.jp\",\n      \"kamifurano.hokkaido.jp\",\n      \"kamikawa.hokkaido.jp\",\n      \"kamishihoro.hokkaido.jp\",\n      \"kamisunagawa.hokkaido.jp\",\n      \"kamoenai.hokkaido.jp\",\n      \"kayabe.hokkaido.jp\",\n      \"kembuchi.hokkaido.jp\",\n      \"kikonai.hokkaido.jp\",\n      \"kimobetsu.hokkaido.jp\",\n      \"kitahiroshima.hokkaido.jp\",\n      \"kitami.hokkaido.jp\",\n      \"kiyosato.hokkaido.jp\",\n      \"koshimizu.hokkaido.jp\",\n      \"kunneppu.hokkaido.jp\",\n      \"kuriyama.hokkaido.jp\",\n      \"kuromatsunai.hokkaido.jp\",\n      \"kushiro.hokkaido.jp\",\n      \"kutchan.hokkaido.jp\",\n      \"kyowa.hokkaido.jp\",\n      \"mashike.hokkaido.jp\",\n      \"matsumae.hokkaido.jp\",\n      \"mikasa.hokkaido.jp\",\n      \"minamifurano.hokkaido.jp\",\n      \"mombetsu.hokkaido.jp\",\n      \"moseushi.hokkaido.jp\",\n      \"mukawa.hokkaido.jp\",\n      \"muroran.hokkaido.jp\",\n      \"naie.hokkaido.jp\",\n      \"nakagawa.hokkaido.jp\",\n      \"nakasatsunai.hokkaido.jp\",\n      \"nakatombetsu.hokkaido.jp\",\n      \"nanae.hokkaido.jp\",\n      \"nanporo.hokkaido.jp\",\n      \"nayoro.hokkaido.jp\",\n      \"nemuro.hokkaido.jp\",\n      \"niikappu.hokkaido.jp\",\n      \"niki.hokkaido.jp\",\n      \"nishiokoppe.hokkaido.jp\",\n      \"noboribetsu.hokkaido.jp\",\n      \"numata.hokkaido.jp\",\n      \"obihiro.hokkaido.jp\",\n      \"obira.hokkaido.jp\",\n      \"oketo.hokkaido.jp\",\n      \"okoppe.hokkaido.jp\",\n      \"otaru.hokkaido.jp\",\n      \"otobe.hokkaido.jp\",\n      \"otofuke.hokkaido.jp\",\n      \"otoineppu.hokkaido.jp\",\n      \"oumu.hokkaido.jp\",\n      \"ozora.hokkaido.jp\",\n      \"pippu.hokkaido.jp\",\n      \"rankoshi.hokkaido.jp\",\n      \"rebun.hokkaido.jp\",\n      \"rikubetsu.hokkaido.jp\",\n      \"rishiri.hokkaido.jp\",\n      \"rishirifuji.hokkaido.jp\",\n      \"saroma.hokkaido.jp\",\n      \"sarufutsu.hokkaido.jp\",\n      \"shakotan.hokkaido.jp\",\n      \"shari.hokkaido.jp\",\n      \"shibecha.hokkaido.jp\",\n      \"shibetsu.hokkaido.jp\",\n      \"shikabe.hokkaido.jp\",\n      \"shikaoi.hokkaido.jp\",\n      \"shimamaki.hokkaido.jp\",\n      \"shimizu.hokkaido.jp\",\n      \"shimokawa.hokkaido.jp\",\n      \"shinshinotsu.hokkaido.jp\",\n      \"shintoku.hokkaido.jp\",\n      \"shiranuka.hokkaido.jp\",\n      \"shiraoi.hokkaido.jp\",\n      \"shiriuchi.hokkaido.jp\",\n      \"sobetsu.hokkaido.jp\",\n      \"sunagawa.hokkaido.jp\",\n      \"taiki.hokkaido.jp\",\n      \"takasu.hokkaido.jp\",\n      \"takikawa.hokkaido.jp\",\n      \"takinoue.hokkaido.jp\",\n      \"teshikaga.hokkaido.jp\",\n      \"tobetsu.hokkaido.jp\",\n      \"tohma.hokkaido.jp\",\n      \"tomakomai.hokkaido.jp\",\n      \"tomari.hokkaido.jp\",\n      \"toya.hokkaido.jp\",\n      \"toyako.hokkaido.jp\",\n      \"toyotomi.hokkaido.jp\",\n      \"toyoura.hokkaido.jp\",\n      \"tsubetsu.hokkaido.jp\",\n      \"tsukigata.hokkaido.jp\",\n      \"urakawa.hokkaido.jp\",\n      \"urausu.hokkaido.jp\",\n      \"uryu.hokkaido.jp\",\n      \"utashinai.hokkaido.jp\",\n      \"wakkanai.hokkaido.jp\",\n      \"wassamu.hokkaido.jp\",\n      \"yakumo.hokkaido.jp\",\n      \"yoichi.hokkaido.jp\",\n      \"aioi.hyogo.jp\",\n      \"akashi.hyogo.jp\",\n      \"ako.hyogo.jp\",\n      \"amagasaki.hyogo.jp\",\n      \"aogaki.hyogo.jp\",\n      \"asago.hyogo.jp\",\n      \"ashiya.hyogo.jp\",\n      \"awaji.hyogo.jp\",\n      \"fukusaki.hyogo.jp\",\n      \"goshiki.hyogo.jp\",\n      \"harima.hyogo.jp\",\n      \"himeji.hyogo.jp\",\n      \"ichikawa.hyogo.jp\",\n      \"inagawa.hyogo.jp\",\n      \"itami.hyogo.jp\",\n      \"kakogawa.hyogo.jp\",\n      \"kamigori.hyogo.jp\",\n      \"kamikawa.hyogo.jp\",\n      \"kasai.hyogo.jp\",\n      \"kasuga.hyogo.jp\",\n      \"kawanishi.hyogo.jp\",\n      \"miki.hyogo.jp\",\n      \"minamiawaji.hyogo.jp\",\n      \"nishinomiya.hyogo.jp\",\n      \"nishiwaki.hyogo.jp\",\n      \"ono.hyogo.jp\",\n      \"sanda.hyogo.jp\",\n      \"sannan.hyogo.jp\",\n      \"sasayama.hyogo.jp\",\n      \"sayo.hyogo.jp\",\n      \"shingu.hyogo.jp\",\n      \"shinonsen.hyogo.jp\",\n      \"shiso.hyogo.jp\",\n      \"sumoto.hyogo.jp\",\n      \"taishi.hyogo.jp\",\n      \"taka.hyogo.jp\",\n      \"takarazuka.hyogo.jp\",\n      \"takasago.hyogo.jp\",\n      \"takino.hyogo.jp\",\n      \"tamba.hyogo.jp\",\n      \"tatsuno.hyogo.jp\",\n      \"toyooka.hyogo.jp\",\n      \"yabu.hyogo.jp\",\n      \"yashiro.hyogo.jp\",\n      \"yoka.hyogo.jp\",\n      \"yokawa.hyogo.jp\",\n      \"ami.ibaraki.jp\",\n      \"asahi.ibaraki.jp\",\n      \"bando.ibaraki.jp\",\n      \"chikusei.ibaraki.jp\",\n      \"daigo.ibaraki.jp\",\n      \"fujishiro.ibaraki.jp\",\n      \"hitachi.ibaraki.jp\",\n      \"hitachinaka.ibaraki.jp\",\n      \"hitachiomiya.ibaraki.jp\",\n      \"hitachiota.ibaraki.jp\",\n      \"ibaraki.ibaraki.jp\",\n      \"ina.ibaraki.jp\",\n      \"inashiki.ibaraki.jp\",\n      \"itako.ibaraki.jp\",\n      \"iwama.ibaraki.jp\",\n      \"joso.ibaraki.jp\",\n      \"kamisu.ibaraki.jp\",\n      \"kasama.ibaraki.jp\",\n      \"kashima.ibaraki.jp\",\n      \"kasumigaura.ibaraki.jp\",\n      \"koga.ibaraki.jp\",\n      \"miho.ibaraki.jp\",\n      \"mito.ibaraki.jp\",\n      \"moriya.ibaraki.jp\",\n      \"naka.ibaraki.jp\",\n      \"namegata.ibaraki.jp\",\n      \"oarai.ibaraki.jp\",\n      \"ogawa.ibaraki.jp\",\n      \"omitama.ibaraki.jp\",\n      \"ryugasaki.ibaraki.jp\",\n      \"sakai.ibaraki.jp\",\n      \"sakuragawa.ibaraki.jp\",\n      \"shimodate.ibaraki.jp\",\n      \"shimotsuma.ibaraki.jp\",\n      \"shirosato.ibaraki.jp\",\n      \"sowa.ibaraki.jp\",\n      \"suifu.ibaraki.jp\",\n      \"takahagi.ibaraki.jp\",\n      \"tamatsukuri.ibaraki.jp\",\n      \"tokai.ibaraki.jp\",\n      \"tomobe.ibaraki.jp\",\n      \"tone.ibaraki.jp\",\n      \"toride.ibaraki.jp\",\n      \"tsuchiura.ibaraki.jp\",\n      \"tsukuba.ibaraki.jp\",\n      \"uchihara.ibaraki.jp\",\n      \"ushiku.ibaraki.jp\",\n      \"yachiyo.ibaraki.jp\",\n      \"yamagata.ibaraki.jp\",\n      \"yawara.ibaraki.jp\",\n      \"yuki.ibaraki.jp\",\n      \"anamizu.ishikawa.jp\",\n      \"hakui.ishikawa.jp\",\n      \"hakusan.ishikawa.jp\",\n      \"kaga.ishikawa.jp\",\n      \"kahoku.ishikawa.jp\",\n      \"kanazawa.ishikawa.jp\",\n      \"kawakita.ishikawa.jp\",\n      \"komatsu.ishikawa.jp\",\n      \"nakanoto.ishikawa.jp\",\n      \"nanao.ishikawa.jp\",\n      \"nomi.ishikawa.jp\",\n      \"nonoichi.ishikawa.jp\",\n      \"noto.ishikawa.jp\",\n      \"shika.ishikawa.jp\",\n      \"suzu.ishikawa.jp\",\n      \"tsubata.ishikawa.jp\",\n      \"tsurugi.ishikawa.jp\",\n      \"uchinada.ishikawa.jp\",\n      \"wajima.ishikawa.jp\",\n      \"fudai.iwate.jp\",\n      \"fujisawa.iwate.jp\",\n      \"hanamaki.iwate.jp\",\n      \"hiraizumi.iwate.jp\",\n      \"hirono.iwate.jp\",\n      \"ichinohe.iwate.jp\",\n      \"ichinoseki.iwate.jp\",\n      \"iwaizumi.iwate.jp\",\n      \"iwate.iwate.jp\",\n      \"joboji.iwate.jp\",\n      \"kamaishi.iwate.jp\",\n      \"kanegasaki.iwate.jp\",\n      \"karumai.iwate.jp\",\n      \"kawai.iwate.jp\",\n      \"kitakami.iwate.jp\",\n      \"kuji.iwate.jp\",\n      \"kunohe.iwate.jp\",\n      \"kuzumaki.iwate.jp\",\n      \"miyako.iwate.jp\",\n      \"mizusawa.iwate.jp\",\n      \"morioka.iwate.jp\",\n      \"ninohe.iwate.jp\",\n      \"noda.iwate.jp\",\n      \"ofunato.iwate.jp\",\n      \"oshu.iwate.jp\",\n      \"otsuchi.iwate.jp\",\n      \"rikuzentakata.iwate.jp\",\n      \"shiwa.iwate.jp\",\n      \"shizukuishi.iwate.jp\",\n      \"sumita.iwate.jp\",\n      \"tanohata.iwate.jp\",\n      \"tono.iwate.jp\",\n      \"yahaba.iwate.jp\",\n      \"yamada.iwate.jp\",\n      \"ayagawa.kagawa.jp\",\n      \"higashikagawa.kagawa.jp\",\n      \"kanonji.kagawa.jp\",\n      \"kotohira.kagawa.jp\",\n      \"manno.kagawa.jp\",\n      \"marugame.kagawa.jp\",\n      \"mitoyo.kagawa.jp\",\n      \"naoshima.kagawa.jp\",\n      \"sanuki.kagawa.jp\",\n      \"tadotsu.kagawa.jp\",\n      \"takamatsu.kagawa.jp\",\n      \"tonosho.kagawa.jp\",\n      \"uchinomi.kagawa.jp\",\n      \"utazu.kagawa.jp\",\n      \"zentsuji.kagawa.jp\",\n      \"akune.kagoshima.jp\",\n      \"amami.kagoshima.jp\",\n      \"hioki.kagoshima.jp\",\n      \"isa.kagoshima.jp\",\n      \"isen.kagoshima.jp\",\n      \"izumi.kagoshima.jp\",\n      \"kagoshima.kagoshima.jp\",\n      \"kanoya.kagoshima.jp\",\n      \"kawanabe.kagoshima.jp\",\n      \"kinko.kagoshima.jp\",\n      \"kouyama.kagoshima.jp\",\n      \"makurazaki.kagoshima.jp\",\n      \"matsumoto.kagoshima.jp\",\n      \"minamitane.kagoshima.jp\",\n      \"nakatane.kagoshima.jp\",\n      \"nishinoomote.kagoshima.jp\",\n      \"satsumasendai.kagoshima.jp\",\n      \"soo.kagoshima.jp\",\n      \"tarumizu.kagoshima.jp\",\n      \"yusui.kagoshima.jp\",\n      \"aikawa.kanagawa.jp\",\n      \"atsugi.kanagawa.jp\",\n      \"ayase.kanagawa.jp\",\n      \"chigasaki.kanagawa.jp\",\n      \"ebina.kanagawa.jp\",\n      \"fujisawa.kanagawa.jp\",\n      \"hadano.kanagawa.jp\",\n      \"hakone.kanagawa.jp\",\n      \"hiratsuka.kanagawa.jp\",\n      \"isehara.kanagawa.jp\",\n      \"kaisei.kanagawa.jp\",\n      \"kamakura.kanagawa.jp\",\n      \"kiyokawa.kanagawa.jp\",\n      \"matsuda.kanagawa.jp\",\n      \"minamiashigara.kanagawa.jp\",\n      \"miura.kanagawa.jp\",\n      \"nakai.kanagawa.jp\",\n      \"ninomiya.kanagawa.jp\",\n      \"odawara.kanagawa.jp\",\n      \"oi.kanagawa.jp\",\n      \"oiso.kanagawa.jp\",\n      \"sagamihara.kanagawa.jp\",\n      \"samukawa.kanagawa.jp\",\n      \"tsukui.kanagawa.jp\",\n      \"yamakita.kanagawa.jp\",\n      \"yamato.kanagawa.jp\",\n      \"yokosuka.kanagawa.jp\",\n      \"yugawara.kanagawa.jp\",\n      \"zama.kanagawa.jp\",\n      \"zushi.kanagawa.jp\",\n      \"aki.kochi.jp\",\n      \"geisei.kochi.jp\",\n      \"hidaka.kochi.jp\",\n      \"higashitsuno.kochi.jp\",\n      \"ino.kochi.jp\",\n      \"kagami.kochi.jp\",\n      \"kami.kochi.jp\",\n      \"kitagawa.kochi.jp\",\n      \"kochi.kochi.jp\",\n      \"mihara.kochi.jp\",\n      \"motoyama.kochi.jp\",\n      \"muroto.kochi.jp\",\n      \"nahari.kochi.jp\",\n      \"nakamura.kochi.jp\",\n      \"nankoku.kochi.jp\",\n      \"nishitosa.kochi.jp\",\n      \"niyodogawa.kochi.jp\",\n      \"ochi.kochi.jp\",\n      \"okawa.kochi.jp\",\n      \"otoyo.kochi.jp\",\n      \"otsuki.kochi.jp\",\n      \"sakawa.kochi.jp\",\n      \"sukumo.kochi.jp\",\n      \"susaki.kochi.jp\",\n      \"tosa.kochi.jp\",\n      \"tosashimizu.kochi.jp\",\n      \"toyo.kochi.jp\",\n      \"tsuno.kochi.jp\",\n      \"umaji.kochi.jp\",\n      \"yasuda.kochi.jp\",\n      \"yusuhara.kochi.jp\",\n      \"amakusa.kumamoto.jp\",\n      \"arao.kumamoto.jp\",\n      \"aso.kumamoto.jp\",\n      \"choyo.kumamoto.jp\",\n      \"gyokuto.kumamoto.jp\",\n      \"kamiamakusa.kumamoto.jp\",\n      \"kikuchi.kumamoto.jp\",\n      \"kumamoto.kumamoto.jp\",\n      \"mashiki.kumamoto.jp\",\n      \"mifune.kumamoto.jp\",\n      \"minamata.kumamoto.jp\",\n      \"minamioguni.kumamoto.jp\",\n      \"nagasu.kumamoto.jp\",\n      \"nishihara.kumamoto.jp\",\n      \"oguni.kumamoto.jp\",\n      \"ozu.kumamoto.jp\",\n      \"sumoto.kumamoto.jp\",\n      \"takamori.kumamoto.jp\",\n      \"uki.kumamoto.jp\",\n      \"uto.kumamoto.jp\",\n      \"yamaga.kumamoto.jp\",\n      \"yamato.kumamoto.jp\",\n      \"yatsushiro.kumamoto.jp\",\n      \"ayabe.kyoto.jp\",\n      \"fukuchiyama.kyoto.jp\",\n      \"higashiyama.kyoto.jp\",\n      \"ide.kyoto.jp\",\n      \"ine.kyoto.jp\",\n      \"joyo.kyoto.jp\",\n      \"kameoka.kyoto.jp\",\n      \"kamo.kyoto.jp\",\n      \"kita.kyoto.jp\",\n      \"kizu.kyoto.jp\",\n      \"kumiyama.kyoto.jp\",\n      \"kyotamba.kyoto.jp\",\n      \"kyotanabe.kyoto.jp\",\n      \"kyotango.kyoto.jp\",\n      \"maizuru.kyoto.jp\",\n      \"minami.kyoto.jp\",\n      \"minamiyamashiro.kyoto.jp\",\n      \"miyazu.kyoto.jp\",\n      \"muko.kyoto.jp\",\n      \"nagaokakyo.kyoto.jp\",\n      \"nakagyo.kyoto.jp\",\n      \"nantan.kyoto.jp\",\n      \"oyamazaki.kyoto.jp\",\n      \"sakyo.kyoto.jp\",\n      \"seika.kyoto.jp\",\n      \"tanabe.kyoto.jp\",\n      \"uji.kyoto.jp\",\n      \"ujitawara.kyoto.jp\",\n      \"wazuka.kyoto.jp\",\n      \"yamashina.kyoto.jp\",\n      \"yawata.kyoto.jp\",\n      \"asahi.mie.jp\",\n      \"inabe.mie.jp\",\n      \"ise.mie.jp\",\n      \"kameyama.mie.jp\",\n      \"kawagoe.mie.jp\",\n      \"kiho.mie.jp\",\n      \"kisosaki.mie.jp\",\n      \"kiwa.mie.jp\",\n      \"komono.mie.jp\",\n      \"kumano.mie.jp\",\n      \"kuwana.mie.jp\",\n      \"matsusaka.mie.jp\",\n      \"meiwa.mie.jp\",\n      \"mihama.mie.jp\",\n      \"minamiise.mie.jp\",\n      \"misugi.mie.jp\",\n      \"miyama.mie.jp\",\n      \"nabari.mie.jp\",\n      \"shima.mie.jp\",\n      \"suzuka.mie.jp\",\n      \"tado.mie.jp\",\n      \"taiki.mie.jp\",\n      \"taki.mie.jp\",\n      \"tamaki.mie.jp\",\n      \"toba.mie.jp\",\n      \"tsu.mie.jp\",\n      \"udono.mie.jp\",\n      \"ureshino.mie.jp\",\n      \"watarai.mie.jp\",\n      \"yokkaichi.mie.jp\",\n      \"furukawa.miyagi.jp\",\n      \"higashimatsushima.miyagi.jp\",\n      \"ishinomaki.miyagi.jp\",\n      \"iwanuma.miyagi.jp\",\n      \"kakuda.miyagi.jp\",\n      \"kami.miyagi.jp\",\n      \"kawasaki.miyagi.jp\",\n      \"marumori.miyagi.jp\",\n      \"matsushima.miyagi.jp\",\n      \"minamisanriku.miyagi.jp\",\n      \"misato.miyagi.jp\",\n      \"murata.miyagi.jp\",\n      \"natori.miyagi.jp\",\n      \"ogawara.miyagi.jp\",\n      \"ohira.miyagi.jp\",\n      \"onagawa.miyagi.jp\",\n      \"osaki.miyagi.jp\",\n      \"rifu.miyagi.jp\",\n      \"semine.miyagi.jp\",\n      \"shibata.miyagi.jp\",\n      \"shichikashuku.miyagi.jp\",\n      \"shikama.miyagi.jp\",\n      \"shiogama.miyagi.jp\",\n      \"shiroishi.miyagi.jp\",\n      \"tagajo.miyagi.jp\",\n      \"taiwa.miyagi.jp\",\n      \"tome.miyagi.jp\",\n      \"tomiya.miyagi.jp\",\n      \"wakuya.miyagi.jp\",\n      \"watari.miyagi.jp\",\n      \"yamamoto.miyagi.jp\",\n      \"zao.miyagi.jp\",\n      \"aya.miyazaki.jp\",\n      \"ebino.miyazaki.jp\",\n      \"gokase.miyazaki.jp\",\n      \"hyuga.miyazaki.jp\",\n      \"kadogawa.miyazaki.jp\",\n      \"kawaminami.miyazaki.jp\",\n      \"kijo.miyazaki.jp\",\n      \"kitagawa.miyazaki.jp\",\n      \"kitakata.miyazaki.jp\",\n      \"kitaura.miyazaki.jp\",\n      \"kobayashi.miyazaki.jp\",\n      \"kunitomi.miyazaki.jp\",\n      \"kushima.miyazaki.jp\",\n      \"mimata.miyazaki.jp\",\n      \"miyakonojo.miyazaki.jp\",\n      \"miyazaki.miyazaki.jp\",\n      \"morotsuka.miyazaki.jp\",\n      \"nichinan.miyazaki.jp\",\n      \"nishimera.miyazaki.jp\",\n      \"nobeoka.miyazaki.jp\",\n      \"saito.miyazaki.jp\",\n      \"shiiba.miyazaki.jp\",\n      \"shintomi.miyazaki.jp\",\n      \"takaharu.miyazaki.jp\",\n      \"takanabe.miyazaki.jp\",\n      \"takazaki.miyazaki.jp\",\n      \"tsuno.miyazaki.jp\",\n      \"achi.nagano.jp\",\n      \"agematsu.nagano.jp\",\n      \"anan.nagano.jp\",\n      \"aoki.nagano.jp\",\n      \"asahi.nagano.jp\",\n      \"azumino.nagano.jp\",\n      \"chikuhoku.nagano.jp\",\n      \"chikuma.nagano.jp\",\n      \"chino.nagano.jp\",\n      \"fujimi.nagano.jp\",\n      \"hakuba.nagano.jp\",\n      \"hara.nagano.jp\",\n      \"hiraya.nagano.jp\",\n      \"iida.nagano.jp\",\n      \"iijima.nagano.jp\",\n      \"iiyama.nagano.jp\",\n      \"iizuna.nagano.jp\",\n      \"ikeda.nagano.jp\",\n      \"ikusaka.nagano.jp\",\n      \"ina.nagano.jp\",\n      \"karuizawa.nagano.jp\",\n      \"kawakami.nagano.jp\",\n      \"kiso.nagano.jp\",\n      \"kisofukushima.nagano.jp\",\n      \"kitaaiki.nagano.jp\",\n      \"komagane.nagano.jp\",\n      \"komoro.nagano.jp\",\n      \"matsukawa.nagano.jp\",\n      \"matsumoto.nagano.jp\",\n      \"miasa.nagano.jp\",\n      \"minamiaiki.nagano.jp\",\n      \"minamimaki.nagano.jp\",\n      \"minamiminowa.nagano.jp\",\n      \"minowa.nagano.jp\",\n      \"miyada.nagano.jp\",\n      \"miyota.nagano.jp\",\n      \"mochizuki.nagano.jp\",\n      \"nagano.nagano.jp\",\n      \"nagawa.nagano.jp\",\n      \"nagiso.nagano.jp\",\n      \"nakagawa.nagano.jp\",\n      \"nakano.nagano.jp\",\n      \"nozawaonsen.nagano.jp\",\n      \"obuse.nagano.jp\",\n      \"ogawa.nagano.jp\",\n      \"okaya.nagano.jp\",\n      \"omachi.nagano.jp\",\n      \"omi.nagano.jp\",\n      \"ookuwa.nagano.jp\",\n      \"ooshika.nagano.jp\",\n      \"otaki.nagano.jp\",\n      \"otari.nagano.jp\",\n      \"sakae.nagano.jp\",\n      \"sakaki.nagano.jp\",\n      \"saku.nagano.jp\",\n      \"sakuho.nagano.jp\",\n      \"shimosuwa.nagano.jp\",\n      \"shinanomachi.nagano.jp\",\n      \"shiojiri.nagano.jp\",\n      \"suwa.nagano.jp\",\n      \"suzaka.nagano.jp\",\n      \"takagi.nagano.jp\",\n      \"takamori.nagano.jp\",\n      \"takayama.nagano.jp\",\n      \"tateshina.nagano.jp\",\n      \"tatsuno.nagano.jp\",\n      \"togakushi.nagano.jp\",\n      \"togura.nagano.jp\",\n      \"tomi.nagano.jp\",\n      \"ueda.nagano.jp\",\n      \"wada.nagano.jp\",\n      \"yamagata.nagano.jp\",\n      \"yamanouchi.nagano.jp\",\n      \"yasaka.nagano.jp\",\n      \"yasuoka.nagano.jp\",\n      \"chijiwa.nagasaki.jp\",\n      \"futsu.nagasaki.jp\",\n      \"goto.nagasaki.jp\",\n      \"hasami.nagasaki.jp\",\n      \"hirado.nagasaki.jp\",\n      \"iki.nagasaki.jp\",\n      \"isahaya.nagasaki.jp\",\n      \"kawatana.nagasaki.jp\",\n      \"kuchinotsu.nagasaki.jp\",\n      \"matsuura.nagasaki.jp\",\n      \"nagasaki.nagasaki.jp\",\n      \"obama.nagasaki.jp\",\n      \"omura.nagasaki.jp\",\n      \"oseto.nagasaki.jp\",\n      \"saikai.nagasaki.jp\",\n      \"sasebo.nagasaki.jp\",\n      \"seihi.nagasaki.jp\",\n      \"shimabara.nagasaki.jp\",\n      \"shinkamigoto.nagasaki.jp\",\n      \"togitsu.nagasaki.jp\",\n      \"tsushima.nagasaki.jp\",\n      \"unzen.nagasaki.jp\",\n      \"ando.nara.jp\",\n      \"gose.nara.jp\",\n      \"heguri.nara.jp\",\n      \"higashiyoshino.nara.jp\",\n      \"ikaruga.nara.jp\",\n      \"ikoma.nara.jp\",\n      \"kamikitayama.nara.jp\",\n      \"kanmaki.nara.jp\",\n      \"kashiba.nara.jp\",\n      \"kashihara.nara.jp\",\n      \"katsuragi.nara.jp\",\n      \"kawai.nara.jp\",\n      \"kawakami.nara.jp\",\n      \"kawanishi.nara.jp\",\n      \"koryo.nara.jp\",\n      \"kurotaki.nara.jp\",\n      \"mitsue.nara.jp\",\n      \"miyake.nara.jp\",\n      \"nara.nara.jp\",\n      \"nosegawa.nara.jp\",\n      \"oji.nara.jp\",\n      \"ouda.nara.jp\",\n      \"oyodo.nara.jp\",\n      \"sakurai.nara.jp\",\n      \"sango.nara.jp\",\n      \"shimoichi.nara.jp\",\n      \"shimokitayama.nara.jp\",\n      \"shinjo.nara.jp\",\n      \"soni.nara.jp\",\n      \"takatori.nara.jp\",\n      \"tawaramoto.nara.jp\",\n      \"tenkawa.nara.jp\",\n      \"tenri.nara.jp\",\n      \"uda.nara.jp\",\n      \"yamatokoriyama.nara.jp\",\n      \"yamatotakada.nara.jp\",\n      \"yamazoe.nara.jp\",\n      \"yoshino.nara.jp\",\n      \"aga.niigata.jp\",\n      \"agano.niigata.jp\",\n      \"gosen.niigata.jp\",\n      \"itoigawa.niigata.jp\",\n      \"izumozaki.niigata.jp\",\n      \"joetsu.niigata.jp\",\n      \"kamo.niigata.jp\",\n      \"kariwa.niigata.jp\",\n      \"kashiwazaki.niigata.jp\",\n      \"minamiuonuma.niigata.jp\",\n      \"mitsuke.niigata.jp\",\n      \"muika.niigata.jp\",\n      \"murakami.niigata.jp\",\n      \"myoko.niigata.jp\",\n      \"nagaoka.niigata.jp\",\n      \"niigata.niigata.jp\",\n      \"ojiya.niigata.jp\",\n      \"omi.niigata.jp\",\n      \"sado.niigata.jp\",\n      \"sanjo.niigata.jp\",\n      \"seiro.niigata.jp\",\n      \"seirou.niigata.jp\",\n      \"sekikawa.niigata.jp\",\n      \"shibata.niigata.jp\",\n      \"tagami.niigata.jp\",\n      \"tainai.niigata.jp\",\n      \"tochio.niigata.jp\",\n      \"tokamachi.niigata.jp\",\n      \"tsubame.niigata.jp\",\n      \"tsunan.niigata.jp\",\n      \"uonuma.niigata.jp\",\n      \"yahiko.niigata.jp\",\n      \"yoita.niigata.jp\",\n      \"yuzawa.niigata.jp\",\n      \"beppu.oita.jp\",\n      \"bungoono.oita.jp\",\n      \"bungotakada.oita.jp\",\n      \"hasama.oita.jp\",\n      \"hiji.oita.jp\",\n      \"himeshima.oita.jp\",\n      \"hita.oita.jp\",\n      \"kamitsue.oita.jp\",\n      \"kokonoe.oita.jp\",\n      \"kuju.oita.jp\",\n      \"kunisaki.oita.jp\",\n      \"kusu.oita.jp\",\n      \"oita.oita.jp\",\n      \"saiki.oita.jp\",\n      \"taketa.oita.jp\",\n      \"tsukumi.oita.jp\",\n      \"usa.oita.jp\",\n      \"usuki.oita.jp\",\n      \"yufu.oita.jp\",\n      \"akaiwa.okayama.jp\",\n      \"asakuchi.okayama.jp\",\n      \"bizen.okayama.jp\",\n      \"hayashima.okayama.jp\",\n      \"ibara.okayama.jp\",\n      \"kagamino.okayama.jp\",\n      \"kasaoka.okayama.jp\",\n      \"kibichuo.okayama.jp\",\n      \"kumenan.okayama.jp\",\n      \"kurashiki.okayama.jp\",\n      \"maniwa.okayama.jp\",\n      \"misaki.okayama.jp\",\n      \"nagi.okayama.jp\",\n      \"niimi.okayama.jp\",\n      \"nishiawakura.okayama.jp\",\n      \"okayama.okayama.jp\",\n      \"satosho.okayama.jp\",\n      \"setouchi.okayama.jp\",\n      \"shinjo.okayama.jp\",\n      \"shoo.okayama.jp\",\n      \"soja.okayama.jp\",\n      \"takahashi.okayama.jp\",\n      \"tamano.okayama.jp\",\n      \"tsuyama.okayama.jp\",\n      \"wake.okayama.jp\",\n      \"yakage.okayama.jp\",\n      \"aguni.okinawa.jp\",\n      \"ginowan.okinawa.jp\",\n      \"ginoza.okinawa.jp\",\n      \"gushikami.okinawa.jp\",\n      \"haebaru.okinawa.jp\",\n      \"higashi.okinawa.jp\",\n      \"hirara.okinawa.jp\",\n      \"iheya.okinawa.jp\",\n      \"ishigaki.okinawa.jp\",\n      \"ishikawa.okinawa.jp\",\n      \"itoman.okinawa.jp\",\n      \"izena.okinawa.jp\",\n      \"kadena.okinawa.jp\",\n      \"kin.okinawa.jp\",\n      \"kitadaito.okinawa.jp\",\n      \"kitanakagusuku.okinawa.jp\",\n      \"kumejima.okinawa.jp\",\n      \"kunigami.okinawa.jp\",\n      \"minamidaito.okinawa.jp\",\n      \"motobu.okinawa.jp\",\n      \"nago.okinawa.jp\",\n      \"naha.okinawa.jp\",\n      \"nakagusuku.okinawa.jp\",\n      \"nakijin.okinawa.jp\",\n      \"nanjo.okinawa.jp\",\n      \"nishihara.okinawa.jp\",\n      \"ogimi.okinawa.jp\",\n      \"okinawa.okinawa.jp\",\n      \"onna.okinawa.jp\",\n      \"shimoji.okinawa.jp\",\n      \"taketomi.okinawa.jp\",\n      \"tarama.okinawa.jp\",\n      \"tokashiki.okinawa.jp\",\n      \"tomigusuku.okinawa.jp\",\n      \"tonaki.okinawa.jp\",\n      \"urasoe.okinawa.jp\",\n      \"uruma.okinawa.jp\",\n      \"yaese.okinawa.jp\",\n      \"yomitan.okinawa.jp\",\n      \"yonabaru.okinawa.jp\",\n      \"yonaguni.okinawa.jp\",\n      \"zamami.okinawa.jp\",\n      \"abeno.osaka.jp\",\n      \"chihayaakasaka.osaka.jp\",\n      \"chuo.osaka.jp\",\n      \"daito.osaka.jp\",\n      \"fujiidera.osaka.jp\",\n      \"habikino.osaka.jp\",\n      \"hannan.osaka.jp\",\n      \"higashiosaka.osaka.jp\",\n      \"higashisumiyoshi.osaka.jp\",\n      \"higashiyodogawa.osaka.jp\",\n      \"hirakata.osaka.jp\",\n      \"ibaraki.osaka.jp\",\n      \"ikeda.osaka.jp\",\n      \"izumi.osaka.jp\",\n      \"izumiotsu.osaka.jp\",\n      \"izumisano.osaka.jp\",\n      \"kadoma.osaka.jp\",\n      \"kaizuka.osaka.jp\",\n      \"kanan.osaka.jp\",\n      \"kashiwara.osaka.jp\",\n      \"katano.osaka.jp\",\n      \"kawachinagano.osaka.jp\",\n      \"kishiwada.osaka.jp\",\n      \"kita.osaka.jp\",\n      \"kumatori.osaka.jp\",\n      \"matsubara.osaka.jp\",\n      \"minato.osaka.jp\",\n      \"minoh.osaka.jp\",\n      \"misaki.osaka.jp\",\n      \"moriguchi.osaka.jp\",\n      \"neyagawa.osaka.jp\",\n      \"nishi.osaka.jp\",\n      \"nose.osaka.jp\",\n      \"osakasayama.osaka.jp\",\n      \"sakai.osaka.jp\",\n      \"sayama.osaka.jp\",\n      \"sennan.osaka.jp\",\n      \"settsu.osaka.jp\",\n      \"shijonawate.osaka.jp\",\n      \"shimamoto.osaka.jp\",\n      \"suita.osaka.jp\",\n      \"tadaoka.osaka.jp\",\n      \"taishi.osaka.jp\",\n      \"tajiri.osaka.jp\",\n      \"takaishi.osaka.jp\",\n      \"takatsuki.osaka.jp\",\n      \"tondabayashi.osaka.jp\",\n      \"toyonaka.osaka.jp\",\n      \"toyono.osaka.jp\",\n      \"yao.osaka.jp\",\n      \"ariake.saga.jp\",\n      \"arita.saga.jp\",\n      \"fukudomi.saga.jp\",\n      \"genkai.saga.jp\",\n      \"hamatama.saga.jp\",\n      \"hizen.saga.jp\",\n      \"imari.saga.jp\",\n      \"kamimine.saga.jp\",\n      \"kanzaki.saga.jp\",\n      \"karatsu.saga.jp\",\n      \"kashima.saga.jp\",\n      \"kitagata.saga.jp\",\n      \"kitahata.saga.jp\",\n      \"kiyama.saga.jp\",\n      \"kouhoku.saga.jp\",\n      \"kyuragi.saga.jp\",\n      \"nishiarita.saga.jp\",\n      \"ogi.saga.jp\",\n      \"omachi.saga.jp\",\n      \"ouchi.saga.jp\",\n      \"saga.saga.jp\",\n      \"shiroishi.saga.jp\",\n      \"taku.saga.jp\",\n      \"tara.saga.jp\",\n      \"tosu.saga.jp\",\n      \"yoshinogari.saga.jp\",\n      \"arakawa.saitama.jp\",\n      \"asaka.saitama.jp\",\n      \"chichibu.saitama.jp\",\n      \"fujimi.saitama.jp\",\n      \"fujimino.saitama.jp\",\n      \"fukaya.saitama.jp\",\n      \"hanno.saitama.jp\",\n      \"hanyu.saitama.jp\",\n      \"hasuda.saitama.jp\",\n      \"hatogaya.saitama.jp\",\n      \"hatoyama.saitama.jp\",\n      \"hidaka.saitama.jp\",\n      \"higashichichibu.saitama.jp\",\n      \"higashimatsuyama.saitama.jp\",\n      \"honjo.saitama.jp\",\n      \"ina.saitama.jp\",\n      \"iruma.saitama.jp\",\n      \"iwatsuki.saitama.jp\",\n      \"kamiizumi.saitama.jp\",\n      \"kamikawa.saitama.jp\",\n      \"kamisato.saitama.jp\",\n      \"kasukabe.saitama.jp\",\n      \"kawagoe.saitama.jp\",\n      \"kawaguchi.saitama.jp\",\n      \"kawajima.saitama.jp\",\n      \"kazo.saitama.jp\",\n      \"kitamoto.saitama.jp\",\n      \"koshigaya.saitama.jp\",\n      \"kounosu.saitama.jp\",\n      \"kuki.saitama.jp\",\n      \"kumagaya.saitama.jp\",\n      \"matsubushi.saitama.jp\",\n      \"minano.saitama.jp\",\n      \"misato.saitama.jp\",\n      \"miyashiro.saitama.jp\",\n      \"miyoshi.saitama.jp\",\n      \"moroyama.saitama.jp\",\n      \"nagatoro.saitama.jp\",\n      \"namegawa.saitama.jp\",\n      \"niiza.saitama.jp\",\n      \"ogano.saitama.jp\",\n      \"ogawa.saitama.jp\",\n      \"ogose.saitama.jp\",\n      \"okegawa.saitama.jp\",\n      \"omiya.saitama.jp\",\n      \"otaki.saitama.jp\",\n      \"ranzan.saitama.jp\",\n      \"ryokami.saitama.jp\",\n      \"saitama.saitama.jp\",\n      \"sakado.saitama.jp\",\n      \"satte.saitama.jp\",\n      \"sayama.saitama.jp\",\n      \"shiki.saitama.jp\",\n      \"shiraoka.saitama.jp\",\n      \"soka.saitama.jp\",\n      \"sugito.saitama.jp\",\n      \"toda.saitama.jp\",\n      \"tokigawa.saitama.jp\",\n      \"tokorozawa.saitama.jp\",\n      \"tsurugashima.saitama.jp\",\n      \"urawa.saitama.jp\",\n      \"warabi.saitama.jp\",\n      \"yashio.saitama.jp\",\n      \"yokoze.saitama.jp\",\n      \"yono.saitama.jp\",\n      \"yorii.saitama.jp\",\n      \"yoshida.saitama.jp\",\n      \"yoshikawa.saitama.jp\",\n      \"yoshimi.saitama.jp\",\n      \"aisho.shiga.jp\",\n      \"gamo.shiga.jp\",\n      \"higashiomi.shiga.jp\",\n      \"hikone.shiga.jp\",\n      \"koka.shiga.jp\",\n      \"konan.shiga.jp\",\n      \"kosei.shiga.jp\",\n      \"koto.shiga.jp\",\n      \"kusatsu.shiga.jp\",\n      \"maibara.shiga.jp\",\n      \"moriyama.shiga.jp\",\n      \"nagahama.shiga.jp\",\n      \"nishiazai.shiga.jp\",\n      \"notogawa.shiga.jp\",\n      \"omihachiman.shiga.jp\",\n      \"otsu.shiga.jp\",\n      \"ritto.shiga.jp\",\n      \"ryuoh.shiga.jp\",\n      \"takashima.shiga.jp\",\n      \"takatsuki.shiga.jp\",\n      \"torahime.shiga.jp\",\n      \"toyosato.shiga.jp\",\n      \"yasu.shiga.jp\",\n      \"akagi.shimane.jp\",\n      \"ama.shimane.jp\",\n      \"gotsu.shimane.jp\",\n      \"hamada.shimane.jp\",\n      \"higashiizumo.shimane.jp\",\n      \"hikawa.shimane.jp\",\n      \"hikimi.shimane.jp\",\n      \"izumo.shimane.jp\",\n      \"kakinoki.shimane.jp\",\n      \"masuda.shimane.jp\",\n      \"matsue.shimane.jp\",\n      \"misato.shimane.jp\",\n      \"nishinoshima.shimane.jp\",\n      \"ohda.shimane.jp\",\n      \"okinoshima.shimane.jp\",\n      \"okuizumo.shimane.jp\",\n      \"shimane.shimane.jp\",\n      \"tamayu.shimane.jp\",\n      \"tsuwano.shimane.jp\",\n      \"unnan.shimane.jp\",\n      \"yakumo.shimane.jp\",\n      \"yasugi.shimane.jp\",\n      \"yatsuka.shimane.jp\",\n      \"arai.shizuoka.jp\",\n      \"atami.shizuoka.jp\",\n      \"fuji.shizuoka.jp\",\n      \"fujieda.shizuoka.jp\",\n      \"fujikawa.shizuoka.jp\",\n      \"fujinomiya.shizuoka.jp\",\n      \"fukuroi.shizuoka.jp\",\n      \"gotemba.shizuoka.jp\",\n      \"haibara.shizuoka.jp\",\n      \"hamamatsu.shizuoka.jp\",\n      \"higashiizu.shizuoka.jp\",\n      \"ito.shizuoka.jp\",\n      \"iwata.shizuoka.jp\",\n      \"izu.shizuoka.jp\",\n      \"izunokuni.shizuoka.jp\",\n      \"kakegawa.shizuoka.jp\",\n      \"kannami.shizuoka.jp\",\n      \"kawanehon.shizuoka.jp\",\n      \"kawazu.shizuoka.jp\",\n      \"kikugawa.shizuoka.jp\",\n      \"kosai.shizuoka.jp\",\n      \"makinohara.shizuoka.jp\",\n      \"matsuzaki.shizuoka.jp\",\n      \"minamiizu.shizuoka.jp\",\n      \"mishima.shizuoka.jp\",\n      \"morimachi.shizuoka.jp\",\n      \"nishiizu.shizuoka.jp\",\n      \"numazu.shizuoka.jp\",\n      \"omaezaki.shizuoka.jp\",\n      \"shimada.shizuoka.jp\",\n      \"shimizu.shizuoka.jp\",\n      \"shimoda.shizuoka.jp\",\n      \"shizuoka.shizuoka.jp\",\n      \"susono.shizuoka.jp\",\n      \"yaizu.shizuoka.jp\",\n      \"yoshida.shizuoka.jp\",\n      \"ashikaga.tochigi.jp\",\n      \"bato.tochigi.jp\",\n      \"haga.tochigi.jp\",\n      \"ichikai.tochigi.jp\",\n      \"iwafune.tochigi.jp\",\n      \"kaminokawa.tochigi.jp\",\n      \"kanuma.tochigi.jp\",\n      \"karasuyama.tochigi.jp\",\n      \"kuroiso.tochigi.jp\",\n      \"mashiko.tochigi.jp\",\n      \"mibu.tochigi.jp\",\n      \"moka.tochigi.jp\",\n      \"motegi.tochigi.jp\",\n      \"nasu.tochigi.jp\",\n      \"nasushiobara.tochigi.jp\",\n      \"nikko.tochigi.jp\",\n      \"nishikata.tochigi.jp\",\n      \"nogi.tochigi.jp\",\n      \"ohira.tochigi.jp\",\n      \"ohtawara.tochigi.jp\",\n      \"oyama.tochigi.jp\",\n      \"sakura.tochigi.jp\",\n      \"sano.tochigi.jp\",\n      \"shimotsuke.tochigi.jp\",\n      \"shioya.tochigi.jp\",\n      \"takanezawa.tochigi.jp\",\n      \"tochigi.tochigi.jp\",\n      \"tsuga.tochigi.jp\",\n      \"ujiie.tochigi.jp\",\n      \"utsunomiya.tochigi.jp\",\n      \"yaita.tochigi.jp\",\n      \"aizumi.tokushima.jp\",\n      \"anan.tokushima.jp\",\n      \"ichiba.tokushima.jp\",\n      \"itano.tokushima.jp\",\n      \"kainan.tokushima.jp\",\n      \"komatsushima.tokushima.jp\",\n      \"matsushige.tokushima.jp\",\n      \"mima.tokushima.jp\",\n      \"minami.tokushima.jp\",\n      \"miyoshi.tokushima.jp\",\n      \"mugi.tokushima.jp\",\n      \"nakagawa.tokushima.jp\",\n      \"naruto.tokushima.jp\",\n      \"sanagochi.tokushima.jp\",\n      \"shishikui.tokushima.jp\",\n      \"tokushima.tokushima.jp\",\n      \"wajiki.tokushima.jp\",\n      \"adachi.tokyo.jp\",\n      \"akiruno.tokyo.jp\",\n      \"akishima.tokyo.jp\",\n      \"aogashima.tokyo.jp\",\n      \"arakawa.tokyo.jp\",\n      \"bunkyo.tokyo.jp\",\n      \"chiyoda.tokyo.jp\",\n      \"chofu.tokyo.jp\",\n      \"chuo.tokyo.jp\",\n      \"edogawa.tokyo.jp\",\n      \"fuchu.tokyo.jp\",\n      \"fussa.tokyo.jp\",\n      \"hachijo.tokyo.jp\",\n      \"hachioji.tokyo.jp\",\n      \"hamura.tokyo.jp\",\n      \"higashikurume.tokyo.jp\",\n      \"higashimurayama.tokyo.jp\",\n      \"higashiyamato.tokyo.jp\",\n      \"hino.tokyo.jp\",\n      \"hinode.tokyo.jp\",\n      \"hinohara.tokyo.jp\",\n      \"inagi.tokyo.jp\",\n      \"itabashi.tokyo.jp\",\n      \"katsushika.tokyo.jp\",\n      \"kita.tokyo.jp\",\n      \"kiyose.tokyo.jp\",\n      \"kodaira.tokyo.jp\",\n      \"koganei.tokyo.jp\",\n      \"kokubunji.tokyo.jp\",\n      \"komae.tokyo.jp\",\n      \"koto.tokyo.jp\",\n      \"kouzushima.tokyo.jp\",\n      \"kunitachi.tokyo.jp\",\n      \"machida.tokyo.jp\",\n      \"meguro.tokyo.jp\",\n      \"minato.tokyo.jp\",\n      \"mitaka.tokyo.jp\",\n      \"mizuho.tokyo.jp\",\n      \"musashimurayama.tokyo.jp\",\n      \"musashino.tokyo.jp\",\n      \"nakano.tokyo.jp\",\n      \"nerima.tokyo.jp\",\n      \"ogasawara.tokyo.jp\",\n      \"okutama.tokyo.jp\",\n      \"ome.tokyo.jp\",\n      \"oshima.tokyo.jp\",\n      \"ota.tokyo.jp\",\n      \"setagaya.tokyo.jp\",\n      \"shibuya.tokyo.jp\",\n      \"shinagawa.tokyo.jp\",\n      \"shinjuku.tokyo.jp\",\n      \"suginami.tokyo.jp\",\n      \"sumida.tokyo.jp\",\n      \"tachikawa.tokyo.jp\",\n      \"taito.tokyo.jp\",\n      \"tama.tokyo.jp\",\n      \"toshima.tokyo.jp\",\n      \"chizu.tottori.jp\",\n      \"hino.tottori.jp\",\n      \"kawahara.tottori.jp\",\n      \"koge.tottori.jp\",\n      \"kotoura.tottori.jp\",\n      \"misasa.tottori.jp\",\n      \"nanbu.tottori.jp\",\n      \"nichinan.tottori.jp\",\n      \"sakaiminato.tottori.jp\",\n      \"tottori.tottori.jp\",\n      \"wakasa.tottori.jp\",\n      \"yazu.tottori.jp\",\n      \"yonago.tottori.jp\",\n      \"asahi.toyama.jp\",\n      \"fuchu.toyama.jp\",\n      \"fukumitsu.toyama.jp\",\n      \"funahashi.toyama.jp\",\n      \"himi.toyama.jp\",\n      \"imizu.toyama.jp\",\n      \"inami.toyama.jp\",\n      \"johana.toyama.jp\",\n      \"kamiichi.toyama.jp\",\n      \"kurobe.toyama.jp\",\n      \"nakaniikawa.toyama.jp\",\n      \"namerikawa.toyama.jp\",\n      \"nanto.toyama.jp\",\n      \"nyuzen.toyama.jp\",\n      \"oyabe.toyama.jp\",\n      \"taira.toyama.jp\",\n      \"takaoka.toyama.jp\",\n      \"tateyama.toyama.jp\",\n      \"toga.toyama.jp\",\n      \"tonami.toyama.jp\",\n      \"toyama.toyama.jp\",\n      \"unazuki.toyama.jp\",\n      \"uozu.toyama.jp\",\n      \"yamada.toyama.jp\",\n      \"arida.wakayama.jp\",\n      \"aridagawa.wakayama.jp\",\n      \"gobo.wakayama.jp\",\n      \"hashimoto.wakayama.jp\",\n      \"hidaka.wakayama.jp\",\n      \"hirogawa.wakayama.jp\",\n      \"inami.wakayama.jp\",\n      \"iwade.wakayama.jp\",\n      \"kainan.wakayama.jp\",\n      \"kamitonda.wakayama.jp\",\n      \"katsuragi.wakayama.jp\",\n      \"kimino.wakayama.jp\",\n      \"kinokawa.wakayama.jp\",\n      \"kitayama.wakayama.jp\",\n      \"koya.wakayama.jp\",\n      \"koza.wakayama.jp\",\n      \"kozagawa.wakayama.jp\",\n      \"kudoyama.wakayama.jp\",\n      \"kushimoto.wakayama.jp\",\n      \"mihama.wakayama.jp\",\n      \"misato.wakayama.jp\",\n      \"nachikatsuura.wakayama.jp\",\n      \"shingu.wakayama.jp\",\n      \"shirahama.wakayama.jp\",\n      \"taiji.wakayama.jp\",\n      \"tanabe.wakayama.jp\",\n      \"wakayama.wakayama.jp\",\n      \"yuasa.wakayama.jp\",\n      \"yura.wakayama.jp\",\n      \"asahi.yamagata.jp\",\n      \"funagata.yamagata.jp\",\n      \"higashine.yamagata.jp\",\n      \"iide.yamagata.jp\",\n      \"kahoku.yamagata.jp\",\n      \"kaminoyama.yamagata.jp\",\n      \"kaneyama.yamagata.jp\",\n      \"kawanishi.yamagata.jp\",\n      \"mamurogawa.yamagata.jp\",\n      \"mikawa.yamagata.jp\",\n      \"murayama.yamagata.jp\",\n      \"nagai.yamagata.jp\",\n      \"nakayama.yamagata.jp\",\n      \"nanyo.yamagata.jp\",\n      \"nishikawa.yamagata.jp\",\n      \"obanazawa.yamagata.jp\",\n      \"oe.yamagata.jp\",\n      \"oguni.yamagata.jp\",\n      \"ohkura.yamagata.jp\",\n      \"oishida.yamagata.jp\",\n      \"sagae.yamagata.jp\",\n      \"sakata.yamagata.jp\",\n      \"sakegawa.yamagata.jp\",\n      \"shinjo.yamagata.jp\",\n      \"shirataka.yamagata.jp\",\n      \"shonai.yamagata.jp\",\n      \"takahata.yamagata.jp\",\n      \"tendo.yamagata.jp\",\n      \"tozawa.yamagata.jp\",\n      \"tsuruoka.yamagata.jp\",\n      \"yamagata.yamagata.jp\",\n      \"yamanobe.yamagata.jp\",\n      \"yonezawa.yamagata.jp\",\n      \"yuza.yamagata.jp\",\n      \"abu.yamaguchi.jp\",\n      \"hagi.yamaguchi.jp\",\n      \"hikari.yamaguchi.jp\",\n      \"hofu.yamaguchi.jp\",\n      \"iwakuni.yamaguchi.jp\",\n      \"kudamatsu.yamaguchi.jp\",\n      \"mitou.yamaguchi.jp\",\n      \"nagato.yamaguchi.jp\",\n      \"oshima.yamaguchi.jp\",\n      \"shimonoseki.yamaguchi.jp\",\n      \"shunan.yamaguchi.jp\",\n      \"tabuse.yamaguchi.jp\",\n      \"tokuyama.yamaguchi.jp\",\n      \"toyota.yamaguchi.jp\",\n      \"ube.yamaguchi.jp\",\n      \"yuu.yamaguchi.jp\",\n      \"chuo.yamanashi.jp\",\n      \"doshi.yamanashi.jp\",\n      \"fuefuki.yamanashi.jp\",\n      \"fujikawa.yamanashi.jp\",\n      \"fujikawaguchiko.yamanashi.jp\",\n      \"fujiyoshida.yamanashi.jp\",\n      \"hayakawa.yamanashi.jp\",\n      \"hokuto.yamanashi.jp\",\n      \"ichikawamisato.yamanashi.jp\",\n      \"kai.yamanashi.jp\",\n      \"kofu.yamanashi.jp\",\n      \"koshu.yamanashi.jp\",\n      \"kosuge.yamanashi.jp\",\n      \"minami-alps.yamanashi.jp\",\n      \"minobu.yamanashi.jp\",\n      \"nakamichi.yamanashi.jp\",\n      \"nanbu.yamanashi.jp\",\n      \"narusawa.yamanashi.jp\",\n      \"nirasaki.yamanashi.jp\",\n      \"nishikatsura.yamanashi.jp\",\n      \"oshino.yamanashi.jp\",\n      \"otsuki.yamanashi.jp\",\n      \"showa.yamanashi.jp\",\n      \"tabayama.yamanashi.jp\",\n      \"tsuru.yamanashi.jp\",\n      \"uenohara.yamanashi.jp\",\n      \"yamanakako.yamanashi.jp\",\n      \"yamanashi.yamanashi.jp\",\n      \"ke\",\n      \"ac.ke\",\n      \"co.ke\",\n      \"go.ke\",\n      \"info.ke\",\n      \"me.ke\",\n      \"mobi.ke\",\n      \"ne.ke\",\n      \"or.ke\",\n      \"sc.ke\",\n      \"kg\",\n      \"org.kg\",\n      \"net.kg\",\n      \"com.kg\",\n      \"edu.kg\",\n      \"gov.kg\",\n      \"mil.kg\",\n      \"*.kh\",\n      \"ki\",\n      \"edu.ki\",\n      \"biz.ki\",\n      \"net.ki\",\n      \"org.ki\",\n      \"gov.ki\",\n      \"info.ki\",\n      \"com.ki\",\n      \"km\",\n      \"org.km\",\n      \"nom.km\",\n      \"gov.km\",\n      \"prd.km\",\n      \"tm.km\",\n      \"edu.km\",\n      \"mil.km\",\n      \"ass.km\",\n      \"com.km\",\n      \"coop.km\",\n      \"asso.km\",\n      \"presse.km\",\n      \"medecin.km\",\n      \"notaires.km\",\n      \"pharmaciens.km\",\n      \"veterinaire.km\",\n      \"gouv.km\",\n      \"kn\",\n      \"net.kn\",\n      \"org.kn\",\n      \"edu.kn\",\n      \"gov.kn\",\n      \"kp\",\n      \"com.kp\",\n      \"edu.kp\",\n      \"gov.kp\",\n      \"org.kp\",\n      \"rep.kp\",\n      \"tra.kp\",\n      \"kr\",\n      \"ac.kr\",\n      \"co.kr\",\n      \"es.kr\",\n      \"go.kr\",\n      \"hs.kr\",\n      \"kg.kr\",\n      \"mil.kr\",\n      \"ms.kr\",\n      \"ne.kr\",\n      \"or.kr\",\n      \"pe.kr\",\n      \"re.kr\",\n      \"sc.kr\",\n      \"busan.kr\",\n      \"chungbuk.kr\",\n      \"chungnam.kr\",\n      \"daegu.kr\",\n      \"daejeon.kr\",\n      \"gangwon.kr\",\n      \"gwangju.kr\",\n      \"gyeongbuk.kr\",\n      \"gyeonggi.kr\",\n      \"gyeongnam.kr\",\n      \"incheon.kr\",\n      \"jeju.kr\",\n      \"jeonbuk.kr\",\n      \"jeonnam.kr\",\n      \"seoul.kr\",\n      \"ulsan.kr\",\n      \"kw\",\n      \"com.kw\",\n      \"edu.kw\",\n      \"emb.kw\",\n      \"gov.kw\",\n      \"ind.kw\",\n      \"net.kw\",\n      \"org.kw\",\n      \"ky\",\n      \"com.ky\",\n      \"edu.ky\",\n      \"net.ky\",\n      \"org.ky\",\n      \"kz\",\n      \"org.kz\",\n      \"edu.kz\",\n      \"net.kz\",\n      \"gov.kz\",\n      \"mil.kz\",\n      \"com.kz\",\n      \"la\",\n      \"int.la\",\n      \"net.la\",\n      \"info.la\",\n      \"edu.la\",\n      \"gov.la\",\n      \"per.la\",\n      \"com.la\",\n      \"org.la\",\n      \"lb\",\n      \"com.lb\",\n      \"edu.lb\",\n      \"gov.lb\",\n      \"net.lb\",\n      \"org.lb\",\n      \"lc\",\n      \"com.lc\",\n      \"net.lc\",\n      \"co.lc\",\n      \"org.lc\",\n      \"edu.lc\",\n      \"gov.lc\",\n      \"li\",\n      \"lk\",\n      \"gov.lk\",\n      \"sch.lk\",\n      \"net.lk\",\n      \"int.lk\",\n      \"com.lk\",\n      \"org.lk\",\n      \"edu.lk\",\n      \"ngo.lk\",\n      \"soc.lk\",\n      \"web.lk\",\n      \"ltd.lk\",\n      \"assn.lk\",\n      \"grp.lk\",\n      \"hotel.lk\",\n      \"ac.lk\",\n      \"lr\",\n      \"com.lr\",\n      \"edu.lr\",\n      \"gov.lr\",\n      \"org.lr\",\n      \"net.lr\",\n      \"ls\",\n      \"ac.ls\",\n      \"biz.ls\",\n      \"co.ls\",\n      \"edu.ls\",\n      \"gov.ls\",\n      \"info.ls\",\n      \"net.ls\",\n      \"org.ls\",\n      \"sc.ls\",\n      \"lt\",\n      \"gov.lt\",\n      \"lu\",\n      \"lv\",\n      \"com.lv\",\n      \"edu.lv\",\n      \"gov.lv\",\n      \"org.lv\",\n      \"mil.lv\",\n      \"id.lv\",\n      \"net.lv\",\n      \"asn.lv\",\n      \"conf.lv\",\n      \"ly\",\n      \"com.ly\",\n      \"net.ly\",\n      \"gov.ly\",\n      \"plc.ly\",\n      \"edu.ly\",\n      \"sch.ly\",\n      \"med.ly\",\n      \"org.ly\",\n      \"id.ly\",\n      \"ma\",\n      \"co.ma\",\n      \"net.ma\",\n      \"gov.ma\",\n      \"org.ma\",\n      \"ac.ma\",\n      \"press.ma\",\n      \"mc\",\n      \"tm.mc\",\n      \"asso.mc\",\n      \"md\",\n      \"me\",\n      \"co.me\",\n      \"net.me\",\n      \"org.me\",\n      \"edu.me\",\n      \"ac.me\",\n      \"gov.me\",\n      \"its.me\",\n      \"priv.me\",\n      \"mg\",\n      \"org.mg\",\n      \"nom.mg\",\n      \"gov.mg\",\n      \"prd.mg\",\n      \"tm.mg\",\n      \"edu.mg\",\n      \"mil.mg\",\n      \"com.mg\",\n      \"co.mg\",\n      \"mh\",\n      \"mil\",\n      \"mk\",\n      \"com.mk\",\n      \"org.mk\",\n      \"net.mk\",\n      \"edu.mk\",\n      \"gov.mk\",\n      \"inf.mk\",\n      \"name.mk\",\n      \"ml\",\n      \"com.ml\",\n      \"edu.ml\",\n      \"gouv.ml\",\n      \"gov.ml\",\n      \"net.ml\",\n      \"org.ml\",\n      \"presse.ml\",\n      \"*.mm\",\n      \"mn\",\n      \"gov.mn\",\n      \"edu.mn\",\n      \"org.mn\",\n      \"mo\",\n      \"com.mo\",\n      \"net.mo\",\n      \"org.mo\",\n      \"edu.mo\",\n      \"gov.mo\",\n      \"mobi\",\n      \"mp\",\n      \"mq\",\n      \"mr\",\n      \"gov.mr\",\n      \"ms\",\n      \"com.ms\",\n      \"edu.ms\",\n      \"gov.ms\",\n      \"net.ms\",\n      \"org.ms\",\n      \"mt\",\n      \"com.mt\",\n      \"edu.mt\",\n      \"net.mt\",\n      \"org.mt\",\n      \"mu\",\n      \"com.mu\",\n      \"net.mu\",\n      \"org.mu\",\n      \"gov.mu\",\n      \"ac.mu\",\n      \"co.mu\",\n      \"or.mu\",\n      \"museum\",\n      \"academy.museum\",\n      \"agriculture.museum\",\n      \"air.museum\",\n      \"airguard.museum\",\n      \"alabama.museum\",\n      \"alaska.museum\",\n      \"amber.museum\",\n      \"ambulance.museum\",\n      \"american.museum\",\n      \"americana.museum\",\n      \"americanantiques.museum\",\n      \"americanart.museum\",\n      \"amsterdam.museum\",\n      \"and.museum\",\n      \"annefrank.museum\",\n      \"anthro.museum\",\n      \"anthropology.museum\",\n      \"antiques.museum\",\n      \"aquarium.museum\",\n      \"arboretum.museum\",\n      \"archaeological.museum\",\n      \"archaeology.museum\",\n      \"architecture.museum\",\n      \"art.museum\",\n      \"artanddesign.museum\",\n      \"artcenter.museum\",\n      \"artdeco.museum\",\n      \"arteducation.museum\",\n      \"artgallery.museum\",\n      \"arts.museum\",\n      \"artsandcrafts.museum\",\n      \"asmatart.museum\",\n      \"assassination.museum\",\n      \"assisi.museum\",\n      \"association.museum\",\n      \"astronomy.museum\",\n      \"atlanta.museum\",\n      \"austin.museum\",\n      \"australia.museum\",\n      \"automotive.museum\",\n      \"aviation.museum\",\n      \"axis.museum\",\n      \"badajoz.museum\",\n      \"baghdad.museum\",\n      \"bahn.museum\",\n      \"bale.museum\",\n      \"baltimore.museum\",\n      \"barcelona.museum\",\n      \"baseball.museum\",\n      \"basel.museum\",\n      \"baths.museum\",\n      \"bauern.museum\",\n      \"beauxarts.museum\",\n      \"beeldengeluid.museum\",\n      \"bellevue.museum\",\n      \"bergbau.museum\",\n      \"berkeley.museum\",\n      \"berlin.museum\",\n      \"bern.museum\",\n      \"bible.museum\",\n      \"bilbao.museum\",\n      \"bill.museum\",\n      \"birdart.museum\",\n      \"birthplace.museum\",\n      \"bonn.museum\",\n      \"boston.museum\",\n      \"botanical.museum\",\n      \"botanicalgarden.museum\",\n      \"botanicgarden.museum\",\n      \"botany.museum\",\n      \"brandywinevalley.museum\",\n      \"brasil.museum\",\n      \"bristol.museum\",\n      \"british.museum\",\n      \"britishcolumbia.museum\",\n      \"broadcast.museum\",\n      \"brunel.museum\",\n      \"brussel.museum\",\n      \"brussels.museum\",\n      \"bruxelles.museum\",\n      \"building.museum\",\n      \"burghof.museum\",\n      \"bus.museum\",\n      \"bushey.museum\",\n      \"cadaques.museum\",\n      \"california.museum\",\n      \"cambridge.museum\",\n      \"can.museum\",\n      \"canada.museum\",\n      \"capebreton.museum\",\n      \"carrier.museum\",\n      \"cartoonart.museum\",\n      \"casadelamoneda.museum\",\n      \"castle.museum\",\n      \"castres.museum\",\n      \"celtic.museum\",\n      \"center.museum\",\n      \"chattanooga.museum\",\n      \"cheltenham.museum\",\n      \"chesapeakebay.museum\",\n      \"chicago.museum\",\n      \"children.museum\",\n      \"childrens.museum\",\n      \"childrensgarden.museum\",\n      \"chiropractic.museum\",\n      \"chocolate.museum\",\n      \"christiansburg.museum\",\n      \"cincinnati.museum\",\n      \"cinema.museum\",\n      \"circus.museum\",\n      \"civilisation.museum\",\n      \"civilization.museum\",\n      \"civilwar.museum\",\n      \"clinton.museum\",\n      \"clock.museum\",\n      \"coal.museum\",\n      \"coastaldefence.museum\",\n      \"cody.museum\",\n      \"coldwar.museum\",\n      \"collection.museum\",\n      \"colonialwilliamsburg.museum\",\n      \"coloradoplateau.museum\",\n      \"columbia.museum\",\n      \"columbus.museum\",\n      \"communication.museum\",\n      \"communications.museum\",\n      \"community.museum\",\n      \"computer.museum\",\n      \"computerhistory.museum\",\n      \"comunica\\xE7\\xF5es.museum\",\n      \"contemporary.museum\",\n      \"contemporaryart.museum\",\n      \"convent.museum\",\n      \"copenhagen.museum\",\n      \"corporation.museum\",\n      \"correios-e-telecomunica\\xE7\\xF5es.museum\",\n      \"corvette.museum\",\n      \"costume.museum\",\n      \"countryestate.museum\",\n      \"county.museum\",\n      \"crafts.museum\",\n      \"cranbrook.museum\",\n      \"creation.museum\",\n      \"cultural.museum\",\n      \"culturalcenter.museum\",\n      \"culture.museum\",\n      \"cyber.museum\",\n      \"cymru.museum\",\n      \"dali.museum\",\n      \"dallas.museum\",\n      \"database.museum\",\n      \"ddr.museum\",\n      \"decorativearts.museum\",\n      \"delaware.museum\",\n      \"delmenhorst.museum\",\n      \"denmark.museum\",\n      \"depot.museum\",\n      \"design.museum\",\n      \"detroit.museum\",\n      \"dinosaur.museum\",\n      \"discovery.museum\",\n      \"dolls.museum\",\n      \"donostia.museum\",\n      \"durham.museum\",\n      \"eastafrica.museum\",\n      \"eastcoast.museum\",\n      \"education.museum\",\n      \"educational.museum\",\n      \"egyptian.museum\",\n      \"eisenbahn.museum\",\n      \"elburg.museum\",\n      \"elvendrell.museum\",\n      \"embroidery.museum\",\n      \"encyclopedic.museum\",\n      \"england.museum\",\n      \"entomology.museum\",\n      \"environment.museum\",\n      \"environmentalconservation.museum\",\n      \"epilepsy.museum\",\n      \"essex.museum\",\n      \"estate.museum\",\n      \"ethnology.museum\",\n      \"exeter.museum\",\n      \"exhibition.museum\",\n      \"family.museum\",\n      \"farm.museum\",\n      \"farmequipment.museum\",\n      \"farmers.museum\",\n      \"farmstead.museum\",\n      \"field.museum\",\n      \"figueres.museum\",\n      \"filatelia.museum\",\n      \"film.museum\",\n      \"fineart.museum\",\n      \"finearts.museum\",\n      \"finland.museum\",\n      \"flanders.museum\",\n      \"florida.museum\",\n      \"force.museum\",\n      \"fortmissoula.museum\",\n      \"fortworth.museum\",\n      \"foundation.museum\",\n      \"francaise.museum\",\n      \"frankfurt.museum\",\n      \"franziskaner.museum\",\n      \"freemasonry.museum\",\n      \"freiburg.museum\",\n      \"fribourg.museum\",\n      \"frog.museum\",\n      \"fundacio.museum\",\n      \"furniture.museum\",\n      \"gallery.museum\",\n      \"garden.museum\",\n      \"gateway.museum\",\n      \"geelvinck.museum\",\n      \"gemological.museum\",\n      \"geology.museum\",\n      \"georgia.museum\",\n      \"giessen.museum\",\n      \"glas.museum\",\n      \"glass.museum\",\n      \"gorge.museum\",\n      \"grandrapids.museum\",\n      \"graz.museum\",\n      \"guernsey.museum\",\n      \"halloffame.museum\",\n      \"hamburg.museum\",\n      \"handson.museum\",\n      \"harvestcelebration.museum\",\n      \"hawaii.museum\",\n      \"health.museum\",\n      \"heimatunduhren.museum\",\n      \"hellas.museum\",\n      \"helsinki.museum\",\n      \"hembygdsforbund.museum\",\n      \"heritage.museum\",\n      \"histoire.museum\",\n      \"historical.museum\",\n      \"historicalsociety.museum\",\n      \"historichouses.museum\",\n      \"historisch.museum\",\n      \"historisches.museum\",\n      \"history.museum\",\n      \"historyofscience.museum\",\n      \"horology.museum\",\n      \"house.museum\",\n      \"humanities.museum\",\n      \"illustration.museum\",\n      \"imageandsound.museum\",\n      \"indian.museum\",\n      \"indiana.museum\",\n      \"indianapolis.museum\",\n      \"indianmarket.museum\",\n      \"intelligence.museum\",\n      \"interactive.museum\",\n      \"iraq.museum\",\n      \"iron.museum\",\n      \"isleofman.museum\",\n      \"jamison.museum\",\n      \"jefferson.museum\",\n      \"jerusalem.museum\",\n      \"jewelry.museum\",\n      \"jewish.museum\",\n      \"jewishart.museum\",\n      \"jfk.museum\",\n      \"journalism.museum\",\n      \"judaica.museum\",\n      \"judygarland.museum\",\n      \"juedisches.museum\",\n      \"juif.museum\",\n      \"karate.museum\",\n      \"karikatur.museum\",\n      \"kids.museum\",\n      \"koebenhavn.museum\",\n      \"koeln.museum\",\n      \"kunst.museum\",\n      \"kunstsammlung.museum\",\n      \"kunstunddesign.museum\",\n      \"labor.museum\",\n      \"labour.museum\",\n      \"lajolla.museum\",\n      \"lancashire.museum\",\n      \"landes.museum\",\n      \"lans.museum\",\n      \"l\\xE4ns.museum\",\n      \"larsson.museum\",\n      \"lewismiller.museum\",\n      \"lincoln.museum\",\n      \"linz.museum\",\n      \"living.museum\",\n      \"livinghistory.museum\",\n      \"localhistory.museum\",\n      \"london.museum\",\n      \"losangeles.museum\",\n      \"louvre.museum\",\n      \"loyalist.museum\",\n      \"lucerne.museum\",\n      \"luxembourg.museum\",\n      \"luzern.museum\",\n      \"mad.museum\",\n      \"madrid.museum\",\n      \"mallorca.museum\",\n      \"manchester.museum\",\n      \"mansion.museum\",\n      \"mansions.museum\",\n      \"manx.museum\",\n      \"marburg.museum\",\n      \"maritime.museum\",\n      \"maritimo.museum\",\n      \"maryland.museum\",\n      \"marylhurst.museum\",\n      \"media.museum\",\n      \"medical.museum\",\n      \"medizinhistorisches.museum\",\n      \"meeres.museum\",\n      \"memorial.museum\",\n      \"mesaverde.museum\",\n      \"michigan.museum\",\n      \"midatlantic.museum\",\n      \"military.museum\",\n      \"mill.museum\",\n      \"miners.museum\",\n      \"mining.museum\",\n      \"minnesota.museum\",\n      \"missile.museum\",\n      \"missoula.museum\",\n      \"modern.museum\",\n      \"moma.museum\",\n      \"money.museum\",\n      \"monmouth.museum\",\n      \"monticello.museum\",\n      \"montreal.museum\",\n      \"moscow.museum\",\n      \"motorcycle.museum\",\n      \"muenchen.museum\",\n      \"muenster.museum\",\n      \"mulhouse.museum\",\n      \"muncie.museum\",\n      \"museet.museum\",\n      \"museumcenter.museum\",\n      \"museumvereniging.museum\",\n      \"music.museum\",\n      \"national.museum\",\n      \"nationalfirearms.museum\",\n      \"nationalheritage.museum\",\n      \"nativeamerican.museum\",\n      \"naturalhistory.museum\",\n      \"naturalhistorymuseum.museum\",\n      \"naturalsciences.museum\",\n      \"nature.museum\",\n      \"naturhistorisches.museum\",\n      \"natuurwetenschappen.museum\",\n      \"naumburg.museum\",\n      \"naval.museum\",\n      \"nebraska.museum\",\n      \"neues.museum\",\n      \"newhampshire.museum\",\n      \"newjersey.museum\",\n      \"newmexico.museum\",\n      \"newport.museum\",\n      \"newspaper.museum\",\n      \"newyork.museum\",\n      \"niepce.museum\",\n      \"norfolk.museum\",\n      \"north.museum\",\n      \"nrw.museum\",\n      \"nyc.museum\",\n      \"nyny.museum\",\n      \"oceanographic.museum\",\n      \"oceanographique.museum\",\n      \"omaha.museum\",\n      \"online.museum\",\n      \"ontario.museum\",\n      \"openair.museum\",\n      \"oregon.museum\",\n      \"oregontrail.museum\",\n      \"otago.museum\",\n      \"oxford.museum\",\n      \"pacific.museum\",\n      \"paderborn.museum\",\n      \"palace.museum\",\n      \"paleo.museum\",\n      \"palmsprings.museum\",\n      \"panama.museum\",\n      \"paris.museum\",\n      \"pasadena.museum\",\n      \"pharmacy.museum\",\n      \"philadelphia.museum\",\n      \"philadelphiaarea.museum\",\n      \"philately.museum\",\n      \"phoenix.museum\",\n      \"photography.museum\",\n      \"pilots.museum\",\n      \"pittsburgh.museum\",\n      \"planetarium.museum\",\n      \"plantation.museum\",\n      \"plants.museum\",\n      \"plaza.museum\",\n      \"portal.museum\",\n      \"portland.museum\",\n      \"portlligat.museum\",\n      \"posts-and-telecommunications.museum\",\n      \"preservation.museum\",\n      \"presidio.museum\",\n      \"press.museum\",\n      \"project.museum\",\n      \"public.museum\",\n      \"pubol.museum\",\n      \"quebec.museum\",\n      \"railroad.museum\",\n      \"railway.museum\",\n      \"research.museum\",\n      \"resistance.museum\",\n      \"riodejaneiro.museum\",\n      \"rochester.museum\",\n      \"rockart.museum\",\n      \"roma.museum\",\n      \"russia.museum\",\n      \"saintlouis.museum\",\n      \"salem.museum\",\n      \"salvadordali.museum\",\n      \"salzburg.museum\",\n      \"sandiego.museum\",\n      \"sanfrancisco.museum\",\n      \"santabarbara.museum\",\n      \"santacruz.museum\",\n      \"santafe.museum\",\n      \"saskatchewan.museum\",\n      \"satx.museum\",\n      \"savannahga.museum\",\n      \"schlesisches.museum\",\n      \"schoenbrunn.museum\",\n      \"schokoladen.museum\",\n      \"school.museum\",\n      \"schweiz.museum\",\n      \"science.museum\",\n      \"scienceandhistory.museum\",\n      \"scienceandindustry.museum\",\n      \"sciencecenter.museum\",\n      \"sciencecenters.museum\",\n      \"science-fiction.museum\",\n      \"sciencehistory.museum\",\n      \"sciences.museum\",\n      \"sciencesnaturelles.museum\",\n      \"scotland.museum\",\n      \"seaport.museum\",\n      \"settlement.museum\",\n      \"settlers.museum\",\n      \"shell.museum\",\n      \"sherbrooke.museum\",\n      \"sibenik.museum\",\n      \"silk.museum\",\n      \"ski.museum\",\n      \"skole.museum\",\n      \"society.museum\",\n      \"sologne.museum\",\n      \"soundandvision.museum\",\n      \"southcarolina.museum\",\n      \"southwest.museum\",\n      \"space.museum\",\n      \"spy.museum\",\n      \"square.museum\",\n      \"stadt.museum\",\n      \"stalbans.museum\",\n      \"starnberg.museum\",\n      \"state.museum\",\n      \"stateofdelaware.museum\",\n      \"station.museum\",\n      \"steam.museum\",\n      \"steiermark.museum\",\n      \"stjohn.museum\",\n      \"stockholm.museum\",\n      \"stpetersburg.museum\",\n      \"stuttgart.museum\",\n      \"suisse.museum\",\n      \"surgeonshall.museum\",\n      \"surrey.museum\",\n      \"svizzera.museum\",\n      \"sweden.museum\",\n      \"sydney.museum\",\n      \"tank.museum\",\n      \"tcm.museum\",\n      \"technology.museum\",\n      \"telekommunikation.museum\",\n      \"television.museum\",\n      \"texas.museum\",\n      \"textile.museum\",\n      \"theater.museum\",\n      \"time.museum\",\n      \"timekeeping.museum\",\n      \"topology.museum\",\n      \"torino.museum\",\n      \"touch.museum\",\n      \"town.museum\",\n      \"transport.museum\",\n      \"tree.museum\",\n      \"trolley.museum\",\n      \"trust.museum\",\n      \"trustee.museum\",\n      \"uhren.museum\",\n      \"ulm.museum\",\n      \"undersea.museum\",\n      \"university.museum\",\n      \"usa.museum\",\n      \"usantiques.museum\",\n      \"usarts.museum\",\n      \"uscountryestate.museum\",\n      \"usculture.museum\",\n      \"usdecorativearts.museum\",\n      \"usgarden.museum\",\n      \"ushistory.museum\",\n      \"ushuaia.museum\",\n      \"uslivinghistory.museum\",\n      \"utah.museum\",\n      \"uvic.museum\",\n      \"valley.museum\",\n      \"vantaa.museum\",\n      \"versailles.museum\",\n      \"viking.museum\",\n      \"village.museum\",\n      \"virginia.museum\",\n      \"virtual.museum\",\n      \"virtuel.museum\",\n      \"vlaanderen.museum\",\n      \"volkenkunde.museum\",\n      \"wales.museum\",\n      \"wallonie.museum\",\n      \"war.museum\",\n      \"washingtondc.museum\",\n      \"watchandclock.museum\",\n      \"watch-and-clock.museum\",\n      \"western.museum\",\n      \"westfalen.museum\",\n      \"whaling.museum\",\n      \"wildlife.museum\",\n      \"williamsburg.museum\",\n      \"windmill.museum\",\n      \"workshop.museum\",\n      \"york.museum\",\n      \"yorkshire.museum\",\n      \"yosemite.museum\",\n      \"youth.museum\",\n      \"zoological.museum\",\n      \"zoology.museum\",\n      \"\\u05D9\\u05E8\\u05D5\\u05E9\\u05DC\\u05D9\\u05DD.museum\",\n      \"\\u0438\\u043A\\u043E\\u043C.museum\",\n      \"mv\",\n      \"aero.mv\",\n      \"biz.mv\",\n      \"com.mv\",\n      \"coop.mv\",\n      \"edu.mv\",\n      \"gov.mv\",\n      \"info.mv\",\n      \"int.mv\",\n      \"mil.mv\",\n      \"museum.mv\",\n      \"name.mv\",\n      \"net.mv\",\n      \"org.mv\",\n      \"pro.mv\",\n      \"mw\",\n      \"ac.mw\",\n      \"biz.mw\",\n      \"co.mw\",\n      \"com.mw\",\n      \"coop.mw\",\n      \"edu.mw\",\n      \"gov.mw\",\n      \"int.mw\",\n      \"museum.mw\",\n      \"net.mw\",\n      \"org.mw\",\n      \"mx\",\n      \"com.mx\",\n      \"org.mx\",\n      \"gob.mx\",\n      \"edu.mx\",\n      \"net.mx\",\n      \"my\",\n      \"biz.my\",\n      \"com.my\",\n      \"edu.my\",\n      \"gov.my\",\n      \"mil.my\",\n      \"name.my\",\n      \"net.my\",\n      \"org.my\",\n      \"mz\",\n      \"ac.mz\",\n      \"adv.mz\",\n      \"co.mz\",\n      \"edu.mz\",\n      \"gov.mz\",\n      \"mil.mz\",\n      \"net.mz\",\n      \"org.mz\",\n      \"na\",\n      \"info.na\",\n      \"pro.na\",\n      \"name.na\",\n      \"school.na\",\n      \"or.na\",\n      \"dr.na\",\n      \"us.na\",\n      \"mx.na\",\n      \"ca.na\",\n      \"in.na\",\n      \"cc.na\",\n      \"tv.na\",\n      \"ws.na\",\n      \"mobi.na\",\n      \"co.na\",\n      \"com.na\",\n      \"org.na\",\n      \"name\",\n      \"nc\",\n      \"asso.nc\",\n      \"nom.nc\",\n      \"ne\",\n      \"net\",\n      \"nf\",\n      \"com.nf\",\n      \"net.nf\",\n      \"per.nf\",\n      \"rec.nf\",\n      \"web.nf\",\n      \"arts.nf\",\n      \"firm.nf\",\n      \"info.nf\",\n      \"other.nf\",\n      \"store.nf\",\n      \"ng\",\n      \"com.ng\",\n      \"edu.ng\",\n      \"gov.ng\",\n      \"i.ng\",\n      \"mil.ng\",\n      \"mobi.ng\",\n      \"name.ng\",\n      \"net.ng\",\n      \"org.ng\",\n      \"sch.ng\",\n      \"ni\",\n      \"ac.ni\",\n      \"biz.ni\",\n      \"co.ni\",\n      \"com.ni\",\n      \"edu.ni\",\n      \"gob.ni\",\n      \"in.ni\",\n      \"info.ni\",\n      \"int.ni\",\n      \"mil.ni\",\n      \"net.ni\",\n      \"nom.ni\",\n      \"org.ni\",\n      \"web.ni\",\n      \"nl\",\n      \"no\",\n      \"fhs.no\",\n      \"vgs.no\",\n      \"fylkesbibl.no\",\n      \"folkebibl.no\",\n      \"museum.no\",\n      \"idrett.no\",\n      \"priv.no\",\n      \"mil.no\",\n      \"stat.no\",\n      \"dep.no\",\n      \"kommune.no\",\n      \"herad.no\",\n      \"aa.no\",\n      \"ah.no\",\n      \"bu.no\",\n      \"fm.no\",\n      \"hl.no\",\n      \"hm.no\",\n      \"jan-mayen.no\",\n      \"mr.no\",\n      \"nl.no\",\n      \"nt.no\",\n      \"of.no\",\n      \"ol.no\",\n      \"oslo.no\",\n      \"rl.no\",\n      \"sf.no\",\n      \"st.no\",\n      \"svalbard.no\",\n      \"tm.no\",\n      \"tr.no\",\n      \"va.no\",\n      \"vf.no\",\n      \"gs.aa.no\",\n      \"gs.ah.no\",\n      \"gs.bu.no\",\n      \"gs.fm.no\",\n      \"gs.hl.no\",\n      \"gs.hm.no\",\n      \"gs.jan-mayen.no\",\n      \"gs.mr.no\",\n      \"gs.nl.no\",\n      \"gs.nt.no\",\n      \"gs.of.no\",\n      \"gs.ol.no\",\n      \"gs.oslo.no\",\n      \"gs.rl.no\",\n      \"gs.sf.no\",\n      \"gs.st.no\",\n      \"gs.svalbard.no\",\n      \"gs.tm.no\",\n      \"gs.tr.no\",\n      \"gs.va.no\",\n      \"gs.vf.no\",\n      \"akrehamn.no\",\n      \"\\xE5krehamn.no\",\n      \"algard.no\",\n      \"\\xE5lg\\xE5rd.no\",\n      \"arna.no\",\n      \"brumunddal.no\",\n      \"bryne.no\",\n      \"bronnoysund.no\",\n      \"br\\xF8nn\\xF8ysund.no\",\n      \"drobak.no\",\n      \"dr\\xF8bak.no\",\n      \"egersund.no\",\n      \"fetsund.no\",\n      \"floro.no\",\n      \"flor\\xF8.no\",\n      \"fredrikstad.no\",\n      \"hokksund.no\",\n      \"honefoss.no\",\n      \"h\\xF8nefoss.no\",\n      \"jessheim.no\",\n      \"jorpeland.no\",\n      \"j\\xF8rpeland.no\",\n      \"kirkenes.no\",\n      \"kopervik.no\",\n      \"krokstadelva.no\",\n      \"langevag.no\",\n      \"langev\\xE5g.no\",\n      \"leirvik.no\",\n      \"mjondalen.no\",\n      \"mj\\xF8ndalen.no\",\n      \"mo-i-rana.no\",\n      \"mosjoen.no\",\n      \"mosj\\xF8en.no\",\n      \"nesoddtangen.no\",\n      \"orkanger.no\",\n      \"osoyro.no\",\n      \"os\\xF8yro.no\",\n      \"raholt.no\",\n      \"r\\xE5holt.no\",\n      \"sandnessjoen.no\",\n      \"sandnessj\\xF8en.no\",\n      \"skedsmokorset.no\",\n      \"slattum.no\",\n      \"spjelkavik.no\",\n      \"stathelle.no\",\n      \"stavern.no\",\n      \"stjordalshalsen.no\",\n      \"stj\\xF8rdalshalsen.no\",\n      \"tananger.no\",\n      \"tranby.no\",\n      \"vossevangen.no\",\n      \"afjord.no\",\n      \"\\xE5fjord.no\",\n      \"agdenes.no\",\n      \"al.no\",\n      \"\\xE5l.no\",\n      \"alesund.no\",\n      \"\\xE5lesund.no\",\n      \"alstahaug.no\",\n      \"alta.no\",\n      \"\\xE1lt\\xE1.no\",\n      \"alaheadju.no\",\n      \"\\xE1laheadju.no\",\n      \"alvdal.no\",\n      \"amli.no\",\n      \"\\xE5mli.no\",\n      \"amot.no\",\n      \"\\xE5mot.no\",\n      \"andebu.no\",\n      \"andoy.no\",\n      \"and\\xF8y.no\",\n      \"andasuolo.no\",\n      \"ardal.no\",\n      \"\\xE5rdal.no\",\n      \"aremark.no\",\n      \"arendal.no\",\n      \"\\xE5s.no\",\n      \"aseral.no\",\n      \"\\xE5seral.no\",\n      \"asker.no\",\n      \"askim.no\",\n      \"askvoll.no\",\n      \"askoy.no\",\n      \"ask\\xF8y.no\",\n      \"asnes.no\",\n      \"\\xE5snes.no\",\n      \"audnedaln.no\",\n      \"aukra.no\",\n      \"aure.no\",\n      \"aurland.no\",\n      \"aurskog-holand.no\",\n      \"aurskog-h\\xF8land.no\",\n      \"austevoll.no\",\n      \"austrheim.no\",\n      \"averoy.no\",\n      \"aver\\xF8y.no\",\n      \"balestrand.no\",\n      \"ballangen.no\",\n      \"balat.no\",\n      \"b\\xE1l\\xE1t.no\",\n      \"balsfjord.no\",\n      \"bahccavuotna.no\",\n      \"b\\xE1hccavuotna.no\",\n      \"bamble.no\",\n      \"bardu.no\",\n      \"beardu.no\",\n      \"beiarn.no\",\n      \"bajddar.no\",\n      \"b\\xE1jddar.no\",\n      \"baidar.no\",\n      \"b\\xE1id\\xE1r.no\",\n      \"berg.no\",\n      \"bergen.no\",\n      \"berlevag.no\",\n      \"berlev\\xE5g.no\",\n      \"bearalvahki.no\",\n      \"bearalv\\xE1hki.no\",\n      \"bindal.no\",\n      \"birkenes.no\",\n      \"bjarkoy.no\",\n      \"bjark\\xF8y.no\",\n      \"bjerkreim.no\",\n      \"bjugn.no\",\n      \"bodo.no\",\n      \"bod\\xF8.no\",\n      \"badaddja.no\",\n      \"b\\xE5d\\xE5ddj\\xE5.no\",\n      \"budejju.no\",\n      \"bokn.no\",\n      \"bremanger.no\",\n      \"bronnoy.no\",\n      \"br\\xF8nn\\xF8y.no\",\n      \"bygland.no\",\n      \"bykle.no\",\n      \"barum.no\",\n      \"b\\xE6rum.no\",\n      \"bo.telemark.no\",\n      \"b\\xF8.telemark.no\",\n      \"bo.nordland.no\",\n      \"b\\xF8.nordland.no\",\n      \"bievat.no\",\n      \"biev\\xE1t.no\",\n      \"bomlo.no\",\n      \"b\\xF8mlo.no\",\n      \"batsfjord.no\",\n      \"b\\xE5tsfjord.no\",\n      \"bahcavuotna.no\",\n      \"b\\xE1hcavuotna.no\",\n      \"dovre.no\",\n      \"drammen.no\",\n      \"drangedal.no\",\n      \"dyroy.no\",\n      \"dyr\\xF8y.no\",\n      \"donna.no\",\n      \"d\\xF8nna.no\",\n      \"eid.no\",\n      \"eidfjord.no\",\n      \"eidsberg.no\",\n      \"eidskog.no\",\n      \"eidsvoll.no\",\n      \"eigersund.no\",\n      \"elverum.no\",\n      \"enebakk.no\",\n      \"engerdal.no\",\n      \"etne.no\",\n      \"etnedal.no\",\n      \"evenes.no\",\n      \"evenassi.no\",\n      \"even\\xE1\\u0161\\u0161i.no\",\n      \"evje-og-hornnes.no\",\n      \"farsund.no\",\n      \"fauske.no\",\n      \"fuossko.no\",\n      \"fuoisku.no\",\n      \"fedje.no\",\n      \"fet.no\",\n      \"finnoy.no\",\n      \"finn\\xF8y.no\",\n      \"fitjar.no\",\n      \"fjaler.no\",\n      \"fjell.no\",\n      \"flakstad.no\",\n      \"flatanger.no\",\n      \"flekkefjord.no\",\n      \"flesberg.no\",\n      \"flora.no\",\n      \"fla.no\",\n      \"fl\\xE5.no\",\n      \"folldal.no\",\n      \"forsand.no\",\n      \"fosnes.no\",\n      \"frei.no\",\n      \"frogn.no\",\n      \"froland.no\",\n      \"frosta.no\",\n      \"frana.no\",\n      \"fr\\xE6na.no\",\n      \"froya.no\",\n      \"fr\\xF8ya.no\",\n      \"fusa.no\",\n      \"fyresdal.no\",\n      \"forde.no\",\n      \"f\\xF8rde.no\",\n      \"gamvik.no\",\n      \"gangaviika.no\",\n      \"g\\xE1\\u014Bgaviika.no\",\n      \"gaular.no\",\n      \"gausdal.no\",\n      \"gildeskal.no\",\n      \"gildesk\\xE5l.no\",\n      \"giske.no\",\n      \"gjemnes.no\",\n      \"gjerdrum.no\",\n      \"gjerstad.no\",\n      \"gjesdal.no\",\n      \"gjovik.no\",\n      \"gj\\xF8vik.no\",\n      \"gloppen.no\",\n      \"gol.no\",\n      \"gran.no\",\n      \"grane.no\",\n      \"granvin.no\",\n      \"gratangen.no\",\n      \"grimstad.no\",\n      \"grong.no\",\n      \"kraanghke.no\",\n      \"kr\\xE5anghke.no\",\n      \"grue.no\",\n      \"gulen.no\",\n      \"hadsel.no\",\n      \"halden.no\",\n      \"halsa.no\",\n      \"hamar.no\",\n      \"hamaroy.no\",\n      \"habmer.no\",\n      \"h\\xE1bmer.no\",\n      \"hapmir.no\",\n      \"h\\xE1pmir.no\",\n      \"hammerfest.no\",\n      \"hammarfeasta.no\",\n      \"h\\xE1mm\\xE1rfeasta.no\",\n      \"haram.no\",\n      \"hareid.no\",\n      \"harstad.no\",\n      \"hasvik.no\",\n      \"aknoluokta.no\",\n      \"\\xE1k\\u014Boluokta.no\",\n      \"hattfjelldal.no\",\n      \"aarborte.no\",\n      \"haugesund.no\",\n      \"hemne.no\",\n      \"hemnes.no\",\n      \"hemsedal.no\",\n      \"heroy.more-og-romsdal.no\",\n      \"her\\xF8y.m\\xF8re-og-romsdal.no\",\n      \"heroy.nordland.no\",\n      \"her\\xF8y.nordland.no\",\n      \"hitra.no\",\n      \"hjartdal.no\",\n      \"hjelmeland.no\",\n      \"hobol.no\",\n      \"hob\\xF8l.no\",\n      \"hof.no\",\n      \"hol.no\",\n      \"hole.no\",\n      \"holmestrand.no\",\n      \"holtalen.no\",\n      \"holt\\xE5len.no\",\n      \"hornindal.no\",\n      \"horten.no\",\n      \"hurdal.no\",\n      \"hurum.no\",\n      \"hvaler.no\",\n      \"hyllestad.no\",\n      \"hagebostad.no\",\n      \"h\\xE6gebostad.no\",\n      \"hoyanger.no\",\n      \"h\\xF8yanger.no\",\n      \"hoylandet.no\",\n      \"h\\xF8ylandet.no\",\n      \"ha.no\",\n      \"h\\xE5.no\",\n      \"ibestad.no\",\n      \"inderoy.no\",\n      \"inder\\xF8y.no\",\n      \"iveland.no\",\n      \"jevnaker.no\",\n      \"jondal.no\",\n      \"jolster.no\",\n      \"j\\xF8lster.no\",\n      \"karasjok.no\",\n      \"karasjohka.no\",\n      \"k\\xE1r\\xE1\\u0161johka.no\",\n      \"karlsoy.no\",\n      \"galsa.no\",\n      \"g\\xE1ls\\xE1.no\",\n      \"karmoy.no\",\n      \"karm\\xF8y.no\",\n      \"kautokeino.no\",\n      \"guovdageaidnu.no\",\n      \"klepp.no\",\n      \"klabu.no\",\n      \"kl\\xE6bu.no\",\n      \"kongsberg.no\",\n      \"kongsvinger.no\",\n      \"kragero.no\",\n      \"krager\\xF8.no\",\n      \"kristiansand.no\",\n      \"kristiansund.no\",\n      \"krodsherad.no\",\n      \"kr\\xF8dsherad.no\",\n      \"kvalsund.no\",\n      \"rahkkeravju.no\",\n      \"r\\xE1hkker\\xE1vju.no\",\n      \"kvam.no\",\n      \"kvinesdal.no\",\n      \"kvinnherad.no\",\n      \"kviteseid.no\",\n      \"kvitsoy.no\",\n      \"kvits\\xF8y.no\",\n      \"kvafjord.no\",\n      \"kv\\xE6fjord.no\",\n      \"giehtavuoatna.no\",\n      \"kvanangen.no\",\n      \"kv\\xE6nangen.no\",\n      \"navuotna.no\",\n      \"n\\xE1vuotna.no\",\n      \"kafjord.no\",\n      \"k\\xE5fjord.no\",\n      \"gaivuotna.no\",\n      \"g\\xE1ivuotna.no\",\n      \"larvik.no\",\n      \"lavangen.no\",\n      \"lavagis.no\",\n      \"loabat.no\",\n      \"loab\\xE1t.no\",\n      \"lebesby.no\",\n      \"davvesiida.no\",\n      \"leikanger.no\",\n      \"leirfjord.no\",\n      \"leka.no\",\n      \"leksvik.no\",\n      \"lenvik.no\",\n      \"leangaviika.no\",\n      \"lea\\u014Bgaviika.no\",\n      \"lesja.no\",\n      \"levanger.no\",\n      \"lier.no\",\n      \"lierne.no\",\n      \"lillehammer.no\",\n      \"lillesand.no\",\n      \"lindesnes.no\",\n      \"lindas.no\",\n      \"lind\\xE5s.no\",\n      \"lom.no\",\n      \"loppa.no\",\n      \"lahppi.no\",\n      \"l\\xE1hppi.no\",\n      \"lund.no\",\n      \"lunner.no\",\n      \"luroy.no\",\n      \"lur\\xF8y.no\",\n      \"luster.no\",\n      \"lyngdal.no\",\n      \"lyngen.no\",\n      \"ivgu.no\",\n      \"lardal.no\",\n      \"lerdal.no\",\n      \"l\\xE6rdal.no\",\n      \"lodingen.no\",\n      \"l\\xF8dingen.no\",\n      \"lorenskog.no\",\n      \"l\\xF8renskog.no\",\n      \"loten.no\",\n      \"l\\xF8ten.no\",\n      \"malvik.no\",\n      \"masoy.no\",\n      \"m\\xE5s\\xF8y.no\",\n      \"muosat.no\",\n      \"muos\\xE1t.no\",\n      \"mandal.no\",\n      \"marker.no\",\n      \"marnardal.no\",\n      \"masfjorden.no\",\n      \"meland.no\",\n      \"meldal.no\",\n      \"melhus.no\",\n      \"meloy.no\",\n      \"mel\\xF8y.no\",\n      \"meraker.no\",\n      \"mer\\xE5ker.no\",\n      \"moareke.no\",\n      \"mo\\xE5reke.no\",\n      \"midsund.no\",\n      \"midtre-gauldal.no\",\n      \"modalen.no\",\n      \"modum.no\",\n      \"molde.no\",\n      \"moskenes.no\",\n      \"moss.no\",\n      \"mosvik.no\",\n      \"malselv.no\",\n      \"m\\xE5lselv.no\",\n      \"malatvuopmi.no\",\n      \"m\\xE1latvuopmi.no\",\n      \"namdalseid.no\",\n      \"aejrie.no\",\n      \"namsos.no\",\n      \"namsskogan.no\",\n      \"naamesjevuemie.no\",\n      \"n\\xE5\\xE5mesjevuemie.no\",\n      \"laakesvuemie.no\",\n      \"nannestad.no\",\n      \"narvik.no\",\n      \"narviika.no\",\n      \"naustdal.no\",\n      \"nedre-eiker.no\",\n      \"nes.akershus.no\",\n      \"nes.buskerud.no\",\n      \"nesna.no\",\n      \"nesodden.no\",\n      \"nesseby.no\",\n      \"unjarga.no\",\n      \"unj\\xE1rga.no\",\n      \"nesset.no\",\n      \"nissedal.no\",\n      \"nittedal.no\",\n      \"nord-aurdal.no\",\n      \"nord-fron.no\",\n      \"nord-odal.no\",\n      \"norddal.no\",\n      \"nordkapp.no\",\n      \"davvenjarga.no\",\n      \"davvenj\\xE1rga.no\",\n      \"nordre-land.no\",\n      \"nordreisa.no\",\n      \"raisa.no\",\n      \"r\\xE1isa.no\",\n      \"nore-og-uvdal.no\",\n      \"notodden.no\",\n      \"naroy.no\",\n      \"n\\xE6r\\xF8y.no\",\n      \"notteroy.no\",\n      \"n\\xF8tter\\xF8y.no\",\n      \"odda.no\",\n      \"oksnes.no\",\n      \"\\xF8ksnes.no\",\n      \"oppdal.no\",\n      \"oppegard.no\",\n      \"oppeg\\xE5rd.no\",\n      \"orkdal.no\",\n      \"orland.no\",\n      \"\\xF8rland.no\",\n      \"orskog.no\",\n      \"\\xF8rskog.no\",\n      \"orsta.no\",\n      \"\\xF8rsta.no\",\n      \"os.hedmark.no\",\n      \"os.hordaland.no\",\n      \"osen.no\",\n      \"osteroy.no\",\n      \"oster\\xF8y.no\",\n      \"ostre-toten.no\",\n      \"\\xF8stre-toten.no\",\n      \"overhalla.no\",\n      \"ovre-eiker.no\",\n      \"\\xF8vre-eiker.no\",\n      \"oyer.no\",\n      \"\\xF8yer.no\",\n      \"oygarden.no\",\n      \"\\xF8ygarden.no\",\n      \"oystre-slidre.no\",\n      \"\\xF8ystre-slidre.no\",\n      \"porsanger.no\",\n      \"porsangu.no\",\n      \"pors\\xE1\\u014Bgu.no\",\n      \"porsgrunn.no\",\n      \"radoy.no\",\n      \"rad\\xF8y.no\",\n      \"rakkestad.no\",\n      \"rana.no\",\n      \"ruovat.no\",\n      \"randaberg.no\",\n      \"rauma.no\",\n      \"rendalen.no\",\n      \"rennebu.no\",\n      \"rennesoy.no\",\n      \"rennes\\xF8y.no\",\n      \"rindal.no\",\n      \"ringebu.no\",\n      \"ringerike.no\",\n      \"ringsaker.no\",\n      \"rissa.no\",\n      \"risor.no\",\n      \"ris\\xF8r.no\",\n      \"roan.no\",\n      \"rollag.no\",\n      \"rygge.no\",\n      \"ralingen.no\",\n      \"r\\xE6lingen.no\",\n      \"rodoy.no\",\n      \"r\\xF8d\\xF8y.no\",\n      \"romskog.no\",\n      \"r\\xF8mskog.no\",\n      \"roros.no\",\n      \"r\\xF8ros.no\",\n      \"rost.no\",\n      \"r\\xF8st.no\",\n      \"royken.no\",\n      \"r\\xF8yken.no\",\n      \"royrvik.no\",\n      \"r\\xF8yrvik.no\",\n      \"rade.no\",\n      \"r\\xE5de.no\",\n      \"salangen.no\",\n      \"siellak.no\",\n      \"saltdal.no\",\n      \"salat.no\",\n      \"s\\xE1l\\xE1t.no\",\n      \"s\\xE1lat.no\",\n      \"samnanger.no\",\n      \"sande.more-og-romsdal.no\",\n      \"sande.m\\xF8re-og-romsdal.no\",\n      \"sande.vestfold.no\",\n      \"sandefjord.no\",\n      \"sandnes.no\",\n      \"sandoy.no\",\n      \"sand\\xF8y.no\",\n      \"sarpsborg.no\",\n      \"sauda.no\",\n      \"sauherad.no\",\n      \"sel.no\",\n      \"selbu.no\",\n      \"selje.no\",\n      \"seljord.no\",\n      \"sigdal.no\",\n      \"siljan.no\",\n      \"sirdal.no\",\n      \"skaun.no\",\n      \"skedsmo.no\",\n      \"ski.no\",\n      \"skien.no\",\n      \"skiptvet.no\",\n      \"skjervoy.no\",\n      \"skjerv\\xF8y.no\",\n      \"skierva.no\",\n      \"skierv\\xE1.no\",\n      \"skjak.no\",\n      \"skj\\xE5k.no\",\n      \"skodje.no\",\n      \"skanland.no\",\n      \"sk\\xE5nland.no\",\n      \"skanit.no\",\n      \"sk\\xE1nit.no\",\n      \"smola.no\",\n      \"sm\\xF8la.no\",\n      \"snillfjord.no\",\n      \"snasa.no\",\n      \"sn\\xE5sa.no\",\n      \"snoasa.no\",\n      \"snaase.no\",\n      \"sn\\xE5ase.no\",\n      \"sogndal.no\",\n      \"sokndal.no\",\n      \"sola.no\",\n      \"solund.no\",\n      \"songdalen.no\",\n      \"sortland.no\",\n      \"spydeberg.no\",\n      \"stange.no\",\n      \"stavanger.no\",\n      \"steigen.no\",\n      \"steinkjer.no\",\n      \"stjordal.no\",\n      \"stj\\xF8rdal.no\",\n      \"stokke.no\",\n      \"stor-elvdal.no\",\n      \"stord.no\",\n      \"stordal.no\",\n      \"storfjord.no\",\n      \"omasvuotna.no\",\n      \"strand.no\",\n      \"stranda.no\",\n      \"stryn.no\",\n      \"sula.no\",\n      \"suldal.no\",\n      \"sund.no\",\n      \"sunndal.no\",\n      \"surnadal.no\",\n      \"sveio.no\",\n      \"svelvik.no\",\n      \"sykkylven.no\",\n      \"sogne.no\",\n      \"s\\xF8gne.no\",\n      \"somna.no\",\n      \"s\\xF8mna.no\",\n      \"sondre-land.no\",\n      \"s\\xF8ndre-land.no\",\n      \"sor-aurdal.no\",\n      \"s\\xF8r-aurdal.no\",\n      \"sor-fron.no\",\n      \"s\\xF8r-fron.no\",\n      \"sor-odal.no\",\n      \"s\\xF8r-odal.no\",\n      \"sor-varanger.no\",\n      \"s\\xF8r-varanger.no\",\n      \"matta-varjjat.no\",\n      \"m\\xE1tta-v\\xE1rjjat.no\",\n      \"sorfold.no\",\n      \"s\\xF8rfold.no\",\n      \"sorreisa.no\",\n      \"s\\xF8rreisa.no\",\n      \"sorum.no\",\n      \"s\\xF8rum.no\",\n      \"tana.no\",\n      \"deatnu.no\",\n      \"time.no\",\n      \"tingvoll.no\",\n      \"tinn.no\",\n      \"tjeldsund.no\",\n      \"dielddanuorri.no\",\n      \"tjome.no\",\n      \"tj\\xF8me.no\",\n      \"tokke.no\",\n      \"tolga.no\",\n      \"torsken.no\",\n      \"tranoy.no\",\n      \"tran\\xF8y.no\",\n      \"tromso.no\",\n      \"troms\\xF8.no\",\n      \"tromsa.no\",\n      \"romsa.no\",\n      \"trondheim.no\",\n      \"troandin.no\",\n      \"trysil.no\",\n      \"trana.no\",\n      \"tr\\xE6na.no\",\n      \"trogstad.no\",\n      \"tr\\xF8gstad.no\",\n      \"tvedestrand.no\",\n      \"tydal.no\",\n      \"tynset.no\",\n      \"tysfjord.no\",\n      \"divtasvuodna.no\",\n      \"divttasvuotna.no\",\n      \"tysnes.no\",\n      \"tysvar.no\",\n      \"tysv\\xE6r.no\",\n      \"tonsberg.no\",\n      \"t\\xF8nsberg.no\",\n      \"ullensaker.no\",\n      \"ullensvang.no\",\n      \"ulvik.no\",\n      \"utsira.no\",\n      \"vadso.no\",\n      \"vads\\xF8.no\",\n      \"cahcesuolo.no\",\n      \"\\u010D\\xE1hcesuolo.no\",\n      \"vaksdal.no\",\n      \"valle.no\",\n      \"vang.no\",\n      \"vanylven.no\",\n      \"vardo.no\",\n      \"vard\\xF8.no\",\n      \"varggat.no\",\n      \"v\\xE1rgg\\xE1t.no\",\n      \"vefsn.no\",\n      \"vaapste.no\",\n      \"vega.no\",\n      \"vegarshei.no\",\n      \"veg\\xE5rshei.no\",\n      \"vennesla.no\",\n      \"verdal.no\",\n      \"verran.no\",\n      \"vestby.no\",\n      \"vestnes.no\",\n      \"vestre-slidre.no\",\n      \"vestre-toten.no\",\n      \"vestvagoy.no\",\n      \"vestv\\xE5g\\xF8y.no\",\n      \"vevelstad.no\",\n      \"vik.no\",\n      \"vikna.no\",\n      \"vindafjord.no\",\n      \"volda.no\",\n      \"voss.no\",\n      \"varoy.no\",\n      \"v\\xE6r\\xF8y.no\",\n      \"vagan.no\",\n      \"v\\xE5gan.no\",\n      \"voagat.no\",\n      \"vagsoy.no\",\n      \"v\\xE5gs\\xF8y.no\",\n      \"vaga.no\",\n      \"v\\xE5g\\xE5.no\",\n      \"valer.ostfold.no\",\n      \"v\\xE5ler.\\xF8stfold.no\",\n      \"valer.hedmark.no\",\n      \"v\\xE5ler.hedmark.no\",\n      \"*.np\",\n      \"nr\",\n      \"biz.nr\",\n      \"info.nr\",\n      \"gov.nr\",\n      \"edu.nr\",\n      \"org.nr\",\n      \"net.nr\",\n      \"com.nr\",\n      \"nu\",\n      \"nz\",\n      \"ac.nz\",\n      \"co.nz\",\n      \"cri.nz\",\n      \"geek.nz\",\n      \"gen.nz\",\n      \"govt.nz\",\n      \"health.nz\",\n      \"iwi.nz\",\n      \"kiwi.nz\",\n      \"maori.nz\",\n      \"mil.nz\",\n      \"m\\u0101ori.nz\",\n      \"net.nz\",\n      \"org.nz\",\n      \"parliament.nz\",\n      \"school.nz\",\n      \"om\",\n      \"co.om\",\n      \"com.om\",\n      \"edu.om\",\n      \"gov.om\",\n      \"med.om\",\n      \"museum.om\",\n      \"net.om\",\n      \"org.om\",\n      \"pro.om\",\n      \"onion\",\n      \"org\",\n      \"pa\",\n      \"ac.pa\",\n      \"gob.pa\",\n      \"com.pa\",\n      \"org.pa\",\n      \"sld.pa\",\n      \"edu.pa\",\n      \"net.pa\",\n      \"ing.pa\",\n      \"abo.pa\",\n      \"med.pa\",\n      \"nom.pa\",\n      \"pe\",\n      \"edu.pe\",\n      \"gob.pe\",\n      \"nom.pe\",\n      \"mil.pe\",\n      \"org.pe\",\n      \"com.pe\",\n      \"net.pe\",\n      \"pf\",\n      \"com.pf\",\n      \"org.pf\",\n      \"edu.pf\",\n      \"*.pg\",\n      \"ph\",\n      \"com.ph\",\n      \"net.ph\",\n      \"org.ph\",\n      \"gov.ph\",\n      \"edu.ph\",\n      \"ngo.ph\",\n      \"mil.ph\",\n      \"i.ph\",\n      \"pk\",\n      \"com.pk\",\n      \"net.pk\",\n      \"edu.pk\",\n      \"org.pk\",\n      \"fam.pk\",\n      \"biz.pk\",\n      \"web.pk\",\n      \"gov.pk\",\n      \"gob.pk\",\n      \"gok.pk\",\n      \"gon.pk\",\n      \"gop.pk\",\n      \"gos.pk\",\n      \"info.pk\",\n      \"pl\",\n      \"com.pl\",\n      \"net.pl\",\n      \"org.pl\",\n      \"aid.pl\",\n      \"agro.pl\",\n      \"atm.pl\",\n      \"auto.pl\",\n      \"biz.pl\",\n      \"edu.pl\",\n      \"gmina.pl\",\n      \"gsm.pl\",\n      \"info.pl\",\n      \"mail.pl\",\n      \"miasta.pl\",\n      \"media.pl\",\n      \"mil.pl\",\n      \"nieruchomosci.pl\",\n      \"nom.pl\",\n      \"pc.pl\",\n      \"powiat.pl\",\n      \"priv.pl\",\n      \"realestate.pl\",\n      \"rel.pl\",\n      \"sex.pl\",\n      \"shop.pl\",\n      \"sklep.pl\",\n      \"sos.pl\",\n      \"szkola.pl\",\n      \"targi.pl\",\n      \"tm.pl\",\n      \"tourism.pl\",\n      \"travel.pl\",\n      \"turystyka.pl\",\n      \"gov.pl\",\n      \"ap.gov.pl\",\n      \"ic.gov.pl\",\n      \"is.gov.pl\",\n      \"us.gov.pl\",\n      \"kmpsp.gov.pl\",\n      \"kppsp.gov.pl\",\n      \"kwpsp.gov.pl\",\n      \"psp.gov.pl\",\n      \"wskr.gov.pl\",\n      \"kwp.gov.pl\",\n      \"mw.gov.pl\",\n      \"ug.gov.pl\",\n      \"um.gov.pl\",\n      \"umig.gov.pl\",\n      \"ugim.gov.pl\",\n      \"upow.gov.pl\",\n      \"uw.gov.pl\",\n      \"starostwo.gov.pl\",\n      \"pa.gov.pl\",\n      \"po.gov.pl\",\n      \"psse.gov.pl\",\n      \"pup.gov.pl\",\n      \"rzgw.gov.pl\",\n      \"sa.gov.pl\",\n      \"so.gov.pl\",\n      \"sr.gov.pl\",\n      \"wsa.gov.pl\",\n      \"sko.gov.pl\",\n      \"uzs.gov.pl\",\n      \"wiih.gov.pl\",\n      \"winb.gov.pl\",\n      \"pinb.gov.pl\",\n      \"wios.gov.pl\",\n      \"witd.gov.pl\",\n      \"wzmiuw.gov.pl\",\n      \"piw.gov.pl\",\n      \"wiw.gov.pl\",\n      \"griw.gov.pl\",\n      \"wif.gov.pl\",\n      \"oum.gov.pl\",\n      \"sdn.gov.pl\",\n      \"zp.gov.pl\",\n      \"uppo.gov.pl\",\n      \"mup.gov.pl\",\n      \"wuoz.gov.pl\",\n      \"konsulat.gov.pl\",\n      \"oirm.gov.pl\",\n      \"augustow.pl\",\n      \"babia-gora.pl\",\n      \"bedzin.pl\",\n      \"beskidy.pl\",\n      \"bialowieza.pl\",\n      \"bialystok.pl\",\n      \"bielawa.pl\",\n      \"bieszczady.pl\",\n      \"boleslawiec.pl\",\n      \"bydgoszcz.pl\",\n      \"bytom.pl\",\n      \"cieszyn.pl\",\n      \"czeladz.pl\",\n      \"czest.pl\",\n      \"dlugoleka.pl\",\n      \"elblag.pl\",\n      \"elk.pl\",\n      \"glogow.pl\",\n      \"gniezno.pl\",\n      \"gorlice.pl\",\n      \"grajewo.pl\",\n      \"ilawa.pl\",\n      \"jaworzno.pl\",\n      \"jelenia-gora.pl\",\n      \"jgora.pl\",\n      \"kalisz.pl\",\n      \"kazimierz-dolny.pl\",\n      \"karpacz.pl\",\n      \"kartuzy.pl\",\n      \"kaszuby.pl\",\n      \"katowice.pl\",\n      \"kepno.pl\",\n      \"ketrzyn.pl\",\n      \"klodzko.pl\",\n      \"kobierzyce.pl\",\n      \"kolobrzeg.pl\",\n      \"konin.pl\",\n      \"konskowola.pl\",\n      \"kutno.pl\",\n      \"lapy.pl\",\n      \"lebork.pl\",\n      \"legnica.pl\",\n      \"lezajsk.pl\",\n      \"limanowa.pl\",\n      \"lomza.pl\",\n      \"lowicz.pl\",\n      \"lubin.pl\",\n      \"lukow.pl\",\n      \"malbork.pl\",\n      \"malopolska.pl\",\n      \"mazowsze.pl\",\n      \"mazury.pl\",\n      \"mielec.pl\",\n      \"mielno.pl\",\n      \"mragowo.pl\",\n      \"naklo.pl\",\n      \"nowaruda.pl\",\n      \"nysa.pl\",\n      \"olawa.pl\",\n      \"olecko.pl\",\n      \"olkusz.pl\",\n      \"olsztyn.pl\",\n      \"opoczno.pl\",\n      \"opole.pl\",\n      \"ostroda.pl\",\n      \"ostroleka.pl\",\n      \"ostrowiec.pl\",\n      \"ostrowwlkp.pl\",\n      \"pila.pl\",\n      \"pisz.pl\",\n      \"podhale.pl\",\n      \"podlasie.pl\",\n      \"polkowice.pl\",\n      \"pomorze.pl\",\n      \"pomorskie.pl\",\n      \"prochowice.pl\",\n      \"pruszkow.pl\",\n      \"przeworsk.pl\",\n      \"pulawy.pl\",\n      \"radom.pl\",\n      \"rawa-maz.pl\",\n      \"rybnik.pl\",\n      \"rzeszow.pl\",\n      \"sanok.pl\",\n      \"sejny.pl\",\n      \"slask.pl\",\n      \"slupsk.pl\",\n      \"sosnowiec.pl\",\n      \"stalowa-wola.pl\",\n      \"skoczow.pl\",\n      \"starachowice.pl\",\n      \"stargard.pl\",\n      \"suwalki.pl\",\n      \"swidnica.pl\",\n      \"swiebodzin.pl\",\n      \"swinoujscie.pl\",\n      \"szczecin.pl\",\n      \"szczytno.pl\",\n      \"tarnobrzeg.pl\",\n      \"tgory.pl\",\n      \"turek.pl\",\n      \"tychy.pl\",\n      \"ustka.pl\",\n      \"walbrzych.pl\",\n      \"warmia.pl\",\n      \"warszawa.pl\",\n      \"waw.pl\",\n      \"wegrow.pl\",\n      \"wielun.pl\",\n      \"wlocl.pl\",\n      \"wloclawek.pl\",\n      \"wodzislaw.pl\",\n      \"wolomin.pl\",\n      \"wroclaw.pl\",\n      \"zachpomor.pl\",\n      \"zagan.pl\",\n      \"zarow.pl\",\n      \"zgora.pl\",\n      \"zgorzelec.pl\",\n      \"pm\",\n      \"pn\",\n      \"gov.pn\",\n      \"co.pn\",\n      \"org.pn\",\n      \"edu.pn\",\n      \"net.pn\",\n      \"post\",\n      \"pr\",\n      \"com.pr\",\n      \"net.pr\",\n      \"org.pr\",\n      \"gov.pr\",\n      \"edu.pr\",\n      \"isla.pr\",\n      \"pro.pr\",\n      \"biz.pr\",\n      \"info.pr\",\n      \"name.pr\",\n      \"est.pr\",\n      \"prof.pr\",\n      \"ac.pr\",\n      \"pro\",\n      \"aaa.pro\",\n      \"aca.pro\",\n      \"acct.pro\",\n      \"avocat.pro\",\n      \"bar.pro\",\n      \"cpa.pro\",\n      \"eng.pro\",\n      \"jur.pro\",\n      \"law.pro\",\n      \"med.pro\",\n      \"recht.pro\",\n      \"ps\",\n      \"edu.ps\",\n      \"gov.ps\",\n      \"sec.ps\",\n      \"plo.ps\",\n      \"com.ps\",\n      \"org.ps\",\n      \"net.ps\",\n      \"pt\",\n      \"net.pt\",\n      \"gov.pt\",\n      \"org.pt\",\n      \"edu.pt\",\n      \"int.pt\",\n      \"publ.pt\",\n      \"com.pt\",\n      \"nome.pt\",\n      \"pw\",\n      \"co.pw\",\n      \"ne.pw\",\n      \"or.pw\",\n      \"ed.pw\",\n      \"go.pw\",\n      \"belau.pw\",\n      \"py\",\n      \"com.py\",\n      \"coop.py\",\n      \"edu.py\",\n      \"gov.py\",\n      \"mil.py\",\n      \"net.py\",\n      \"org.py\",\n      \"qa\",\n      \"com.qa\",\n      \"edu.qa\",\n      \"gov.qa\",\n      \"mil.qa\",\n      \"name.qa\",\n      \"net.qa\",\n      \"org.qa\",\n      \"sch.qa\",\n      \"re\",\n      \"asso.re\",\n      \"com.re\",\n      \"nom.re\",\n      \"ro\",\n      \"arts.ro\",\n      \"com.ro\",\n      \"firm.ro\",\n      \"info.ro\",\n      \"nom.ro\",\n      \"nt.ro\",\n      \"org.ro\",\n      \"rec.ro\",\n      \"store.ro\",\n      \"tm.ro\",\n      \"www.ro\",\n      \"rs\",\n      \"ac.rs\",\n      \"co.rs\",\n      \"edu.rs\",\n      \"gov.rs\",\n      \"in.rs\",\n      \"org.rs\",\n      \"ru\",\n      \"rw\",\n      \"ac.rw\",\n      \"co.rw\",\n      \"coop.rw\",\n      \"gov.rw\",\n      \"mil.rw\",\n      \"net.rw\",\n      \"org.rw\",\n      \"sa\",\n      \"com.sa\",\n      \"net.sa\",\n      \"org.sa\",\n      \"gov.sa\",\n      \"med.sa\",\n      \"pub.sa\",\n      \"edu.sa\",\n      \"sch.sa\",\n      \"sb\",\n      \"com.sb\",\n      \"edu.sb\",\n      \"gov.sb\",\n      \"net.sb\",\n      \"org.sb\",\n      \"sc\",\n      \"com.sc\",\n      \"gov.sc\",\n      \"net.sc\",\n      \"org.sc\",\n      \"edu.sc\",\n      \"sd\",\n      \"com.sd\",\n      \"net.sd\",\n      \"org.sd\",\n      \"edu.sd\",\n      \"med.sd\",\n      \"tv.sd\",\n      \"gov.sd\",\n      \"info.sd\",\n      \"se\",\n      \"a.se\",\n      \"ac.se\",\n      \"b.se\",\n      \"bd.se\",\n      \"brand.se\",\n      \"c.se\",\n      \"d.se\",\n      \"e.se\",\n      \"f.se\",\n      \"fh.se\",\n      \"fhsk.se\",\n      \"fhv.se\",\n      \"g.se\",\n      \"h.se\",\n      \"i.se\",\n      \"k.se\",\n      \"komforb.se\",\n      \"kommunalforbund.se\",\n      \"komvux.se\",\n      \"l.se\",\n      \"lanbib.se\",\n      \"m.se\",\n      \"n.se\",\n      \"naturbruksgymn.se\",\n      \"o.se\",\n      \"org.se\",\n      \"p.se\",\n      \"parti.se\",\n      \"pp.se\",\n      \"press.se\",\n      \"r.se\",\n      \"s.se\",\n      \"t.se\",\n      \"tm.se\",\n      \"u.se\",\n      \"w.se\",\n      \"x.se\",\n      \"y.se\",\n      \"z.se\",\n      \"sg\",\n      \"com.sg\",\n      \"net.sg\",\n      \"org.sg\",\n      \"gov.sg\",\n      \"edu.sg\",\n      \"per.sg\",\n      \"sh\",\n      \"com.sh\",\n      \"net.sh\",\n      \"gov.sh\",\n      \"org.sh\",\n      \"mil.sh\",\n      \"si\",\n      \"sj\",\n      \"sk\",\n      \"sl\",\n      \"com.sl\",\n      \"net.sl\",\n      \"edu.sl\",\n      \"gov.sl\",\n      \"org.sl\",\n      \"sm\",\n      \"sn\",\n      \"art.sn\",\n      \"com.sn\",\n      \"edu.sn\",\n      \"gouv.sn\",\n      \"org.sn\",\n      \"perso.sn\",\n      \"univ.sn\",\n      \"so\",\n      \"com.so\",\n      \"edu.so\",\n      \"gov.so\",\n      \"me.so\",\n      \"net.so\",\n      \"org.so\",\n      \"sr\",\n      \"ss\",\n      \"biz.ss\",\n      \"com.ss\",\n      \"edu.ss\",\n      \"gov.ss\",\n      \"me.ss\",\n      \"net.ss\",\n      \"org.ss\",\n      \"sch.ss\",\n      \"st\",\n      \"co.st\",\n      \"com.st\",\n      \"consulado.st\",\n      \"edu.st\",\n      \"embaixada.st\",\n      \"mil.st\",\n      \"net.st\",\n      \"org.st\",\n      \"principe.st\",\n      \"saotome.st\",\n      \"store.st\",\n      \"su\",\n      \"sv\",\n      \"com.sv\",\n      \"edu.sv\",\n      \"gob.sv\",\n      \"org.sv\",\n      \"red.sv\",\n      \"sx\",\n      \"gov.sx\",\n      \"sy\",\n      \"edu.sy\",\n      \"gov.sy\",\n      \"net.sy\",\n      \"mil.sy\",\n      \"com.sy\",\n      \"org.sy\",\n      \"sz\",\n      \"co.sz\",\n      \"ac.sz\",\n      \"org.sz\",\n      \"tc\",\n      \"td\",\n      \"tel\",\n      \"tf\",\n      \"tg\",\n      \"th\",\n      \"ac.th\",\n      \"co.th\",\n      \"go.th\",\n      \"in.th\",\n      \"mi.th\",\n      \"net.th\",\n      \"or.th\",\n      \"tj\",\n      \"ac.tj\",\n      \"biz.tj\",\n      \"co.tj\",\n      \"com.tj\",\n      \"edu.tj\",\n      \"go.tj\",\n      \"gov.tj\",\n      \"int.tj\",\n      \"mil.tj\",\n      \"name.tj\",\n      \"net.tj\",\n      \"nic.tj\",\n      \"org.tj\",\n      \"test.tj\",\n      \"web.tj\",\n      \"tk\",\n      \"tl\",\n      \"gov.tl\",\n      \"tm\",\n      \"com.tm\",\n      \"co.tm\",\n      \"org.tm\",\n      \"net.tm\",\n      \"nom.tm\",\n      \"gov.tm\",\n      \"mil.tm\",\n      \"edu.tm\",\n      \"tn\",\n      \"com.tn\",\n      \"ens.tn\",\n      \"fin.tn\",\n      \"gov.tn\",\n      \"ind.tn\",\n      \"info.tn\",\n      \"intl.tn\",\n      \"mincom.tn\",\n      \"nat.tn\",\n      \"net.tn\",\n      \"org.tn\",\n      \"perso.tn\",\n      \"tourism.tn\",\n      \"to\",\n      \"com.to\",\n      \"gov.to\",\n      \"net.to\",\n      \"org.to\",\n      \"edu.to\",\n      \"mil.to\",\n      \"tr\",\n      \"av.tr\",\n      \"bbs.tr\",\n      \"bel.tr\",\n      \"biz.tr\",\n      \"com.tr\",\n      \"dr.tr\",\n      \"edu.tr\",\n      \"gen.tr\",\n      \"gov.tr\",\n      \"info.tr\",\n      \"mil.tr\",\n      \"k12.tr\",\n      \"kep.tr\",\n      \"name.tr\",\n      \"net.tr\",\n      \"org.tr\",\n      \"pol.tr\",\n      \"tel.tr\",\n      \"tsk.tr\",\n      \"tv.tr\",\n      \"web.tr\",\n      \"nc.tr\",\n      \"gov.nc.tr\",\n      \"tt\",\n      \"co.tt\",\n      \"com.tt\",\n      \"org.tt\",\n      \"net.tt\",\n      \"biz.tt\",\n      \"info.tt\",\n      \"pro.tt\",\n      \"int.tt\",\n      \"coop.tt\",\n      \"jobs.tt\",\n      \"mobi.tt\",\n      \"travel.tt\",\n      \"museum.tt\",\n      \"aero.tt\",\n      \"name.tt\",\n      \"gov.tt\",\n      \"edu.tt\",\n      \"tv\",\n      \"tw\",\n      \"edu.tw\",\n      \"gov.tw\",\n      \"mil.tw\",\n      \"com.tw\",\n      \"net.tw\",\n      \"org.tw\",\n      \"idv.tw\",\n      \"game.tw\",\n      \"ebiz.tw\",\n      \"club.tw\",\n      \"\\u7DB2\\u8DEF.tw\",\n      \"\\u7D44\\u7E54.tw\",\n      \"\\u5546\\u696D.tw\",\n      \"tz\",\n      \"ac.tz\",\n      \"co.tz\",\n      \"go.tz\",\n      \"hotel.tz\",\n      \"info.tz\",\n      \"me.tz\",\n      \"mil.tz\",\n      \"mobi.tz\",\n      \"ne.tz\",\n      \"or.tz\",\n      \"sc.tz\",\n      \"tv.tz\",\n      \"ua\",\n      \"com.ua\",\n      \"edu.ua\",\n      \"gov.ua\",\n      \"in.ua\",\n      \"net.ua\",\n      \"org.ua\",\n      \"cherkassy.ua\",\n      \"cherkasy.ua\",\n      \"chernigov.ua\",\n      \"chernihiv.ua\",\n      \"chernivtsi.ua\",\n      \"chernovtsy.ua\",\n      \"ck.ua\",\n      \"cn.ua\",\n      \"cr.ua\",\n      \"crimea.ua\",\n      \"cv.ua\",\n      \"dn.ua\",\n      \"dnepropetrovsk.ua\",\n      \"dnipropetrovsk.ua\",\n      \"donetsk.ua\",\n      \"dp.ua\",\n      \"if.ua\",\n      \"ivano-frankivsk.ua\",\n      \"kh.ua\",\n      \"kharkiv.ua\",\n      \"kharkov.ua\",\n      \"kherson.ua\",\n      \"khmelnitskiy.ua\",\n      \"khmelnytskyi.ua\",\n      \"kiev.ua\",\n      \"kirovograd.ua\",\n      \"km.ua\",\n      \"kr.ua\",\n      \"krym.ua\",\n      \"ks.ua\",\n      \"kv.ua\",\n      \"kyiv.ua\",\n      \"lg.ua\",\n      \"lt.ua\",\n      \"lugansk.ua\",\n      \"lutsk.ua\",\n      \"lv.ua\",\n      \"lviv.ua\",\n      \"mk.ua\",\n      \"mykolaiv.ua\",\n      \"nikolaev.ua\",\n      \"od.ua\",\n      \"odesa.ua\",\n      \"odessa.ua\",\n      \"pl.ua\",\n      \"poltava.ua\",\n      \"rivne.ua\",\n      \"rovno.ua\",\n      \"rv.ua\",\n      \"sb.ua\",\n      \"sebastopol.ua\",\n      \"sevastopol.ua\",\n      \"sm.ua\",\n      \"sumy.ua\",\n      \"te.ua\",\n      \"ternopil.ua\",\n      \"uz.ua\",\n      \"uzhgorod.ua\",\n      \"vinnica.ua\",\n      \"vinnytsia.ua\",\n      \"vn.ua\",\n      \"volyn.ua\",\n      \"yalta.ua\",\n      \"zaporizhzhe.ua\",\n      \"zaporizhzhia.ua\",\n      \"zhitomir.ua\",\n      \"zhytomyr.ua\",\n      \"zp.ua\",\n      \"zt.ua\",\n      \"ug\",\n      \"co.ug\",\n      \"or.ug\",\n      \"ac.ug\",\n      \"sc.ug\",\n      \"go.ug\",\n      \"ne.ug\",\n      \"com.ug\",\n      \"org.ug\",\n      \"uk\",\n      \"ac.uk\",\n      \"co.uk\",\n      \"gov.uk\",\n      \"ltd.uk\",\n      \"me.uk\",\n      \"net.uk\",\n      \"nhs.uk\",\n      \"org.uk\",\n      \"plc.uk\",\n      \"police.uk\",\n      \"*.sch.uk\",\n      \"us\",\n      \"dni.us\",\n      \"fed.us\",\n      \"isa.us\",\n      \"kids.us\",\n      \"nsn.us\",\n      \"ak.us\",\n      \"al.us\",\n      \"ar.us\",\n      \"as.us\",\n      \"az.us\",\n      \"ca.us\",\n      \"co.us\",\n      \"ct.us\",\n      \"dc.us\",\n      \"de.us\",\n      \"fl.us\",\n      \"ga.us\",\n      \"gu.us\",\n      \"hi.us\",\n      \"ia.us\",\n      \"id.us\",\n      \"il.us\",\n      \"in.us\",\n      \"ks.us\",\n      \"ky.us\",\n      \"la.us\",\n      \"ma.us\",\n      \"md.us\",\n      \"me.us\",\n      \"mi.us\",\n      \"mn.us\",\n      \"mo.us\",\n      \"ms.us\",\n      \"mt.us\",\n      \"nc.us\",\n      \"nd.us\",\n      \"ne.us\",\n      \"nh.us\",\n      \"nj.us\",\n      \"nm.us\",\n      \"nv.us\",\n      \"ny.us\",\n      \"oh.us\",\n      \"ok.us\",\n      \"or.us\",\n      \"pa.us\",\n      \"pr.us\",\n      \"ri.us\",\n      \"sc.us\",\n      \"sd.us\",\n      \"tn.us\",\n      \"tx.us\",\n      \"ut.us\",\n      \"vi.us\",\n      \"vt.us\",\n      \"va.us\",\n      \"wa.us\",\n      \"wi.us\",\n      \"wv.us\",\n      \"wy.us\",\n      \"k12.ak.us\",\n      \"k12.al.us\",\n      \"k12.ar.us\",\n      \"k12.as.us\",\n      \"k12.az.us\",\n      \"k12.ca.us\",\n      \"k12.co.us\",\n      \"k12.ct.us\",\n      \"k12.dc.us\",\n      \"k12.de.us\",\n      \"k12.fl.us\",\n      \"k12.ga.us\",\n      \"k12.gu.us\",\n      \"k12.ia.us\",\n      \"k12.id.us\",\n      \"k12.il.us\",\n      \"k12.in.us\",\n      \"k12.ks.us\",\n      \"k12.ky.us\",\n      \"k12.la.us\",\n      \"k12.ma.us\",\n      \"k12.md.us\",\n      \"k12.me.us\",\n      \"k12.mi.us\",\n      \"k12.mn.us\",\n      \"k12.mo.us\",\n      \"k12.ms.us\",\n      \"k12.mt.us\",\n      \"k12.nc.us\",\n      \"k12.ne.us\",\n      \"k12.nh.us\",\n      \"k12.nj.us\",\n      \"k12.nm.us\",\n      \"k12.nv.us\",\n      \"k12.ny.us\",\n      \"k12.oh.us\",\n      \"k12.ok.us\",\n      \"k12.or.us\",\n      \"k12.pa.us\",\n      \"k12.pr.us\",\n      \"k12.sc.us\",\n      \"k12.tn.us\",\n      \"k12.tx.us\",\n      \"k12.ut.us\",\n      \"k12.vi.us\",\n      \"k12.vt.us\",\n      \"k12.va.us\",\n      \"k12.wa.us\",\n      \"k12.wi.us\",\n      \"k12.wy.us\",\n      \"cc.ak.us\",\n      \"cc.al.us\",\n      \"cc.ar.us\",\n      \"cc.as.us\",\n      \"cc.az.us\",\n      \"cc.ca.us\",\n      \"cc.co.us\",\n      \"cc.ct.us\",\n      \"cc.dc.us\",\n      \"cc.de.us\",\n      \"cc.fl.us\",\n      \"cc.ga.us\",\n      \"cc.gu.us\",\n      \"cc.hi.us\",\n      \"cc.ia.us\",\n      \"cc.id.us\",\n      \"cc.il.us\",\n      \"cc.in.us\",\n      \"cc.ks.us\",\n      \"cc.ky.us\",\n      \"cc.la.us\",\n      \"cc.ma.us\",\n      \"cc.md.us\",\n      \"cc.me.us\",\n      \"cc.mi.us\",\n      \"cc.mn.us\",\n      \"cc.mo.us\",\n      \"cc.ms.us\",\n      \"cc.mt.us\",\n      \"cc.nc.us\",\n      \"cc.nd.us\",\n      \"cc.ne.us\",\n      \"cc.nh.us\",\n      \"cc.nj.us\",\n      \"cc.nm.us\",\n      \"cc.nv.us\",\n      \"cc.ny.us\",\n      \"cc.oh.us\",\n      \"cc.ok.us\",\n      \"cc.or.us\",\n      \"cc.pa.us\",\n      \"cc.pr.us\",\n      \"cc.ri.us\",\n      \"cc.sc.us\",\n      \"cc.sd.us\",\n      \"cc.tn.us\",\n      \"cc.tx.us\",\n      \"cc.ut.us\",\n      \"cc.vi.us\",\n      \"cc.vt.us\",\n      \"cc.va.us\",\n      \"cc.wa.us\",\n      \"cc.wi.us\",\n      \"cc.wv.us\",\n      \"cc.wy.us\",\n      \"lib.ak.us\",\n      \"lib.al.us\",\n      \"lib.ar.us\",\n      \"lib.as.us\",\n      \"lib.az.us\",\n      \"lib.ca.us\",\n      \"lib.co.us\",\n      \"lib.ct.us\",\n      \"lib.dc.us\",\n      \"lib.fl.us\",\n      \"lib.ga.us\",\n      \"lib.gu.us\",\n      \"lib.hi.us\",\n      \"lib.ia.us\",\n      \"lib.id.us\",\n      \"lib.il.us\",\n      \"lib.in.us\",\n      \"lib.ks.us\",\n      \"lib.ky.us\",\n      \"lib.la.us\",\n      \"lib.ma.us\",\n      \"lib.md.us\",\n      \"lib.me.us\",\n      \"lib.mi.us\",\n      \"lib.mn.us\",\n      \"lib.mo.us\",\n      \"lib.ms.us\",\n      \"lib.mt.us\",\n      \"lib.nc.us\",\n      \"lib.nd.us\",\n      \"lib.ne.us\",\n      \"lib.nh.us\",\n      \"lib.nj.us\",\n      \"lib.nm.us\",\n      \"lib.nv.us\",\n      \"lib.ny.us\",\n      \"lib.oh.us\",\n      \"lib.ok.us\",\n      \"lib.or.us\",\n      \"lib.pa.us\",\n      \"lib.pr.us\",\n      \"lib.ri.us\",\n      \"lib.sc.us\",\n      \"lib.sd.us\",\n      \"lib.tn.us\",\n      \"lib.tx.us\",\n      \"lib.ut.us\",\n      \"lib.vi.us\",\n      \"lib.vt.us\",\n      \"lib.va.us\",\n      \"lib.wa.us\",\n      \"lib.wi.us\",\n      \"lib.wy.us\",\n      \"pvt.k12.ma.us\",\n      \"chtr.k12.ma.us\",\n      \"paroch.k12.ma.us\",\n      \"ann-arbor.mi.us\",\n      \"cog.mi.us\",\n      \"dst.mi.us\",\n      \"eaton.mi.us\",\n      \"gen.mi.us\",\n      \"mus.mi.us\",\n      \"tec.mi.us\",\n      \"washtenaw.mi.us\",\n      \"uy\",\n      \"com.uy\",\n      \"edu.uy\",\n      \"gub.uy\",\n      \"mil.uy\",\n      \"net.uy\",\n      \"org.uy\",\n      \"uz\",\n      \"co.uz\",\n      \"com.uz\",\n      \"net.uz\",\n      \"org.uz\",\n      \"va\",\n      \"vc\",\n      \"com.vc\",\n      \"net.vc\",\n      \"org.vc\",\n      \"gov.vc\",\n      \"mil.vc\",\n      \"edu.vc\",\n      \"ve\",\n      \"arts.ve\",\n      \"bib.ve\",\n      \"co.ve\",\n      \"com.ve\",\n      \"e12.ve\",\n      \"edu.ve\",\n      \"firm.ve\",\n      \"gob.ve\",\n      \"gov.ve\",\n      \"info.ve\",\n      \"int.ve\",\n      \"mil.ve\",\n      \"net.ve\",\n      \"nom.ve\",\n      \"org.ve\",\n      \"rar.ve\",\n      \"rec.ve\",\n      \"store.ve\",\n      \"tec.ve\",\n      \"web.ve\",\n      \"vg\",\n      \"vi\",\n      \"co.vi\",\n      \"com.vi\",\n      \"k12.vi\",\n      \"net.vi\",\n      \"org.vi\",\n      \"vn\",\n      \"com.vn\",\n      \"net.vn\",\n      \"org.vn\",\n      \"edu.vn\",\n      \"gov.vn\",\n      \"int.vn\",\n      \"ac.vn\",\n      \"biz.vn\",\n      \"info.vn\",\n      \"name.vn\",\n      \"pro.vn\",\n      \"health.vn\",\n      \"vu\",\n      \"com.vu\",\n      \"edu.vu\",\n      \"net.vu\",\n      \"org.vu\",\n      \"wf\",\n      \"ws\",\n      \"com.ws\",\n      \"net.ws\",\n      \"org.ws\",\n      \"gov.ws\",\n      \"edu.ws\",\n      \"yt\",\n      \"\\u0627\\u0645\\u0627\\u0631\\u0627\\u062A\",\n      \"\\u0570\\u0561\\u0575\",\n      \"\\u09AC\\u09BE\\u0982\\u09B2\\u09BE\",\n      \"\\u0431\\u0433\",\n      \"\\u0627\\u0644\\u0628\\u062D\\u0631\\u064A\\u0646\",\n      \"\\u0431\\u0435\\u043B\",\n      \"\\u4E2D\\u56FD\",\n      \"\\u4E2D\\u570B\",\n      \"\\u0627\\u0644\\u062C\\u0632\\u0627\\u0626\\u0631\",\n      \"\\u0645\\u0635\\u0631\",\n      \"\\u0435\\u044E\",\n      \"\\u03B5\\u03C5\",\n      \"\\u0645\\u0648\\u0631\\u064A\\u062A\\u0627\\u0646\\u064A\\u0627\",\n      \"\\u10D2\\u10D4\",\n      \"\\u03B5\\u03BB\",\n      \"\\u9999\\u6E2F\",\n      \"\\u516C\\u53F8.\\u9999\\u6E2F\",\n      \"\\u6559\\u80B2.\\u9999\\u6E2F\",\n      \"\\u653F\\u5E9C.\\u9999\\u6E2F\",\n      \"\\u500B\\u4EBA.\\u9999\\u6E2F\",\n      \"\\u7DB2\\u7D61.\\u9999\\u6E2F\",\n      \"\\u7D44\\u7E54.\\u9999\\u6E2F\",\n      \"\\u0CAD\\u0CBE\\u0CB0\\u0CA4\",\n      \"\\u0B2D\\u0B3E\\u0B30\\u0B24\",\n      \"\\u09AD\\u09BE\\u09F0\\u09A4\",\n      \"\\u092D\\u093E\\u0930\\u0924\\u092E\\u094D\",\n      \"\\u092D\\u093E\\u0930\\u094B\\u0924\",\n      \"\\u0680\\u0627\\u0631\\u062A\",\n      \"\\u0D2D\\u0D3E\\u0D30\\u0D24\\u0D02\",\n      \"\\u092D\\u093E\\u0930\\u0924\",\n      \"\\u0628\\u0627\\u0631\\u062A\",\n      \"\\u0628\\u06BE\\u0627\\u0631\\u062A\",\n      \"\\u0C2D\\u0C3E\\u0C30\\u0C24\\u0C4D\",\n      \"\\u0AAD\\u0ABE\\u0AB0\\u0AA4\",\n      \"\\u0A2D\\u0A3E\\u0A30\\u0A24\",\n      \"\\u09AD\\u09BE\\u09B0\\u09A4\",\n      \"\\u0B87\\u0BA8\\u0BCD\\u0BA4\\u0BBF\\u0BAF\\u0BBE\",\n      \"\\u0627\\u06CC\\u0631\\u0627\\u0646\",\n      \"\\u0627\\u064A\\u0631\\u0627\\u0646\",\n      \"\\u0639\\u0631\\u0627\\u0642\",\n      \"\\u0627\\u0644\\u0627\\u0631\\u062F\\u0646\",\n      \"\\uD55C\\uAD6D\",\n      \"\\u049B\\u0430\\u0437\",\n      \"\\u0EA5\\u0EB2\\u0EA7\",\n      \"\\u0DBD\\u0D82\\u0D9A\\u0DCF\",\n      \"\\u0B87\\u0BB2\\u0B99\\u0BCD\\u0B95\\u0BC8\",\n      \"\\u0627\\u0644\\u0645\\u063A\\u0631\\u0628\",\n      \"\\u043C\\u043A\\u0434\",\n      \"\\u043C\\u043E\\u043D\",\n      \"\\u6FB3\\u9580\",\n      \"\\u6FB3\\u95E8\",\n      \"\\u0645\\u0644\\u064A\\u0633\\u064A\\u0627\",\n      \"\\u0639\\u0645\\u0627\\u0646\",\n      \"\\u067E\\u0627\\u06A9\\u0633\\u062A\\u0627\\u0646\",\n      \"\\u067E\\u0627\\u0643\\u0633\\u062A\\u0627\\u0646\",\n      \"\\u0641\\u0644\\u0633\\u0637\\u064A\\u0646\",\n      \"\\u0441\\u0440\\u0431\",\n      \"\\u043F\\u0440.\\u0441\\u0440\\u0431\",\n      \"\\u043E\\u0440\\u0433.\\u0441\\u0440\\u0431\",\n      \"\\u043E\\u0431\\u0440.\\u0441\\u0440\\u0431\",\n      \"\\u043E\\u0434.\\u0441\\u0440\\u0431\",\n      \"\\u0443\\u043F\\u0440.\\u0441\\u0440\\u0431\",\n      \"\\u0430\\u043A.\\u0441\\u0440\\u0431\",\n      \"\\u0440\\u0444\",\n      \"\\u0642\\u0637\\u0631\",\n      \"\\u0627\\u0644\\u0633\\u0639\\u0648\\u062F\\u064A\\u0629\",\n      \"\\u0627\\u0644\\u0633\\u0639\\u0648\\u062F\\u06CC\\u0629\",\n      \"\\u0627\\u0644\\u0633\\u0639\\u0648\\u062F\\u06CC\\u06C3\",\n      \"\\u0627\\u0644\\u0633\\u0639\\u0648\\u062F\\u064A\\u0647\",\n      \"\\u0633\\u0648\\u062F\\u0627\\u0646\",\n      \"\\u65B0\\u52A0\\u5761\",\n      \"\\u0B9A\\u0BBF\\u0B99\\u0BCD\\u0B95\\u0BAA\\u0BCD\\u0BAA\\u0BC2\\u0BB0\\u0BCD\",\n      \"\\u0633\\u0648\\u0631\\u064A\\u0629\",\n      \"\\u0633\\u0648\\u0631\\u064A\\u0627\",\n      \"\\u0E44\\u0E17\\u0E22\",\n      \"\\u0E28\\u0E36\\u0E01\\u0E29\\u0E32.\\u0E44\\u0E17\\u0E22\",\n      \"\\u0E18\\u0E38\\u0E23\\u0E01\\u0E34\\u0E08.\\u0E44\\u0E17\\u0E22\",\n      \"\\u0E23\\u0E31\\u0E10\\u0E1A\\u0E32\\u0E25.\\u0E44\\u0E17\\u0E22\",\n      \"\\u0E17\\u0E2B\\u0E32\\u0E23.\\u0E44\\u0E17\\u0E22\",\n      \"\\u0E40\\u0E19\\u0E47\\u0E15.\\u0E44\\u0E17\\u0E22\",\n      \"\\u0E2D\\u0E07\\u0E04\\u0E4C\\u0E01\\u0E23.\\u0E44\\u0E17\\u0E22\",\n      \"\\u062A\\u0648\\u0646\\u0633\",\n      \"\\u53F0\\u7063\",\n      \"\\u53F0\\u6E7E\",\n      \"\\u81FA\\u7063\",\n      \"\\u0443\\u043A\\u0440\",\n      \"\\u0627\\u0644\\u064A\\u0645\\u0646\",\n      \"xxx\",\n      \"ye\",\n      \"com.ye\",\n      \"edu.ye\",\n      \"gov.ye\",\n      \"net.ye\",\n      \"mil.ye\",\n      \"org.ye\",\n      \"ac.za\",\n      \"agric.za\",\n      \"alt.za\",\n      \"co.za\",\n      \"edu.za\",\n      \"gov.za\",\n      \"grondar.za\",\n      \"law.za\",\n      \"mil.za\",\n      \"net.za\",\n      \"ngo.za\",\n      \"nic.za\",\n      \"nis.za\",\n      \"nom.za\",\n      \"org.za\",\n      \"school.za\",\n      \"tm.za\",\n      \"web.za\",\n      \"zm\",\n      \"ac.zm\",\n      \"biz.zm\",\n      \"co.zm\",\n      \"com.zm\",\n      \"edu.zm\",\n      \"gov.zm\",\n      \"info.zm\",\n      \"mil.zm\",\n      \"net.zm\",\n      \"org.zm\",\n      \"sch.zm\",\n      \"zw\",\n      \"ac.zw\",\n      \"co.zw\",\n      \"gov.zw\",\n      \"mil.zw\",\n      \"org.zw\",\n      \"aaa\",\n      \"aarp\",\n      \"abarth\",\n      \"abb\",\n      \"abbott\",\n      \"abbvie\",\n      \"abc\",\n      \"able\",\n      \"abogado\",\n      \"abudhabi\",\n      \"academy\",\n      \"accenture\",\n      \"accountant\",\n      \"accountants\",\n      \"aco\",\n      \"actor\",\n      \"adac\",\n      \"ads\",\n      \"adult\",\n      \"aeg\",\n      \"aetna\",\n      \"afl\",\n      \"africa\",\n      \"agakhan\",\n      \"agency\",\n      \"aig\",\n      \"airbus\",\n      \"airforce\",\n      \"airtel\",\n      \"akdn\",\n      \"alfaromeo\",\n      \"alibaba\",\n      \"alipay\",\n      \"allfinanz\",\n      \"allstate\",\n      \"ally\",\n      \"alsace\",\n      \"alstom\",\n      \"amazon\",\n      \"americanexpress\",\n      \"americanfamily\",\n      \"amex\",\n      \"amfam\",\n      \"amica\",\n      \"amsterdam\",\n      \"analytics\",\n      \"android\",\n      \"anquan\",\n      \"anz\",\n      \"aol\",\n      \"apartments\",\n      \"app\",\n      \"apple\",\n      \"aquarelle\",\n      \"arab\",\n      \"aramco\",\n      \"archi\",\n      \"army\",\n      \"art\",\n      \"arte\",\n      \"asda\",\n      \"associates\",\n      \"athleta\",\n      \"attorney\",\n      \"auction\",\n      \"audi\",\n      \"audible\",\n      \"audio\",\n      \"auspost\",\n      \"author\",\n      \"auto\",\n      \"autos\",\n      \"avianca\",\n      \"aws\",\n      \"axa\",\n      \"azure\",\n      \"baby\",\n      \"baidu\",\n      \"banamex\",\n      \"bananarepublic\",\n      \"band\",\n      \"bank\",\n      \"bar\",\n      \"barcelona\",\n      \"barclaycard\",\n      \"barclays\",\n      \"barefoot\",\n      \"bargains\",\n      \"baseball\",\n      \"basketball\",\n      \"bauhaus\",\n      \"bayern\",\n      \"bbc\",\n      \"bbt\",\n      \"bbva\",\n      \"bcg\",\n      \"bcn\",\n      \"beats\",\n      \"beauty\",\n      \"beer\",\n      \"bentley\",\n      \"berlin\",\n      \"best\",\n      \"bestbuy\",\n      \"bet\",\n      \"bharti\",\n      \"bible\",\n      \"bid\",\n      \"bike\",\n      \"bing\",\n      \"bingo\",\n      \"bio\",\n      \"black\",\n      \"blackfriday\",\n      \"blockbuster\",\n      \"blog\",\n      \"bloomberg\",\n      \"blue\",\n      \"bms\",\n      \"bmw\",\n      \"bnpparibas\",\n      \"boats\",\n      \"boehringer\",\n      \"bofa\",\n      \"bom\",\n      \"bond\",\n      \"boo\",\n      \"book\",\n      \"booking\",\n      \"bosch\",\n      \"bostik\",\n      \"boston\",\n      \"bot\",\n      \"boutique\",\n      \"box\",\n      \"bradesco\",\n      \"bridgestone\",\n      \"broadway\",\n      \"broker\",\n      \"brother\",\n      \"brussels\",\n      \"bugatti\",\n      \"build\",\n      \"builders\",\n      \"business\",\n      \"buy\",\n      \"buzz\",\n      \"bzh\",\n      \"cab\",\n      \"cafe\",\n      \"cal\",\n      \"call\",\n      \"calvinklein\",\n      \"cam\",\n      \"camera\",\n      \"camp\",\n      \"cancerresearch\",\n      \"canon\",\n      \"capetown\",\n      \"capital\",\n      \"capitalone\",\n      \"car\",\n      \"caravan\",\n      \"cards\",\n      \"care\",\n      \"career\",\n      \"careers\",\n      \"cars\",\n      \"casa\",\n      \"case\",\n      \"cash\",\n      \"casino\",\n      \"catering\",\n      \"catholic\",\n      \"cba\",\n      \"cbn\",\n      \"cbre\",\n      \"cbs\",\n      \"center\",\n      \"ceo\",\n      \"cern\",\n      \"cfa\",\n      \"cfd\",\n      \"chanel\",\n      \"channel\",\n      \"charity\",\n      \"chase\",\n      \"chat\",\n      \"cheap\",\n      \"chintai\",\n      \"christmas\",\n      \"chrome\",\n      \"church\",\n      \"cipriani\",\n      \"circle\",\n      \"cisco\",\n      \"citadel\",\n      \"citi\",\n      \"citic\",\n      \"city\",\n      \"cityeats\",\n      \"claims\",\n      \"cleaning\",\n      \"click\",\n      \"clinic\",\n      \"clinique\",\n      \"clothing\",\n      \"cloud\",\n      \"club\",\n      \"clubmed\",\n      \"coach\",\n      \"codes\",\n      \"coffee\",\n      \"college\",\n      \"cologne\",\n      \"comcast\",\n      \"commbank\",\n      \"community\",\n      \"company\",\n      \"compare\",\n      \"computer\",\n      \"comsec\",\n      \"condos\",\n      \"construction\",\n      \"consulting\",\n      \"contact\",\n      \"contractors\",\n      \"cooking\",\n      \"cookingchannel\",\n      \"cool\",\n      \"corsica\",\n      \"country\",\n      \"coupon\",\n      \"coupons\",\n      \"courses\",\n      \"cpa\",\n      \"credit\",\n      \"creditcard\",\n      \"creditunion\",\n      \"cricket\",\n      \"crown\",\n      \"crs\",\n      \"cruise\",\n      \"cruises\",\n      \"cuisinella\",\n      \"cymru\",\n      \"cyou\",\n      \"dabur\",\n      \"dad\",\n      \"dance\",\n      \"data\",\n      \"date\",\n      \"dating\",\n      \"datsun\",\n      \"day\",\n      \"dclk\",\n      \"dds\",\n      \"deal\",\n      \"dealer\",\n      \"deals\",\n      \"degree\",\n      \"delivery\",\n      \"dell\",\n      \"deloitte\",\n      \"delta\",\n      \"democrat\",\n      \"dental\",\n      \"dentist\",\n      \"desi\",\n      \"design\",\n      \"dev\",\n      \"dhl\",\n      \"diamonds\",\n      \"diet\",\n      \"digital\",\n      \"direct\",\n      \"directory\",\n      \"discount\",\n      \"discover\",\n      \"dish\",\n      \"diy\",\n      \"dnp\",\n      \"docs\",\n      \"doctor\",\n      \"dog\",\n      \"domains\",\n      \"dot\",\n      \"download\",\n      \"drive\",\n      \"dtv\",\n      \"dubai\",\n      \"dunlop\",\n      \"dupont\",\n      \"durban\",\n      \"dvag\",\n      \"dvr\",\n      \"earth\",\n      \"eat\",\n      \"eco\",\n      \"edeka\",\n      \"education\",\n      \"email\",\n      \"emerck\",\n      \"energy\",\n      \"engineer\",\n      \"engineering\",\n      \"enterprises\",\n      \"epson\",\n      \"equipment\",\n      \"ericsson\",\n      \"erni\",\n      \"esq\",\n      \"estate\",\n      \"etisalat\",\n      \"eurovision\",\n      \"eus\",\n      \"events\",\n      \"exchange\",\n      \"expert\",\n      \"exposed\",\n      \"express\",\n      \"extraspace\",\n      \"fage\",\n      \"fail\",\n      \"fairwinds\",\n      \"faith\",\n      \"family\",\n      \"fan\",\n      \"fans\",\n      \"farm\",\n      \"farmers\",\n      \"fashion\",\n      \"fast\",\n      \"fedex\",\n      \"feedback\",\n      \"ferrari\",\n      \"ferrero\",\n      \"fiat\",\n      \"fidelity\",\n      \"fido\",\n      \"film\",\n      \"final\",\n      \"finance\",\n      \"financial\",\n      \"fire\",\n      \"firestone\",\n      \"firmdale\",\n      \"fish\",\n      \"fishing\",\n      \"fit\",\n      \"fitness\",\n      \"flickr\",\n      \"flights\",\n      \"flir\",\n      \"florist\",\n      \"flowers\",\n      \"fly\",\n      \"foo\",\n      \"food\",\n      \"foodnetwork\",\n      \"football\",\n      \"ford\",\n      \"forex\",\n      \"forsale\",\n      \"forum\",\n      \"foundation\",\n      \"fox\",\n      \"free\",\n      \"fresenius\",\n      \"frl\",\n      \"frogans\",\n      \"frontdoor\",\n      \"frontier\",\n      \"ftr\",\n      \"fujitsu\",\n      \"fun\",\n      \"fund\",\n      \"furniture\",\n      \"futbol\",\n      \"fyi\",\n      \"gal\",\n      \"gallery\",\n      \"gallo\",\n      \"gallup\",\n      \"game\",\n      \"games\",\n      \"gap\",\n      \"garden\",\n      \"gay\",\n      \"gbiz\",\n      \"gdn\",\n      \"gea\",\n      \"gent\",\n      \"genting\",\n      \"george\",\n      \"ggee\",\n      \"gift\",\n      \"gifts\",\n      \"gives\",\n      \"giving\",\n      \"glass\",\n      \"gle\",\n      \"global\",\n      \"globo\",\n      \"gmail\",\n      \"gmbh\",\n      \"gmo\",\n      \"gmx\",\n      \"godaddy\",\n      \"gold\",\n      \"goldpoint\",\n      \"golf\",\n      \"goo\",\n      \"goodyear\",\n      \"goog\",\n      \"google\",\n      \"gop\",\n      \"got\",\n      \"grainger\",\n      \"graphics\",\n      \"gratis\",\n      \"green\",\n      \"gripe\",\n      \"grocery\",\n      \"group\",\n      \"guardian\",\n      \"gucci\",\n      \"guge\",\n      \"guide\",\n      \"guitars\",\n      \"guru\",\n      \"hair\",\n      \"hamburg\",\n      \"hangout\",\n      \"haus\",\n      \"hbo\",\n      \"hdfc\",\n      \"hdfcbank\",\n      \"health\",\n      \"healthcare\",\n      \"help\",\n      \"helsinki\",\n      \"here\",\n      \"hermes\",\n      \"hgtv\",\n      \"hiphop\",\n      \"hisamitsu\",\n      \"hitachi\",\n      \"hiv\",\n      \"hkt\",\n      \"hockey\",\n      \"holdings\",\n      \"holiday\",\n      \"homedepot\",\n      \"homegoods\",\n      \"homes\",\n      \"homesense\",\n      \"honda\",\n      \"horse\",\n      \"hospital\",\n      \"host\",\n      \"hosting\",\n      \"hot\",\n      \"hoteles\",\n      \"hotels\",\n      \"hotmail\",\n      \"house\",\n      \"how\",\n      \"hsbc\",\n      \"hughes\",\n      \"hyatt\",\n      \"hyundai\",\n      \"ibm\",\n      \"icbc\",\n      \"ice\",\n      \"icu\",\n      \"ieee\",\n      \"ifm\",\n      \"ikano\",\n      \"imamat\",\n      \"imdb\",\n      \"immo\",\n      \"immobilien\",\n      \"inc\",\n      \"industries\",\n      \"infiniti\",\n      \"ing\",\n      \"ink\",\n      \"institute\",\n      \"insurance\",\n      \"insure\",\n      \"international\",\n      \"intuit\",\n      \"investments\",\n      \"ipiranga\",\n      \"irish\",\n      \"ismaili\",\n      \"ist\",\n      \"istanbul\",\n      \"itau\",\n      \"itv\",\n      \"jaguar\",\n      \"java\",\n      \"jcb\",\n      \"jeep\",\n      \"jetzt\",\n      \"jewelry\",\n      \"jio\",\n      \"jll\",\n      \"jmp\",\n      \"jnj\",\n      \"joburg\",\n      \"jot\",\n      \"joy\",\n      \"jpmorgan\",\n      \"jprs\",\n      \"juegos\",\n      \"juniper\",\n      \"kaufen\",\n      \"kddi\",\n      \"kerryhotels\",\n      \"kerrylogistics\",\n      \"kerryproperties\",\n      \"kfh\",\n      \"kia\",\n      \"kids\",\n      \"kim\",\n      \"kinder\",\n      \"kindle\",\n      \"kitchen\",\n      \"kiwi\",\n      \"koeln\",\n      \"komatsu\",\n      \"kosher\",\n      \"kpmg\",\n      \"kpn\",\n      \"krd\",\n      \"kred\",\n      \"kuokgroup\",\n      \"kyoto\",\n      \"lacaixa\",\n      \"lamborghini\",\n      \"lamer\",\n      \"lancaster\",\n      \"lancia\",\n      \"land\",\n      \"landrover\",\n      \"lanxess\",\n      \"lasalle\",\n      \"lat\",\n      \"latino\",\n      \"latrobe\",\n      \"law\",\n      \"lawyer\",\n      \"lds\",\n      \"lease\",\n      \"leclerc\",\n      \"lefrak\",\n      \"legal\",\n      \"lego\",\n      \"lexus\",\n      \"lgbt\",\n      \"lidl\",\n      \"life\",\n      \"lifeinsurance\",\n      \"lifestyle\",\n      \"lighting\",\n      \"like\",\n      \"lilly\",\n      \"limited\",\n      \"limo\",\n      \"lincoln\",\n      \"linde\",\n      \"link\",\n      \"lipsy\",\n      \"live\",\n      \"living\",\n      \"llc\",\n      \"llp\",\n      \"loan\",\n      \"loans\",\n      \"locker\",\n      \"locus\",\n      \"loft\",\n      \"lol\",\n      \"london\",\n      \"lotte\",\n      \"lotto\",\n      \"love\",\n      \"lpl\",\n      \"lplfinancial\",\n      \"ltd\",\n      \"ltda\",\n      \"lundbeck\",\n      \"luxe\",\n      \"luxury\",\n      \"macys\",\n      \"madrid\",\n      \"maif\",\n      \"maison\",\n      \"makeup\",\n      \"man\",\n      \"management\",\n      \"mango\",\n      \"map\",\n      \"market\",\n      \"marketing\",\n      \"markets\",\n      \"marriott\",\n      \"marshalls\",\n      \"maserati\",\n      \"mattel\",\n      \"mba\",\n      \"mckinsey\",\n      \"med\",\n      \"media\",\n      \"meet\",\n      \"melbourne\",\n      \"meme\",\n      \"memorial\",\n      \"men\",\n      \"menu\",\n      \"merckmsd\",\n      \"miami\",\n      \"microsoft\",\n      \"mini\",\n      \"mint\",\n      \"mit\",\n      \"mitsubishi\",\n      \"mlb\",\n      \"mls\",\n      \"mma\",\n      \"mobile\",\n      \"moda\",\n      \"moe\",\n      \"moi\",\n      \"mom\",\n      \"monash\",\n      \"money\",\n      \"monster\",\n      \"mormon\",\n      \"mortgage\",\n      \"moscow\",\n      \"moto\",\n      \"motorcycles\",\n      \"mov\",\n      \"movie\",\n      \"msd\",\n      \"mtn\",\n      \"mtr\",\n      \"music\",\n      \"mutual\",\n      \"nab\",\n      \"nagoya\",\n      \"natura\",\n      \"navy\",\n      \"nba\",\n      \"nec\",\n      \"netbank\",\n      \"netflix\",\n      \"network\",\n      \"neustar\",\n      \"new\",\n      \"news\",\n      \"next\",\n      \"nextdirect\",\n      \"nexus\",\n      \"nfl\",\n      \"ngo\",\n      \"nhk\",\n      \"nico\",\n      \"nike\",\n      \"nikon\",\n      \"ninja\",\n      \"nissan\",\n      \"nissay\",\n      \"nokia\",\n      \"northwesternmutual\",\n      \"norton\",\n      \"now\",\n      \"nowruz\",\n      \"nowtv\",\n      \"nra\",\n      \"nrw\",\n      \"ntt\",\n      \"nyc\",\n      \"obi\",\n      \"observer\",\n      \"office\",\n      \"okinawa\",\n      \"olayan\",\n      \"olayangroup\",\n      \"oldnavy\",\n      \"ollo\",\n      \"omega\",\n      \"one\",\n      \"ong\",\n      \"onl\",\n      \"online\",\n      \"ooo\",\n      \"open\",\n      \"oracle\",\n      \"orange\",\n      \"organic\",\n      \"origins\",\n      \"osaka\",\n      \"otsuka\",\n      \"ott\",\n      \"ovh\",\n      \"page\",\n      \"panasonic\",\n      \"paris\",\n      \"pars\",\n      \"partners\",\n      \"parts\",\n      \"party\",\n      \"passagens\",\n      \"pay\",\n      \"pccw\",\n      \"pet\",\n      \"pfizer\",\n      \"pharmacy\",\n      \"phd\",\n      \"philips\",\n      \"phone\",\n      \"photo\",\n      \"photography\",\n      \"photos\",\n      \"physio\",\n      \"pics\",\n      \"pictet\",\n      \"pictures\",\n      \"pid\",\n      \"pin\",\n      \"ping\",\n      \"pink\",\n      \"pioneer\",\n      \"pizza\",\n      \"place\",\n      \"play\",\n      \"playstation\",\n      \"plumbing\",\n      \"plus\",\n      \"pnc\",\n      \"pohl\",\n      \"poker\",\n      \"politie\",\n      \"porn\",\n      \"pramerica\",\n      \"praxi\",\n      \"press\",\n      \"prime\",\n      \"prod\",\n      \"productions\",\n      \"prof\",\n      \"progressive\",\n      \"promo\",\n      \"properties\",\n      \"property\",\n      \"protection\",\n      \"pru\",\n      \"prudential\",\n      \"pub\",\n      \"pwc\",\n      \"qpon\",\n      \"quebec\",\n      \"quest\",\n      \"racing\",\n      \"radio\",\n      \"read\",\n      \"realestate\",\n      \"realtor\",\n      \"realty\",\n      \"recipes\",\n      \"red\",\n      \"redstone\",\n      \"redumbrella\",\n      \"rehab\",\n      \"reise\",\n      \"reisen\",\n      \"reit\",\n      \"reliance\",\n      \"ren\",\n      \"rent\",\n      \"rentals\",\n      \"repair\",\n      \"report\",\n      \"republican\",\n      \"rest\",\n      \"restaurant\",\n      \"review\",\n      \"reviews\",\n      \"rexroth\",\n      \"rich\",\n      \"richardli\",\n      \"ricoh\",\n      \"ril\",\n      \"rio\",\n      \"rip\",\n      \"rocher\",\n      \"rocks\",\n      \"rodeo\",\n      \"rogers\",\n      \"room\",\n      \"rsvp\",\n      \"rugby\",\n      \"ruhr\",\n      \"run\",\n      \"rwe\",\n      \"ryukyu\",\n      \"saarland\",\n      \"safe\",\n      \"safety\",\n      \"sakura\",\n      \"sale\",\n      \"salon\",\n      \"samsclub\",\n      \"samsung\",\n      \"sandvik\",\n      \"sandvikcoromant\",\n      \"sanofi\",\n      \"sap\",\n      \"sarl\",\n      \"sas\",\n      \"save\",\n      \"saxo\",\n      \"sbi\",\n      \"sbs\",\n      \"sca\",\n      \"scb\",\n      \"schaeffler\",\n      \"schmidt\",\n      \"scholarships\",\n      \"school\",\n      \"schule\",\n      \"schwarz\",\n      \"science\",\n      \"scot\",\n      \"search\",\n      \"seat\",\n      \"secure\",\n      \"security\",\n      \"seek\",\n      \"select\",\n      \"sener\",\n      \"services\",\n      \"ses\",\n      \"seven\",\n      \"sew\",\n      \"sex\",\n      \"sexy\",\n      \"sfr\",\n      \"shangrila\",\n      \"sharp\",\n      \"shaw\",\n      \"shell\",\n      \"shia\",\n      \"shiksha\",\n      \"shoes\",\n      \"shop\",\n      \"shopping\",\n      \"shouji\",\n      \"show\",\n      \"showtime\",\n      \"silk\",\n      \"sina\",\n      \"singles\",\n      \"site\",\n      \"ski\",\n      \"skin\",\n      \"sky\",\n      \"skype\",\n      \"sling\",\n      \"smart\",\n      \"smile\",\n      \"sncf\",\n      \"soccer\",\n      \"social\",\n      \"softbank\",\n      \"software\",\n      \"sohu\",\n      \"solar\",\n      \"solutions\",\n      \"song\",\n      \"sony\",\n      \"soy\",\n      \"spa\",\n      \"space\",\n      \"sport\",\n      \"spot\",\n      \"srl\",\n      \"stada\",\n      \"staples\",\n      \"star\",\n      \"statebank\",\n      \"statefarm\",\n      \"stc\",\n      \"stcgroup\",\n      \"stockholm\",\n      \"storage\",\n      \"store\",\n      \"stream\",\n      \"studio\",\n      \"study\",\n      \"style\",\n      \"sucks\",\n      \"supplies\",\n      \"supply\",\n      \"support\",\n      \"surf\",\n      \"surgery\",\n      \"suzuki\",\n      \"swatch\",\n      \"swiss\",\n      \"sydney\",\n      \"systems\",\n      \"tab\",\n      \"taipei\",\n      \"talk\",\n      \"taobao\",\n      \"target\",\n      \"tatamotors\",\n      \"tatar\",\n      \"tattoo\",\n      \"tax\",\n      \"taxi\",\n      \"tci\",\n      \"tdk\",\n      \"team\",\n      \"tech\",\n      \"technology\",\n      \"temasek\",\n      \"tennis\",\n      \"teva\",\n      \"thd\",\n      \"theater\",\n      \"theatre\",\n      \"tiaa\",\n      \"tickets\",\n      \"tienda\",\n      \"tiffany\",\n      \"tips\",\n      \"tires\",\n      \"tirol\",\n      \"tjmaxx\",\n      \"tjx\",\n      \"tkmaxx\",\n      \"tmall\",\n      \"today\",\n      \"tokyo\",\n      \"tools\",\n      \"top\",\n      \"toray\",\n      \"toshiba\",\n      \"total\",\n      \"tours\",\n      \"town\",\n      \"toyota\",\n      \"toys\",\n      \"trade\",\n      \"trading\",\n      \"training\",\n      \"travel\",\n      \"travelchannel\",\n      \"travelers\",\n      \"travelersinsurance\",\n      \"trust\",\n      \"trv\",\n      \"tube\",\n      \"tui\",\n      \"tunes\",\n      \"tushu\",\n      \"tvs\",\n      \"ubank\",\n      \"ubs\",\n      \"unicom\",\n      \"university\",\n      \"uno\",\n      \"uol\",\n      \"ups\",\n      \"vacations\",\n      \"vana\",\n      \"vanguard\",\n      \"vegas\",\n      \"ventures\",\n      \"verisign\",\n      \"versicherung\",\n      \"vet\",\n      \"viajes\",\n      \"video\",\n      \"vig\",\n      \"viking\",\n      \"villas\",\n      \"vin\",\n      \"vip\",\n      \"virgin\",\n      \"visa\",\n      \"vision\",\n      \"viva\",\n      \"vivo\",\n      \"vlaanderen\",\n      \"vodka\",\n      \"volkswagen\",\n      \"volvo\",\n      \"vote\",\n      \"voting\",\n      \"voto\",\n      \"voyage\",\n      \"vuelos\",\n      \"wales\",\n      \"walmart\",\n      \"walter\",\n      \"wang\",\n      \"wanggou\",\n      \"watch\",\n      \"watches\",\n      \"weather\",\n      \"weatherchannel\",\n      \"webcam\",\n      \"weber\",\n      \"website\",\n      \"wedding\",\n      \"weibo\",\n      \"weir\",\n      \"whoswho\",\n      \"wien\",\n      \"wiki\",\n      \"williamhill\",\n      \"win\",\n      \"windows\",\n      \"wine\",\n      \"winners\",\n      \"wme\",\n      \"wolterskluwer\",\n      \"woodside\",\n      \"work\",\n      \"works\",\n      \"world\",\n      \"wow\",\n      \"wtc\",\n      \"wtf\",\n      \"xbox\",\n      \"xerox\",\n      \"xfinity\",\n      \"xihuan\",\n      \"xin\",\n      \"\\u0915\\u0949\\u092E\",\n      \"\\u30BB\\u30FC\\u30EB\",\n      \"\\u4F5B\\u5C71\",\n      \"\\u6148\\u5584\",\n      \"\\u96C6\\u56E2\",\n      \"\\u5728\\u7EBF\",\n      \"\\u70B9\\u770B\",\n      \"\\u0E04\\u0E2D\\u0E21\",\n      \"\\u516B\\u5366\",\n      \"\\u0645\\u0648\\u0642\\u0639\",\n      \"\\u516C\\u76CA\",\n      \"\\u516C\\u53F8\",\n      \"\\u9999\\u683C\\u91CC\\u62C9\",\n      \"\\u7F51\\u7AD9\",\n      \"\\u79FB\\u52A8\",\n      \"\\u6211\\u7231\\u4F60\",\n      \"\\u043C\\u043E\\u0441\\u043A\\u0432\\u0430\",\n      \"\\u043A\\u0430\\u0442\\u043E\\u043B\\u0438\\u043A\",\n      \"\\u043E\\u043D\\u043B\\u0430\\u0439\\u043D\",\n      \"\\u0441\\u0430\\u0439\\u0442\",\n      \"\\u8054\\u901A\",\n      \"\\u05E7\\u05D5\\u05DD\",\n      \"\\u65F6\\u5C1A\",\n      \"\\u5FAE\\u535A\",\n      \"\\u6DE1\\u9A6C\\u9521\",\n      \"\\u30D5\\u30A1\\u30C3\\u30B7\\u30E7\\u30F3\",\n      \"\\u043E\\u0440\\u0433\",\n      \"\\u0928\\u0947\\u091F\",\n      \"\\u30B9\\u30C8\\u30A2\",\n      \"\\u30A2\\u30DE\\u30BE\\u30F3\",\n      \"\\uC0BC\\uC131\",\n      \"\\u5546\\u6807\",\n      \"\\u5546\\u5E97\",\n      \"\\u5546\\u57CE\",\n      \"\\u0434\\u0435\\u0442\\u0438\",\n      \"\\u30DD\\u30A4\\u30F3\\u30C8\",\n      \"\\u65B0\\u95FB\",\n      \"\\u5BB6\\u96FB\",\n      \"\\u0643\\u0648\\u0645\",\n      \"\\u4E2D\\u6587\\u7F51\",\n      \"\\u4E2D\\u4FE1\",\n      \"\\u5A31\\u4E50\",\n      \"\\u8C37\\u6B4C\",\n      \"\\u96FB\\u8A0A\\u76C8\\u79D1\",\n      \"\\u8D2D\\u7269\",\n      \"\\u30AF\\u30E9\\u30A6\\u30C9\",\n      \"\\u901A\\u8CA9\",\n      \"\\u7F51\\u5E97\",\n      \"\\u0938\\u0902\\u0917\\u0920\\u0928\",\n      \"\\u9910\\u5385\",\n      \"\\u7F51\\u7EDC\",\n      \"\\u043A\\u043E\\u043C\",\n      \"\\u4E9A\\u9A6C\\u900A\",\n      \"\\u8BFA\\u57FA\\u4E9A\",\n      \"\\u98DF\\u54C1\",\n      \"\\u98DE\\u5229\\u6D66\",\n      \"\\u624B\\u673A\",\n      \"\\u0627\\u0631\\u0627\\u0645\\u0643\\u0648\",\n      \"\\u0627\\u0644\\u0639\\u0644\\u064A\\u0627\\u0646\",\n      \"\\u0627\\u062A\\u0635\\u0627\\u0644\\u0627\\u062A\",\n      \"\\u0628\\u0627\\u0632\\u0627\\u0631\",\n      \"\\u0627\\u0628\\u0648\\u0638\\u0628\\u064A\",\n      \"\\u0643\\u0627\\u062B\\u0648\\u0644\\u064A\\u0643\",\n      \"\\u0647\\u0645\\u0631\\u0627\\u0647\",\n      \"\\uB2F7\\uCEF4\",\n      \"\\u653F\\u5E9C\",\n      \"\\u0634\\u0628\\u0643\\u0629\",\n      \"\\u0628\\u064A\\u062A\\u0643\",\n      \"\\u0639\\u0631\\u0628\",\n      \"\\u673A\\u6784\",\n      \"\\u7EC4\\u7EC7\\u673A\\u6784\",\n      \"\\u5065\\u5EB7\",\n      \"\\u62DB\\u8058\",\n      \"\\u0440\\u0443\\u0441\",\n      \"\\u5927\\u62FF\",\n      \"\\u307F\\u3093\\u306A\",\n      \"\\u30B0\\u30FC\\u30B0\\u30EB\",\n      \"\\u4E16\\u754C\",\n      \"\\u66F8\\u7C4D\",\n      \"\\u7F51\\u5740\",\n      \"\\uB2F7\\uB137\",\n      \"\\u30B3\\u30E0\",\n      \"\\u5929\\u4E3B\\u6559\",\n      \"\\u6E38\\u620F\",\n      \"verm\\xF6gensberater\",\n      \"verm\\xF6gensberatung\",\n      \"\\u4F01\\u4E1A\",\n      \"\\u4FE1\\u606F\",\n      \"\\u5609\\u91CC\\u5927\\u9152\\u5E97\",\n      \"\\u5609\\u91CC\",\n      \"\\u5E7F\\u4E1C\",\n      \"\\u653F\\u52A1\",\n      \"xyz\",\n      \"yachts\",\n      \"yahoo\",\n      \"yamaxun\",\n      \"yandex\",\n      \"yodobashi\",\n      \"yoga\",\n      \"yokohama\",\n      \"you\",\n      \"youtube\",\n      \"yun\",\n      \"zappos\",\n      \"zara\",\n      \"zero\",\n      \"zip\",\n      \"zone\",\n      \"zuerich\",\n      \"cc.ua\",\n      \"inf.ua\",\n      \"ltd.ua\",\n      \"611.to\",\n      \"graphox.us\",\n      \"*.devcdnaccesso.com\",\n      \"adobeaemcloud.com\",\n      \"*.dev.adobeaemcloud.com\",\n      \"hlx.live\",\n      \"adobeaemcloud.net\",\n      \"hlx.page\",\n      \"hlx3.page\",\n      \"beep.pl\",\n      \"airkitapps.com\",\n      \"airkitapps-au.com\",\n      \"airkitapps.eu\",\n      \"aivencloud.com\",\n      \"barsy.ca\",\n      \"*.compute.estate\",\n      \"*.alces.network\",\n      \"kasserver.com\",\n      \"altervista.org\",\n      \"alwaysdata.net\",\n      \"cloudfront.net\",\n      \"*.compute.amazonaws.com\",\n      \"*.compute-1.amazonaws.com\",\n      \"*.compute.amazonaws.com.cn\",\n      \"us-east-1.amazonaws.com\",\n      \"cn-north-1.eb.amazonaws.com.cn\",\n      \"cn-northwest-1.eb.amazonaws.com.cn\",\n      \"elasticbeanstalk.com\",\n      \"ap-northeast-1.elasticbeanstalk.com\",\n      \"ap-northeast-2.elasticbeanstalk.com\",\n      \"ap-northeast-3.elasticbeanstalk.com\",\n      \"ap-south-1.elasticbeanstalk.com\",\n      \"ap-southeast-1.elasticbeanstalk.com\",\n      \"ap-southeast-2.elasticbeanstalk.com\",\n      \"ca-central-1.elasticbeanstalk.com\",\n      \"eu-central-1.elasticbeanstalk.com\",\n      \"eu-west-1.elasticbeanstalk.com\",\n      \"eu-west-2.elasticbeanstalk.com\",\n      \"eu-west-3.elasticbeanstalk.com\",\n      \"sa-east-1.elasticbeanstalk.com\",\n      \"us-east-1.elasticbeanstalk.com\",\n      \"us-east-2.elasticbeanstalk.com\",\n      \"us-gov-west-1.elasticbeanstalk.com\",\n      \"us-west-1.elasticbeanstalk.com\",\n      \"us-west-2.elasticbeanstalk.com\",\n      \"*.elb.amazonaws.com\",\n      \"*.elb.amazonaws.com.cn\",\n      \"awsglobalaccelerator.com\",\n      \"s3.amazonaws.com\",\n      \"s3-ap-northeast-1.amazonaws.com\",\n      \"s3-ap-northeast-2.amazonaws.com\",\n      \"s3-ap-south-1.amazonaws.com\",\n      \"s3-ap-southeast-1.amazonaws.com\",\n      \"s3-ap-southeast-2.amazonaws.com\",\n      \"s3-ca-central-1.amazonaws.com\",\n      \"s3-eu-central-1.amazonaws.com\",\n      \"s3-eu-west-1.amazonaws.com\",\n      \"s3-eu-west-2.amazonaws.com\",\n      \"s3-eu-west-3.amazonaws.com\",\n      \"s3-external-1.amazonaws.com\",\n      \"s3-fips-us-gov-west-1.amazonaws.com\",\n      \"s3-sa-east-1.amazonaws.com\",\n      \"s3-us-gov-west-1.amazonaws.com\",\n      \"s3-us-east-2.amazonaws.com\",\n      \"s3-us-west-1.amazonaws.com\",\n      \"s3-us-west-2.amazonaws.com\",\n      \"s3.ap-northeast-2.amazonaws.com\",\n      \"s3.ap-south-1.amazonaws.com\",\n      \"s3.cn-north-1.amazonaws.com.cn\",\n      \"s3.ca-central-1.amazonaws.com\",\n      \"s3.eu-central-1.amazonaws.com\",\n      \"s3.eu-west-2.amazonaws.com\",\n      \"s3.eu-west-3.amazonaws.com\",\n      \"s3.us-east-2.amazonaws.com\",\n      \"s3.dualstack.ap-northeast-1.amazonaws.com\",\n      \"s3.dualstack.ap-northeast-2.amazonaws.com\",\n      \"s3.dualstack.ap-south-1.amazonaws.com\",\n      \"s3.dualstack.ap-southeast-1.amazonaws.com\",\n      \"s3.dualstack.ap-southeast-2.amazonaws.com\",\n      \"s3.dualstack.ca-central-1.amazonaws.com\",\n      \"s3.dualstack.eu-central-1.amazonaws.com\",\n      \"s3.dualstack.eu-west-1.amazonaws.com\",\n      \"s3.dualstack.eu-west-2.amazonaws.com\",\n      \"s3.dualstack.eu-west-3.amazonaws.com\",\n      \"s3.dualstack.sa-east-1.amazonaws.com\",\n      \"s3.dualstack.us-east-1.amazonaws.com\",\n      \"s3.dualstack.us-east-2.amazonaws.com\",\n      \"s3-website-us-east-1.amazonaws.com\",\n      \"s3-website-us-west-1.amazonaws.com\",\n      \"s3-website-us-west-2.amazonaws.com\",\n      \"s3-website-ap-northeast-1.amazonaws.com\",\n      \"s3-website-ap-southeast-1.amazonaws.com\",\n      \"s3-website-ap-southeast-2.amazonaws.com\",\n      \"s3-website-eu-west-1.amazonaws.com\",\n      \"s3-website-sa-east-1.amazonaws.com\",\n      \"s3-website.ap-northeast-2.amazonaws.com\",\n      \"s3-website.ap-south-1.amazonaws.com\",\n      \"s3-website.ca-central-1.amazonaws.com\",\n      \"s3-website.eu-central-1.amazonaws.com\",\n      \"s3-website.eu-west-2.amazonaws.com\",\n      \"s3-website.eu-west-3.amazonaws.com\",\n      \"s3-website.us-east-2.amazonaws.com\",\n      \"t3l3p0rt.net\",\n      \"tele.amune.org\",\n      \"apigee.io\",\n      \"siiites.com\",\n      \"appspacehosted.com\",\n      \"appspaceusercontent.com\",\n      \"appudo.net\",\n      \"on-aptible.com\",\n      \"user.aseinet.ne.jp\",\n      \"gv.vc\",\n      \"d.gv.vc\",\n      \"user.party.eus\",\n      \"pimienta.org\",\n      \"poivron.org\",\n      \"potager.org\",\n      \"sweetpepper.org\",\n      \"myasustor.com\",\n      \"cdn.prod.atlassian-dev.net\",\n      \"translated.page\",\n      \"myfritz.net\",\n      \"onavstack.net\",\n      \"*.awdev.ca\",\n      \"*.advisor.ws\",\n      \"ecommerce-shop.pl\",\n      \"b-data.io\",\n      \"backplaneapp.io\",\n      \"balena-devices.com\",\n      \"rs.ba\",\n      \"*.banzai.cloud\",\n      \"app.banzaicloud.io\",\n      \"*.backyards.banzaicloud.io\",\n      \"base.ec\",\n      \"official.ec\",\n      \"buyshop.jp\",\n      \"fashionstore.jp\",\n      \"handcrafted.jp\",\n      \"kawaiishop.jp\",\n      \"supersale.jp\",\n      \"theshop.jp\",\n      \"shopselect.net\",\n      \"base.shop\",\n      \"*.beget.app\",\n      \"betainabox.com\",\n      \"bnr.la\",\n      \"bitbucket.io\",\n      \"blackbaudcdn.net\",\n      \"of.je\",\n      \"bluebite.io\",\n      \"boomla.net\",\n      \"boutir.com\",\n      \"boxfuse.io\",\n      \"square7.ch\",\n      \"bplaced.com\",\n      \"bplaced.de\",\n      \"square7.de\",\n      \"bplaced.net\",\n      \"square7.net\",\n      \"shop.brendly.rs\",\n      \"browsersafetymark.io\",\n      \"uk0.bigv.io\",\n      \"dh.bytemark.co.uk\",\n      \"vm.bytemark.co.uk\",\n      \"cafjs.com\",\n      \"mycd.eu\",\n      \"drr.ac\",\n      \"uwu.ai\",\n      \"carrd.co\",\n      \"crd.co\",\n      \"ju.mp\",\n      \"ae.org\",\n      \"br.com\",\n      \"cn.com\",\n      \"com.de\",\n      \"com.se\",\n      \"de.com\",\n      \"eu.com\",\n      \"gb.net\",\n      \"hu.net\",\n      \"jp.net\",\n      \"jpn.com\",\n      \"mex.com\",\n      \"ru.com\",\n      \"sa.com\",\n      \"se.net\",\n      \"uk.com\",\n      \"uk.net\",\n      \"us.com\",\n      \"za.bz\",\n      \"za.com\",\n      \"ar.com\",\n      \"hu.com\",\n      \"kr.com\",\n      \"no.com\",\n      \"qc.com\",\n      \"uy.com\",\n      \"africa.com\",\n      \"gr.com\",\n      \"in.net\",\n      \"web.in\",\n      \"us.org\",\n      \"co.com\",\n      \"aus.basketball\",\n      \"nz.basketball\",\n      \"radio.am\",\n      \"radio.fm\",\n      \"c.la\",\n      \"certmgr.org\",\n      \"cx.ua\",\n      \"discourse.group\",\n      \"discourse.team\",\n      \"cleverapps.io\",\n      \"clerk.app\",\n      \"clerkstage.app\",\n      \"*.lcl.dev\",\n      \"*.lclstage.dev\",\n      \"*.stg.dev\",\n      \"*.stgstage.dev\",\n      \"clickrising.net\",\n      \"c66.me\",\n      \"cloud66.ws\",\n      \"cloud66.zone\",\n      \"jdevcloud.com\",\n      \"wpdevcloud.com\",\n      \"cloudaccess.host\",\n      \"freesite.host\",\n      \"cloudaccess.net\",\n      \"cloudcontrolled.com\",\n      \"cloudcontrolapp.com\",\n      \"*.cloudera.site\",\n      \"pages.dev\",\n      \"trycloudflare.com\",\n      \"workers.dev\",\n      \"wnext.app\",\n      \"co.ca\",\n      \"*.otap.co\",\n      \"co.cz\",\n      \"c.cdn77.org\",\n      \"cdn77-ssl.net\",\n      \"r.cdn77.net\",\n      \"rsc.cdn77.org\",\n      \"ssl.origin.cdn77-secure.org\",\n      \"cloudns.asia\",\n      \"cloudns.biz\",\n      \"cloudns.club\",\n      \"cloudns.cc\",\n      \"cloudns.eu\",\n      \"cloudns.in\",\n      \"cloudns.info\",\n      \"cloudns.org\",\n      \"cloudns.pro\",\n      \"cloudns.pw\",\n      \"cloudns.us\",\n      \"cnpy.gdn\",\n      \"codeberg.page\",\n      \"co.nl\",\n      \"co.no\",\n      \"webhosting.be\",\n      \"hosting-cluster.nl\",\n      \"ac.ru\",\n      \"edu.ru\",\n      \"gov.ru\",\n      \"int.ru\",\n      \"mil.ru\",\n      \"test.ru\",\n      \"dyn.cosidns.de\",\n      \"dynamisches-dns.de\",\n      \"dnsupdater.de\",\n      \"internet-dns.de\",\n      \"l-o-g-i-n.de\",\n      \"dynamic-dns.info\",\n      \"feste-ip.net\",\n      \"knx-server.net\",\n      \"static-access.net\",\n      \"realm.cz\",\n      \"*.cryptonomic.net\",\n      \"cupcake.is\",\n      \"curv.dev\",\n      \"*.customer-oci.com\",\n      \"*.oci.customer-oci.com\",\n      \"*.ocp.customer-oci.com\",\n      \"*.ocs.customer-oci.com\",\n      \"cyon.link\",\n      \"cyon.site\",\n      \"fnwk.site\",\n      \"folionetwork.site\",\n      \"platform0.app\",\n      \"daplie.me\",\n      \"localhost.daplie.me\",\n      \"dattolocal.com\",\n      \"dattorelay.com\",\n      \"dattoweb.com\",\n      \"mydatto.com\",\n      \"dattolocal.net\",\n      \"mydatto.net\",\n      \"biz.dk\",\n      \"co.dk\",\n      \"firm.dk\",\n      \"reg.dk\",\n      \"store.dk\",\n      \"dyndns.dappnode.io\",\n      \"*.dapps.earth\",\n      \"*.bzz.dapps.earth\",\n      \"builtwithdark.com\",\n      \"demo.datadetect.com\",\n      \"instance.datadetect.com\",\n      \"edgestack.me\",\n      \"ddns5.com\",\n      \"debian.net\",\n      \"deno.dev\",\n      \"deno-staging.dev\",\n      \"dedyn.io\",\n      \"deta.app\",\n      \"deta.dev\",\n      \"*.rss.my.id\",\n      \"*.diher.solutions\",\n      \"discordsays.com\",\n      \"discordsez.com\",\n      \"jozi.biz\",\n      \"dnshome.de\",\n      \"online.th\",\n      \"shop.th\",\n      \"drayddns.com\",\n      \"shoparena.pl\",\n      \"dreamhosters.com\",\n      \"mydrobo.com\",\n      \"drud.io\",\n      \"drud.us\",\n      \"duckdns.org\",\n      \"bip.sh\",\n      \"bitbridge.net\",\n      \"dy.fi\",\n      \"tunk.org\",\n      \"dyndns-at-home.com\",\n      \"dyndns-at-work.com\",\n      \"dyndns-blog.com\",\n      \"dyndns-free.com\",\n      \"dyndns-home.com\",\n      \"dyndns-ip.com\",\n      \"dyndns-mail.com\",\n      \"dyndns-office.com\",\n      \"dyndns-pics.com\",\n      \"dyndns-remote.com\",\n      \"dyndns-server.com\",\n      \"dyndns-web.com\",\n      \"dyndns-wiki.com\",\n      \"dyndns-work.com\",\n      \"dyndns.biz\",\n      \"dyndns.info\",\n      \"dyndns.org\",\n      \"dyndns.tv\",\n      \"at-band-camp.net\",\n      \"ath.cx\",\n      \"barrel-of-knowledge.info\",\n      \"barrell-of-knowledge.info\",\n      \"better-than.tv\",\n      \"blogdns.com\",\n      \"blogdns.net\",\n      \"blogdns.org\",\n      \"blogsite.org\",\n      \"boldlygoingnowhere.org\",\n      \"broke-it.net\",\n      \"buyshouses.net\",\n      \"cechire.com\",\n      \"dnsalias.com\",\n      \"dnsalias.net\",\n      \"dnsalias.org\",\n      \"dnsdojo.com\",\n      \"dnsdojo.net\",\n      \"dnsdojo.org\",\n      \"does-it.net\",\n      \"doesntexist.com\",\n      \"doesntexist.org\",\n      \"dontexist.com\",\n      \"dontexist.net\",\n      \"dontexist.org\",\n      \"doomdns.com\",\n      \"doomdns.org\",\n      \"dvrdns.org\",\n      \"dyn-o-saur.com\",\n      \"dynalias.com\",\n      \"dynalias.net\",\n      \"dynalias.org\",\n      \"dynathome.net\",\n      \"dyndns.ws\",\n      \"endofinternet.net\",\n      \"endofinternet.org\",\n      \"endoftheinternet.org\",\n      \"est-a-la-maison.com\",\n      \"est-a-la-masion.com\",\n      \"est-le-patron.com\",\n      \"est-mon-blogueur.com\",\n      \"for-better.biz\",\n      \"for-more.biz\",\n      \"for-our.info\",\n      \"for-some.biz\",\n      \"for-the.biz\",\n      \"forgot.her.name\",\n      \"forgot.his.name\",\n      \"from-ak.com\",\n      \"from-al.com\",\n      \"from-ar.com\",\n      \"from-az.net\",\n      \"from-ca.com\",\n      \"from-co.net\",\n      \"from-ct.com\",\n      \"from-dc.com\",\n      \"from-de.com\",\n      \"from-fl.com\",\n      \"from-ga.com\",\n      \"from-hi.com\",\n      \"from-ia.com\",\n      \"from-id.com\",\n      \"from-il.com\",\n      \"from-in.com\",\n      \"from-ks.com\",\n      \"from-ky.com\",\n      \"from-la.net\",\n      \"from-ma.com\",\n      \"from-md.com\",\n      \"from-me.org\",\n      \"from-mi.com\",\n      \"from-mn.com\",\n      \"from-mo.com\",\n      \"from-ms.com\",\n      \"from-mt.com\",\n      \"from-nc.com\",\n      \"from-nd.com\",\n      \"from-ne.com\",\n      \"from-nh.com\",\n      \"from-nj.com\",\n      \"from-nm.com\",\n      \"from-nv.com\",\n      \"from-ny.net\",\n      \"from-oh.com\",\n      \"from-ok.com\",\n      \"from-or.com\",\n      \"from-pa.com\",\n      \"from-pr.com\",\n      \"from-ri.com\",\n      \"from-sc.com\",\n      \"from-sd.com\",\n      \"from-tn.com\",\n      \"from-tx.com\",\n      \"from-ut.com\",\n      \"from-va.com\",\n      \"from-vt.com\",\n      \"from-wa.com\",\n      \"from-wi.com\",\n      \"from-wv.com\",\n      \"from-wy.com\",\n      \"ftpaccess.cc\",\n      \"fuettertdasnetz.de\",\n      \"game-host.org\",\n      \"game-server.cc\",\n      \"getmyip.com\",\n      \"gets-it.net\",\n      \"go.dyndns.org\",\n      \"gotdns.com\",\n      \"gotdns.org\",\n      \"groks-the.info\",\n      \"groks-this.info\",\n      \"ham-radio-op.net\",\n      \"here-for-more.info\",\n      \"hobby-site.com\",\n      \"hobby-site.org\",\n      \"home.dyndns.org\",\n      \"homedns.org\",\n      \"homeftp.net\",\n      \"homeftp.org\",\n      \"homeip.net\",\n      \"homelinux.com\",\n      \"homelinux.net\",\n      \"homelinux.org\",\n      \"homeunix.com\",\n      \"homeunix.net\",\n      \"homeunix.org\",\n      \"iamallama.com\",\n      \"in-the-band.net\",\n      \"is-a-anarchist.com\",\n      \"is-a-blogger.com\",\n      \"is-a-bookkeeper.com\",\n      \"is-a-bruinsfan.org\",\n      \"is-a-bulls-fan.com\",\n      \"is-a-candidate.org\",\n      \"is-a-caterer.com\",\n      \"is-a-celticsfan.org\",\n      \"is-a-chef.com\",\n      \"is-a-chef.net\",\n      \"is-a-chef.org\",\n      \"is-a-conservative.com\",\n      \"is-a-cpa.com\",\n      \"is-a-cubicle-slave.com\",\n      \"is-a-democrat.com\",\n      \"is-a-designer.com\",\n      \"is-a-doctor.com\",\n      \"is-a-financialadvisor.com\",\n      \"is-a-geek.com\",\n      \"is-a-geek.net\",\n      \"is-a-geek.org\",\n      \"is-a-green.com\",\n      \"is-a-guru.com\",\n      \"is-a-hard-worker.com\",\n      \"is-a-hunter.com\",\n      \"is-a-knight.org\",\n      \"is-a-landscaper.com\",\n      \"is-a-lawyer.com\",\n      \"is-a-liberal.com\",\n      \"is-a-libertarian.com\",\n      \"is-a-linux-user.org\",\n      \"is-a-llama.com\",\n      \"is-a-musician.com\",\n      \"is-a-nascarfan.com\",\n      \"is-a-nurse.com\",\n      \"is-a-painter.com\",\n      \"is-a-patsfan.org\",\n      \"is-a-personaltrainer.com\",\n      \"is-a-photographer.com\",\n      \"is-a-player.com\",\n      \"is-a-republican.com\",\n      \"is-a-rockstar.com\",\n      \"is-a-socialist.com\",\n      \"is-a-soxfan.org\",\n      \"is-a-student.com\",\n      \"is-a-teacher.com\",\n      \"is-a-techie.com\",\n      \"is-a-therapist.com\",\n      \"is-an-accountant.com\",\n      \"is-an-actor.com\",\n      \"is-an-actress.com\",\n      \"is-an-anarchist.com\",\n      \"is-an-artist.com\",\n      \"is-an-engineer.com\",\n      \"is-an-entertainer.com\",\n      \"is-by.us\",\n      \"is-certified.com\",\n      \"is-found.org\",\n      \"is-gone.com\",\n      \"is-into-anime.com\",\n      \"is-into-cars.com\",\n      \"is-into-cartoons.com\",\n      \"is-into-games.com\",\n      \"is-leet.com\",\n      \"is-lost.org\",\n      \"is-not-certified.com\",\n      \"is-saved.org\",\n      \"is-slick.com\",\n      \"is-uberleet.com\",\n      \"is-very-bad.org\",\n      \"is-very-evil.org\",\n      \"is-very-good.org\",\n      \"is-very-nice.org\",\n      \"is-very-sweet.org\",\n      \"is-with-theband.com\",\n      \"isa-geek.com\",\n      \"isa-geek.net\",\n      \"isa-geek.org\",\n      \"isa-hockeynut.com\",\n      \"issmarterthanyou.com\",\n      \"isteingeek.de\",\n      \"istmein.de\",\n      \"kicks-ass.net\",\n      \"kicks-ass.org\",\n      \"knowsitall.info\",\n      \"land-4-sale.us\",\n      \"lebtimnetz.de\",\n      \"leitungsen.de\",\n      \"likes-pie.com\",\n      \"likescandy.com\",\n      \"merseine.nu\",\n      \"mine.nu\",\n      \"misconfused.org\",\n      \"mypets.ws\",\n      \"myphotos.cc\",\n      \"neat-url.com\",\n      \"office-on-the.net\",\n      \"on-the-web.tv\",\n      \"podzone.net\",\n      \"podzone.org\",\n      \"readmyblog.org\",\n      \"saves-the-whales.com\",\n      \"scrapper-site.net\",\n      \"scrapping.cc\",\n      \"selfip.biz\",\n      \"selfip.com\",\n      \"selfip.info\",\n      \"selfip.net\",\n      \"selfip.org\",\n      \"sells-for-less.com\",\n      \"sells-for-u.com\",\n      \"sells-it.net\",\n      \"sellsyourhome.org\",\n      \"servebbs.com\",\n      \"servebbs.net\",\n      \"servebbs.org\",\n      \"serveftp.net\",\n      \"serveftp.org\",\n      \"servegame.org\",\n      \"shacknet.nu\",\n      \"simple-url.com\",\n      \"space-to-rent.com\",\n      \"stuff-4-sale.org\",\n      \"stuff-4-sale.us\",\n      \"teaches-yoga.com\",\n      \"thruhere.net\",\n      \"traeumtgerade.de\",\n      \"webhop.biz\",\n      \"webhop.info\",\n      \"webhop.net\",\n      \"webhop.org\",\n      \"worse-than.tv\",\n      \"writesthisblog.com\",\n      \"ddnss.de\",\n      \"dyn.ddnss.de\",\n      \"dyndns.ddnss.de\",\n      \"dyndns1.de\",\n      \"dyn-ip24.de\",\n      \"home-webserver.de\",\n      \"dyn.home-webserver.de\",\n      \"myhome-server.de\",\n      \"ddnss.org\",\n      \"definima.net\",\n      \"definima.io\",\n      \"ondigitalocean.app\",\n      \"*.digitaloceanspaces.com\",\n      \"bci.dnstrace.pro\",\n      \"ddnsfree.com\",\n      \"ddnsgeek.com\",\n      \"giize.com\",\n      \"gleeze.com\",\n      \"kozow.com\",\n      \"loseyourip.com\",\n      \"ooguy.com\",\n      \"theworkpc.com\",\n      \"casacam.net\",\n      \"dynu.net\",\n      \"accesscam.org\",\n      \"camdvr.org\",\n      \"freeddns.org\",\n      \"mywire.org\",\n      \"webredirect.org\",\n      \"myddns.rocks\",\n      \"blogsite.xyz\",\n      \"dynv6.net\",\n      \"e4.cz\",\n      \"eero.online\",\n      \"eero-stage.online\",\n      \"elementor.cloud\",\n      \"elementor.cool\",\n      \"en-root.fr\",\n      \"mytuleap.com\",\n      \"tuleap-partners.com\",\n      \"encr.app\",\n      \"encoreapi.com\",\n      \"onred.one\",\n      \"staging.onred.one\",\n      \"eu.encoway.cloud\",\n      \"eu.org\",\n      \"al.eu.org\",\n      \"asso.eu.org\",\n      \"at.eu.org\",\n      \"au.eu.org\",\n      \"be.eu.org\",\n      \"bg.eu.org\",\n      \"ca.eu.org\",\n      \"cd.eu.org\",\n      \"ch.eu.org\",\n      \"cn.eu.org\",\n      \"cy.eu.org\",\n      \"cz.eu.org\",\n      \"de.eu.org\",\n      \"dk.eu.org\",\n      \"edu.eu.org\",\n      \"ee.eu.org\",\n      \"es.eu.org\",\n      \"fi.eu.org\",\n      \"fr.eu.org\",\n      \"gr.eu.org\",\n      \"hr.eu.org\",\n      \"hu.eu.org\",\n      \"ie.eu.org\",\n      \"il.eu.org\",\n      \"in.eu.org\",\n      \"int.eu.org\",\n      \"is.eu.org\",\n      \"it.eu.org\",\n      \"jp.eu.org\",\n      \"kr.eu.org\",\n      \"lt.eu.org\",\n      \"lu.eu.org\",\n      \"lv.eu.org\",\n      \"mc.eu.org\",\n      \"me.eu.org\",\n      \"mk.eu.org\",\n      \"mt.eu.org\",\n      \"my.eu.org\",\n      \"net.eu.org\",\n      \"ng.eu.org\",\n      \"nl.eu.org\",\n      \"no.eu.org\",\n      \"nz.eu.org\",\n      \"paris.eu.org\",\n      \"pl.eu.org\",\n      \"pt.eu.org\",\n      \"q-a.eu.org\",\n      \"ro.eu.org\",\n      \"ru.eu.org\",\n      \"se.eu.org\",\n      \"si.eu.org\",\n      \"sk.eu.org\",\n      \"tr.eu.org\",\n      \"uk.eu.org\",\n      \"us.eu.org\",\n      \"eurodir.ru\",\n      \"eu-1.evennode.com\",\n      \"eu-2.evennode.com\",\n      \"eu-3.evennode.com\",\n      \"eu-4.evennode.com\",\n      \"us-1.evennode.com\",\n      \"us-2.evennode.com\",\n      \"us-3.evennode.com\",\n      \"us-4.evennode.com\",\n      \"twmail.cc\",\n      \"twmail.net\",\n      \"twmail.org\",\n      \"mymailer.com.tw\",\n      \"url.tw\",\n      \"onfabrica.com\",\n      \"apps.fbsbx.com\",\n      \"ru.net\",\n      \"adygeya.ru\",\n      \"bashkiria.ru\",\n      \"bir.ru\",\n      \"cbg.ru\",\n      \"com.ru\",\n      \"dagestan.ru\",\n      \"grozny.ru\",\n      \"kalmykia.ru\",\n      \"kustanai.ru\",\n      \"marine.ru\",\n      \"mordovia.ru\",\n      \"msk.ru\",\n      \"mytis.ru\",\n      \"nalchik.ru\",\n      \"nov.ru\",\n      \"pyatigorsk.ru\",\n      \"spb.ru\",\n      \"vladikavkaz.ru\",\n      \"vladimir.ru\",\n      \"abkhazia.su\",\n      \"adygeya.su\",\n      \"aktyubinsk.su\",\n      \"arkhangelsk.su\",\n      \"armenia.su\",\n      \"ashgabad.su\",\n      \"azerbaijan.su\",\n      \"balashov.su\",\n      \"bashkiria.su\",\n      \"bryansk.su\",\n      \"bukhara.su\",\n      \"chimkent.su\",\n      \"dagestan.su\",\n      \"east-kazakhstan.su\",\n      \"exnet.su\",\n      \"georgia.su\",\n      \"grozny.su\",\n      \"ivanovo.su\",\n      \"jambyl.su\",\n      \"kalmykia.su\",\n      \"kaluga.su\",\n      \"karacol.su\",\n      \"karaganda.su\",\n      \"karelia.su\",\n      \"khakassia.su\",\n      \"krasnodar.su\",\n      \"kurgan.su\",\n      \"kustanai.su\",\n      \"lenug.su\",\n      \"mangyshlak.su\",\n      \"mordovia.su\",\n      \"msk.su\",\n      \"murmansk.su\",\n      \"nalchik.su\",\n      \"navoi.su\",\n      \"north-kazakhstan.su\",\n      \"nov.su\",\n      \"obninsk.su\",\n      \"penza.su\",\n      \"pokrovsk.su\",\n      \"sochi.su\",\n      \"spb.su\",\n      \"tashkent.su\",\n      \"termez.su\",\n      \"togliatti.su\",\n      \"troitsk.su\",\n      \"tselinograd.su\",\n      \"tula.su\",\n      \"tuva.su\",\n      \"vladikavkaz.su\",\n      \"vladimir.su\",\n      \"vologda.su\",\n      \"channelsdvr.net\",\n      \"u.channelsdvr.net\",\n      \"edgecompute.app\",\n      \"fastly-terrarium.com\",\n      \"fastlylb.net\",\n      \"map.fastlylb.net\",\n      \"freetls.fastly.net\",\n      \"map.fastly.net\",\n      \"a.prod.fastly.net\",\n      \"global.prod.fastly.net\",\n      \"a.ssl.fastly.net\",\n      \"b.ssl.fastly.net\",\n      \"global.ssl.fastly.net\",\n      \"fastvps-server.com\",\n      \"fastvps.host\",\n      \"myfast.host\",\n      \"fastvps.site\",\n      \"myfast.space\",\n      \"fedorainfracloud.org\",\n      \"fedorapeople.org\",\n      \"cloud.fedoraproject.org\",\n      \"app.os.fedoraproject.org\",\n      \"app.os.stg.fedoraproject.org\",\n      \"conn.uk\",\n      \"copro.uk\",\n      \"hosp.uk\",\n      \"mydobiss.com\",\n      \"fh-muenster.io\",\n      \"filegear.me\",\n      \"filegear-au.me\",\n      \"filegear-de.me\",\n      \"filegear-gb.me\",\n      \"filegear-ie.me\",\n      \"filegear-jp.me\",\n      \"filegear-sg.me\",\n      \"firebaseapp.com\",\n      \"fireweb.app\",\n      \"flap.id\",\n      \"onflashdrive.app\",\n      \"fldrv.com\",\n      \"fly.dev\",\n      \"edgeapp.net\",\n      \"shw.io\",\n      \"flynnhosting.net\",\n      \"forgeblocks.com\",\n      \"id.forgerock.io\",\n      \"framer.app\",\n      \"framercanvas.com\",\n      \"*.frusky.de\",\n      \"ravpage.co.il\",\n      \"0e.vc\",\n      \"freebox-os.com\",\n      \"freeboxos.com\",\n      \"fbx-os.fr\",\n      \"fbxos.fr\",\n      \"freebox-os.fr\",\n      \"freeboxos.fr\",\n      \"freedesktop.org\",\n      \"freemyip.com\",\n      \"wien.funkfeuer.at\",\n      \"*.futurecms.at\",\n      \"*.ex.futurecms.at\",\n      \"*.in.futurecms.at\",\n      \"futurehosting.at\",\n      \"futuremailing.at\",\n      \"*.ex.ortsinfo.at\",\n      \"*.kunden.ortsinfo.at\",\n      \"*.statics.cloud\",\n      \"independent-commission.uk\",\n      \"independent-inquest.uk\",\n      \"independent-inquiry.uk\",\n      \"independent-panel.uk\",\n      \"independent-review.uk\",\n      \"public-inquiry.uk\",\n      \"royal-commission.uk\",\n      \"campaign.gov.uk\",\n      \"service.gov.uk\",\n      \"api.gov.uk\",\n      \"gehirn.ne.jp\",\n      \"usercontent.jp\",\n      \"gentapps.com\",\n      \"gentlentapis.com\",\n      \"lab.ms\",\n      \"cdn-edges.net\",\n      \"ghost.io\",\n      \"gsj.bz\",\n      \"githubusercontent.com\",\n      \"githubpreview.dev\",\n      \"github.io\",\n      \"gitlab.io\",\n      \"gitapp.si\",\n      \"gitpage.si\",\n      \"glitch.me\",\n      \"nog.community\",\n      \"co.ro\",\n      \"shop.ro\",\n      \"lolipop.io\",\n      \"angry.jp\",\n      \"babyblue.jp\",\n      \"babymilk.jp\",\n      \"backdrop.jp\",\n      \"bambina.jp\",\n      \"bitter.jp\",\n      \"blush.jp\",\n      \"boo.jp\",\n      \"boy.jp\",\n      \"boyfriend.jp\",\n      \"but.jp\",\n      \"candypop.jp\",\n      \"capoo.jp\",\n      \"catfood.jp\",\n      \"cheap.jp\",\n      \"chicappa.jp\",\n      \"chillout.jp\",\n      \"chips.jp\",\n      \"chowder.jp\",\n      \"chu.jp\",\n      \"ciao.jp\",\n      \"cocotte.jp\",\n      \"coolblog.jp\",\n      \"cranky.jp\",\n      \"cutegirl.jp\",\n      \"daa.jp\",\n      \"deca.jp\",\n      \"deci.jp\",\n      \"digick.jp\",\n      \"egoism.jp\",\n      \"fakefur.jp\",\n      \"fem.jp\",\n      \"flier.jp\",\n      \"floppy.jp\",\n      \"fool.jp\",\n      \"frenchkiss.jp\",\n      \"girlfriend.jp\",\n      \"girly.jp\",\n      \"gloomy.jp\",\n      \"gonna.jp\",\n      \"greater.jp\",\n      \"hacca.jp\",\n      \"heavy.jp\",\n      \"her.jp\",\n      \"hiho.jp\",\n      \"hippy.jp\",\n      \"holy.jp\",\n      \"hungry.jp\",\n      \"icurus.jp\",\n      \"itigo.jp\",\n      \"jellybean.jp\",\n      \"kikirara.jp\",\n      \"kill.jp\",\n      \"kilo.jp\",\n      \"kuron.jp\",\n      \"littlestar.jp\",\n      \"lolipopmc.jp\",\n      \"lolitapunk.jp\",\n      \"lomo.jp\",\n      \"lovepop.jp\",\n      \"lovesick.jp\",\n      \"main.jp\",\n      \"mods.jp\",\n      \"mond.jp\",\n      \"mongolian.jp\",\n      \"moo.jp\",\n      \"namaste.jp\",\n      \"nikita.jp\",\n      \"nobushi.jp\",\n      \"noor.jp\",\n      \"oops.jp\",\n      \"parallel.jp\",\n      \"parasite.jp\",\n      \"pecori.jp\",\n      \"peewee.jp\",\n      \"penne.jp\",\n      \"pepper.jp\",\n      \"perma.jp\",\n      \"pigboat.jp\",\n      \"pinoko.jp\",\n      \"punyu.jp\",\n      \"pupu.jp\",\n      \"pussycat.jp\",\n      \"pya.jp\",\n      \"raindrop.jp\",\n      \"readymade.jp\",\n      \"sadist.jp\",\n      \"schoolbus.jp\",\n      \"secret.jp\",\n      \"staba.jp\",\n      \"stripper.jp\",\n      \"sub.jp\",\n      \"sunnyday.jp\",\n      \"thick.jp\",\n      \"tonkotsu.jp\",\n      \"under.jp\",\n      \"upper.jp\",\n      \"velvet.jp\",\n      \"verse.jp\",\n      \"versus.jp\",\n      \"vivian.jp\",\n      \"watson.jp\",\n      \"weblike.jp\",\n      \"whitesnow.jp\",\n      \"zombie.jp\",\n      \"heteml.net\",\n      \"cloudapps.digital\",\n      \"london.cloudapps.digital\",\n      \"pymnt.uk\",\n      \"homeoffice.gov.uk\",\n      \"ro.im\",\n      \"goip.de\",\n      \"run.app\",\n      \"a.run.app\",\n      \"web.app\",\n      \"*.0emm.com\",\n      \"appspot.com\",\n      \"*.r.appspot.com\",\n      \"codespot.com\",\n      \"googleapis.com\",\n      \"googlecode.com\",\n      \"pagespeedmobilizer.com\",\n      \"publishproxy.com\",\n      \"withgoogle.com\",\n      \"withyoutube.com\",\n      \"*.gateway.dev\",\n      \"cloud.goog\",\n      \"translate.goog\",\n      \"*.usercontent.goog\",\n      \"cloudfunctions.net\",\n      \"blogspot.ae\",\n      \"blogspot.al\",\n      \"blogspot.am\",\n      \"blogspot.ba\",\n      \"blogspot.be\",\n      \"blogspot.bg\",\n      \"blogspot.bj\",\n      \"blogspot.ca\",\n      \"blogspot.cf\",\n      \"blogspot.ch\",\n      \"blogspot.cl\",\n      \"blogspot.co.at\",\n      \"blogspot.co.id\",\n      \"blogspot.co.il\",\n      \"blogspot.co.ke\",\n      \"blogspot.co.nz\",\n      \"blogspot.co.uk\",\n      \"blogspot.co.za\",\n      \"blogspot.com\",\n      \"blogspot.com.ar\",\n      \"blogspot.com.au\",\n      \"blogspot.com.br\",\n      \"blogspot.com.by\",\n      \"blogspot.com.co\",\n      \"blogspot.com.cy\",\n      \"blogspot.com.ee\",\n      \"blogspot.com.eg\",\n      \"blogspot.com.es\",\n      \"blogspot.com.mt\",\n      \"blogspot.com.ng\",\n      \"blogspot.com.tr\",\n      \"blogspot.com.uy\",\n      \"blogspot.cv\",\n      \"blogspot.cz\",\n      \"blogspot.de\",\n      \"blogspot.dk\",\n      \"blogspot.fi\",\n      \"blogspot.fr\",\n      \"blogspot.gr\",\n      \"blogspot.hk\",\n      \"blogspot.hr\",\n      \"blogspot.hu\",\n      \"blogspot.ie\",\n      \"blogspot.in\",\n      \"blogspot.is\",\n      \"blogspot.it\",\n      \"blogspot.jp\",\n      \"blogspot.kr\",\n      \"blogspot.li\",\n      \"blogspot.lt\",\n      \"blogspot.lu\",\n      \"blogspot.md\",\n      \"blogspot.mk\",\n      \"blogspot.mr\",\n      \"blogspot.mx\",\n      \"blogspot.my\",\n      \"blogspot.nl\",\n      \"blogspot.no\",\n      \"blogspot.pe\",\n      \"blogspot.pt\",\n      \"blogspot.qa\",\n      \"blogspot.re\",\n      \"blogspot.ro\",\n      \"blogspot.rs\",\n      \"blogspot.ru\",\n      \"blogspot.se\",\n      \"blogspot.sg\",\n      \"blogspot.si\",\n      \"blogspot.sk\",\n      \"blogspot.sn\",\n      \"blogspot.td\",\n      \"blogspot.tw\",\n      \"blogspot.ug\",\n      \"blogspot.vn\",\n      \"goupile.fr\",\n      \"gov.nl\",\n      \"awsmppl.com\",\n      \"g\\xFCnstigbestellen.de\",\n      \"g\\xFCnstigliefern.de\",\n      \"fin.ci\",\n      \"free.hr\",\n      \"caa.li\",\n      \"ua.rs\",\n      \"conf.se\",\n      \"hs.zone\",\n      \"hs.run\",\n      \"hashbang.sh\",\n      \"hasura.app\",\n      \"hasura-app.io\",\n      \"pages.it.hs-heilbronn.de\",\n      \"hepforge.org\",\n      \"herokuapp.com\",\n      \"herokussl.com\",\n      \"ravendb.cloud\",\n      \"myravendb.com\",\n      \"ravendb.community\",\n      \"ravendb.me\",\n      \"development.run\",\n      \"ravendb.run\",\n      \"homesklep.pl\",\n      \"secaas.hk\",\n      \"hoplix.shop\",\n      \"orx.biz\",\n      \"biz.gl\",\n      \"col.ng\",\n      \"firm.ng\",\n      \"gen.ng\",\n      \"ltd.ng\",\n      \"ngo.ng\",\n      \"edu.scot\",\n      \"sch.so\",\n      \"hostyhosting.io\",\n      \"h\\xE4kkinen.fi\",\n      \"*.moonscale.io\",\n      \"moonscale.net\",\n      \"iki.fi\",\n      \"ibxos.it\",\n      \"iliadboxos.it\",\n      \"impertrixcdn.com\",\n      \"impertrix.com\",\n      \"smushcdn.com\",\n      \"wphostedmail.com\",\n      \"wpmucdn.com\",\n      \"tempurl.host\",\n      \"wpmudev.host\",\n      \"dyn-berlin.de\",\n      \"in-berlin.de\",\n      \"in-brb.de\",\n      \"in-butter.de\",\n      \"in-dsl.de\",\n      \"in-dsl.net\",\n      \"in-dsl.org\",\n      \"in-vpn.de\",\n      \"in-vpn.net\",\n      \"in-vpn.org\",\n      \"biz.at\",\n      \"info.at\",\n      \"info.cx\",\n      \"ac.leg.br\",\n      \"al.leg.br\",\n      \"am.leg.br\",\n      \"ap.leg.br\",\n      \"ba.leg.br\",\n      \"ce.leg.br\",\n      \"df.leg.br\",\n      \"es.leg.br\",\n      \"go.leg.br\",\n      \"ma.leg.br\",\n      \"mg.leg.br\",\n      \"ms.leg.br\",\n      \"mt.leg.br\",\n      \"pa.leg.br\",\n      \"pb.leg.br\",\n      \"pe.leg.br\",\n      \"pi.leg.br\",\n      \"pr.leg.br\",\n      \"rj.leg.br\",\n      \"rn.leg.br\",\n      \"ro.leg.br\",\n      \"rr.leg.br\",\n      \"rs.leg.br\",\n      \"sc.leg.br\",\n      \"se.leg.br\",\n      \"sp.leg.br\",\n      \"to.leg.br\",\n      \"pixolino.com\",\n      \"na4u.ru\",\n      \"iopsys.se\",\n      \"ipifony.net\",\n      \"iservschule.de\",\n      \"mein-iserv.de\",\n      \"schulplattform.de\",\n      \"schulserver.de\",\n      \"test-iserv.de\",\n      \"iserv.dev\",\n      \"iobb.net\",\n      \"mel.cloudlets.com.au\",\n      \"cloud.interhostsolutions.be\",\n      \"users.scale.virtualcloud.com.br\",\n      \"mycloud.by\",\n      \"alp1.ae.flow.ch\",\n      \"appengine.flow.ch\",\n      \"es-1.axarnet.cloud\",\n      \"diadem.cloud\",\n      \"vip.jelastic.cloud\",\n      \"jele.cloud\",\n      \"it1.eur.aruba.jenv-aruba.cloud\",\n      \"it1.jenv-aruba.cloud\",\n      \"keliweb.cloud\",\n      \"cs.keliweb.cloud\",\n      \"oxa.cloud\",\n      \"tn.oxa.cloud\",\n      \"uk.oxa.cloud\",\n      \"primetel.cloud\",\n      \"uk.primetel.cloud\",\n      \"ca.reclaim.cloud\",\n      \"uk.reclaim.cloud\",\n      \"us.reclaim.cloud\",\n      \"ch.trendhosting.cloud\",\n      \"de.trendhosting.cloud\",\n      \"jele.club\",\n      \"amscompute.com\",\n      \"clicketcloud.com\",\n      \"dopaas.com\",\n      \"hidora.com\",\n      \"paas.hosted-by-previder.com\",\n      \"rag-cloud.hosteur.com\",\n      \"rag-cloud-ch.hosteur.com\",\n      \"jcloud.ik-server.com\",\n      \"jcloud-ver-jpc.ik-server.com\",\n      \"demo.jelastic.com\",\n      \"kilatiron.com\",\n      \"paas.massivegrid.com\",\n      \"jed.wafaicloud.com\",\n      \"lon.wafaicloud.com\",\n      \"ryd.wafaicloud.com\",\n      \"j.scaleforce.com.cy\",\n      \"jelastic.dogado.eu\",\n      \"fi.cloudplatform.fi\",\n      \"demo.datacenter.fi\",\n      \"paas.datacenter.fi\",\n      \"jele.host\",\n      \"mircloud.host\",\n      \"paas.beebyte.io\",\n      \"sekd1.beebyteapp.io\",\n      \"jele.io\",\n      \"cloud-fr1.unispace.io\",\n      \"jc.neen.it\",\n      \"cloud.jelastic.open.tim.it\",\n      \"jcloud.kz\",\n      \"upaas.kazteleport.kz\",\n      \"cloudjiffy.net\",\n      \"fra1-de.cloudjiffy.net\",\n      \"west1-us.cloudjiffy.net\",\n      \"jls-sto1.elastx.net\",\n      \"jls-sto2.elastx.net\",\n      \"jls-sto3.elastx.net\",\n      \"faststacks.net\",\n      \"fr-1.paas.massivegrid.net\",\n      \"lon-1.paas.massivegrid.net\",\n      \"lon-2.paas.massivegrid.net\",\n      \"ny-1.paas.massivegrid.net\",\n      \"ny-2.paas.massivegrid.net\",\n      \"sg-1.paas.massivegrid.net\",\n      \"jelastic.saveincloud.net\",\n      \"nordeste-idc.saveincloud.net\",\n      \"j.scaleforce.net\",\n      \"jelastic.tsukaeru.net\",\n      \"sdscloud.pl\",\n      \"unicloud.pl\",\n      \"mircloud.ru\",\n      \"jelastic.regruhosting.ru\",\n      \"enscaled.sg\",\n      \"jele.site\",\n      \"jelastic.team\",\n      \"orangecloud.tn\",\n      \"j.layershift.co.uk\",\n      \"phx.enscaled.us\",\n      \"mircloud.us\",\n      \"myjino.ru\",\n      \"*.hosting.myjino.ru\",\n      \"*.landing.myjino.ru\",\n      \"*.spectrum.myjino.ru\",\n      \"*.vps.myjino.ru\",\n      \"jotelulu.cloud\",\n      \"*.triton.zone\",\n      \"*.cns.joyent.com\",\n      \"js.org\",\n      \"kaas.gg\",\n      \"khplay.nl\",\n      \"ktistory.com\",\n      \"kapsi.fi\",\n      \"keymachine.de\",\n      \"kinghost.net\",\n      \"uni5.net\",\n      \"knightpoint.systems\",\n      \"koobin.events\",\n      \"oya.to\",\n      \"kuleuven.cloud\",\n      \"ezproxy.kuleuven.be\",\n      \"co.krd\",\n      \"edu.krd\",\n      \"krellian.net\",\n      \"webthings.io\",\n      \"git-repos.de\",\n      \"lcube-server.de\",\n      \"svn-repos.de\",\n      \"leadpages.co\",\n      \"lpages.co\",\n      \"lpusercontent.com\",\n      \"lelux.site\",\n      \"co.business\",\n      \"co.education\",\n      \"co.events\",\n      \"co.financial\",\n      \"co.network\",\n      \"co.place\",\n      \"co.technology\",\n      \"app.lmpm.com\",\n      \"linkyard.cloud\",\n      \"linkyard-cloud.ch\",\n      \"members.linode.com\",\n      \"*.nodebalancer.linode.com\",\n      \"*.linodeobjects.com\",\n      \"ip.linodeusercontent.com\",\n      \"we.bs\",\n      \"*.user.localcert.dev\",\n      \"localzone.xyz\",\n      \"loginline.app\",\n      \"loginline.dev\",\n      \"loginline.io\",\n      \"loginline.services\",\n      \"loginline.site\",\n      \"servers.run\",\n      \"lohmus.me\",\n      \"krasnik.pl\",\n      \"leczna.pl\",\n      \"lubartow.pl\",\n      \"lublin.pl\",\n      \"poniatowa.pl\",\n      \"swidnik.pl\",\n      \"glug.org.uk\",\n      \"lug.org.uk\",\n      \"lugs.org.uk\",\n      \"barsy.bg\",\n      \"barsy.co.uk\",\n      \"barsyonline.co.uk\",\n      \"barsycenter.com\",\n      \"barsyonline.com\",\n      \"barsy.club\",\n      \"barsy.de\",\n      \"barsy.eu\",\n      \"barsy.in\",\n      \"barsy.info\",\n      \"barsy.io\",\n      \"barsy.me\",\n      \"barsy.menu\",\n      \"barsy.mobi\",\n      \"barsy.net\",\n      \"barsy.online\",\n      \"barsy.org\",\n      \"barsy.pro\",\n      \"barsy.pub\",\n      \"barsy.ro\",\n      \"barsy.shop\",\n      \"barsy.site\",\n      \"barsy.support\",\n      \"barsy.uk\",\n      \"*.magentosite.cloud\",\n      \"mayfirst.info\",\n      \"mayfirst.org\",\n      \"hb.cldmail.ru\",\n      \"cn.vu\",\n      \"mazeplay.com\",\n      \"mcpe.me\",\n      \"mcdir.me\",\n      \"mcdir.ru\",\n      \"mcpre.ru\",\n      \"vps.mcdir.ru\",\n      \"mediatech.by\",\n      \"mediatech.dev\",\n      \"hra.health\",\n      \"miniserver.com\",\n      \"memset.net\",\n      \"messerli.app\",\n      \"*.cloud.metacentrum.cz\",\n      \"custom.metacentrum.cz\",\n      \"flt.cloud.muni.cz\",\n      \"usr.cloud.muni.cz\",\n      \"meteorapp.com\",\n      \"eu.meteorapp.com\",\n      \"co.pl\",\n      \"*.azurecontainer.io\",\n      \"azurewebsites.net\",\n      \"azure-mobile.net\",\n      \"cloudapp.net\",\n      \"azurestaticapps.net\",\n      \"1.azurestaticapps.net\",\n      \"centralus.azurestaticapps.net\",\n      \"eastasia.azurestaticapps.net\",\n      \"eastus2.azurestaticapps.net\",\n      \"westeurope.azurestaticapps.net\",\n      \"westus2.azurestaticapps.net\",\n      \"csx.cc\",\n      \"mintere.site\",\n      \"forte.id\",\n      \"mozilla-iot.org\",\n      \"bmoattachments.org\",\n      \"net.ru\",\n      \"org.ru\",\n      \"pp.ru\",\n      \"hostedpi.com\",\n      \"customer.mythic-beasts.com\",\n      \"caracal.mythic-beasts.com\",\n      \"fentiger.mythic-beasts.com\",\n      \"lynx.mythic-beasts.com\",\n      \"ocelot.mythic-beasts.com\",\n      \"oncilla.mythic-beasts.com\",\n      \"onza.mythic-beasts.com\",\n      \"sphinx.mythic-beasts.com\",\n      \"vs.mythic-beasts.com\",\n      \"x.mythic-beasts.com\",\n      \"yali.mythic-beasts.com\",\n      \"cust.retrosnub.co.uk\",\n      \"ui.nabu.casa\",\n      \"pony.club\",\n      \"of.fashion\",\n      \"in.london\",\n      \"of.london\",\n      \"from.marketing\",\n      \"with.marketing\",\n      \"for.men\",\n      \"repair.men\",\n      \"and.mom\",\n      \"for.mom\",\n      \"for.one\",\n      \"under.one\",\n      \"for.sale\",\n      \"that.win\",\n      \"from.work\",\n      \"to.work\",\n      \"cloud.nospamproxy.com\",\n      \"netlify.app\",\n      \"4u.com\",\n      \"ngrok.io\",\n      \"nh-serv.co.uk\",\n      \"nfshost.com\",\n      \"*.developer.app\",\n      \"noop.app\",\n      \"*.northflank.app\",\n      \"*.build.run\",\n      \"*.code.run\",\n      \"*.database.run\",\n      \"*.migration.run\",\n      \"noticeable.news\",\n      \"dnsking.ch\",\n      \"mypi.co\",\n      \"n4t.co\",\n      \"001www.com\",\n      \"ddnslive.com\",\n      \"myiphost.com\",\n      \"forumz.info\",\n      \"16-b.it\",\n      \"32-b.it\",\n      \"64-b.it\",\n      \"soundcast.me\",\n      \"tcp4.me\",\n      \"dnsup.net\",\n      \"hicam.net\",\n      \"now-dns.net\",\n      \"ownip.net\",\n      \"vpndns.net\",\n      \"dynserv.org\",\n      \"now-dns.org\",\n      \"x443.pw\",\n      \"now-dns.top\",\n      \"ntdll.top\",\n      \"freeddns.us\",\n      \"crafting.xyz\",\n      \"zapto.xyz\",\n      \"nsupdate.info\",\n      \"nerdpol.ovh\",\n      \"blogsyte.com\",\n      \"brasilia.me\",\n      \"cable-modem.org\",\n      \"ciscofreak.com\",\n      \"collegefan.org\",\n      \"couchpotatofries.org\",\n      \"damnserver.com\",\n      \"ddns.me\",\n      \"ditchyourip.com\",\n      \"dnsfor.me\",\n      \"dnsiskinky.com\",\n      \"dvrcam.info\",\n      \"dynns.com\",\n      \"eating-organic.net\",\n      \"fantasyleague.cc\",\n      \"geekgalaxy.com\",\n      \"golffan.us\",\n      \"health-carereform.com\",\n      \"homesecuritymac.com\",\n      \"homesecuritypc.com\",\n      \"hopto.me\",\n      \"ilovecollege.info\",\n      \"loginto.me\",\n      \"mlbfan.org\",\n      \"mmafan.biz\",\n      \"myactivedirectory.com\",\n      \"mydissent.net\",\n      \"myeffect.net\",\n      \"mymediapc.net\",\n      \"mypsx.net\",\n      \"mysecuritycamera.com\",\n      \"mysecuritycamera.net\",\n      \"mysecuritycamera.org\",\n      \"net-freaks.com\",\n      \"nflfan.org\",\n      \"nhlfan.net\",\n      \"no-ip.ca\",\n      \"no-ip.co.uk\",\n      \"no-ip.net\",\n      \"noip.us\",\n      \"onthewifi.com\",\n      \"pgafan.net\",\n      \"point2this.com\",\n      \"pointto.us\",\n      \"privatizehealthinsurance.net\",\n      \"quicksytes.com\",\n      \"read-books.org\",\n      \"securitytactics.com\",\n      \"serveexchange.com\",\n      \"servehumour.com\",\n      \"servep2p.com\",\n      \"servesarcasm.com\",\n      \"stufftoread.com\",\n      \"ufcfan.org\",\n      \"unusualperson.com\",\n      \"workisboring.com\",\n      \"3utilities.com\",\n      \"bounceme.net\",\n      \"ddns.net\",\n      \"ddnsking.com\",\n      \"gotdns.ch\",\n      \"hopto.org\",\n      \"myftp.biz\",\n      \"myftp.org\",\n      \"myvnc.com\",\n      \"no-ip.biz\",\n      \"no-ip.info\",\n      \"no-ip.org\",\n      \"noip.me\",\n      \"redirectme.net\",\n      \"servebeer.com\",\n      \"serveblog.net\",\n      \"servecounterstrike.com\",\n      \"serveftp.com\",\n      \"servegame.com\",\n      \"servehalflife.com\",\n      \"servehttp.com\",\n      \"serveirc.com\",\n      \"serveminecraft.net\",\n      \"servemp3.com\",\n      \"servepics.com\",\n      \"servequake.com\",\n      \"sytes.net\",\n      \"webhop.me\",\n      \"zapto.org\",\n      \"stage.nodeart.io\",\n      \"pcloud.host\",\n      \"nyc.mn\",\n      \"static.observableusercontent.com\",\n      \"cya.gg\",\n      \"omg.lol\",\n      \"cloudycluster.net\",\n      \"omniwe.site\",\n      \"service.one\",\n      \"nid.io\",\n      \"opensocial.site\",\n      \"opencraft.hosting\",\n      \"orsites.com\",\n      \"operaunite.com\",\n      \"tech.orange\",\n      \"authgear-staging.com\",\n      \"authgearapps.com\",\n      \"skygearapp.com\",\n      \"outsystemscloud.com\",\n      \"*.webpaas.ovh.net\",\n      \"*.hosting.ovh.net\",\n      \"ownprovider.com\",\n      \"own.pm\",\n      \"*.owo.codes\",\n      \"ox.rs\",\n      \"oy.lc\",\n      \"pgfog.com\",\n      \"pagefrontapp.com\",\n      \"pagexl.com\",\n      \"*.paywhirl.com\",\n      \"bar0.net\",\n      \"bar1.net\",\n      \"bar2.net\",\n      \"rdv.to\",\n      \"art.pl\",\n      \"gliwice.pl\",\n      \"krakow.pl\",\n      \"poznan.pl\",\n      \"wroc.pl\",\n      \"zakopane.pl\",\n      \"pantheonsite.io\",\n      \"gotpantheon.com\",\n      \"mypep.link\",\n      \"perspecta.cloud\",\n      \"lk3.ru\",\n      \"on-web.fr\",\n      \"bc.platform.sh\",\n      \"ent.platform.sh\",\n      \"eu.platform.sh\",\n      \"us.platform.sh\",\n      \"*.platformsh.site\",\n      \"*.tst.site\",\n      \"platter-app.com\",\n      \"platter-app.dev\",\n      \"platterp.us\",\n      \"pdns.page\",\n      \"plesk.page\",\n      \"pleskns.com\",\n      \"dyn53.io\",\n      \"onporter.run\",\n      \"co.bn\",\n      \"postman-echo.com\",\n      \"pstmn.io\",\n      \"mock.pstmn.io\",\n      \"httpbin.org\",\n      \"prequalifyme.today\",\n      \"xen.prgmr.com\",\n      \"priv.at\",\n      \"prvcy.page\",\n      \"*.dweb.link\",\n      \"protonet.io\",\n      \"chirurgiens-dentistes-en-france.fr\",\n      \"byen.site\",\n      \"pubtls.org\",\n      \"pythonanywhere.com\",\n      \"eu.pythonanywhere.com\",\n      \"qoto.io\",\n      \"qualifioapp.com\",\n      \"qbuser.com\",\n      \"cloudsite.builders\",\n      \"instances.spawn.cc\",\n      \"instantcloud.cn\",\n      \"ras.ru\",\n      \"qa2.com\",\n      \"qcx.io\",\n      \"*.sys.qcx.io\",\n      \"dev-myqnapcloud.com\",\n      \"alpha-myqnapcloud.com\",\n      \"myqnapcloud.com\",\n      \"*.quipelements.com\",\n      \"vapor.cloud\",\n      \"vaporcloud.io\",\n      \"rackmaze.com\",\n      \"rackmaze.net\",\n      \"g.vbrplsbx.io\",\n      \"*.on-k3s.io\",\n      \"*.on-rancher.cloud\",\n      \"*.on-rio.io\",\n      \"readthedocs.io\",\n      \"rhcloud.com\",\n      \"app.render.com\",\n      \"onrender.com\",\n      \"repl.co\",\n      \"id.repl.co\",\n      \"repl.run\",\n      \"resindevice.io\",\n      \"devices.resinstaging.io\",\n      \"hzc.io\",\n      \"wellbeingzone.eu\",\n      \"wellbeingzone.co.uk\",\n      \"adimo.co.uk\",\n      \"itcouldbewor.se\",\n      \"git-pages.rit.edu\",\n      \"rocky.page\",\n      \"\\u0431\\u0438\\u0437.\\u0440\\u0443\\u0441\",\n      \"\\u043A\\u043E\\u043C.\\u0440\\u0443\\u0441\",\n      \"\\u043A\\u0440\\u044B\\u043C.\\u0440\\u0443\\u0441\",\n      \"\\u043C\\u0438\\u0440.\\u0440\\u0443\\u0441\",\n      \"\\u043C\\u0441\\u043A.\\u0440\\u0443\\u0441\",\n      \"\\u043E\\u0440\\u0433.\\u0440\\u0443\\u0441\",\n      \"\\u0441\\u0430\\u043C\\u0430\\u0440\\u0430.\\u0440\\u0443\\u0441\",\n      \"\\u0441\\u043E\\u0447\\u0438.\\u0440\\u0443\\u0441\",\n      \"\\u0441\\u043F\\u0431.\\u0440\\u0443\\u0441\",\n      \"\\u044F.\\u0440\\u0443\\u0441\",\n      \"*.builder.code.com\",\n      \"*.dev-builder.code.com\",\n      \"*.stg-builder.code.com\",\n      \"sandcats.io\",\n      \"logoip.de\",\n      \"logoip.com\",\n      \"fr-par-1.baremetal.scw.cloud\",\n      \"fr-par-2.baremetal.scw.cloud\",\n      \"nl-ams-1.baremetal.scw.cloud\",\n      \"fnc.fr-par.scw.cloud\",\n      \"functions.fnc.fr-par.scw.cloud\",\n      \"k8s.fr-par.scw.cloud\",\n      \"nodes.k8s.fr-par.scw.cloud\",\n      \"s3.fr-par.scw.cloud\",\n      \"s3-website.fr-par.scw.cloud\",\n      \"whm.fr-par.scw.cloud\",\n      \"priv.instances.scw.cloud\",\n      \"pub.instances.scw.cloud\",\n      \"k8s.scw.cloud\",\n      \"k8s.nl-ams.scw.cloud\",\n      \"nodes.k8s.nl-ams.scw.cloud\",\n      \"s3.nl-ams.scw.cloud\",\n      \"s3-website.nl-ams.scw.cloud\",\n      \"whm.nl-ams.scw.cloud\",\n      \"k8s.pl-waw.scw.cloud\",\n      \"nodes.k8s.pl-waw.scw.cloud\",\n      \"s3.pl-waw.scw.cloud\",\n      \"s3-website.pl-waw.scw.cloud\",\n      \"scalebook.scw.cloud\",\n      \"smartlabeling.scw.cloud\",\n      \"dedibox.fr\",\n      \"schokokeks.net\",\n      \"gov.scot\",\n      \"service.gov.scot\",\n      \"scrysec.com\",\n      \"firewall-gateway.com\",\n      \"firewall-gateway.de\",\n      \"my-gateway.de\",\n      \"my-router.de\",\n      \"spdns.de\",\n      \"spdns.eu\",\n      \"firewall-gateway.net\",\n      \"my-firewall.org\",\n      \"myfirewall.org\",\n      \"spdns.org\",\n      \"seidat.net\",\n      \"sellfy.store\",\n      \"senseering.net\",\n      \"minisite.ms\",\n      \"magnet.page\",\n      \"biz.ua\",\n      \"co.ua\",\n      \"pp.ua\",\n      \"shiftcrypto.dev\",\n      \"shiftcrypto.io\",\n      \"shiftedit.io\",\n      \"myshopblocks.com\",\n      \"myshopify.com\",\n      \"shopitsite.com\",\n      \"shopware.store\",\n      \"mo-siemens.io\",\n      \"1kapp.com\",\n      \"appchizi.com\",\n      \"applinzi.com\",\n      \"sinaapp.com\",\n      \"vipsinaapp.com\",\n      \"siteleaf.net\",\n      \"bounty-full.com\",\n      \"alpha.bounty-full.com\",\n      \"beta.bounty-full.com\",\n      \"small-web.org\",\n      \"vp4.me\",\n      \"try-snowplow.com\",\n      \"srht.site\",\n      \"stackhero-network.com\",\n      \"musician.io\",\n      \"novecore.site\",\n      \"static.land\",\n      \"dev.static.land\",\n      \"sites.static.land\",\n      \"storebase.store\",\n      \"vps-host.net\",\n      \"atl.jelastic.vps-host.net\",\n      \"njs.jelastic.vps-host.net\",\n      \"ric.jelastic.vps-host.net\",\n      \"playstation-cloud.com\",\n      \"apps.lair.io\",\n      \"*.stolos.io\",\n      \"spacekit.io\",\n      \"customer.speedpartner.de\",\n      \"myspreadshop.at\",\n      \"myspreadshop.com.au\",\n      \"myspreadshop.be\",\n      \"myspreadshop.ca\",\n      \"myspreadshop.ch\",\n      \"myspreadshop.com\",\n      \"myspreadshop.de\",\n      \"myspreadshop.dk\",\n      \"myspreadshop.es\",\n      \"myspreadshop.fi\",\n      \"myspreadshop.fr\",\n      \"myspreadshop.ie\",\n      \"myspreadshop.it\",\n      \"myspreadshop.net\",\n      \"myspreadshop.nl\",\n      \"myspreadshop.no\",\n      \"myspreadshop.pl\",\n      \"myspreadshop.se\",\n      \"myspreadshop.co.uk\",\n      \"api.stdlib.com\",\n      \"storj.farm\",\n      \"utwente.io\",\n      \"soc.srcf.net\",\n      \"user.srcf.net\",\n      \"temp-dns.com\",\n      \"supabase.co\",\n      \"supabase.in\",\n      \"supabase.net\",\n      \"su.paba.se\",\n      \"*.s5y.io\",\n      \"*.sensiosite.cloud\",\n      \"syncloud.it\",\n      \"dscloud.biz\",\n      \"direct.quickconnect.cn\",\n      \"dsmynas.com\",\n      \"familyds.com\",\n      \"diskstation.me\",\n      \"dscloud.me\",\n      \"i234.me\",\n      \"myds.me\",\n      \"synology.me\",\n      \"dscloud.mobi\",\n      \"dsmynas.net\",\n      \"familyds.net\",\n      \"dsmynas.org\",\n      \"familyds.org\",\n      \"vpnplus.to\",\n      \"direct.quickconnect.to\",\n      \"tabitorder.co.il\",\n      \"taifun-dns.de\",\n      \"beta.tailscale.net\",\n      \"ts.net\",\n      \"gda.pl\",\n      \"gdansk.pl\",\n      \"gdynia.pl\",\n      \"med.pl\",\n      \"sopot.pl\",\n      \"site.tb-hosting.com\",\n      \"edugit.io\",\n      \"s3.teckids.org\",\n      \"telebit.app\",\n      \"telebit.io\",\n      \"*.telebit.xyz\",\n      \"gwiddle.co.uk\",\n      \"*.firenet.ch\",\n      \"*.svc.firenet.ch\",\n      \"reservd.com\",\n      \"thingdustdata.com\",\n      \"cust.dev.thingdust.io\",\n      \"cust.disrec.thingdust.io\",\n      \"cust.prod.thingdust.io\",\n      \"cust.testing.thingdust.io\",\n      \"reservd.dev.thingdust.io\",\n      \"reservd.disrec.thingdust.io\",\n      \"reservd.testing.thingdust.io\",\n      \"tickets.io\",\n      \"arvo.network\",\n      \"azimuth.network\",\n      \"tlon.network\",\n      \"torproject.net\",\n      \"pages.torproject.net\",\n      \"bloxcms.com\",\n      \"townnews-staging.com\",\n      \"tbits.me\",\n      \"12hp.at\",\n      \"2ix.at\",\n      \"4lima.at\",\n      \"lima-city.at\",\n      \"12hp.ch\",\n      \"2ix.ch\",\n      \"4lima.ch\",\n      \"lima-city.ch\",\n      \"trafficplex.cloud\",\n      \"de.cool\",\n      \"12hp.de\",\n      \"2ix.de\",\n      \"4lima.de\",\n      \"lima-city.de\",\n      \"1337.pictures\",\n      \"clan.rip\",\n      \"lima-city.rocks\",\n      \"webspace.rocks\",\n      \"lima.zone\",\n      \"*.transurl.be\",\n      \"*.transurl.eu\",\n      \"*.transurl.nl\",\n      \"site.transip.me\",\n      \"tuxfamily.org\",\n      \"dd-dns.de\",\n      \"diskstation.eu\",\n      \"diskstation.org\",\n      \"dray-dns.de\",\n      \"draydns.de\",\n      \"dyn-vpn.de\",\n      \"dynvpn.de\",\n      \"mein-vigor.de\",\n      \"my-vigor.de\",\n      \"my-wan.de\",\n      \"syno-ds.de\",\n      \"synology-diskstation.de\",\n      \"synology-ds.de\",\n      \"typedream.app\",\n      \"pro.typeform.com\",\n      \"uber.space\",\n      \"*.uberspace.de\",\n      \"hk.com\",\n      \"hk.org\",\n      \"ltd.hk\",\n      \"inc.hk\",\n      \"name.pm\",\n      \"sch.tf\",\n      \"biz.wf\",\n      \"sch.wf\",\n      \"org.yt\",\n      \"virtualuser.de\",\n      \"virtual-user.de\",\n      \"upli.io\",\n      \"urown.cloud\",\n      \"dnsupdate.info\",\n      \"lib.de.us\",\n      \"2038.io\",\n      \"vercel.app\",\n      \"vercel.dev\",\n      \"now.sh\",\n      \"router.management\",\n      \"v-info.info\",\n      \"voorloper.cloud\",\n      \"neko.am\",\n      \"nyaa.am\",\n      \"be.ax\",\n      \"cat.ax\",\n      \"es.ax\",\n      \"eu.ax\",\n      \"gg.ax\",\n      \"mc.ax\",\n      \"us.ax\",\n      \"xy.ax\",\n      \"nl.ci\",\n      \"xx.gl\",\n      \"app.gp\",\n      \"blog.gt\",\n      \"de.gt\",\n      \"to.gt\",\n      \"be.gy\",\n      \"cc.hn\",\n      \"blog.kg\",\n      \"io.kg\",\n      \"jp.kg\",\n      \"tv.kg\",\n      \"uk.kg\",\n      \"us.kg\",\n      \"de.ls\",\n      \"at.md\",\n      \"de.md\",\n      \"jp.md\",\n      \"to.md\",\n      \"indie.porn\",\n      \"vxl.sh\",\n      \"ch.tc\",\n      \"me.tc\",\n      \"we.tc\",\n      \"nyan.to\",\n      \"at.vg\",\n      \"blog.vu\",\n      \"dev.vu\",\n      \"me.vu\",\n      \"v.ua\",\n      \"*.vultrobjects.com\",\n      \"wafflecell.com\",\n      \"*.webhare.dev\",\n      \"reserve-online.net\",\n      \"reserve-online.com\",\n      \"bookonline.app\",\n      \"hotelwithflight.com\",\n      \"wedeploy.io\",\n      \"wedeploy.me\",\n      \"wedeploy.sh\",\n      \"remotewd.com\",\n      \"pages.wiardweb.com\",\n      \"wmflabs.org\",\n      \"toolforge.org\",\n      \"wmcloud.org\",\n      \"panel.gg\",\n      \"daemon.panel.gg\",\n      \"messwithdns.com\",\n      \"woltlab-demo.com\",\n      \"myforum.community\",\n      \"community-pro.de\",\n      \"diskussionsbereich.de\",\n      \"community-pro.net\",\n      \"meinforum.net\",\n      \"affinitylottery.org.uk\",\n      \"raffleentry.org.uk\",\n      \"weeklylottery.org.uk\",\n      \"wpenginepowered.com\",\n      \"js.wpenginepowered.com\",\n      \"wixsite.com\",\n      \"editorx.io\",\n      \"half.host\",\n      \"xnbay.com\",\n      \"u2.xnbay.com\",\n      \"u2-local.xnbay.com\",\n      \"cistron.nl\",\n      \"demon.nl\",\n      \"xs4all.space\",\n      \"yandexcloud.net\",\n      \"storage.yandexcloud.net\",\n      \"website.yandexcloud.net\",\n      \"official.academy\",\n      \"yolasite.com\",\n      \"ybo.faith\",\n      \"yombo.me\",\n      \"homelink.one\",\n      \"ybo.party\",\n      \"ybo.review\",\n      \"ybo.science\",\n      \"ybo.trade\",\n      \"ynh.fr\",\n      \"nohost.me\",\n      \"noho.st\",\n      \"za.net\",\n      \"za.org\",\n      \"bss.design\",\n      \"basicserver.io\",\n      \"virtualserver.io\",\n      \"enterprisecloud.nu\"\n    ];\n  }\n});\n\n// node_modules/psl/index.js\nvar require_psl = __commonJS({\n  \"node_modules/psl/index.js\"(exports) {\n    \"use strict\";\n    var Punycode = require_punycode();\n    var internals = {};\n    internals.rules = require_rules().map(function(rule) {\n      return {\n        rule,\n        suffix: rule.replace(/^(\\*\\.|\\!)/, \"\"),\n        punySuffix: -1,\n        wildcard: rule.charAt(0) === \"*\",\n        exception: rule.charAt(0) === \"!\"\n      };\n    });\n    internals.endsWith = function(str, suffix) {\n      return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    };\n    internals.findRule = function(domain) {\n      var punyDomain = Punycode.toASCII(domain);\n      return internals.rules.reduce(function(memo, rule) {\n        if (rule.punySuffix === -1) {\n          rule.punySuffix = Punycode.toASCII(rule.suffix);\n        }\n        if (!internals.endsWith(punyDomain, \".\" + rule.punySuffix) && punyDomain !== rule.punySuffix) {\n          return memo;\n        }\n        return rule;\n      }, null);\n    };\n    exports.errorCodes = {\n      DOMAIN_TOO_SHORT: \"Domain name too short.\",\n      DOMAIN_TOO_LONG: \"Domain name too long. It should be no more than 255 chars.\",\n      LABEL_STARTS_WITH_DASH: \"Domain name label can not start with a dash.\",\n      LABEL_ENDS_WITH_DASH: \"Domain name label can not end with a dash.\",\n      LABEL_TOO_LONG: \"Domain name label should be at most 63 chars long.\",\n      LABEL_TOO_SHORT: \"Domain name label should be at least 1 character long.\",\n      LABEL_INVALID_CHARS: \"Domain name label can only contain alphanumeric characters or dashes.\"\n    };\n    internals.validate = function(input) {\n      var ascii = Punycode.toASCII(input);\n      if (ascii.length < 1) {\n        return \"DOMAIN_TOO_SHORT\";\n      }\n      if (ascii.length > 255) {\n        return \"DOMAIN_TOO_LONG\";\n      }\n      var labels = ascii.split(\".\");\n      var label;\n      for (var i = 0; i < labels.length; ++i) {\n        label = labels[i];\n        if (!label.length) {\n          return \"LABEL_TOO_SHORT\";\n        }\n        if (label.length > 63) {\n          return \"LABEL_TOO_LONG\";\n        }\n        if (label.charAt(0) === \"-\") {\n          return \"LABEL_STARTS_WITH_DASH\";\n        }\n        if (label.charAt(label.length - 1) === \"-\") {\n          return \"LABEL_ENDS_WITH_DASH\";\n        }\n        if (!/^[a-z0-9\\-]+$/.test(label)) {\n          return \"LABEL_INVALID_CHARS\";\n        }\n      }\n    };\n    exports.parse = function(input) {\n      if (typeof input !== \"string\") {\n        throw new TypeError(\"Domain name must be a string.\");\n      }\n      var domain = input.slice(0).toLowerCase();\n      if (domain.charAt(domain.length - 1) === \".\") {\n        domain = domain.slice(0, domain.length - 1);\n      }\n      var error = internals.validate(domain);\n      if (error) {\n        return {\n          input,\n          error: {\n            message: exports.errorCodes[error],\n            code: error\n          }\n        };\n      }\n      var parsed = {\n        input,\n        tld: null,\n        sld: null,\n        domain: null,\n        subdomain: null,\n        listed: false\n      };\n      var domainParts = domain.split(\".\");\n      if (domainParts[domainParts.length - 1] === \"local\") {\n        return parsed;\n      }\n      var handlePunycode = function() {\n        if (!/xn--/.test(domain)) {\n          return parsed;\n        }\n        if (parsed.domain) {\n          parsed.domain = Punycode.toASCII(parsed.domain);\n        }\n        if (parsed.subdomain) {\n          parsed.subdomain = Punycode.toASCII(parsed.subdomain);\n        }\n        return parsed;\n      };\n      var rule = internals.findRule(domain);\n      if (!rule) {\n        if (domainParts.length < 2) {\n          return parsed;\n        }\n        parsed.tld = domainParts.pop();\n        parsed.sld = domainParts.pop();\n        parsed.domain = [parsed.sld, parsed.tld].join(\".\");\n        if (domainParts.length) {\n          parsed.subdomain = domainParts.pop();\n        }\n        return handlePunycode();\n      }\n      parsed.listed = true;\n      var tldParts = rule.suffix.split(\".\");\n      var privateParts = domainParts.slice(0, domainParts.length - tldParts.length);\n      if (rule.exception) {\n        privateParts.push(tldParts.shift());\n      }\n      parsed.tld = tldParts.join(\".\");\n      if (!privateParts.length) {\n        return handlePunycode();\n      }\n      if (rule.wildcard) {\n        tldParts.unshift(privateParts.pop());\n        parsed.tld = tldParts.join(\".\");\n      }\n      if (!privateParts.length) {\n        return handlePunycode();\n      }\n      parsed.sld = privateParts.pop();\n      parsed.domain = [parsed.sld, parsed.tld].join(\".\");\n      if (privateParts.length) {\n        parsed.subdomain = privateParts.join(\".\");\n      }\n      return handlePunycode();\n    };\n    exports.get = function(domain) {\n      if (!domain) {\n        return null;\n      }\n      return exports.parse(domain).domain || null;\n    };\n    exports.isValid = function(domain) {\n      var parsed = exports.parse(domain);\n      return Boolean(parsed.domain && parsed.listed);\n    };\n  }\n});\n\n// node_modules/tough-cookie/lib/pubsuffix-psl.js\nvar require_pubsuffix_psl = __commonJS({\n  \"node_modules/tough-cookie/lib/pubsuffix-psl.js\"(exports) {\n    \"use strict\";\n    var psl = require_psl();\n    var SPECIAL_USE_DOMAINS = [\n      \"local\",\n      \"example\",\n      \"invalid\",\n      \"localhost\",\n      \"test\"\n    ];\n    var SPECIAL_TREATMENT_DOMAINS = [\"localhost\", \"invalid\"];\n    function getPublicSuffix(domain, options = {}) {\n      const domainParts = domain.split(\".\");\n      const topLevelDomain = domainParts[domainParts.length - 1];\n      const allowSpecialUseDomain = !!options.allowSpecialUseDomain;\n      const ignoreError = !!options.ignoreError;\n      if (allowSpecialUseDomain && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n        if (domainParts.length > 1) {\n          const secondLevelDomain = domainParts[domainParts.length - 2];\n          return `${secondLevelDomain}.${topLevelDomain}`;\n        } else if (SPECIAL_TREATMENT_DOMAINS.includes(topLevelDomain)) {\n          return `${topLevelDomain}`;\n        }\n      }\n      if (!ignoreError && SPECIAL_USE_DOMAINS.includes(topLevelDomain)) {\n        throw new Error(\n          `Cookie has domain set to the public suffix \"${topLevelDomain}\" which is a special use domain. To allow this, configure your CookieJar with {allowSpecialUseDomain:true, rejectPublicSuffixes: false}.`\n        );\n      }\n      return psl.get(domain);\n    }\n    exports.getPublicSuffix = getPublicSuffix;\n  }\n});\n\n// node_modules/tough-cookie/lib/store.js\nvar require_store = __commonJS({\n  \"node_modules/tough-cookie/lib/store.js\"(exports) {\n    \"use strict\";\n    var Store = class {\n      constructor() {\n        this.synchronous = false;\n      }\n      findCookie(domain, path, key, cb) {\n        throw new Error(\"findCookie is not implemented\");\n      }\n      findCookies(domain, path, allowSpecialUseDomain, cb) {\n        throw new Error(\"findCookies is not implemented\");\n      }\n      putCookie(cookie, cb) {\n        throw new Error(\"putCookie is not implemented\");\n      }\n      updateCookie(oldCookie, newCookie, cb) {\n        throw new Error(\"updateCookie is not implemented\");\n      }\n      removeCookie(domain, path, key, cb) {\n        throw new Error(\"removeCookie is not implemented\");\n      }\n      removeCookies(domain, path, cb) {\n        throw new Error(\"removeCookies is not implemented\");\n      }\n      removeAllCookies(cb) {\n        throw new Error(\"removeAllCookies is not implemented\");\n      }\n      getAllCookies(cb) {\n        throw new Error(\n          \"getAllCookies is not implemented (therefore jar cannot be serialized)\"\n        );\n      }\n    };\n    exports.Store = Store;\n  }\n});\n\n// node_modules/universalify/index.js\nvar require_universalify = __commonJS({\n  \"node_modules/universalify/index.js\"(exports) {\n    \"use strict\";\n    exports.fromCallback = function(fn) {\n      return Object.defineProperty(function() {\n        if (typeof arguments[arguments.length - 1] === \"function\") fn.apply(this, arguments);\n        else {\n          return new Promise((resolve, reject) => {\n            arguments[arguments.length] = (err, res) => {\n              if (err) return reject(err);\n              resolve(res);\n            };\n            arguments.length++;\n            fn.apply(this, arguments);\n          });\n        }\n      }, \"name\", { value: fn.name });\n    };\n    exports.fromPromise = function(fn) {\n      return Object.defineProperty(function() {\n        const cb = arguments[arguments.length - 1];\n        if (typeof cb !== \"function\") return fn.apply(this, arguments);\n        else {\n          delete arguments[arguments.length - 1];\n          arguments.length--;\n          fn.apply(this, arguments).then((r) => cb(null, r), cb);\n        }\n      }, \"name\", { value: fn.name });\n    };\n  }\n});\n\n// node_modules/tough-cookie/lib/permuteDomain.js\nvar require_permuteDomain = __commonJS({\n  \"node_modules/tough-cookie/lib/permuteDomain.js\"(exports) {\n    \"use strict\";\n    var pubsuffix = require_pubsuffix_psl();\n    function permuteDomain(domain, allowSpecialUseDomain) {\n      const pubSuf = pubsuffix.getPublicSuffix(domain, {\n        allowSpecialUseDomain\n      });\n      if (!pubSuf) {\n        return null;\n      }\n      if (pubSuf == domain) {\n        return [domain];\n      }\n      if (domain.slice(-1) == \".\") {\n        domain = domain.slice(0, -1);\n      }\n      const prefix = domain.slice(0, -(pubSuf.length + 1));\n      const parts = prefix.split(\".\").reverse();\n      let cur = pubSuf;\n      const permutations = [cur];\n      while (parts.length) {\n        cur = `${parts.shift()}.${cur}`;\n        permutations.push(cur);\n      }\n      return permutations;\n    }\n    exports.permuteDomain = permuteDomain;\n  }\n});\n\n// node_modules/tough-cookie/lib/pathMatch.js\nvar require_pathMatch = __commonJS({\n  \"node_modules/tough-cookie/lib/pathMatch.js\"(exports) {\n    \"use strict\";\n    function pathMatch(reqPath, cookiePath) {\n      if (cookiePath === reqPath) {\n        return true;\n      }\n      const idx = reqPath.indexOf(cookiePath);\n      if (idx === 0) {\n        if (cookiePath.substr(-1) === \"/\") {\n          return true;\n        }\n        if (reqPath.substr(cookiePath.length, 1) === \"/\") {\n          return true;\n        }\n      }\n      return false;\n    }\n    exports.pathMatch = pathMatch;\n  }\n});\n\n// node_modules/tough-cookie/lib/utilHelper.js\nvar require_utilHelper = __commonJS({\n  \"node_modules/tough-cookie/lib/utilHelper.js\"(exports) {\n    function requireUtil() {\n      try {\n        return __require(\"util\");\n      } catch (e) {\n        return null;\n      }\n    }\n    function lookupCustomInspectSymbol() {\n      return Symbol.for(\"nodejs.util.inspect.custom\");\n    }\n    function tryReadingCustomSymbolFromUtilInspect(options) {\n      const _requireUtil = options.requireUtil || requireUtil;\n      const util = _requireUtil();\n      return util ? util.inspect.custom : null;\n    }\n    exports.getUtilInspect = function getUtilInspect(fallback, options = {}) {\n      const _requireUtil = options.requireUtil || requireUtil;\n      const util = _requireUtil();\n      return function inspect(value, showHidden, depth) {\n        return util ? util.inspect(value, showHidden, depth) : fallback(value);\n      };\n    };\n    exports.getCustomInspectSymbol = function getCustomInspectSymbol(options = {}) {\n      const _lookupCustomInspectSymbol = options.lookupCustomInspectSymbol || lookupCustomInspectSymbol;\n      return _lookupCustomInspectSymbol() || tryReadingCustomSymbolFromUtilInspect(options);\n    };\n  }\n});\n\n// node_modules/tough-cookie/lib/memstore.js\nvar require_memstore = __commonJS({\n  \"node_modules/tough-cookie/lib/memstore.js\"(exports) {\n    \"use strict\";\n    var { fromCallback } = require_universalify();\n    var Store = require_store().Store;\n    var permuteDomain = require_permuteDomain().permuteDomain;\n    var pathMatch = require_pathMatch().pathMatch;\n    var { getCustomInspectSymbol, getUtilInspect } = require_utilHelper();\n    var MemoryCookieStore = class extends Store {\n      constructor() {\n        super();\n        this.synchronous = true;\n        this.idx = /* @__PURE__ */ Object.create(null);\n        const customInspectSymbol = getCustomInspectSymbol();\n        if (customInspectSymbol) {\n          this[customInspectSymbol] = this.inspect;\n        }\n      }\n      inspect() {\n        const util = { inspect: getUtilInspect(inspectFallback) };\n        return `{ idx: ${util.inspect(this.idx, false, 2)} }`;\n      }\n      findCookie(domain, path, key, cb) {\n        if (!this.idx[domain]) {\n          return cb(null, void 0);\n        }\n        if (!this.idx[domain][path]) {\n          return cb(null, void 0);\n        }\n        return cb(null, this.idx[domain][path][key] || null);\n      }\n      findCookies(domain, path, allowSpecialUseDomain, cb) {\n        const results = [];\n        if (typeof allowSpecialUseDomain === \"function\") {\n          cb = allowSpecialUseDomain;\n          allowSpecialUseDomain = true;\n        }\n        if (!domain) {\n          return cb(null, []);\n        }\n        let pathMatcher;\n        if (!path) {\n          pathMatcher = function matchAll(domainIndex) {\n            for (const curPath in domainIndex) {\n              const pathIndex = domainIndex[curPath];\n              for (const key in pathIndex) {\n                results.push(pathIndex[key]);\n              }\n            }\n          };\n        } else {\n          pathMatcher = function matchRFC(domainIndex) {\n            Object.keys(domainIndex).forEach((cookiePath) => {\n              if (pathMatch(path, cookiePath)) {\n                const pathIndex = domainIndex[cookiePath];\n                for (const key in pathIndex) {\n                  results.push(pathIndex[key]);\n                }\n              }\n            });\n          };\n        }\n        const domains = permuteDomain(domain, allowSpecialUseDomain) || [domain];\n        const idx = this.idx;\n        domains.forEach((curDomain) => {\n          const domainIndex = idx[curDomain];\n          if (!domainIndex) {\n            return;\n          }\n          pathMatcher(domainIndex);\n        });\n        cb(null, results);\n      }\n      putCookie(cookie, cb) {\n        if (!this.idx[cookie.domain]) {\n          this.idx[cookie.domain] = /* @__PURE__ */ Object.create(null);\n        }\n        if (!this.idx[cookie.domain][cookie.path]) {\n          this.idx[cookie.domain][cookie.path] = /* @__PURE__ */ Object.create(null);\n        }\n        this.idx[cookie.domain][cookie.path][cookie.key] = cookie;\n        cb(null);\n      }\n      updateCookie(oldCookie, newCookie, cb) {\n        this.putCookie(newCookie, cb);\n      }\n      removeCookie(domain, path, key, cb) {\n        if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {\n          delete this.idx[domain][path][key];\n        }\n        cb(null);\n      }\n      removeCookies(domain, path, cb) {\n        if (this.idx[domain]) {\n          if (path) {\n            delete this.idx[domain][path];\n          } else {\n            delete this.idx[domain];\n          }\n        }\n        return cb(null);\n      }\n      removeAllCookies(cb) {\n        this.idx = /* @__PURE__ */ Object.create(null);\n        return cb(null);\n      }\n      getAllCookies(cb) {\n        const cookies = [];\n        const idx = this.idx;\n        const domains = Object.keys(idx);\n        domains.forEach((domain) => {\n          const paths = Object.keys(idx[domain]);\n          paths.forEach((path) => {\n            const keys = Object.keys(idx[domain][path]);\n            keys.forEach((key) => {\n              if (key !== null) {\n                cookies.push(idx[domain][path][key]);\n              }\n            });\n          });\n        });\n        cookies.sort((a, b) => {\n          return (a.creationIndex || 0) - (b.creationIndex || 0);\n        });\n        cb(null, cookies);\n      }\n    };\n    [\n      \"findCookie\",\n      \"findCookies\",\n      \"putCookie\",\n      \"updateCookie\",\n      \"removeCookie\",\n      \"removeCookies\",\n      \"removeAllCookies\",\n      \"getAllCookies\"\n    ].forEach((name) => {\n      MemoryCookieStore.prototype[name] = fromCallback(\n        MemoryCookieStore.prototype[name]\n      );\n    });\n    exports.MemoryCookieStore = MemoryCookieStore;\n    function inspectFallback(val) {\n      const domains = Object.keys(val);\n      if (domains.length === 0) {\n        return \"[Object: null prototype] {}\";\n      }\n      let result = \"[Object: null prototype] {\\n\";\n      Object.keys(val).forEach((domain, i) => {\n        result += formatDomain(domain, val[domain]);\n        if (i < domains.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      });\n      result += \"}\";\n      return result;\n    }\n    function formatDomain(domainName, domainValue) {\n      const indent = \"  \";\n      let result = `${indent}'${domainName}': [Object: null prototype] {\n`;\n      Object.keys(domainValue).forEach((path, i, paths) => {\n        result += formatPath(path, domainValue[path]);\n        if (i < paths.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      });\n      result += `${indent}}`;\n      return result;\n    }\n    function formatPath(pathName, pathValue) {\n      const indent = \"    \";\n      let result = `${indent}'${pathName}': [Object: null prototype] {\n`;\n      Object.keys(pathValue).forEach((cookieName, i, cookieNames) => {\n        const cookie = pathValue[cookieName];\n        result += `      ${cookieName}: ${cookie.inspect()}`;\n        if (i < cookieNames.length - 1) {\n          result += \",\";\n        }\n        result += \"\\n\";\n      });\n      result += `${indent}}`;\n      return result;\n    }\n    exports.inspectFallback = inspectFallback;\n  }\n});\n\n// node_modules/tough-cookie/lib/validators.js\nvar require_validators = __commonJS({\n  \"node_modules/tough-cookie/lib/validators.js\"(exports) {\n    \"use strict\";\n    var toString = Object.prototype.toString;\n    function isFunction(data) {\n      return typeof data === \"function\";\n    }\n    function isNonEmptyString(data) {\n      return isString(data) && data !== \"\";\n    }\n    function isDate(data) {\n      return isInstanceStrict(data, Date) && isInteger(data.getTime());\n    }\n    function isEmptyString(data) {\n      return data === \"\" || data instanceof String && data.toString() === \"\";\n    }\n    function isString(data) {\n      return typeof data === \"string\" || data instanceof String;\n    }\n    function isObject(data) {\n      return toString.call(data) === \"[object Object]\";\n    }\n    function isInstanceStrict(data, prototype) {\n      try {\n        return data instanceof prototype;\n      } catch (error) {\n        return false;\n      }\n    }\n    function isUrlStringOrObject(data) {\n      return isNonEmptyString(data) || isObject(data) && \"hostname\" in data && \"pathname\" in data && \"protocol\" in data || isInstanceStrict(data, URL);\n    }\n    function isInteger(data) {\n      return typeof data === \"number\" && data % 1 === 0;\n    }\n    function validate(bool, cb, options) {\n      if (!isFunction(cb)) {\n        options = cb;\n        cb = null;\n      }\n      if (!isObject(options)) options = { Error: \"Failed Check\" };\n      if (!bool) {\n        if (cb) {\n          cb(new ParameterError(options));\n        } else {\n          throw new ParameterError(options);\n        }\n      }\n    }\n    var ParameterError = class extends Error {\n      constructor(...params) {\n        super(...params);\n      }\n    };\n    exports.ParameterError = ParameterError;\n    exports.isFunction = isFunction;\n    exports.isNonEmptyString = isNonEmptyString;\n    exports.isDate = isDate;\n    exports.isEmptyString = isEmptyString;\n    exports.isString = isString;\n    exports.isObject = isObject;\n    exports.isUrlStringOrObject = isUrlStringOrObject;\n    exports.validate = validate;\n  }\n});\n\n// node_modules/tough-cookie/lib/version.js\nvar require_version = __commonJS({\n  \"node_modules/tough-cookie/lib/version.js\"(exports, module) {\n    module.exports = \"4.1.4\";\n  }\n});\n\n// node_modules/tough-cookie/lib/cookie.js\nvar require_cookie = __commonJS({\n  \"node_modules/tough-cookie/lib/cookie.js\"(exports) {\n    \"use strict\";\n    var punycode = require_punycode();\n    var urlParse = require_url_parse();\n    var pubsuffix = require_pubsuffix_psl();\n    var Store = require_store().Store;\n    var MemoryCookieStore = require_memstore().MemoryCookieStore;\n    var pathMatch = require_pathMatch().pathMatch;\n    var validators = require_validators();\n    var VERSION = require_version();\n    var { fromCallback } = require_universalify();\n    var { getCustomInspectSymbol } = require_utilHelper();\n    var COOKIE_OCTETS = /^[\\x21\\x23-\\x2B\\x2D-\\x3A\\x3C-\\x5B\\x5D-\\x7E]+$/;\n    var CONTROL_CHARS = /[\\x00-\\x1F]/;\n    var TERMINATORS = [\"\\n\", \"\\r\", \"\\0\"];\n    var PATH_VALUE = /[\\x20-\\x3A\\x3C-\\x7E]+/;\n    var DATE_DELIM = /[\\x09\\x20-\\x2F\\x3B-\\x40\\x5B-\\x60\\x7B-\\x7E]/;\n    var MONTH_TO_NUM = {\n      jan: 0,\n      feb: 1,\n      mar: 2,\n      apr: 3,\n      may: 4,\n      jun: 5,\n      jul: 6,\n      aug: 7,\n      sep: 8,\n      oct: 9,\n      nov: 10,\n      dec: 11\n    };\n    var MAX_TIME = 2147483647e3;\n    var MIN_TIME = 0;\n    var SAME_SITE_CONTEXT_VAL_ERR = 'Invalid sameSiteContext option for getCookies(); expected one of \"strict\", \"lax\", or \"none\"';\n    function checkSameSiteContext(value) {\n      validators.validate(validators.isNonEmptyString(value), value);\n      const context = String(value).toLowerCase();\n      if (context === \"none\" || context === \"lax\" || context === \"strict\") {\n        return context;\n      } else {\n        return null;\n      }\n    }\n    var PrefixSecurityEnum = Object.freeze({\n      SILENT: \"silent\",\n      STRICT: \"strict\",\n      DISABLED: \"unsafe-disabled\"\n    });\n    var IP_REGEX_LOWERCASE = /(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\n    var IP_V6_REGEX = `\n\\\\[?(?:\n(?:[a-fA-F\\\\d]{1,4}:){7}(?:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|:[a-fA-F\\\\d]{1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,2}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){4}(?:(?::[a-fA-F\\\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,3}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){3}(?:(?::[a-fA-F\\\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,4}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){2}(?:(?::[a-fA-F\\\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,5}|:)|\n(?:[a-fA-F\\\\d]{1,4}:){1}(?:(?::[a-fA-F\\\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,6}|:)|\n(?::(?:(?::[a-fA-F\\\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}|(?::[a-fA-F\\\\d]{1,4}){1,7}|:))\n)(?:%[0-9a-zA-Z]{1,})?\\\\]?\n`.replace(/\\s*\\/\\/.*$/gm, \"\").replace(/\\n/g, \"\").trim();\n    var IP_V6_REGEX_OBJECT = new RegExp(`^${IP_V6_REGEX}$`);\n    function parseDigits(token, minDigits, maxDigits, trailingOK) {\n      let count = 0;\n      while (count < token.length) {\n        const c = token.charCodeAt(count);\n        if (c <= 47 || c >= 58) {\n          break;\n        }\n        count++;\n      }\n      if (count < minDigits || count > maxDigits) {\n        return null;\n      }\n      if (!trailingOK && count != token.length) {\n        return null;\n      }\n      return parseInt(token.substr(0, count), 10);\n    }\n    function parseTime(token) {\n      const parts = token.split(\":\");\n      const result = [0, 0, 0];\n      if (parts.length !== 3) {\n        return null;\n      }\n      for (let i = 0; i < 3; i++) {\n        const trailingOK = i == 2;\n        const num = parseDigits(parts[i], 1, 2, trailingOK);\n        if (num === null) {\n          return null;\n        }\n        result[i] = num;\n      }\n      return result;\n    }\n    function parseMonth(token) {\n      token = String(token).substr(0, 3).toLowerCase();\n      const num = MONTH_TO_NUM[token];\n      return num >= 0 ? num : null;\n    }\n    function parseDate(str) {\n      if (!str) {\n        return;\n      }\n      const tokens = str.split(DATE_DELIM);\n      if (!tokens) {\n        return;\n      }\n      let hour = null;\n      let minute = null;\n      let second = null;\n      let dayOfMonth = null;\n      let month = null;\n      let year = null;\n      for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i].trim();\n        if (!token.length) {\n          continue;\n        }\n        let result;\n        if (second === null) {\n          result = parseTime(token);\n          if (result) {\n            hour = result[0];\n            minute = result[1];\n            second = result[2];\n            continue;\n          }\n        }\n        if (dayOfMonth === null) {\n          result = parseDigits(token, 1, 2, true);\n          if (result !== null) {\n            dayOfMonth = result;\n            continue;\n          }\n        }\n        if (month === null) {\n          result = parseMonth(token);\n          if (result !== null) {\n            month = result;\n            continue;\n          }\n        }\n        if (year === null) {\n          result = parseDigits(token, 2, 4, true);\n          if (result !== null) {\n            year = result;\n            if (year >= 70 && year <= 99) {\n              year += 1900;\n            } else if (year >= 0 && year <= 69) {\n              year += 2e3;\n            }\n          }\n        }\n      }\n      if (dayOfMonth === null || month === null || year === null || second === null || dayOfMonth < 1 || dayOfMonth > 31 || year < 1601 || hour > 23 || minute > 59 || second > 59) {\n        return;\n      }\n      return new Date(Date.UTC(year, month, dayOfMonth, hour, minute, second));\n    }\n    function formatDate(date) {\n      validators.validate(validators.isDate(date), date);\n      return date.toUTCString();\n    }\n    function canonicalDomain(str) {\n      if (str == null) {\n        return null;\n      }\n      str = str.trim().replace(/^\\./, \"\");\n      if (IP_V6_REGEX_OBJECT.test(str)) {\n        str = str.replace(\"[\", \"\").replace(\"]\", \"\");\n      }\n      if (punycode && /[^\\u0001-\\u007f]/.test(str)) {\n        str = punycode.toASCII(str);\n      }\n      return str.toLowerCase();\n    }\n    function domainMatch(str, domStr, canonicalize) {\n      if (str == null || domStr == null) {\n        return null;\n      }\n      if (canonicalize !== false) {\n        str = canonicalDomain(str);\n        domStr = canonicalDomain(domStr);\n      }\n      if (str == domStr) {\n        return true;\n      }\n      const idx = str.lastIndexOf(domStr);\n      if (idx <= 0) {\n        return false;\n      }\n      if (str.length !== domStr.length + idx) {\n        return false;\n      }\n      if (str.substr(idx - 1, 1) !== \".\") {\n        return false;\n      }\n      if (IP_REGEX_LOWERCASE.test(str)) {\n        return false;\n      }\n      return true;\n    }\n    function defaultPath(path) {\n      if (!path || path.substr(0, 1) !== \"/\") {\n        return \"/\";\n      }\n      if (path === \"/\") {\n        return path;\n      }\n      const rightSlash = path.lastIndexOf(\"/\");\n      if (rightSlash === 0) {\n        return \"/\";\n      }\n      return path.slice(0, rightSlash);\n    }\n    function trimTerminator(str) {\n      if (validators.isEmptyString(str)) return str;\n      for (let t = 0; t < TERMINATORS.length; t++) {\n        const terminatorIdx = str.indexOf(TERMINATORS[t]);\n        if (terminatorIdx !== -1) {\n          str = str.substr(0, terminatorIdx);\n        }\n      }\n      return str;\n    }\n    function parseCookiePair(cookiePair, looseMode) {\n      cookiePair = trimTerminator(cookiePair);\n      validators.validate(validators.isString(cookiePair), cookiePair);\n      let firstEq = cookiePair.indexOf(\"=\");\n      if (looseMode) {\n        if (firstEq === 0) {\n          cookiePair = cookiePair.substr(1);\n          firstEq = cookiePair.indexOf(\"=\");\n        }\n      } else {\n        if (firstEq <= 0) {\n          return;\n        }\n      }\n      let cookieName, cookieValue;\n      if (firstEq <= 0) {\n        cookieName = \"\";\n        cookieValue = cookiePair.trim();\n      } else {\n        cookieName = cookiePair.substr(0, firstEq).trim();\n        cookieValue = cookiePair.substr(firstEq + 1).trim();\n      }\n      if (CONTROL_CHARS.test(cookieName) || CONTROL_CHARS.test(cookieValue)) {\n        return;\n      }\n      const c = new Cookie();\n      c.key = cookieName;\n      c.value = cookieValue;\n      return c;\n    }\n    function parse(str, options) {\n      if (!options || typeof options !== \"object\") {\n        options = {};\n      }\n      if (validators.isEmptyString(str) || !validators.isString(str)) {\n        return null;\n      }\n      str = str.trim();\n      const firstSemi = str.indexOf(\";\");\n      const cookiePair = firstSemi === -1 ? str : str.substr(0, firstSemi);\n      const c = parseCookiePair(cookiePair, !!options.loose);\n      if (!c) {\n        return;\n      }\n      if (firstSemi === -1) {\n        return c;\n      }\n      const unparsed = str.slice(firstSemi + 1).trim();\n      if (unparsed.length === 0) {\n        return c;\n      }\n      const cookie_avs = unparsed.split(\";\");\n      while (cookie_avs.length) {\n        const av = cookie_avs.shift().trim();\n        if (av.length === 0) {\n          continue;\n        }\n        const av_sep = av.indexOf(\"=\");\n        let av_key, av_value;\n        if (av_sep === -1) {\n          av_key = av;\n          av_value = null;\n        } else {\n          av_key = av.substr(0, av_sep);\n          av_value = av.substr(av_sep + 1);\n        }\n        av_key = av_key.trim().toLowerCase();\n        if (av_value) {\n          av_value = av_value.trim();\n        }\n        switch (av_key) {\n          case \"expires\":\n            if (av_value) {\n              const exp = parseDate(av_value);\n              if (exp) {\n                c.expires = exp;\n              }\n            }\n            break;\n          case \"max-age\":\n            if (av_value) {\n              if (/^-?[0-9]+$/.test(av_value)) {\n                const delta = parseInt(av_value, 10);\n                c.setMaxAge(delta);\n              }\n            }\n            break;\n          case \"domain\":\n            if (av_value) {\n              const domain = av_value.trim().replace(/^\\./, \"\");\n              if (domain) {\n                c.domain = domain.toLowerCase();\n              }\n            }\n            break;\n          case \"path\":\n            c.path = av_value && av_value[0] === \"/\" ? av_value : null;\n            break;\n          case \"secure\":\n            c.secure = true;\n            break;\n          case \"httponly\":\n            c.httpOnly = true;\n            break;\n          case \"samesite\":\n            const enforcement = av_value ? av_value.toLowerCase() : \"\";\n            switch (enforcement) {\n              case \"strict\":\n                c.sameSite = \"strict\";\n                break;\n              case \"lax\":\n                c.sameSite = \"lax\";\n                break;\n              case \"none\":\n                c.sameSite = \"none\";\n                break;\n              default:\n                c.sameSite = void 0;\n                break;\n            }\n            break;\n          default:\n            c.extensions = c.extensions || [];\n            c.extensions.push(av);\n            break;\n        }\n      }\n      return c;\n    }\n    function isSecurePrefixConditionMet(cookie) {\n      validators.validate(validators.isObject(cookie), cookie);\n      return !cookie.key.startsWith(\"__Secure-\") || cookie.secure;\n    }\n    function isHostPrefixConditionMet(cookie) {\n      validators.validate(validators.isObject(cookie));\n      return !cookie.key.startsWith(\"__Host-\") || cookie.secure && cookie.hostOnly && cookie.path != null && cookie.path === \"/\";\n    }\n    function jsonParse(str) {\n      let obj;\n      try {\n        obj = JSON.parse(str);\n      } catch (e) {\n        return e;\n      }\n      return obj;\n    }\n    function fromJSON(str) {\n      if (!str || validators.isEmptyString(str)) {\n        return null;\n      }\n      let obj;\n      if (typeof str === \"string\") {\n        obj = jsonParse(str);\n        if (obj instanceof Error) {\n          return null;\n        }\n      } else {\n        obj = str;\n      }\n      const c = new Cookie();\n      for (let i = 0; i < Cookie.serializableProperties.length; i++) {\n        const prop = Cookie.serializableProperties[i];\n        if (obj[prop] === void 0 || obj[prop] === cookieDefaults[prop]) {\n          continue;\n        }\n        if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n          if (obj[prop] === null) {\n            c[prop] = null;\n          } else {\n            c[prop] = obj[prop] == \"Infinity\" ? \"Infinity\" : new Date(obj[prop]);\n          }\n        } else {\n          c[prop] = obj[prop];\n        }\n      }\n      return c;\n    }\n    function cookieCompare(a, b) {\n      validators.validate(validators.isObject(a), a);\n      validators.validate(validators.isObject(b), b);\n      let cmp = 0;\n      const aPathLen = a.path ? a.path.length : 0;\n      const bPathLen = b.path ? b.path.length : 0;\n      cmp = bPathLen - aPathLen;\n      if (cmp !== 0) {\n        return cmp;\n      }\n      const aTime = a.creation ? a.creation.getTime() : MAX_TIME;\n      const bTime = b.creation ? b.creation.getTime() : MAX_TIME;\n      cmp = aTime - bTime;\n      if (cmp !== 0) {\n        return cmp;\n      }\n      cmp = a.creationIndex - b.creationIndex;\n      return cmp;\n    }\n    function permutePath(path) {\n      validators.validate(validators.isString(path));\n      if (path === \"/\") {\n        return [\"/\"];\n      }\n      const permutations = [path];\n      while (path.length > 1) {\n        const lindex = path.lastIndexOf(\"/\");\n        if (lindex === 0) {\n          break;\n        }\n        path = path.substr(0, lindex);\n        permutations.push(path);\n      }\n      permutations.push(\"/\");\n      return permutations;\n    }\n    function getCookieContext(url) {\n      if (url instanceof Object) {\n        return url;\n      }\n      try {\n        url = decodeURI(url);\n      } catch (err) {\n      }\n      return urlParse(url);\n    }\n    var cookieDefaults = {\n      // the order in which the RFC has them:\n      key: \"\",\n      value: \"\",\n      expires: \"Infinity\",\n      maxAge: null,\n      domain: null,\n      path: null,\n      secure: false,\n      httpOnly: false,\n      extensions: null,\n      // set by the CookieJar:\n      hostOnly: null,\n      pathIsDefault: null,\n      creation: null,\n      lastAccessed: null,\n      sameSite: void 0\n    };\n    var Cookie = class _Cookie {\n      constructor(options = {}) {\n        const customInspectSymbol = getCustomInspectSymbol();\n        if (customInspectSymbol) {\n          this[customInspectSymbol] = this.inspect;\n        }\n        Object.assign(this, cookieDefaults, options);\n        this.creation = this.creation || /* @__PURE__ */ new Date();\n        Object.defineProperty(this, \"creationIndex\", {\n          configurable: false,\n          enumerable: false,\n          // important for assert.deepEqual checks\n          writable: true,\n          value: ++_Cookie.cookiesCreated\n        });\n      }\n      inspect() {\n        const now = Date.now();\n        const hostOnly = this.hostOnly != null ? this.hostOnly : \"?\";\n        const createAge = this.creation ? `${now - this.creation.getTime()}ms` : \"?\";\n        const accessAge = this.lastAccessed ? `${now - this.lastAccessed.getTime()}ms` : \"?\";\n        return `Cookie=\"${this.toString()}; hostOnly=${hostOnly}; aAge=${accessAge}; cAge=${createAge}\"`;\n      }\n      toJSON() {\n        const obj = {};\n        for (const prop of _Cookie.serializableProperties) {\n          if (this[prop] === cookieDefaults[prop]) {\n            continue;\n          }\n          if (prop === \"expires\" || prop === \"creation\" || prop === \"lastAccessed\") {\n            if (this[prop] === null) {\n              obj[prop] = null;\n            } else {\n              obj[prop] = this[prop] == \"Infinity\" ? \"Infinity\" : this[prop].toISOString();\n            }\n          } else if (prop === \"maxAge\") {\n            if (this[prop] !== null) {\n              obj[prop] = this[prop] == Infinity || this[prop] == -Infinity ? this[prop].toString() : this[prop];\n            }\n          } else {\n            if (this[prop] !== cookieDefaults[prop]) {\n              obj[prop] = this[prop];\n            }\n          }\n        }\n        return obj;\n      }\n      clone() {\n        return fromJSON(this.toJSON());\n      }\n      validate() {\n        if (!COOKIE_OCTETS.test(this.value)) {\n          return false;\n        }\n        if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {\n          return false;\n        }\n        if (this.maxAge != null && this.maxAge <= 0) {\n          return false;\n        }\n        if (this.path != null && !PATH_VALUE.test(this.path)) {\n          return false;\n        }\n        const cdomain = this.cdomain();\n        if (cdomain) {\n          if (cdomain.match(/\\.$/)) {\n            return false;\n          }\n          const suffix = pubsuffix.getPublicSuffix(cdomain);\n          if (suffix == null) {\n            return false;\n          }\n        }\n        return true;\n      }\n      setExpires(exp) {\n        if (exp instanceof Date) {\n          this.expires = exp;\n        } else {\n          this.expires = parseDate(exp) || \"Infinity\";\n        }\n      }\n      setMaxAge(age) {\n        if (age === Infinity || age === -Infinity) {\n          this.maxAge = age.toString();\n        } else {\n          this.maxAge = age;\n        }\n      }\n      cookieString() {\n        let val = this.value;\n        if (val == null) {\n          val = \"\";\n        }\n        if (this.key === \"\") {\n          return val;\n        }\n        return `${this.key}=${val}`;\n      }\n      // gives Set-Cookie header format\n      toString() {\n        let str = this.cookieString();\n        if (this.expires != Infinity) {\n          if (this.expires instanceof Date) {\n            str += `; Expires=${formatDate(this.expires)}`;\n          } else {\n            str += `; Expires=${this.expires}`;\n          }\n        }\n        if (this.maxAge != null && this.maxAge != Infinity) {\n          str += `; Max-Age=${this.maxAge}`;\n        }\n        if (this.domain && !this.hostOnly) {\n          str += `; Domain=${this.domain}`;\n        }\n        if (this.path) {\n          str += `; Path=${this.path}`;\n        }\n        if (this.secure) {\n          str += \"; Secure\";\n        }\n        if (this.httpOnly) {\n          str += \"; HttpOnly\";\n        }\n        if (this.sameSite && this.sameSite !== \"none\") {\n          const ssCanon = _Cookie.sameSiteCanonical[this.sameSite.toLowerCase()];\n          str += `; SameSite=${ssCanon ? ssCanon : this.sameSite}`;\n        }\n        if (this.extensions) {\n          this.extensions.forEach((ext) => {\n            str += `; ${ext}`;\n          });\n        }\n        return str;\n      }\n      // TTL() partially replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n      // elsewhere)\n      // S5.3 says to give the \"latest representable date\" for which we use Infinity\n      // For \"expired\" we use 0\n      TTL(now) {\n        if (this.maxAge != null) {\n          return this.maxAge <= 0 ? 0 : this.maxAge * 1e3;\n        }\n        let expires = this.expires;\n        if (expires != Infinity) {\n          if (!(expires instanceof Date)) {\n            expires = parseDate(expires) || Infinity;\n          }\n          if (expires == Infinity) {\n            return Infinity;\n          }\n          return expires.getTime() - (now || Date.now());\n        }\n        return Infinity;\n      }\n      // expiryTime() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n      // elsewhere)\n      expiryTime(now) {\n        if (this.maxAge != null) {\n          const relativeTo = now || this.creation || /* @__PURE__ */ new Date();\n          const age = this.maxAge <= 0 ? -Infinity : this.maxAge * 1e3;\n          return relativeTo.getTime() + age;\n        }\n        if (this.expires == Infinity) {\n          return Infinity;\n        }\n        return this.expires.getTime();\n      }\n      // expiryDate() replaces the \"expiry-time\" parts of S5.3 step 3 (setCookie()\n      // elsewhere), except it returns a Date\n      expiryDate(now) {\n        const millisec = this.expiryTime(now);\n        if (millisec == Infinity) {\n          return new Date(MAX_TIME);\n        } else if (millisec == -Infinity) {\n          return new Date(MIN_TIME);\n        } else {\n          return new Date(millisec);\n        }\n      }\n      // This replaces the \"persistent-flag\" parts of S5.3 step 3\n      isPersistent() {\n        return this.maxAge != null || this.expires != Infinity;\n      }\n      // Mostly S5.1.2 and S5.2.3:\n      canonicalizedDomain() {\n        if (this.domain == null) {\n          return null;\n        }\n        return canonicalDomain(this.domain);\n      }\n      cdomain() {\n        return this.canonicalizedDomain();\n      }\n    };\n    Cookie.cookiesCreated = 0;\n    Cookie.parse = parse;\n    Cookie.fromJSON = fromJSON;\n    Cookie.serializableProperties = Object.keys(cookieDefaults);\n    Cookie.sameSiteLevel = {\n      strict: 3,\n      lax: 2,\n      none: 1\n    };\n    Cookie.sameSiteCanonical = {\n      strict: \"Strict\",\n      lax: \"Lax\"\n    };\n    function getNormalizedPrefixSecurity(prefixSecurity) {\n      if (prefixSecurity != null) {\n        const normalizedPrefixSecurity = prefixSecurity.toLowerCase();\n        switch (normalizedPrefixSecurity) {\n          case PrefixSecurityEnum.STRICT:\n          case PrefixSecurityEnum.SILENT:\n          case PrefixSecurityEnum.DISABLED:\n            return normalizedPrefixSecurity;\n        }\n      }\n      return PrefixSecurityEnum.SILENT;\n    }\n    var CookieJar = class _CookieJar {\n      constructor(store, options = { rejectPublicSuffixes: true }) {\n        if (typeof options === \"boolean\") {\n          options = { rejectPublicSuffixes: options };\n        }\n        validators.validate(validators.isObject(options), options);\n        this.rejectPublicSuffixes = options.rejectPublicSuffixes;\n        this.enableLooseMode = !!options.looseMode;\n        this.allowSpecialUseDomain = typeof options.allowSpecialUseDomain === \"boolean\" ? options.allowSpecialUseDomain : true;\n        this.store = store || new MemoryCookieStore();\n        this.prefixSecurity = getNormalizedPrefixSecurity(options.prefixSecurity);\n        this._cloneSync = syncWrap(\"clone\");\n        this._importCookiesSync = syncWrap(\"_importCookies\");\n        this.getCookiesSync = syncWrap(\"getCookies\");\n        this.getCookieStringSync = syncWrap(\"getCookieString\");\n        this.getSetCookieStringsSync = syncWrap(\"getSetCookieStrings\");\n        this.removeAllCookiesSync = syncWrap(\"removeAllCookies\");\n        this.setCookieSync = syncWrap(\"setCookie\");\n        this.serializeSync = syncWrap(\"serialize\");\n      }\n      setCookie(cookie, url, options, cb) {\n        validators.validate(validators.isUrlStringOrObject(url), cb, options);\n        let err;\n        if (validators.isFunction(url)) {\n          cb = url;\n          return cb(new Error(\"No URL was specified\"));\n        }\n        const context = getCookieContext(url);\n        if (validators.isFunction(options)) {\n          cb = options;\n          options = {};\n        }\n        validators.validate(validators.isFunction(cb), cb);\n        if (!validators.isNonEmptyString(cookie) && !validators.isObject(cookie) && cookie instanceof String && cookie.length == 0) {\n          return cb(null);\n        }\n        const host = canonicalDomain(context.hostname);\n        const loose = options.loose || this.enableLooseMode;\n        let sameSiteContext = null;\n        if (options.sameSiteContext) {\n          sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n          if (!sameSiteContext) {\n            return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n          }\n        }\n        if (typeof cookie === \"string\" || cookie instanceof String) {\n          cookie = Cookie.parse(cookie, { loose });\n          if (!cookie) {\n            err = new Error(\"Cookie failed to parse\");\n            return cb(options.ignoreError ? null : err);\n          }\n        } else if (!(cookie instanceof Cookie)) {\n          err = new Error(\n            \"First argument to setCookie must be a Cookie object or string\"\n          );\n          return cb(options.ignoreError ? null : err);\n        }\n        const now = options.now || /* @__PURE__ */ new Date();\n        if (this.rejectPublicSuffixes && cookie.domain) {\n          const suffix = pubsuffix.getPublicSuffix(cookie.cdomain(), {\n            allowSpecialUseDomain: this.allowSpecialUseDomain,\n            ignoreError: options.ignoreError\n          });\n          if (suffix == null && !IP_V6_REGEX_OBJECT.test(cookie.domain)) {\n            err = new Error(\"Cookie has domain set to a public suffix\");\n            return cb(options.ignoreError ? null : err);\n          }\n        }\n        if (cookie.domain) {\n          if (!domainMatch(host, cookie.cdomain(), false)) {\n            err = new Error(\n              `Cookie not in this host's domain. Cookie:${cookie.cdomain()} Request:${host}`\n            );\n            return cb(options.ignoreError ? null : err);\n          }\n          if (cookie.hostOnly == null) {\n            cookie.hostOnly = false;\n          }\n        } else {\n          cookie.hostOnly = true;\n          cookie.domain = host;\n        }\n        if (!cookie.path || cookie.path[0] !== \"/\") {\n          cookie.path = defaultPath(context.pathname);\n          cookie.pathIsDefault = true;\n        }\n        if (options.http === false && cookie.httpOnly) {\n          err = new Error(\"Cookie is HttpOnly and this isn't an HTTP API\");\n          return cb(options.ignoreError ? null : err);\n        }\n        if (cookie.sameSite !== \"none\" && cookie.sameSite !== void 0 && sameSiteContext) {\n          if (sameSiteContext === \"none\") {\n            err = new Error(\n              \"Cookie is SameSite but this is a cross-origin request\"\n            );\n            return cb(options.ignoreError ? null : err);\n          }\n        }\n        const ignoreErrorForPrefixSecurity = this.prefixSecurity === PrefixSecurityEnum.SILENT;\n        const prefixSecurityDisabled = this.prefixSecurity === PrefixSecurityEnum.DISABLED;\n        if (!prefixSecurityDisabled) {\n          let errorFound = false;\n          let errorMsg;\n          if (!isSecurePrefixConditionMet(cookie)) {\n            errorFound = true;\n            errorMsg = \"Cookie has __Secure prefix but Secure attribute is not set\";\n          } else if (!isHostPrefixConditionMet(cookie)) {\n            errorFound = true;\n            errorMsg = \"Cookie has __Host prefix but either Secure or HostOnly attribute is not set or Path is not '/'\";\n          }\n          if (errorFound) {\n            return cb(\n              options.ignoreError || ignoreErrorForPrefixSecurity ? null : new Error(errorMsg)\n            );\n          }\n        }\n        const store = this.store;\n        if (!store.updateCookie) {\n          store.updateCookie = function(oldCookie, newCookie, cb2) {\n            this.putCookie(newCookie, cb2);\n          };\n        }\n        function withCookie(err2, oldCookie) {\n          if (err2) {\n            return cb(err2);\n          }\n          const next = function(err3) {\n            if (err3) {\n              return cb(err3);\n            } else {\n              cb(null, cookie);\n            }\n          };\n          if (oldCookie) {\n            if (options.http === false && oldCookie.httpOnly) {\n              err2 = new Error(\"old Cookie is HttpOnly and this isn't an HTTP API\");\n              return cb(options.ignoreError ? null : err2);\n            }\n            cookie.creation = oldCookie.creation;\n            cookie.creationIndex = oldCookie.creationIndex;\n            cookie.lastAccessed = now;\n            store.updateCookie(oldCookie, cookie, next);\n          } else {\n            cookie.creation = cookie.lastAccessed = now;\n            store.putCookie(cookie, next);\n          }\n        }\n        store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);\n      }\n      // RFC6365 S5.4\n      getCookies(url, options, cb) {\n        validators.validate(validators.isUrlStringOrObject(url), cb, url);\n        const context = getCookieContext(url);\n        if (validators.isFunction(options)) {\n          cb = options;\n          options = {};\n        }\n        validators.validate(validators.isObject(options), cb, options);\n        validators.validate(validators.isFunction(cb), cb);\n        const host = canonicalDomain(context.hostname);\n        const path = context.pathname || \"/\";\n        let secure = options.secure;\n        if (secure == null && context.protocol && (context.protocol == \"https:\" || context.protocol == \"wss:\")) {\n          secure = true;\n        }\n        let sameSiteLevel = 0;\n        if (options.sameSiteContext) {\n          const sameSiteContext = checkSameSiteContext(options.sameSiteContext);\n          sameSiteLevel = Cookie.sameSiteLevel[sameSiteContext];\n          if (!sameSiteLevel) {\n            return cb(new Error(SAME_SITE_CONTEXT_VAL_ERR));\n          }\n        }\n        let http = options.http;\n        if (http == null) {\n          http = true;\n        }\n        const now = options.now || Date.now();\n        const expireCheck = options.expire !== false;\n        const allPaths = !!options.allPaths;\n        const store = this.store;\n        function matchingCookie(c) {\n          if (c.hostOnly) {\n            if (c.domain != host) {\n              return false;\n            }\n          } else {\n            if (!domainMatch(host, c.domain, false)) {\n              return false;\n            }\n          }\n          if (!allPaths && !pathMatch(path, c.path)) {\n            return false;\n          }\n          if (c.secure && !secure) {\n            return false;\n          }\n          if (c.httpOnly && !http) {\n            return false;\n          }\n          if (sameSiteLevel) {\n            const cookieLevel = Cookie.sameSiteLevel[c.sameSite || \"none\"];\n            if (cookieLevel > sameSiteLevel) {\n              return false;\n            }\n          }\n          if (expireCheck && c.expiryTime() <= now) {\n            store.removeCookie(c.domain, c.path, c.key, () => {\n            });\n            return false;\n          }\n          return true;\n        }\n        store.findCookies(\n          host,\n          allPaths ? null : path,\n          this.allowSpecialUseDomain,\n          (err, cookies) => {\n            if (err) {\n              return cb(err);\n            }\n            cookies = cookies.filter(matchingCookie);\n            if (options.sort !== false) {\n              cookies = cookies.sort(cookieCompare);\n            }\n            const now2 = /* @__PURE__ */ new Date();\n            for (const cookie of cookies) {\n              cookie.lastAccessed = now2;\n            }\n            cb(null, cookies);\n          }\n        );\n      }\n      getCookieString(...args) {\n        const cb = args.pop();\n        validators.validate(validators.isFunction(cb), cb);\n        const next = function(err, cookies) {\n          if (err) {\n            cb(err);\n          } else {\n            cb(\n              null,\n              cookies.sort(cookieCompare).map((c) => c.cookieString()).join(\"; \")\n            );\n          }\n        };\n        args.push(next);\n        this.getCookies.apply(this, args);\n      }\n      getSetCookieStrings(...args) {\n        const cb = args.pop();\n        validators.validate(validators.isFunction(cb), cb);\n        const next = function(err, cookies) {\n          if (err) {\n            cb(err);\n          } else {\n            cb(\n              null,\n              cookies.map((c) => {\n                return c.toString();\n              })\n            );\n          }\n        };\n        args.push(next);\n        this.getCookies.apply(this, args);\n      }\n      serialize(cb) {\n        validators.validate(validators.isFunction(cb), cb);\n        let type = this.store.constructor.name;\n        if (validators.isObject(type)) {\n          type = null;\n        }\n        const serialized = {\n          // The version of tough-cookie that serialized this jar. Generally a good\n          // practice since future versions can make data import decisions based on\n          // known past behavior. When/if this matters, use `semver`.\n          version: `tough-cookie@${VERSION}`,\n          // add the store type, to make humans happy:\n          storeType: type,\n          // CookieJar configuration:\n          rejectPublicSuffixes: !!this.rejectPublicSuffixes,\n          enableLooseMode: !!this.enableLooseMode,\n          allowSpecialUseDomain: !!this.allowSpecialUseDomain,\n          prefixSecurity: getNormalizedPrefixSecurity(this.prefixSecurity),\n          // this gets filled from getAllCookies:\n          cookies: []\n        };\n        if (!(this.store.getAllCookies && typeof this.store.getAllCookies === \"function\")) {\n          return cb(\n            new Error(\n              \"store does not support getAllCookies and cannot be serialized\"\n            )\n          );\n        }\n        this.store.getAllCookies((err, cookies) => {\n          if (err) {\n            return cb(err);\n          }\n          serialized.cookies = cookies.map((cookie) => {\n            cookie = cookie instanceof Cookie ? cookie.toJSON() : cookie;\n            delete cookie.creationIndex;\n            return cookie;\n          });\n          return cb(null, serialized);\n        });\n      }\n      toJSON() {\n        return this.serializeSync();\n      }\n      // use the class method CookieJar.deserialize instead of calling this directly\n      _importCookies(serialized, cb) {\n        let cookies = serialized.cookies;\n        if (!cookies || !Array.isArray(cookies)) {\n          return cb(new Error(\"serialized jar has no cookies array\"));\n        }\n        cookies = cookies.slice();\n        const putNext = (err) => {\n          if (err) {\n            return cb(err);\n          }\n          if (!cookies.length) {\n            return cb(err, this);\n          }\n          let cookie;\n          try {\n            cookie = fromJSON(cookies.shift());\n          } catch (e) {\n            return cb(e);\n          }\n          if (cookie === null) {\n            return putNext(null);\n          }\n          this.store.putCookie(cookie, putNext);\n        };\n        putNext();\n      }\n      clone(newStore, cb) {\n        if (arguments.length === 1) {\n          cb = newStore;\n          newStore = null;\n        }\n        this.serialize((err, serialized) => {\n          if (err) {\n            return cb(err);\n          }\n          _CookieJar.deserialize(serialized, newStore, cb);\n        });\n      }\n      cloneSync(newStore) {\n        if (arguments.length === 0) {\n          return this._cloneSync();\n        }\n        if (!newStore.synchronous) {\n          throw new Error(\n            \"CookieJar clone destination store is not synchronous; use async API instead.\"\n          );\n        }\n        return this._cloneSync(newStore);\n      }\n      removeAllCookies(cb) {\n        validators.validate(validators.isFunction(cb), cb);\n        const store = this.store;\n        if (typeof store.removeAllCookies === \"function\" && store.removeAllCookies !== Store.prototype.removeAllCookies) {\n          return store.removeAllCookies(cb);\n        }\n        store.getAllCookies((err, cookies) => {\n          if (err) {\n            return cb(err);\n          }\n          if (cookies.length === 0) {\n            return cb(null);\n          }\n          let completedCount = 0;\n          const removeErrors = [];\n          function removeCookieCb(removeErr) {\n            if (removeErr) {\n              removeErrors.push(removeErr);\n            }\n            completedCount++;\n            if (completedCount === cookies.length) {\n              return cb(removeErrors.length ? removeErrors[0] : null);\n            }\n          }\n          cookies.forEach((cookie) => {\n            store.removeCookie(\n              cookie.domain,\n              cookie.path,\n              cookie.key,\n              removeCookieCb\n            );\n          });\n        });\n      }\n      static deserialize(strOrObj, store, cb) {\n        if (arguments.length !== 3) {\n          cb = store;\n          store = null;\n        }\n        validators.validate(validators.isFunction(cb), cb);\n        let serialized;\n        if (typeof strOrObj === \"string\") {\n          serialized = jsonParse(strOrObj);\n          if (serialized instanceof Error) {\n            return cb(serialized);\n          }\n        } else {\n          serialized = strOrObj;\n        }\n        const jar = new _CookieJar(store, {\n          rejectPublicSuffixes: serialized.rejectPublicSuffixes,\n          looseMode: serialized.enableLooseMode,\n          allowSpecialUseDomain: serialized.allowSpecialUseDomain,\n          prefixSecurity: serialized.prefixSecurity\n        });\n        jar._importCookies(serialized, (err) => {\n          if (err) {\n            return cb(err);\n          }\n          cb(null, jar);\n        });\n      }\n      static deserializeSync(strOrObj, store) {\n        const serialized = typeof strOrObj === \"string\" ? JSON.parse(strOrObj) : strOrObj;\n        const jar = new _CookieJar(store, {\n          rejectPublicSuffixes: serialized.rejectPublicSuffixes,\n          looseMode: serialized.enableLooseMode\n        });\n        if (!jar.store.synchronous) {\n          throw new Error(\n            \"CookieJar store is not synchronous; use async API instead.\"\n          );\n        }\n        jar._importCookiesSync(serialized);\n        return jar;\n      }\n    };\n    CookieJar.fromJSON = CookieJar.deserializeSync;\n    [\n      \"_importCookies\",\n      \"clone\",\n      \"getCookies\",\n      \"getCookieString\",\n      \"getSetCookieStrings\",\n      \"removeAllCookies\",\n      \"serialize\",\n      \"setCookie\"\n    ].forEach((name) => {\n      CookieJar.prototype[name] = fromCallback(CookieJar.prototype[name]);\n    });\n    CookieJar.deserialize = fromCallback(CookieJar.deserialize);\n    function syncWrap(method) {\n      return function(...args) {\n        if (!this.store.synchronous) {\n          throw new Error(\n            \"CookieJar store is not synchronous; use async API instead.\"\n          );\n        }\n        let syncErr, syncResult;\n        this[method](...args, (err, result) => {\n          syncErr = err;\n          syncResult = result;\n        });\n        if (syncErr) {\n          throw syncErr;\n        }\n        return syncResult;\n      };\n    }\n    exports.version = VERSION;\n    exports.CookieJar = CookieJar;\n    exports.Cookie = Cookie;\n    exports.Store = Store;\n    exports.MemoryCookieStore = MemoryCookieStore;\n    exports.parseDate = parseDate;\n    exports.formatDate = formatDate;\n    exports.parse = parse;\n    exports.fromJSON = fromJSON;\n    exports.domainMatch = domainMatch;\n    exports.defaultPath = defaultPath;\n    exports.pathMatch = pathMatch;\n    exports.getPublicSuffix = pubsuffix.getPublicSuffix;\n    exports.cookieCompare = cookieCompare;\n    exports.permuteDomain = require_permuteDomain().permuteDomain;\n    exports.permutePath = permutePath;\n    exports.canonicalDomain = canonicalDomain;\n    exports.PrefixSecurityEnum = PrefixSecurityEnum;\n    exports.ParameterError = validators.ParameterError;\n  }\n});\n\n// source.js\nvar import_tough_cookie = __toESM(require_cookie(), 1);\nvar source_default = import_tough_cookie.default;\nexport {\n  source_default as default\n};\n/*! Bundled license information:\n\ntough-cookie/lib/pubsuffix-psl.js:\n  (*!\n   * Copyright (c) 2018, Salesforce.com, Inc.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   * this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   * this list of conditions and the following disclaimer in the documentation\n   * and/or other materials provided with the distribution.\n   *\n   * 3. Neither the name of Salesforce.com nor the names of its contributors may\n   * be used to endorse or promote products derived from this software without\n   * specific prior written permission.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   *)\n\ntough-cookie/lib/store.js:\n  (*!\n   * Copyright (c) 2015, Salesforce.com, Inc.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   * this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   * this list of conditions and the following disclaimer in the documentation\n   * and/or other materials provided with the distribution.\n   *\n   * 3. Neither the name of Salesforce.com nor the names of its contributors may\n   * be used to endorse or promote products derived from this software without\n   * specific prior written permission.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   *)\n\ntough-cookie/lib/permuteDomain.js:\n  (*!\n   * Copyright (c) 2015, Salesforce.com, Inc.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   * this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   * this list of conditions and the following disclaimer in the documentation\n   * and/or other materials provided with the distribution.\n   *\n   * 3. Neither the name of Salesforce.com nor the names of its contributors may\n   * be used to endorse or promote products derived from this software without\n   * specific prior written permission.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   *)\n\ntough-cookie/lib/pathMatch.js:\n  (*!\n   * Copyright (c) 2015, Salesforce.com, Inc.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   * this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   * this list of conditions and the following disclaimer in the documentation\n   * and/or other materials provided with the distribution.\n   *\n   * 3. Neither the name of Salesforce.com nor the names of its contributors may\n   * be used to endorse or promote products derived from this software without\n   * specific prior written permission.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   *)\n\ntough-cookie/lib/memstore.js:\n  (*!\n   * Copyright (c) 2015, Salesforce.com, Inc.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   * this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   * this list of conditions and the following disclaimer in the documentation\n   * and/or other materials provided with the distribution.\n   *\n   * 3. Neither the name of Salesforce.com nor the names of its contributors may\n   * be used to endorse or promote products derived from this software without\n   * specific prior written permission.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   *)\n\ntough-cookie/lib/cookie.js:\n  (*!\n   * Copyright (c) 2015-2020, Salesforce.com, Inc.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are met:\n   *\n   * 1. Redistributions of source code must retain the above copyright notice,\n   * this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above copyright notice,\n   * this list of conditions and the following disclaimer in the documentation\n   * and/or other materials provided with the distribution.\n   *\n   * 3. Neither the name of Salesforce.com nor the names of its contributors may\n   * be used to endorse or promote products derived from this software without\n   * specific prior written permission.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n   * POSSIBILITY OF SUCH DAMAGE.\n   *)\n*/\n","import { invariant } from 'outvariant'\nimport { isNodeProcess } from 'is-node-process'\nimport toughCookie, {\n  type Cookie as CookieInstance,\n} from '@bundled-es-modules/tough-cookie'\n\nconst { Cookie, CookieJar, Store, MemoryCookieStore, domainMatch, pathMatch } =\n  toughCookie\n\n/**\n * Custom cookie store that uses the Web Storage API.\n * @see https://github.com/expo/tough-cookie-web-storage-store\n */\nclass WebStorageCookieStore extends Store {\n  private storage: Storage\n  private storageKey: string\n\n  constructor() {\n    super()\n\n    invariant(\n      typeof localStorage !== 'undefined',\n      'Failed to create a WebStorageCookieStore: `localStorage` is not available in this environment. This is likely an issue with MSW. Please report it on GitHub: https://github.com/mswjs/msw/issues',\n    )\n\n    this.synchronous = true\n    this.storage = localStorage\n    this.storageKey = '__msw-cookie-store__'\n  }\n\n  findCookie(\n    domain: string,\n    path: string,\n    key: string,\n    callback: (error: Error | null, cookie: CookieInstance | null) => void,\n  ): void {\n    try {\n      const store = this.getStore()\n      const cookies = this.filterCookiesFromList(store, { domain, path, key })\n      callback(null, cookies[0] || null)\n    } catch (error) {\n      if (error instanceof Error) {\n        callback(error, null)\n      }\n    }\n  }\n\n  findCookies(\n    domain: string,\n    path: string,\n    allowSpecialUseDomain: boolean,\n    callback: (error: Error | null, cookie: Array<CookieInstance>) => void,\n  ): void {\n    if (!domain) {\n      callback(null, [])\n      return\n    }\n\n    try {\n      const store = this.getStore()\n      const results = this.filterCookiesFromList(store, {\n        domain,\n        path,\n      })\n      callback(null, results)\n    } catch (error) {\n      if (error instanceof Error) {\n        callback(error, [])\n      }\n    }\n  }\n\n  putCookie(\n    cookie: CookieInstance,\n    callback: (error: Error | null) => void,\n  ): void {\n    try {\n      // Never set cookies with `maxAge` of `0`.\n      if (cookie.maxAge === 0) {\n        return\n      }\n\n      const store = this.getStore()\n      store.push(cookie)\n      this.updateStore(store)\n    } catch (error) {\n      if (error instanceof Error) {\n        callback(error)\n      }\n    }\n  }\n\n  updateCookie(\n    oldCookie: CookieInstance,\n    newCookie: CookieInstance,\n    callback: (error: Error | null) => void,\n  ): void {\n    /**\n     * If updating a cookie with `maxAge` of `0`, remove it from the store.\n     * Otherwise, two cookie entries will be created.\n     * @see https://github.com/mswjs/msw/issues/2272\n     */\n    if (newCookie.maxAge === 0) {\n      this.removeCookie(\n        newCookie.domain || '',\n        newCookie.path || '',\n        newCookie.key,\n        callback,\n      )\n      return\n    }\n\n    this.putCookie(newCookie, callback)\n  }\n\n  removeCookie(\n    domain: string,\n    path: string,\n    key: string,\n    callback: (error: Error | null) => void,\n  ): void {\n    try {\n      const store = this.getStore()\n      const nextStore = this.deleteCookiesFromList(store, { domain, path, key })\n      this.updateStore(nextStore)\n      callback(null)\n    } catch (error) {\n      if (error instanceof Error) {\n        callback(error)\n      }\n    }\n  }\n\n  removeCookies(\n    domain: string,\n    path: string,\n    callback: (error: Error | null) => void,\n  ): void {\n    try {\n      const store = this.getStore()\n      const nextStore = this.deleteCookiesFromList(store, { domain, path })\n      this.updateStore(nextStore)\n      callback(null)\n    } catch (error) {\n      if (error instanceof Error) {\n        callback(error)\n      }\n    }\n  }\n\n  getAllCookies(\n    callback: (error: Error | null, cookie: Array<CookieInstance>) => void,\n  ): void {\n    try {\n      callback(null, this.getStore())\n    } catch (error) {\n      if (error instanceof Error) {\n        callback(error, [])\n      }\n    }\n  }\n\n  private getStore(): Array<CookieInstance> {\n    try {\n      const json = this.storage.getItem(this.storageKey)\n\n      if (json == null) {\n        return []\n      }\n\n      const rawCookies = JSON.parse(json) as Array<Record<string, any>>\n      const cookies: Array<CookieInstance> = []\n      for (const rawCookie of rawCookies) {\n        const cookie = Cookie.fromJSON(rawCookie)\n        if (cookie != null) {\n          cookies.push(cookie)\n        }\n      }\n      return cookies\n    } catch {\n      return []\n    }\n  }\n\n  private updateStore(nextStore: Array<CookieInstance>) {\n    this.storage.setItem(\n      this.storageKey,\n      JSON.stringify(nextStore.map((cookie) => cookie.toJSON())),\n    )\n  }\n\n  private filterCookiesFromList(\n    cookies: Array<CookieInstance>,\n    matches: { domain?: string; path?: string; key?: string },\n  ): Array<CookieInstance> {\n    const result: Array<CookieInstance> = []\n\n    for (const cookie of cookies) {\n      if (matches.domain && !domainMatch(matches.domain, cookie.domain || '')) {\n        continue\n      }\n\n      if (matches.path && !pathMatch(matches.path, cookie.path || '')) {\n        continue\n      }\n\n      if (matches.key && cookie.key !== matches.key) {\n        continue\n      }\n\n      result.push(cookie)\n    }\n\n    return result\n  }\n\n  private deleteCookiesFromList(\n    cookies: Array<CookieInstance>,\n    matches: { domain?: string; path?: string; key?: string },\n  ) {\n    const matchingCookies = this.filterCookiesFromList(cookies, matches)\n    return cookies.filter((cookie) => !matchingCookies.includes(cookie))\n  }\n}\n\nconst store = isNodeProcess()\n  ? new MemoryCookieStore()\n  : new WebStorageCookieStore()\n\nexport const cookieStore = new CookieJar(store)\n","import cookieUtils from '@bundled-es-modules/cookie'\nimport { cookieStore } from '../cookieStore'\n\nfunction parseCookies(input: string): Record<string, string> {\n  const parsedCookies = cookieUtils.parse(input)\n  const cookies: Record<string, string> = {}\n\n  for (const cookieName in parsedCookies) {\n    if (typeof parsedCookies[cookieName] !== 'undefined') {\n      cookies[cookieName] = parsedCookies[cookieName]\n    }\n  }\n\n  return cookies\n}\n\nfunction getAllDocumentCookies() {\n  return parseCookies(document.cookie)\n}\n\nfunction getDocumentCookies(request: Request): Record<string, string> {\n  if (typeof document === 'undefined' || typeof location === 'undefined') {\n    return {}\n  }\n\n  switch (request.credentials) {\n    case 'same-origin': {\n      const requestUrl = new URL(request.url)\n\n      // Return document cookies only when requested a resource\n      // from the same origin as the current document.\n      return location.origin === requestUrl.origin\n        ? getAllDocumentCookies()\n        : {}\n    }\n\n    case 'include': {\n      // Return all document cookies.\n      return getAllDocumentCookies()\n    }\n\n    default: {\n      return {}\n    }\n  }\n}\n\nexport function getAllRequestCookies(request: Request): Record<string, string> {\n  /**\n   * @note While the \"cookie\" header is a forbidden header field\n   * in the browser, you can read it in Node.js. We need to respect\n   * it for mocking in Node.js.\n   */\n  const requestCookieHeader = request.headers.get('cookie')\n  const cookiesFromHeaders = requestCookieHeader\n    ? parseCookies(requestCookieHeader)\n    : {}\n\n  const cookiesFromDocument = getDocumentCookies(request)\n\n  // Forward the document cookies to the request headers.\n  for (const name in cookiesFromDocument) {\n    request.headers.append(\n      'cookie',\n      cookieUtils.serialize(name, cookiesFromDocument[name]),\n    )\n  }\n\n  const cookiesFromStore = cookieStore.getCookiesSync(request.url)\n  const storedCookiesObject = Object.fromEntries(\n    cookiesFromStore.map((cookie) => [cookie.key, cookie.value]),\n  )\n\n  // Forward the raw stored cookies to request headers\n  // so they contain metadata like \"expires\", \"secure\", etc.\n  for (const cookie of cookiesFromStore) {\n    request.headers.append('cookie', cookie.toString())\n  }\n\n  return {\n    ...cookiesFromDocument,\n    ...storedCookiesObject,\n    ...cookiesFromHeaders,\n  }\n}\n","import { ResponseResolutionContext } from '../utils/executeHandlers'\nimport { devUtils } from '../utils/internal/devUtils'\nimport { isStringEqual } from '../utils/internal/isStringEqual'\nimport { getStatusCodeColor } from '../utils/logging/getStatusCodeColor'\nimport { getTimestamp } from '../utils/logging/getTimestamp'\nimport { serializeRequest } from '../utils/logging/serializeRequest'\nimport { serializeResponse } from '../utils/logging/serializeResponse'\nimport {\n  matchRequestUrl,\n  Match,\n  Path,\n  PathParams,\n} from '../utils/matching/matchRequestUrl'\nimport { toPublicUrl } from '../utils/request/toPublicUrl'\nimport { getAllRequestCookies } from '../utils/request/getRequestCookies'\nimport { cleanUrl, getSearchParams } from '../utils/url/cleanUrl'\nimport {\n  RequestHandler,\n  RequestHandlerDefaultInfo,\n  RequestHandlerOptions,\n  ResponseResolver,\n} from './RequestHandler'\n\ntype HttpHandlerMethod = string | RegExp\n\nexport interface HttpHandlerInfo extends RequestHandlerDefaultInfo {\n  method: HttpHandlerMethod\n  path: Path\n}\n\nexport enum HttpMethods {\n  HEAD = 'HEAD',\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  OPTIONS = 'OPTIONS',\n  DELETE = 'DELETE',\n}\n\nexport type RequestQuery = {\n  [queryName: string]: string\n}\n\nexport type HttpRequestParsedResult = {\n  match: Match\n  cookies: Record<string, string>\n}\n\nexport type HttpRequestResolverExtras<Params extends PathParams> = {\n  params: Params\n  cookies: Record<string, string>\n}\n\n/**\n * Request handler for HTTP requests.\n * Provides request matching based on method and URL.\n */\nexport class HttpHandler extends RequestHandler<\n  HttpHandlerInfo,\n  HttpRequestParsedResult,\n  HttpRequestResolverExtras<any>\n> {\n  constructor(\n    method: HttpHandlerMethod,\n    path: Path,\n    resolver: ResponseResolver<HttpRequestResolverExtras<any>, any, any>,\n    options?: RequestHandlerOptions,\n  ) {\n    super({\n      info: {\n        header: `${method} ${path}`,\n        path,\n        method,\n      },\n      resolver,\n      options,\n    })\n\n    this.checkRedundantQueryParameters()\n  }\n\n  private checkRedundantQueryParameters() {\n    const { method, path } = this.info\n\n    if (path instanceof RegExp) {\n      return\n    }\n\n    const url = cleanUrl(path)\n\n    // Bypass request handler URLs that have no redundant characters.\n    if (url === path) {\n      return\n    }\n\n    const searchParams = getSearchParams(path)\n    const queryParams: string[] = []\n\n    searchParams.forEach((_, paramName) => {\n      queryParams.push(paramName)\n    })\n\n    devUtils.warn(\n      `Found a redundant usage of query parameters in the request handler URL for \"${method} ${path}\". Please match against a path instead and access query parameters using \"new URL(request.url).searchParams\" instead. Learn more: https://mswjs.io/docs/recipes/query-parameters`,\n    )\n  }\n\n  async parse(args: {\n    request: Request\n    resolutionContext?: ResponseResolutionContext\n  }) {\n    const url = new URL(args.request.url)\n    const match = matchRequestUrl(\n      url,\n      this.info.path,\n      args.resolutionContext?.baseUrl,\n    )\n    const cookies = getAllRequestCookies(args.request)\n\n    return {\n      match,\n      cookies,\n    }\n  }\n\n  predicate(args: { request: Request; parsedResult: HttpRequestParsedResult }) {\n    const hasMatchingMethod = this.matchMethod(args.request.method)\n    const hasMatchingUrl = args.parsedResult.match.matches\n    return hasMatchingMethod && hasMatchingUrl\n  }\n\n  private matchMethod(actualMethod: string): boolean {\n    return this.info.method instanceof RegExp\n      ? this.info.method.test(actualMethod)\n      : isStringEqual(this.info.method, actualMethod)\n  }\n\n  protected extendResolverArgs(args: {\n    request: Request\n    parsedResult: HttpRequestParsedResult\n  }) {\n    return {\n      params: args.parsedResult.match?.params || {},\n      cookies: args.parsedResult.cookies,\n    }\n  }\n\n  async log(args: { request: Request; response: Response }) {\n    const publicUrl = toPublicUrl(args.request.url)\n    const loggedRequest = await serializeRequest(args.request)\n    const loggedResponse = await serializeResponse(args.response)\n    const statusColor = getStatusCodeColor(loggedResponse.status)\n\n    // eslint-disable-next-line no-console\n    console.groupCollapsed(\n      devUtils.formatMessage(\n        `${getTimestamp()} ${args.request.method} ${publicUrl} (%c${\n          loggedResponse.status\n        } ${loggedResponse.statusText}%c)`,\n      ),\n      `color:${statusColor}`,\n      'color:inherit',\n    )\n    // eslint-disable-next-line no-console\n    console.log('Request', loggedRequest)\n    // eslint-disable-next-line no-console\n    console.log('Handler:', this)\n    // eslint-disable-next-line no-console\n    console.log('Response', loggedResponse)\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import {\n  DefaultBodyType,\n  RequestHandlerOptions,\n  ResponseResolver,\n} from './handlers/RequestHandler'\nimport {\n  HttpMethods,\n  HttpHandler,\n  HttpRequestResolverExtras,\n} from './handlers/HttpHandler'\nimport type { Path, PathParams } from './utils/matching/matchRequestUrl'\n\nexport type HttpRequestHandler = <\n  Params extends PathParams<keyof Params> = PathParams,\n  RequestBodyType extends DefaultBodyType = DefaultBodyType,\n  // Response body type MUST be undefined by default.\n  // This is how we can distinguish between a handler that\n  // returns plain \"Response\" and the one returning \"HttpResponse\"\n  // to enforce a stricter response body type.\n  ResponseBodyType extends DefaultBodyType = undefined,\n  RequestPath extends Path = Path,\n>(\n  path: RequestPath,\n  resolver: HttpResponseResolver<Params, RequestBodyType, ResponseBodyType>,\n  options?: RequestHandlerOptions,\n) => HttpHandler\n\nexport type HttpResponseResolver<\n  Params extends PathParams<keyof Params> = PathParams,\n  RequestBodyType extends DefaultBodyType = DefaultBodyType,\n  ResponseBodyType extends DefaultBodyType = DefaultBodyType,\n> = ResponseResolver<\n  HttpRequestResolverExtras<Params>,\n  RequestBodyType,\n  ResponseBodyType\n>\n\nfunction createHttpHandler<Method extends HttpMethods | RegExp>(\n  method: Method,\n): HttpRequestHandler {\n  return (path, resolver, options = {}) => {\n    return new HttpHandler(method, path, resolver, options)\n  }\n}\n\n/**\n * A namespace to intercept and mock HTTP requests.\n *\n * @example\n * http.get('/user', resolver)\n * http.post('/post/:id', resolver)\n *\n * @see {@link https://mswjs.io/docs/api/http `http` API reference}\n */\nexport const http = {\n  all: createHttpHandler(/.+/),\n  head: createHttpHandler(HttpMethods.HEAD),\n  get: createHttpHandler(HttpMethods.GET),\n  post: createHttpHandler(HttpMethods.POST),\n  put: createHttpHandler(HttpMethods.PUT),\n  delete: createHttpHandler(HttpMethods.DELETE),\n  patch: createHttpHandler(HttpMethods.PATCH),\n  options: createHttpHandler(HttpMethods.OPTIONS),\n}\n","/**\n * Parses a given value into a JSON.\n * Does not throw an exception on an invalid JSON string.\n */\nexport function jsonParse<ValueType extends Record<string, any>>(\n  value: any,\n): ValueType | undefined {\n  try {\n    return JSON.parse(value)\n  } catch {\n    return undefined\n  }\n}\n","\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n","import { splitCookiesString } from 'set-cookie-parser'\nimport { HeadersList, HeadersObject } from './glossary'\nimport { normalizeHeaderName } from './utils/normalizeHeaderName'\nimport { normalizeHeaderValue } from './utils/normalizeHeaderValue'\nimport { isValidHeaderName } from './utils/isValidHeaderName'\nimport { isValidHeaderValue } from './utils/isValidHeaderValue'\n\nexport const NORMALIZED_HEADERS: unique symbol = Symbol('normalizedHeaders')\n\nexport const RAW_HEADER_NAMES: unique symbol = Symbol('rawHeaderNames')\n\nconst HEADER_VALUE_DELIMITER = ', ' as const\n\nexport class Headers {\n  // Normalized header {\"name\":\"a, b\"} storage.\n  private [NORMALIZED_HEADERS]: Record<string, string> = {}\n\n  // Keeps the mapping between the raw header name\n  // and the normalized header name to ease the lookup.\n  private [RAW_HEADER_NAMES]: Map<string, string> = new Map()\n\n  constructor(init?: HeadersInit | HeadersObject | HeadersList) {\n    /**\n     * @note Cannot necessarily check if the `init` is an instance of the\n     * `Headers` because that class may not be defined in Node or jsdom.\n     */\n    if (\n      ['Headers', 'HeadersPolyfill'].includes(init?.constructor.name) ||\n      init instanceof Headers ||\n      (typeof globalThis.Headers !== 'undefined' &&\n        init instanceof globalThis.Headers)\n    ) {\n      const initialHeaders = init as Headers\n      initialHeaders.forEach((value, name) => {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(init)) {\n      init.forEach(([name, value]) => {\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        )\n      })\n    } else if (init) {\n      Object.getOwnPropertyNames(init).forEach((name) => {\n        const value = init[name]\n        this.append(\n          name,\n          Array.isArray(value) ? value.join(HEADER_VALUE_DELIMITER) : value\n        )\n      })\n    }\n  }\n\n  [Symbol.toStringTag] = 'Headers';\n\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  *keys(): IterableIterator<string> {\n    for (const [name] of this.entries()) {\n      yield name\n    }\n  }\n\n  *values(): IterableIterator<string> {\n    for (const [, value] of this.entries()) {\n      yield value\n    }\n  }\n\n  *entries(): IterableIterator<[string, string]> {\n    // https://fetch.spec.whatwg.org/#concept-header-list-sort-and-combine\n    let sortedKeys = Object.keys(this[NORMALIZED_HEADERS]).sort((a, b) =>\n      a.localeCompare(b)\n    )\n    for (const name of sortedKeys) {\n      if (name === 'set-cookie') {\n        for (const value of this.getSetCookie()) {\n          yield [name, value]\n        }\n      } else {\n        yield [name, this.get(name)]\n      }\n    }\n  }\n\n  /**\n   * Returns a boolean stating whether a `Headers` object contains a certain header.\n   */\n  has(name: string): boolean {\n    if (!isValidHeaderName(name)) {\n      throw new TypeError(`Invalid header name \"${name}\"`)\n    }\n\n    return this[NORMALIZED_HEADERS].hasOwnProperty(normalizeHeaderName(name))\n  }\n\n  /**\n   * Returns a `ByteString` sequence of all the values of a header with a given name.\n   */\n  get(name: string): string | null {\n    if (!isValidHeaderName(name)) {\n      throw TypeError(`Invalid header name \"${name}\"`)\n    }\n\n    return this[NORMALIZED_HEADERS][normalizeHeaderName(name)] ?? null\n  }\n\n  /**\n   * Sets a new value for an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  set(name: string, value: string): void {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return\n    }\n\n    const normalizedName = normalizeHeaderName(name)\n    const normalizedValue = normalizeHeaderValue(value)\n\n    this[NORMALIZED_HEADERS][normalizedName] =\n      normalizeHeaderValue(normalizedValue)\n    this[RAW_HEADER_NAMES].set(normalizedName, name)\n  }\n\n  /**\n   * Appends a new value onto an existing header inside a `Headers` object, or adds the header if it does not already exist.\n   */\n  append(name: string, value: string): void {\n    if (!isValidHeaderName(name) || !isValidHeaderValue(value)) {\n      return\n    }\n\n    const normalizedName = normalizeHeaderName(name)\n    const normalizedValue = normalizeHeaderValue(value)\n\n    let resolvedValue = this.has(normalizedName)\n      ? `${this.get(normalizedName)}, ${normalizedValue}`\n      : normalizedValue\n\n    this.set(name, resolvedValue)\n  }\n\n  /**\n   * Deletes a header from the `Headers` object.\n   */\n  delete(name: string): void {\n    if (!isValidHeaderName(name)) {\n      return\n    }\n\n    if (!this.has(name)) {\n      return\n    }\n\n    const normalizedName = normalizeHeaderName(name)\n    delete this[NORMALIZED_HEADERS][normalizedName]\n    this[RAW_HEADER_NAMES].delete(normalizedName)\n  }\n\n  /**\n   * Traverses the `Headers` object,\n   * calling the given callback for each header.\n   */\n  forEach<ThisArg = this>(\n    callback: (\n      this: ThisArg,\n      value: string,\n      name: string,\n      parent: this\n    ) => void,\n    thisArg?: ThisArg\n  ) {\n    for (const [name, value] of this.entries()) {\n      callback.call(thisArg, value, name, this)\n    }\n  }\n\n  /**\n   * Returns an array containing the values\n   * of all Set-Cookie headers associated\n   * with a response\n   */\n  getSetCookie(): string[] {\n    const setCookieHeader = this.get('set-cookie')\n\n    if (setCookieHeader === null) {\n      return []\n    }\n\n    if (setCookieHeader === '') {\n      return ['']\n    }\n\n    return splitCookiesString(setCookieHeader)\n  }\n}\n","const HEADERS_INVALID_CHARACTERS = /[^a-z0-9\\-#$%&'*+.^_`|~]/i\n\nexport function normalizeHeaderName(name: string): string {\n  if (HEADERS_INVALID_CHARACTERS.test(name) || name.trim() === '') {\n    throw new TypeError('Invalid character in header field name')\n  }\n\n  return name.trim().toLowerCase()\n}\n","const charCodesToRemove = [\n  String.fromCharCode(0x0a),\n  String.fromCharCode(0x0d),\n  String.fromCharCode(0x09),\n  String.fromCharCode(0x20),\n]\n\nconst HEADER_VALUE_REMOVE_REGEXP = new RegExp(\n  `(^[${charCodesToRemove.join('')}]|$[${charCodesToRemove.join('')}])`,\n  'g'\n)\n\n/**\n * Normalize the given header value.\n * @see https://fetch.spec.whatwg.org/#concept-header-value-normalize\n */\nexport function normalizeHeaderValue(value: string): string {\n  const nextValue = value.replace(HEADER_VALUE_REMOVE_REGEXP, '')\n  return nextValue\n}\n","/**\n * Validate the given header name.\n * @see https://fetch.spec.whatwg.org/#header-name\n */\nexport function isValidHeaderName(value: unknown) {\n  if (typeof value !== 'string') {\n    return false\n  }\n\n  if (value.length === 0) {\n    return false\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i)\n\n    if (character > 0x7f || !isToken(character)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction isToken(value: string | number): boolean {\n  return ![\n    0x7f,\n    0x20,\n    '(',\n    ')',\n    '<',\n    '>',\n    '@',\n    ',',\n    ';',\n    ':',\n    '\\\\',\n    '\"',\n    '/',\n    '[',\n    ']',\n    '?',\n    '=',\n    '{',\n    '}',\n  ].includes(value)\n}\n","/**\n * Validate the given header value.\n * @see https://fetch.spec.whatwg.org/#header-value\n */\nexport function isValidHeaderValue(value: unknown): boolean {\n  if (typeof value !== 'string') {\n    return false\n  }\n\n  if (value.trim() !== value) {\n    return false\n  }\n\n  for (let i = 0; i < value.length; i++) {\n    const character = value.charCodeAt(i)\n\n    if (\n      // NUL.\n      character === 0x00 ||\n      // HTTP newline bytes.\n      character === 0x0a ||\n      character === 0x0d\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { RAW_HEADER_NAMES } from './Headers'\n\n/**\n * Returns the object of all raw headers.\n */\nexport function getRawHeaders(headers: Headers) {\n  const rawHeaders: Record<string, string> = {}\n\n  for (const [name, value] of headers.entries()) {\n    rawHeaders[headers[RAW_HEADER_NAMES].get(name)] = value\n  }\n\n  return rawHeaders\n}\n","import { HeadersList } from '../glossary'\n\nexport function headersToList(headers: Headers): HeadersList {\n  const headersList: HeadersList = []\n\n  headers.forEach((value, name) => {\n    const resolvedValue = value.includes(',')\n      ? value.split(',').map((value) => value.trim())\n      : value\n\n    headersList.push([name, resolvedValue])\n  })\n\n  return headersList\n}\n","import { headersToList } from './headersToList'\n\n/**\n * Converts a given `Headers` instance to its string representation.\n */\nexport function headersToString(headers: Headers): string {\n  const list = headersToList(headers)\n  const lines = list.map(([name, value]) => {\n    const values = ([] as string[]).concat(value)\n    return `${name}: ${values.join(', ')}`\n  })\n\n  return lines.join('\\r\\n')\n}\n","import { HeadersObject } from '../glossary'\n\n// List of headers that cannot have multiple values,\n// while potentially having a comma in their single value.\nconst singleValueHeaders = ['user-agent']\n\n/**\n * Converts a given `Headers` instance into a plain object.\n * Respects headers with multiple values.\n */\nexport function headersToObject(headers: Headers): HeadersObject {\n  const headersObject: HeadersObject = {}\n\n  headers.forEach((value, name) => {\n    const isMultiValue =\n      !singleValueHeaders.includes(name.toLowerCase()) && value.includes(',')\n    headersObject[name] = isMultiValue\n      ? value.split(',').map((s) => s.trim())\n      : value\n  })\n\n  return headersObject\n}\n","import { Headers } from '../Headers'\n\n/**\n * Converts a string representation of headers (i.e. from XMLHttpRequest)\n * to a new `Headers` instance.\n */\nexport function stringToHeaders(str: string): Headers {\n  const lines = str.trim().split(/[\\r\\n]+/)\n\n  return lines.reduce((headers, line) => {\n    if (line.trim() === '') {\n      return headers\n    }\n\n    const parts = line.split(': ')\n    const name = parts.shift()\n    const value = parts.join(': ')\n    headers.append(name, value)\n\n    return headers\n  }, new Headers())\n}\n","import { Headers } from '../Headers'\nimport { HeadersList } from '../glossary'\n\nexport function listToHeaders(list: HeadersList): Headers {\n  const headers = new Headers()\n\n  list.forEach(([name, value]) => {\n    const values = ([] as string[]).concat(value)\n\n    values.forEach((value) => {\n      headers.append(name, value)\n    })\n  })\n\n  return headers\n}\n","import { HeadersObject } from '../glossary'\n\n/**\n * Reduces given headers object instnace.\n */\nexport function reduceHeadersObject<R>(\n  headers: HeadersObject,\n  reducer: (headers: R, name: string, value: string | string[]) => R,\n  initialState: R\n): R {\n  return Object.keys(headers).reduce<R>((nextHeaders, name) => {\n    return reducer(nextHeaders, name, headers[name])\n  }, initialState)\n}\n","import { Headers } from '../Headers'\nimport { reduceHeadersObject } from './reduceHeadersObject'\n\n/**\n * Converts a given headers object to a new `Headers` instance.\n */\nexport function objectToHeaders(\n  headersObject: Record<string, string | string[] | undefined>\n): Headers {\n  return reduceHeadersObject(\n    headersObject,\n    (headers, name, value) => {\n      const values = ([] as string[]).concat(value).filter(Boolean)\n\n      values.forEach((value) => {\n        headers.append(name, value)\n      })\n\n      return headers\n    },\n    new Headers()\n  )\n}\n","import { HeadersList, FlatHeadersList } from '../glossary'\n\nexport function flattenHeadersList(list: HeadersList): FlatHeadersList {\n  return list.map(([name, values]) => {\n    return [name, ([] as string[]).concat(values).join(', ')]\n  })\n}\n","import { HeadersObject, FlatHeadersObject } from '../glossary'\nimport { reduceHeadersObject } from './reduceHeadersObject'\n\nexport function flattenHeadersObject(\n  headersObject: HeadersObject\n): FlatHeadersObject {\n  return reduceHeadersObject<FlatHeadersObject>(\n    headersObject,\n    (headers, name, value) => {\n      headers[name] = ([] as string[]).concat(value).join(', ')\n      return headers\n    },\n    {}\n  )\n}\n","import { stringToHeaders } from 'headers-polyfill'\nimport { DefaultRequestMultipartBody } from '../../handlers/RequestHandler'\n\ninterface ParsedContentHeaders {\n  name: string\n  filename?: string\n  contentType: string\n}\n\ninterface ContentDispositionDirective {\n  [key: string]: string | undefined\n  name: string\n  filename?: string\n  'form-data': string\n}\n\nfunction parseContentHeaders(headersString: string): ParsedContentHeaders {\n  const headers = stringToHeaders(headersString)\n  const contentType = headers.get('content-type') || 'text/plain'\n  const disposition = headers.get('content-disposition')\n\n  if (!disposition) {\n    throw new Error('\"Content-Disposition\" header is required.')\n  }\n\n  const directives = disposition.split(';').reduce((acc, chunk) => {\n    const [name, ...rest] = chunk.trim().split('=')\n    acc[name] = rest.join('=')\n    return acc\n  }, {} as ContentDispositionDirective)\n\n  const name = directives.name?.slice(1, -1)\n  const filename = directives.filename?.slice(1, -1)\n\n  return {\n    name,\n    filename,\n    contentType,\n  }\n}\n\n/**\n * Parses a given string as a multipart/form-data.\n * Does not throw an exception on an invalid multipart string.\n */\nexport function parseMultipartData<T extends DefaultRequestMultipartBody>(\n  data: string,\n  headers?: Headers,\n): T | undefined {\n  const contentType = headers?.get('content-type')\n\n  if (!contentType) {\n    return undefined\n  }\n\n  const [, ...directives] = contentType.split(/; */)\n  const boundary = directives\n    .filter((d) => d.startsWith('boundary='))\n    .map((s) => s.replace(/^boundary=/, ''))[0]\n\n  if (!boundary) {\n    return undefined\n  }\n\n  const boundaryRegExp = new RegExp(`--+${boundary}`)\n  const fields = data\n    .split(boundaryRegExp)\n    .filter((chunk) => chunk.startsWith('\\r\\n') && chunk.endsWith('\\r\\n'))\n    .map((chunk) => chunk.trimStart().replace(/\\r\\n$/, ''))\n\n  if (!fields.length) {\n    return undefined\n  }\n\n  const parsedBody: DefaultRequestMultipartBody = {}\n\n  try {\n    for (const field of fields) {\n      const [contentHeaders, ...rest] = field.split('\\r\\n\\r\\n')\n      const contentBody = rest.join('\\r\\n\\r\\n')\n      const { contentType, filename, name } =\n        parseContentHeaders(contentHeaders)\n\n      const value =\n        filename === undefined\n          ? contentBody\n          : new File([contentBody], filename, { type: contentType })\n\n      const parsedValue = parsedBody[name]\n\n      if (parsedValue === undefined) {\n        parsedBody[name] = value\n      } else if (Array.isArray(parsedValue)) {\n        parsedBody[name] = [...parsedValue, value]\n      } else {\n        parsedBody[name] = [parsedValue, value]\n      }\n    }\n\n    return parsedBody as T\n  } catch {\n    return undefined\n  }\n}\n","import type {\n  DocumentNode,\n  OperationDefinitionNode,\n  OperationTypeNode,\n} from 'graphql'\nimport type { GraphQLVariables } from '../../handlers/GraphQLHandler'\nimport { toPublicUrl } from '../request/toPublicUrl'\nimport { devUtils } from './devUtils'\nimport { jsonParse } from './jsonParse'\nimport { parseMultipartData } from './parseMultipartData'\n\ninterface GraphQLInput {\n  query: string | null\n  variables?: GraphQLVariables\n}\n\nexport interface ParsedGraphQLQuery {\n  operationType: OperationTypeNode\n  operationName?: string\n}\n\nexport type ParsedGraphQLRequest<\n  VariablesType extends GraphQLVariables = GraphQLVariables,\n> =\n  | (ParsedGraphQLQuery & {\n      query: string\n      variables?: VariablesType\n    })\n  | undefined\n\nexport function parseDocumentNode(node: DocumentNode): ParsedGraphQLQuery {\n  const operationDef = node.definitions.find((definition) => {\n    return definition.kind === 'OperationDefinition'\n  }) as OperationDefinitionNode\n\n  return {\n    operationType: operationDef?.operation,\n    operationName: operationDef?.name?.value,\n  }\n}\n\nasync function parseQuery(query: string): Promise<ParsedGraphQLQuery | Error> {\n  /**\n   * @note Use `require` to get the \"graphql\" module here.\n   * It has to be scoped to this function because this module leaks to the\n   * root export. It has to be `require` because tools like Jest have trouble\n   * handling dynamic imports. It gets replaced with a dynamic import on build time.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  const { parse } = require('graphql')\n\n  try {\n    const ast = parse(query)\n    return parseDocumentNode(ast)\n  } catch (error) {\n    return error as Error\n  }\n}\n\nexport type GraphQLParsedOperationsMap = Record<string, string[]>\nexport type GraphQLMultipartRequestBody = {\n  operations: string\n  map?: string\n} & {\n  [fileName: string]: File\n}\n\nfunction extractMultipartVariables<VariablesType extends GraphQLVariables>(\n  variables: VariablesType,\n  map: GraphQLParsedOperationsMap,\n  files: Record<string, File>,\n) {\n  const operations = { variables }\n\n  for (const [key, pathArray] of Object.entries(map)) {\n    if (!(key in files)) {\n      throw new Error(`Given files do not have a key '${key}' .`)\n    }\n\n    for (const dotPath of pathArray) {\n      const [lastPath, ...reversedPaths] = dotPath.split('.').reverse()\n      const paths = reversedPaths.reverse()\n      let target: Record<string, any> = operations\n\n      for (const path of paths) {\n        if (!(path in target)) {\n          throw new Error(`Property '${paths}' is not in operations.`)\n        }\n\n        target = target[path]\n      }\n\n      target[lastPath] = files[key]\n    }\n  }\n\n  return operations.variables\n}\n\nasync function getGraphQLInput(request: Request): Promise<GraphQLInput | null> {\n  switch (request.method) {\n    case 'GET': {\n      const url = new URL(request.url)\n      const query = url.searchParams.get('query')\n      const variables = url.searchParams.get('variables') || ''\n\n      return {\n        query,\n        variables: jsonParse(variables),\n      }\n    }\n\n    case 'POST': {\n      // Clone the request so we could read its body without locking\n      // the body stream to the downward consumers.\n      const requestClone = request.clone()\n\n      // Handle multipart body GraphQL operations.\n      if (\n        request.headers.get('content-type')?.includes('multipart/form-data')\n      ) {\n        const responseJson = parseMultipartData<GraphQLMultipartRequestBody>(\n          await requestClone.text(),\n          request.headers,\n        )\n\n        if (!responseJson) {\n          return null\n        }\n\n        const { operations, map, ...files } = responseJson\n        const parsedOperations =\n          jsonParse<{ query?: string; variables?: GraphQLVariables }>(\n            operations,\n          ) || {}\n\n        if (!parsedOperations.query) {\n          return null\n        }\n\n        const parsedMap = jsonParse<GraphQLParsedOperationsMap>(map || '') || {}\n        const variables = parsedOperations.variables\n          ? extractMultipartVariables(\n              parsedOperations.variables,\n              parsedMap,\n              files,\n            )\n          : {}\n\n        return {\n          query: parsedOperations.query,\n          variables,\n        }\n      }\n\n      // Handle plain POST GraphQL operations.\n      const requestJson: {\n        query: string\n        variables?: GraphQLVariables\n        operations?: any /** @todo Annotate this */\n      } = await requestClone.json().catch(() => null)\n\n      if (requestJson?.query) {\n        const { query, variables } = requestJson\n\n        return {\n          query,\n          variables,\n        }\n      }\n    }\n\n    default:\n      return null\n  }\n}\n\n/**\n * Determines if a given request can be considered a GraphQL request.\n * Does not parse the query and does not guarantee its validity.\n */\nexport async function parseGraphQLRequest(\n  request: Request,\n): Promise<ParsedGraphQLRequest> {\n  const input = await getGraphQLInput(request)\n\n  if (!input || !input.query) {\n    return\n  }\n\n  const { query, variables } = input\n  const parsedResult = await parseQuery(query)\n\n  if (parsedResult instanceof Error) {\n    const requestPublicUrl = toPublicUrl(request.url)\n\n    throw new Error(\n      devUtils.formatMessage(\n        'Failed to intercept a GraphQL request to \"%s %s\": cannot parse query. See the error message from the parser below.\\n\\n%s',\n        request.method,\n        requestPublicUrl,\n        parsedResult.message,\n      ),\n    )\n  }\n\n  return {\n    query: input.query,\n    operationType: parsedResult.operationType,\n    operationName: parsedResult.operationName,\n    variables,\n  }\n}\n","import type { DocumentNode, GraphQLError, OperationTypeNode } from 'graphql'\nimport {\n  DefaultBodyType,\n  RequestHandler,\n  RequestHandlerDefaultInfo,\n  RequestHandlerOptions,\n  ResponseResolver,\n} from './RequestHandler'\nimport { getTimestamp } from '../utils/logging/getTimestamp'\nimport { getStatusCodeColor } from '../utils/logging/getStatusCodeColor'\nimport { serializeRequest } from '../utils/logging/serializeRequest'\nimport { serializeResponse } from '../utils/logging/serializeResponse'\nimport { Match, matchRequestUrl, Path } from '../utils/matching/matchRequestUrl'\nimport {\n  ParsedGraphQLRequest,\n  GraphQLMultipartRequestBody,\n  parseGraphQLRequest,\n  parseDocumentNode,\n} from '../utils/internal/parseGraphQLRequest'\nimport { toPublicUrl } from '../utils/request/toPublicUrl'\nimport { devUtils } from '../utils/internal/devUtils'\nimport { getAllRequestCookies } from '../utils/request/getRequestCookies'\n\nexport type ExpectedOperationTypeNode = OperationTypeNode | 'all'\nexport type GraphQLHandlerNameSelector = DocumentNode | RegExp | string\n\nexport type GraphQLQuery = Record<string, any>\nexport type GraphQLVariables = Record<string, any>\n\nexport interface GraphQLHandlerInfo extends RequestHandlerDefaultInfo {\n  operationType: ExpectedOperationTypeNode\n  operationName: GraphQLHandlerNameSelector\n}\n\nexport type GraphQLRequestParsedResult = {\n  match: Match\n  cookies: Record<string, string>\n} & (\n  | ParsedGraphQLRequest<GraphQLVariables>\n  /**\n   * An empty version of the ParsedGraphQLRequest\n   * which simplifies the return type of the resolver\n   * when the request is to a non-matching endpoint\n   */\n  | {\n      operationType?: undefined\n      operationName?: undefined\n      query?: undefined\n      variables?: undefined\n    }\n)\n\nexport type GraphQLResolverExtras<Variables extends GraphQLVariables> = {\n  query: string\n  operationName: string\n  variables: Variables\n  cookies: Record<string, string>\n}\n\nexport type GraphQLRequestBody<VariablesType extends GraphQLVariables> =\n  | GraphQLJsonRequestBody<VariablesType>\n  | GraphQLMultipartRequestBody\n  | Record<string, any>\n  | undefined\n\nexport interface GraphQLJsonRequestBody<Variables extends GraphQLVariables> {\n  query: string\n  variables?: Variables\n}\n\nexport type GraphQLResponseBody<BodyType extends DefaultBodyType> =\n  | {\n      data?: BodyType | null\n      errors?: readonly Partial<GraphQLError>[] | null\n    }\n  | null\n  | undefined\n\nexport function isDocumentNode(\n  value: DocumentNode | any,\n): value is DocumentNode {\n  if (value == null) {\n    return false\n  }\n\n  return typeof value === 'object' && 'kind' in value && 'definitions' in value\n}\n\nexport class GraphQLHandler extends RequestHandler<\n  GraphQLHandlerInfo,\n  GraphQLRequestParsedResult,\n  GraphQLResolverExtras<any>\n> {\n  private endpoint: Path\n\n  static parsedRequestCache = new WeakMap<\n    Request,\n    ParsedGraphQLRequest<GraphQLVariables>\n  >()\n\n  constructor(\n    operationType: ExpectedOperationTypeNode,\n    operationName: GraphQLHandlerNameSelector,\n    endpoint: Path,\n    resolver: ResponseResolver<GraphQLResolverExtras<any>, any, any>,\n    options?: RequestHandlerOptions,\n  ) {\n    let resolvedOperationName = operationName\n\n    if (isDocumentNode(operationName)) {\n      const parsedNode = parseDocumentNode(operationName)\n\n      if (parsedNode.operationType !== operationType) {\n        throw new Error(\n          `Failed to create a GraphQL handler: provided a DocumentNode with a mismatched operation type (expected \"${operationType}\", but got \"${parsedNode.operationType}\").`,\n        )\n      }\n\n      if (!parsedNode.operationName) {\n        throw new Error(\n          `Failed to create a GraphQL handler: provided a DocumentNode with no operation name.`,\n        )\n      }\n\n      resolvedOperationName = parsedNode.operationName\n    }\n\n    const header =\n      operationType === 'all'\n        ? `${operationType} (origin: ${endpoint.toString()})`\n        : `${operationType} ${resolvedOperationName} (origin: ${endpoint.toString()})`\n\n    super({\n      info: {\n        header,\n        operationType,\n        operationName: resolvedOperationName,\n      },\n      resolver,\n      options,\n    })\n\n    this.endpoint = endpoint\n  }\n\n  /**\n   * Parses the request body, once per request, cached across all\n   * GraphQL handlers. This is done to avoid multiple parsing of the\n   * request body, which each requires a clone of the request.\n   */\n  async parseGraphQLRequestOrGetFromCache(\n    request: Request,\n  ): Promise<ParsedGraphQLRequest<GraphQLVariables>> {\n    if (!GraphQLHandler.parsedRequestCache.has(request)) {\n      GraphQLHandler.parsedRequestCache.set(\n        request,\n        await parseGraphQLRequest(request).catch((error) => {\n          // eslint-disable-next-line no-console\n          console.error(error)\n          return undefined\n        }),\n      )\n    }\n\n    return GraphQLHandler.parsedRequestCache.get(request)\n  }\n\n  async parse(args: { request: Request }): Promise<GraphQLRequestParsedResult> {\n    /**\n     * If the request doesn't match a specified endpoint, there's no\n     * need to parse it since there's no case where we would handle this\n     */\n    const match = matchRequestUrl(new URL(args.request.url), this.endpoint)\n    const cookies = getAllRequestCookies(args.request)\n\n    if (!match.matches) {\n      return { match, cookies }\n    }\n\n    const parsedResult = await this.parseGraphQLRequestOrGetFromCache(\n      args.request,\n    )\n\n    if (typeof parsedResult === 'undefined') {\n      return { match, cookies }\n    }\n\n    return {\n      match,\n      cookies,\n      query: parsedResult.query,\n      operationType: parsedResult.operationType,\n      operationName: parsedResult.operationName,\n      variables: parsedResult.variables,\n    }\n  }\n\n  predicate(args: {\n    request: Request\n    parsedResult: GraphQLRequestParsedResult\n  }) {\n    if (args.parsedResult.operationType === undefined) {\n      return false\n    }\n\n    if (!args.parsedResult.operationName && this.info.operationType !== 'all') {\n      const publicUrl = toPublicUrl(args.request.url)\n\n      devUtils.warn(`\\\nFailed to intercept a GraphQL request at \"${args.request.method} ${publicUrl}\": anonymous GraphQL operations are not supported.\n\nConsider naming this operation or using \"graphql.operation()\" request handler to intercept GraphQL requests regardless of their operation name/type. Read more: https://mswjs.io/docs/api/graphql/#graphqloperationresolver`)\n      return false\n    }\n\n    const hasMatchingOperationType =\n      this.info.operationType === 'all' ||\n      args.parsedResult.operationType === this.info.operationType\n\n    const hasMatchingOperationName =\n      this.info.operationName instanceof RegExp\n        ? this.info.operationName.test(args.parsedResult.operationName || '')\n        : args.parsedResult.operationName === this.info.operationName\n\n    return (\n      args.parsedResult.match.matches &&\n      hasMatchingOperationType &&\n      hasMatchingOperationName\n    )\n  }\n\n  protected extendResolverArgs(args: {\n    request: Request\n    parsedResult: GraphQLRequestParsedResult\n  }) {\n    return {\n      query: args.parsedResult.query || '',\n      operationName: args.parsedResult.operationName || '',\n      variables: args.parsedResult.variables || {},\n      cookies: args.parsedResult.cookies,\n    }\n  }\n\n  async log(args: {\n    request: Request\n    response: Response\n    parsedResult: GraphQLRequestParsedResult\n  }) {\n    const loggedRequest = await serializeRequest(args.request)\n    const loggedResponse = await serializeResponse(args.response)\n    const statusColor = getStatusCodeColor(loggedResponse.status)\n    const requestInfo = args.parsedResult.operationName\n      ? `${args.parsedResult.operationType} ${args.parsedResult.operationName}`\n      : `anonymous ${args.parsedResult.operationType}`\n\n    // eslint-disable-next-line no-console\n    console.groupCollapsed(\n      devUtils.formatMessage(\n        `${getTimestamp()} ${requestInfo} (%c${loggedResponse.status} ${\n          loggedResponse.statusText\n        }%c)`,\n      ),\n      `color:${statusColor}`,\n      'color:inherit',\n    )\n    // eslint-disable-next-line no-console\n    console.log('Request:', loggedRequest)\n    // eslint-disable-next-line no-console\n    console.log('Handler:', this)\n    // eslint-disable-next-line no-console\n    console.log('Response:', loggedResponse)\n    // eslint-disable-next-line no-console\n    console.groupEnd()\n  }\n}\n","import type { DocumentNode, OperationTypeNode } from 'graphql'\nimport {\n  ResponseResolver,\n  RequestHandlerOptions,\n} from './handlers/RequestHandler'\nimport {\n  GraphQLHandler,\n  GraphQLVariables,\n  ExpectedOperationTypeNode,\n  GraphQLHandlerNameSelector,\n  GraphQLResolverExtras,\n  GraphQLResponseBody,\n  GraphQLQuery,\n} from './handlers/GraphQLHandler'\nimport type { Path } from './utils/matching/matchRequestUrl'\n\nexport interface TypedDocumentNode<\n  Result = { [key: string]: any },\n  Variables = { [key: string]: any },\n> extends DocumentNode {\n  __apiType?: (variables: Variables) => Result\n  __resultType?: Result\n  __variablesType?: Variables\n}\n\nexport type GraphQLRequestHandler = <\n  Query extends GraphQLQuery = GraphQLQuery,\n  Variables extends GraphQLVariables = GraphQLVariables,\n>(\n  operationName:\n    | GraphQLHandlerNameSelector\n    | DocumentNode\n    | TypedDocumentNode<Query, Variables>,\n  resolver: GraphQLResponseResolver<\n    [Query] extends [never] ? GraphQLQuery : Query,\n    Variables\n  >,\n  options?: RequestHandlerOptions,\n) => GraphQLHandler\n\nexport type GraphQLResponseResolver<\n  Query extends GraphQLQuery = GraphQLQuery,\n  Variables extends GraphQLVariables = GraphQLVariables,\n> = ResponseResolver<\n  GraphQLResolverExtras<Variables>,\n  null,\n  GraphQLResponseBody<[Query] extends [never] ? GraphQLQuery : Query>\n>\n\nfunction createScopedGraphQLHandler(\n  operationType: ExpectedOperationTypeNode,\n  url: Path,\n): GraphQLRequestHandler {\n  return (operationName, resolver, options = {}) => {\n    return new GraphQLHandler(\n      operationType,\n      operationName,\n      url,\n      resolver,\n      options,\n    )\n  }\n}\n\nfunction createGraphQLOperationHandler(url: Path) {\n  return <\n    Query extends GraphQLQuery = GraphQLQuery,\n    Variables extends GraphQLVariables = GraphQLVariables,\n  >(\n    resolver: ResponseResolver<\n      GraphQLResolverExtras<Variables>,\n      null,\n      GraphQLResponseBody<Query>\n    >,\n  ) => {\n    return new GraphQLHandler('all', new RegExp('.*'), url, resolver)\n  }\n}\n\nconst standardGraphQLHandlers = {\n  /**\n   * Intercepts a GraphQL query by a given name.\n   *\n   * @example\n   * graphql.query('GetUser', () => {\n   *   return HttpResponse.json({ data: { user: { name: 'John' } } })\n   * })\n   *\n   * @see {@link https://mswjs.io/docs/api/graphql#graphqlqueryqueryname-resolver `graphql.query()` API reference}\n   */\n  query: createScopedGraphQLHandler('query' as OperationTypeNode, '*'),\n\n  /**\n   * Intercepts a GraphQL mutation by its name.\n   *\n   * @example\n   * graphql.mutation('SavePost', () => {\n   *   return HttpResponse.json({ data: { post: { id: 'abc-123 } } })\n   * })\n   *\n   * @see {@link https://mswjs.io/docs/api/graphql#graphqlmutationmutationname-resolver `graphql.query()` API reference}\n   *\n   */\n  mutation: createScopedGraphQLHandler('mutation' as OperationTypeNode, '*'),\n\n  /**\n   * Intercepts any GraphQL operation, regardless of its type or name.\n   *\n   * @example\n   * graphql.operation(() => {\n   *   return HttpResponse.json({ data: { name: 'John' } })\n   * })\n   *\n   * @see {@link https://mswjs.io/docs/api/graphql#graphloperationresolver `graphql.operation()` API reference}\n   */\n  operation: createGraphQLOperationHandler('*'),\n}\n\nfunction createGraphQLLink(url: Path): typeof standardGraphQLHandlers {\n  return {\n    operation: createGraphQLOperationHandler(url),\n    query: createScopedGraphQLHandler('query' as OperationTypeNode, url),\n    mutation: createScopedGraphQLHandler('mutation' as OperationTypeNode, url),\n  }\n}\n\n/**\n * A namespace to intercept and mock GraphQL operations\n *\n * @example\n * graphql.query('GetUser', resolver)\n * graphql.mutation('DeletePost', resolver)\n *\n * @see {@link https://mswjs.io/docs/api/graphql `graphql` API reference}\n */\nexport const graphql = {\n  ...standardGraphQLHandlers,\n\n  /**\n   * Intercepts GraphQL operations scoped by the given URL.\n   *\n   * @example\n   * const github = graphql.link('https://api.github.com/graphql')\n   * github.query('GetRepo', resolver)\n   *\n   * @see {@link https://mswjs.io/docs/api/graphql#graphqllinkurl `graphql.link()` API reference}\n   */\n  link: createGraphQLLink,\n}\n","import { Emitter } from 'strict-event-emitter'\nimport { createRequestId } from '@mswjs/interceptors'\nimport type { WebSocketConnectionData } from '@mswjs/interceptors/WebSocket'\nimport {\n  type Match,\n  type Path,\n  type PathParams,\n  matchRequestUrl,\n} from '../utils/matching/matchRequestUrl'\nimport { getCallFrame } from '../utils/internal/getCallFrame'\nimport type { HandlerKind } from './common'\n\ntype WebSocketHandlerParsedResult = {\n  match: Match\n}\n\nexport type WebSocketHandlerEventMap = {\n  connection: [args: WebSocketHandlerConnection]\n}\n\nexport interface WebSocketHandlerConnection extends WebSocketConnectionData {\n  params: PathParams\n}\n\nexport const kEmitter = Symbol('kEmitter')\nexport const kDispatchEvent = Symbol('kDispatchEvent')\nexport const kSender = Symbol('kSender')\nconst kStopPropagationPatched = Symbol('kStopPropagationPatched')\nconst KOnStopPropagation = Symbol('KOnStopPropagation')\n\nexport class WebSocketHandler {\n  private readonly __kind: HandlerKind\n\n  public id: string\n  public callFrame?: string\n\n  protected [kEmitter]: Emitter<WebSocketHandlerEventMap>\n\n  constructor(private readonly url: Path) {\n    this.id = createRequestId()\n\n    this[kEmitter] = new Emitter()\n    this.callFrame = getCallFrame(new Error())\n    this.__kind = 'EventHandler'\n  }\n\n  public parse(args: {\n    event: MessageEvent<WebSocketConnectionData>\n  }): WebSocketHandlerParsedResult {\n    const connection = args.event.data\n    const match = matchRequestUrl(connection.client.url, this.url)\n\n    return {\n      match,\n    }\n  }\n\n  public predicate(args: {\n    event: MessageEvent<WebSocketConnectionData>\n    parsedResult: WebSocketHandlerParsedResult\n  }): boolean {\n    return args.parsedResult.match.matches\n  }\n\n  async [kDispatchEvent](\n    event: MessageEvent<WebSocketConnectionData>,\n  ): Promise<void> {\n    const parsedResult = this.parse({ event })\n    const connection = event.data\n\n    const resolvedConnection: WebSocketHandlerConnection = {\n      ...connection,\n      params: parsedResult.match.params || {},\n    }\n\n    // Support `event.stopPropagation()` for various client/server events.\n    connection.client.addEventListener(\n      'message',\n      createStopPropagationListener(this),\n    )\n    connection.client.addEventListener(\n      'close',\n      createStopPropagationListener(this),\n    )\n\n    connection.server.addEventListener(\n      'open',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'message',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'error',\n      createStopPropagationListener(this),\n    )\n    connection.server.addEventListener(\n      'close',\n      createStopPropagationListener(this),\n    )\n\n    // Emit the connection event on the handler.\n    // This is what the developer adds listeners for.\n    this[kEmitter].emit('connection', resolvedConnection)\n  }\n}\n\nfunction createStopPropagationListener(handler: WebSocketHandler) {\n  return function stopPropagationListener(event: Event) {\n    const propagationStoppedAt = Reflect.get(event, 'kPropagationStoppedAt') as\n      | string\n      | undefined\n\n    if (propagationStoppedAt && handler.id !== propagationStoppedAt) {\n      event.stopImmediatePropagation()\n      return\n    }\n\n    Object.defineProperty(event, KOnStopPropagation, {\n      value(this: WebSocketHandler) {\n        Object.defineProperty(event, 'kPropagationStoppedAt', {\n          value: handler.id,\n        })\n      },\n      configurable: true,\n    })\n\n    // Since the same event instance is shared between all client/server objects,\n    // make sure to patch its `stopPropagation` method only once.\n    if (!Reflect.get(event, kStopPropagationPatched)) {\n      event.stopPropagation = new Proxy(event.stopPropagation, {\n        apply: (target, thisArg, args) => {\n          Reflect.get(event, KOnStopPropagation)?.call(handler)\n          return Reflect.apply(target, thisArg, args)\n        },\n      })\n\n      Object.defineProperty(event, kStopPropagationPatched, {\n        value: true,\n        // If something else attempts to redefine this, throw.\n        configurable: false,\n      })\n    }\n  }\n}\n","import { WebSocketClientConnectionProtocol } from '@mswjs/interceptors/lib/browser/interceptors/WebSocket'\nimport {\n  SerializedWebSocketClient,\n  WebSocketClientStore,\n} from './WebSocketClientStore'\n\nexport class WebSocketMemoryClientStore implements WebSocketClientStore {\n  private store: Map<string, SerializedWebSocketClient>\n\n  constructor() {\n    this.store = new Map()\n  }\n\n  public async add(client: WebSocketClientConnectionProtocol): Promise<void> {\n    this.store.set(client.id, { id: client.id, url: client.url.href })\n  }\n\n  public getAll(): Promise<Array<SerializedWebSocketClient>> {\n    return Promise.resolve(Array.from(this.store.values()))\n  }\n\n  public async deleteMany(clientIds: Array<string>): Promise<void> {\n    for (const clientId of clientIds) {\n      this.store.delete(clientId)\n    }\n  }\n}\n","export type PromiseState = 'pending' | 'fulfilled' | 'rejected'\n\nexport type Executor<Value> = ConstructorParameters<typeof Promise<Value>>[0]\nexport type ResolveFunction<Value> = Parameters<Executor<Value>>[0]\nexport type RejectFunction<Reason> = Parameters<Executor<Reason>>[1]\n\nexport type DeferredPromiseExecutor<Input = never, Output = Input> = {\n  (resolve?: ResolveFunction<Input>, reject?: RejectFunction<any>): void\n\n  resolve: ResolveFunction<Input>\n  reject: RejectFunction<any>\n  result?: Output\n  state: PromiseState\n  rejectionReason?: unknown\n}\nexport function createDeferredExecutor<\n  Input = never,\n  Output = Input\n>(): DeferredPromiseExecutor<Input, Output> {\n  const executor = <DeferredPromiseExecutor<Input, Output>>((\n    resolve,\n    reject\n  ) => {\n    executor.state = 'pending'\n\n    executor.resolve = (data) => {\n      if (executor.state !== 'pending') {\n        return\n      }\n\n      executor.result = data as Output\n\n      const onFulfilled = <Value>(value: Value) => {\n        executor.state = 'fulfilled'\n        return value\n      }\n\n      return resolve(\n        data instanceof Promise ? data : Promise.resolve(data).then(onFulfilled)\n      )\n    }\n\n    executor.reject = (reason) => {\n      if (executor.state !== 'pending') {\n        return\n      }\n\n      queueMicrotask(() => {\n        executor.state = 'rejected'\n      })\n\n      return reject((executor.rejectionReason = reason))\n    }\n  })\n\n  return executor\n}\n","import {\n  type Executor,\n  type RejectFunction,\n  type ResolveFunction,\n  type DeferredPromiseExecutor,\n  createDeferredExecutor,\n} from './createDeferredExecutor'\n\nexport class DeferredPromise<Input, Output = Input> extends Promise<Input> {\n  #executor: DeferredPromiseExecutor\n\n  public resolve: ResolveFunction<Output>\n  public reject: RejectFunction<Output>\n\n  constructor(executor: Executor<Input> | null = null) {\n    const deferredExecutor = createDeferredExecutor()\n    super((originalResolve, originalReject) => {\n      deferredExecutor(originalResolve, originalReject)\n      executor?.(deferredExecutor.resolve, deferredExecutor.reject)\n    })\n\n    this.#executor = deferredExecutor\n    this.resolve = this.#executor.resolve\n    this.reject = this.#executor.reject\n  }\n\n  public get state() {\n    return this.#executor.state\n  }\n\n  public get rejectionReason() {\n    return this.#executor.rejectionReason\n  }\n\n  public then<ThenResult = Input, CatchResult = never>(\n    onFulfilled?: (value: Input) => ThenResult | PromiseLike<ThenResult>,\n    onRejected?: (reason: any) => CatchResult | PromiseLike<CatchResult>\n  ) {\n    return this.#decorate(super.then(onFulfilled, onRejected))\n  }\n\n  public catch<CatchResult = never>(\n    onRejected?: (reason: any) => CatchResult | PromiseLike<CatchResult>\n  ) {\n    return this.#decorate(super.catch(onRejected))\n  }\n\n  public finally(onfinally?: () => void | Promise<any>) {\n    return this.#decorate(super.finally(onfinally))\n  }\n\n  #decorate<ChildInput>(\n    promise: Promise<ChildInput>\n  ): DeferredPromise<ChildInput, Output> {\n    return Object.defineProperties(promise, {\n      resolve: { configurable: true, value: this.resolve },\n      reject: { configurable: true, value: this.reject },\n    }) as DeferredPromise<ChildInput, Output>\n  }\n}\n","import { DeferredPromise } from '@open-draft/deferred-promise'\nimport { WebSocketClientConnectionProtocol } from '@mswjs/interceptors/lib/browser/interceptors/WebSocket'\nimport {\n  type SerializedWebSocketClient,\n  WebSocketClientStore,\n} from './WebSocketClientStore'\n\nconst DB_NAME = 'msw-websocket-clients'\nconst DB_STORE_NAME = 'clients'\n\nexport class WebSocketIndexedDBClientStore implements WebSocketClientStore {\n  private db: Promise<IDBDatabase>\n\n  constructor() {\n    this.db = this.createDatabase()\n  }\n\n  public async add(client: WebSocketClientConnectionProtocol): Promise<void> {\n    const promise = new DeferredPromise<void>()\n    const store = await this.getStore()\n\n    /**\n     * @note Use `.put()` instead of `.add()` to allow setting clients\n     * that already exist in the database. This can happen if a single page\n     * has multiple event handlers. Each handler will receive the \"connection\"\n     * event in parallel, and try to set that WebSocket client in the database.\n     */\n    const request = store.put({\n      id: client.id,\n      url: client.url.href,\n    } satisfies SerializedWebSocketClient)\n\n    request.onsuccess = () => {\n      promise.resolve()\n    }\n    request.onerror = () => {\n      // eslint-disable-next-line no-console\n      console.error(request.error)\n      promise.reject(\n        new Error(\n          `Failed to add WebSocket client \"${client.id}\". There is likely an additional output above.`,\n        ),\n      )\n    }\n\n    return promise\n  }\n\n  public async getAll(): Promise<Array<SerializedWebSocketClient>> {\n    const promise = new DeferredPromise<Array<SerializedWebSocketClient>>()\n    const store = await this.getStore()\n    const request = store.getAll() as IDBRequest<\n      Array<SerializedWebSocketClient>\n    >\n\n    request.onsuccess = () => {\n      promise.resolve(request.result)\n    }\n    request.onerror = () => {\n      // eslint-disable-next-line no-console\n      console.log(request.error)\n      promise.reject(\n        new Error(\n          `Failed to get all WebSocket clients. There is likely an additional output above.`,\n        ),\n      )\n    }\n\n    return promise\n  }\n\n  public async deleteMany(clientIds: Array<string>): Promise<void> {\n    const promise = new DeferredPromise<void>()\n    const store = await this.getStore()\n\n    for (const clientId of clientIds) {\n      store.delete(clientId)\n    }\n\n    store.transaction.oncomplete = () => {\n      promise.resolve()\n    }\n    store.transaction.onerror = () => {\n      // eslint-disable-next-line no-console\n      console.error(store.transaction.error)\n      promise.reject(\n        new Error(\n          `Failed to delete WebSocket clients [${clientIds.join(', ')}]. There is likely an additional output above.`,\n        ),\n      )\n    }\n\n    return promise\n  }\n\n  private async createDatabase(): Promise<IDBDatabase> {\n    const promise = new DeferredPromise<IDBDatabase>()\n    const request = indexedDB.open(DB_NAME, 1)\n\n    request.onsuccess = ({ currentTarget }) => {\n      const db = Reflect.get(currentTarget!, 'result') as IDBDatabase\n\n      if (db.objectStoreNames.contains(DB_STORE_NAME)) {\n        return promise.resolve(db)\n      }\n    }\n\n    request.onupgradeneeded = async ({ currentTarget }) => {\n      const db = Reflect.get(currentTarget!, 'result') as IDBDatabase\n      if (db.objectStoreNames.contains(DB_STORE_NAME)) {\n        return\n      }\n\n      const store = db.createObjectStore(DB_STORE_NAME, { keyPath: 'id' })\n      store.transaction.oncomplete = () => {\n        promise.resolve(db)\n      }\n      store.transaction.onerror = () => {\n        // eslint-disable-next-line no-console\n        console.error(store.transaction.error)\n        promise.reject(\n          new Error(\n            'Failed to create WebSocket client store. There is likely an additional output above.',\n          ),\n        )\n      }\n    }\n    request.onerror = () => {\n      // eslint-disable-next-line no-console\n      console.error(request.error)\n      promise.reject(\n        new Error(\n          'Failed to open an IndexedDB database. There is likely an additional output above.',\n        ),\n      )\n    }\n\n    return promise\n  }\n\n  private async getStore(): Promise<IDBObjectStore> {\n    const db = await this.db\n    return db.transaction(DB_STORE_NAME, 'readwrite').objectStore(DB_STORE_NAME)\n  }\n}\n","import type {\n  WebSocketData,\n  WebSocketClientConnection,\n  WebSocketClientConnectionProtocol,\n} from '@mswjs/interceptors/WebSocket'\nimport { WebSocketClientStore } from './WebSocketClientStore'\nimport { WebSocketMemoryClientStore } from './WebSocketMemoryClientStore'\nimport { WebSocketIndexedDBClientStore } from './WebSocketIndexedDBClientStore'\n\nexport type WebSocketBroadcastChannelMessage =\n  | {\n      type: 'extraneous:send'\n      payload: {\n        clientId: string\n        data: WebSocketData\n      }\n    }\n  | {\n      type: 'extraneous:close'\n      payload: {\n        clientId: string\n        code?: number\n        reason?: string\n      }\n    }\n\n/**\n * A manager responsible for accumulating WebSocket client\n * connections across different browser runtimes.\n */\nexport class WebSocketClientManager {\n  private store: WebSocketClientStore\n  private runtimeClients: Map<string, WebSocketClientConnectionProtocol>\n  private allClients: Set<WebSocketClientConnectionProtocol>\n\n  constructor(private channel: BroadcastChannel) {\n    // Store the clients in the IndexedDB in the browser,\n    // otherwise, store the clients in memory.\n    this.store =\n      typeof indexedDB !== 'undefined'\n        ? new WebSocketIndexedDBClientStore()\n        : new WebSocketMemoryClientStore()\n\n    this.runtimeClients = new Map()\n    this.allClients = new Set()\n\n    this.channel.addEventListener('message', (message) => {\n      if (message.data?.type === 'db:update') {\n        this.flushDatabaseToMemory()\n      }\n    })\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('message', async (message) => {\n        if (message.data?.type === 'msw/worker:stop') {\n          await this.removeRuntimeClients()\n        }\n      })\n    }\n  }\n\n  private async flushDatabaseToMemory() {\n    const storedClients = await this.store.getAll()\n\n    this.allClients = new Set(\n      storedClients.map((client) => {\n        const runtimeClient = this.runtimeClients.get(client.id)\n\n        /**\n         * @note For clients originating in this runtime, use their\n         * direct references. No need to wrap them in a remote connection.\n         */\n        if (runtimeClient) {\n          return runtimeClient\n        }\n\n        return new WebSocketRemoteClientConnection(\n          client.id,\n          new URL(client.url),\n          this.channel,\n        )\n      }),\n    )\n  }\n\n  private async removeRuntimeClients(): Promise<void> {\n    await this.store.deleteMany(Array.from(this.runtimeClients.keys()))\n    this.runtimeClients.clear()\n    await this.flushDatabaseToMemory()\n    this.notifyOthersAboutDatabaseUpdate()\n  }\n\n  /**\n   * All active WebSocket client connections.\n   */\n  get clients(): Set<WebSocketClientConnectionProtocol> {\n    return this.allClients\n  }\n\n  /**\n   * Notify other runtimes about the database update\n   * using the shared `BroadcastChannel` instance.\n   */\n  private notifyOthersAboutDatabaseUpdate(): void {\n    this.channel.postMessage({ type: 'db:update' })\n  }\n\n  private async addClient(client: WebSocketClientConnection): Promise<void> {\n    await this.store.add(client)\n    // Sync the in-memory clients in this runtime with the\n    // updated database. This pulls in all the stored clients.\n    await this.flushDatabaseToMemory()\n    this.notifyOthersAboutDatabaseUpdate()\n  }\n\n  /**\n   * Adds the given `WebSocket` client connection to the set\n   * of all connections. The given connection is always the complete\n   * connection object because `addConnection()` is called only\n   * for the opened connections in the same runtime.\n   */\n  public async addConnection(client: WebSocketClientConnection): Promise<void> {\n    // Store this client in the map of clients created in this runtime.\n    // This way, the manager can distinguish between this runtime clients\n    // and extraneous runtime clients when synchronizing clients storage.\n    this.runtimeClients.set(client.id, client)\n\n    // Add the new client to the storage.\n    await this.addClient(client)\n\n    // Handle the incoming BroadcastChannel messages from other runtimes\n    // that attempt to control this runtime (via a remote connection wrapper).\n    // E.g. another runtime calling `client.send()` for the client in this runtime.\n    const handleExtraneousMessage = (\n      message: MessageEvent<WebSocketBroadcastChannelMessage>,\n    ) => {\n      const { type, payload } = message.data\n\n      // Ignore broadcasted messages for other clients.\n      if (\n        typeof payload === 'object' &&\n        'clientId' in payload &&\n        payload.clientId !== client.id\n      ) {\n        return\n      }\n\n      switch (type) {\n        case 'extraneous:send': {\n          client.send(payload.data)\n          break\n        }\n\n        case 'extraneous:close': {\n          client.close(payload.code, payload.reason)\n          break\n        }\n      }\n    }\n\n    const abortController = new AbortController()\n\n    this.channel.addEventListener('message', handleExtraneousMessage, {\n      signal: abortController.signal,\n    })\n\n    // Once closed, this connection cannot be operated on.\n    // This must include the extraneous runtimes as well.\n    client.addEventListener('close', () => abortController.abort(), {\n      once: true,\n    })\n  }\n}\n\n/**\n * A wrapper class to operate with WebSocket client connections\n * from other runtimes. This class maintains 1-1 public API\n * compatibility to the `WebSocketClientConnection` but relies\n * on the given `BroadcastChannel` to communicate instructions\n * with the client connections from other runtimes.\n */\nexport class WebSocketRemoteClientConnection\n  implements WebSocketClientConnectionProtocol\n{\n  constructor(\n    public readonly id: string,\n    public readonly url: URL,\n    private channel: BroadcastChannel,\n  ) {}\n\n  send(data: WebSocketData): void {\n    this.channel.postMessage({\n      type: 'extraneous:send',\n      payload: {\n        clientId: this.id,\n        data,\n      },\n    } as WebSocketBroadcastChannelMessage)\n  }\n\n  close(code?: number | undefined, reason?: string | undefined): void {\n    this.channel.postMessage({\n      type: 'extraneous:close',\n      payload: {\n        clientId: this.id,\n        code,\n        reason,\n      },\n    } as WebSocketBroadcastChannelMessage)\n  }\n}\n","import { invariant } from 'outvariant'\nimport type {\n  WebSocketData,\n  WebSocketClientConnectionProtocol,\n} from '@mswjs/interceptors/WebSocket'\nimport {\n  WebSocketHandler,\n  kEmitter,\n  type WebSocketHandlerEventMap,\n} from './handlers/WebSocketHandler'\nimport { Path, isPath } from './utils/matching/matchRequestUrl'\nimport { WebSocketClientManager } from './ws/WebSocketClientManager'\n\nfunction isBroadcastChannelWithUnref(\n  channel: BroadcastChannel,\n): channel is BroadcastChannel & NodeJS.RefCounted {\n  return typeof Reflect.get(channel, 'unref') !== 'undefined'\n}\n\nconst webSocketChannel = new BroadcastChannel('msw:websocket-client-manager')\n\nif (isBroadcastChannelWithUnref(webSocketChannel)) {\n  // Allows the Node.js thread to exit if it is the only active handle in the event system.\n  // https://nodejs.org/api/worker_threads.html#broadcastchannelunref\n  webSocketChannel.unref()\n}\n\nexport type WebSocketEventListener<\n  EventType extends keyof WebSocketHandlerEventMap,\n> = (...args: WebSocketHandlerEventMap[EventType]) => void\n\nexport type WebSocketLink = {\n  /**\n   * A set of all WebSocket clients connected\n   * to this link.\n   *\n   * @see {@link https://mswjs.io/docs/api/ws#clients `clients` API reference}\n   */\n  clients: Set<WebSocketClientConnectionProtocol>\n\n  /**\n   * Adds an event listener to this WebSocket link.\n   *\n   * @example\n   * const chat = ws.link('wss://chat.example.com')\n   * chat.addEventListener('connection', listener)\n   *\n   * @see {@link https://mswjs.io/docs/api/ws#onevent-listener `on()` API reference}\n   */\n  addEventListener<EventType extends keyof WebSocketHandlerEventMap>(\n    event: EventType,\n    listener: WebSocketEventListener<EventType>,\n  ): WebSocketHandler\n\n  /**\n   * Broadcasts the given data to all WebSocket clients.\n   *\n   * @example\n   * const service = ws.link('wss://example.com')\n   * service.addEventListener('connection', () => {\n   *   service.broadcast('hello, everyone!')\n   * })\n   *\n   * @see {@link https://mswjs.io/docs/api/ws#broadcastdata `broadcast()` API reference}\n   */\n  broadcast(data: WebSocketData): void\n\n  /**\n   * Broadcasts the given data to all WebSocket clients\n   * except the ones provided in the `clients` argument.\n   *\n   * @example\n   * const service = ws.link('wss://example.com')\n   * service.addEventListener('connection', ({ client }) => {\n   *   service.broadcastExcept(client, 'hi, the rest of you!')\n   * })\n   *\n   * @see {@link https://mswjs.io/docs/api/ws#broadcastexceptclients-data `broadcast()` API reference}\n   */\n  broadcastExcept(\n    clients:\n      | WebSocketClientConnectionProtocol\n      | Array<WebSocketClientConnectionProtocol>,\n    data: WebSocketData,\n  ): void\n}\n\n/**\n * Intercepts outgoing WebSocket connections to the given URL.\n *\n * @example\n * const chat = ws.link('wss://chat.example.com')\n * chat.addEventListener('connection', ({ client }) => {\n *   client.send('hello from server!')\n * })\n */\nfunction createWebSocketLinkHandler(url: Path): WebSocketLink {\n  invariant(url, 'Expected a WebSocket server URL but got undefined')\n\n  invariant(\n    isPath(url),\n    'Expected a WebSocket server URL to be a valid path but got %s',\n    typeof url,\n  )\n\n  const clientManager = new WebSocketClientManager(webSocketChannel)\n\n  return {\n    get clients() {\n      return clientManager.clients\n    },\n    addEventListener(event, listener) {\n      const handler = new WebSocketHandler(url)\n\n      // Add the connection event listener for when the\n      // handler matches and emits a connection event.\n      // When that happens, store that connection in the\n      // set of all connections for reference.\n      handler[kEmitter].on('connection', async ({ client }) => {\n        await clientManager.addConnection(client)\n      })\n\n      // The \"handleWebSocketEvent\" function will invoke\n      // the \"run()\" method on the WebSocketHandler.\n      // If the handler matches, it will emit the \"connection\"\n      // event. Attach the user-defined listener to that event.\n      handler[kEmitter].on(event, listener)\n\n      return handler\n    },\n\n    broadcast(data) {\n      // This will invoke \"send()\" on the immediate clients\n      // in this runtime and post a message to the broadcast channel\n      // to trigger send for the clients in other runtimes.\n      this.broadcastExcept([], data)\n    },\n\n    broadcastExcept(clients, data) {\n      const ignoreClients = Array.prototype\n        .concat(clients)\n        .map((client) => client.id)\n\n      clientManager.clients.forEach((otherClient) => {\n        if (!ignoreClients.includes(otherClient.id)) {\n          otherClient.send(data)\n        }\n      })\n    },\n  }\n}\n\n/**\n * A namespace to intercept and mock WebSocket connections.\n *\n * @example\n * const chat = ws.link('wss://chat.example.com')\n *\n * @see {@link https://mswjs.io/docs/api/ws `ws` API reference}\n * @see {@link https://mswjs.io/docs/basics/handling-websocket-events Handling WebSocket events}\n */\nexport const ws = {\n  link: createWebSocketLinkHandler,\n}\n\nexport { WebSocketData }\n","export type AsyncTuple<\n  ErrorType extends any = Error,\n  DataType extends any = unknown,\n> =\n  | {\n      error: ErrorType\n      data: null\n    }\n  | { error: null; data: DataType }\n\n/**\n * Gracefully handles a given Promise factory.\n * @example\n * const { error, data } = await until(() => asyncAction())\n */\nexport const until = async <\n  ErrorType extends any = Error,\n  DataType extends any = unknown,\n>(\n  promise: () => Promise<DataType>,\n): Promise<AsyncTuple<ErrorType, DataType>> => {\n  try {\n    const data = await promise().catch((error) => {\n      throw error\n    })\n    return { error: null, data }\n  } catch (error) {\n    return { error, data: null }\n  }\n}\n","import {\n  RequestHandler,\n  type RequestHandlerExecutionResult,\n} from '../handlers/RequestHandler'\n\nexport interface HandlersExecutionResult {\n  handler: RequestHandler\n  parsedResult?: any\n  response?: Response\n}\n\nexport interface ResponseResolutionContext {\n  baseUrl?: string\n}\n\n/**\n * Executes the list of request handlers against the given request.\n * Returns the execution result object containing any matching request\n * handler and any mocked response it returned.\n */\nexport const executeHandlers = async <Handlers extends Array<RequestHandler>>({\n  request,\n  requestId,\n  handlers,\n  resolutionContext,\n}: {\n  request: Request\n  requestId: string\n  handlers: Handlers\n  resolutionContext?: ResponseResolutionContext\n}): Promise<HandlersExecutionResult | null> => {\n  let matchingHandler: RequestHandler | null = null\n  let result: RequestHandlerExecutionResult<any> | null = null\n\n  for (const handler of handlers) {\n    result = await handler.run({ request, requestId, resolutionContext })\n\n    // If the handler produces some result for this request,\n    // it automatically becomes matching.\n    if (result !== null) {\n      matchingHandler = handler\n    }\n\n    // Stop the lookup if this handler returns a mocked response.\n    // If it doesn't, it will still be considered the last matching\n    // handler until any of them returns a response. This way we can\n    // distinguish between fallthrough handlers without responses\n    // and the lack of a matching handler.\n    if (result?.response) {\n      break\n    }\n  }\n\n  if (matchingHandler) {\n    return {\n      handler: matchingHandler,\n      parsedResult: result?.parsedResult,\n      response: result?.response,\n    }\n  }\n\n  return null\n}\n","import { toPublicUrl } from './toPublicUrl'\nimport { InternalError, devUtils } from '../internal/devUtils'\n\nexport interface UnhandledRequestPrint {\n  warning(): void\n  error(): void\n}\n\nexport type UnhandledRequestCallback = (\n  request: Request,\n  print: UnhandledRequestPrint,\n) => void\n\nexport type UnhandledRequestStrategy =\n  | 'bypass'\n  | 'warn'\n  | 'error'\n  | UnhandledRequestCallback\n\nexport async function onUnhandledRequest(\n  request: Request,\n  strategy: UnhandledRequestStrategy = 'warn',\n): Promise<void> {\n  const url = new URL(request.url)\n  const publicUrl = toPublicUrl(url) + url.search\n\n  const requestBody =\n    request.method === 'HEAD' || request.method === 'GET'\n      ? null\n      : await request.clone().text()\n  const messageDetails = `\\n\\n  \\u2022 ${request.method} ${publicUrl}\\n\\n${requestBody ? `  \\u2022 Request body: ${requestBody}\\n\\n` : ''}`\n  const unhandledRequestMessage = `intercepted a request without a matching request handler:${messageDetails}If you still wish to intercept this unhandled request, please create a request handler for it.\\nRead more: https://mswjs.io/docs/getting-started/mocks`\n\n  function applyStrategy(strategy: UnhandledRequestStrategy) {\n    switch (strategy) {\n      case 'error': {\n        // Print a developer-friendly error.\n        devUtils.error('Error: %s', unhandledRequestMessage)\n\n        // Throw an exception to halt request processing and not perform the original request.\n        throw new InternalError(\n          devUtils.formatMessage(\n            'Cannot bypass a request when using the \"error\" strategy for the \"onUnhandledRequest\" option.',\n          ),\n        )\n      }\n\n      case 'warn': {\n        devUtils.warn('Warning: %s', unhandledRequestMessage)\n        break\n      }\n\n      case 'bypass':\n        break\n\n      default:\n        throw new InternalError(\n          devUtils.formatMessage(\n            'Failed to react to an unhandled request: unknown strategy \"%s\". Please provide one of the supported strategies (\"bypass\", \"warn\", \"error\") or a custom callback function as the value of the \"onUnhandledRequest\" option.',\n            strategy,\n          ),\n        )\n    }\n  }\n\n  if (typeof strategy === 'function') {\n    strategy(request, {\n      warning: applyStrategy.bind(null, 'warn'),\n      error: applyStrategy.bind(null, 'error'),\n    })\n    return\n  }\n\n  /**\n   * @note Ignore \"file://\" requests.\n   * Those often are an implementation detail of modern tooling\n   * that fetches modules via HTTP. Developers don't issue those\n   * requests and so they mustn't be warned about them.\n   */\n  if (url.protocol === 'file:') {\n    return\n  }\n\n  applyStrategy(strategy)\n}\n","import statuses from '@bundled-es-modules/statuses'\nimport { Headers as HeadersPolyfill } from 'headers-polyfill'\nimport type { HttpResponseInit } from '../../HttpResponse'\n\nconst { message } = statuses\n\nexport const kSetCookie = Symbol('kSetCookie')\n\nexport interface HttpResponseDecoratedInit extends HttpResponseInit {\n  status: number\n  statusText: string\n  headers: Headers\n}\n\nexport function normalizeResponseInit(\n  init: HttpResponseInit = {},\n): HttpResponseDecoratedInit {\n  const status = init?.status || 200\n  const statusText = init?.statusText || message[status] || ''\n  const headers = new Headers(init?.headers)\n\n  return {\n    ...init,\n    headers,\n    status,\n    statusText,\n  }\n}\n\nexport function decorateResponse(\n  response: Response,\n  init: HttpResponseDecoratedInit,\n): Response {\n  // Allow to mock the response type.\n  if (init.type) {\n    Object.defineProperty(response, 'type', {\n      value: init.type,\n      enumerable: true,\n      writable: false,\n    })\n  }\n\n  const responseCookies = init.headers.get('set-cookie')\n\n  if (responseCookies) {\n    // Record the raw \"Set-Cookie\" response header provided\n    // in the HeadersInit. This is later used to store these cookies\n    // in cookie jar and return the right cookies in the \"cookies\"\n    // response resolver argument.\n    Object.defineProperty(response, kSetCookie, {\n      value: responseCookies,\n      enumerable: false,\n      writable: false,\n    })\n\n    // Cookie forwarding is only relevant in the browser.\n    if (typeof document !== 'undefined') {\n      // Write the mocked response cookies to the document.\n      // Use `headers-polyfill` to get the Set-Cookie header value correctly.\n      // This is an alternative until TypeScript 5.2\n      // and Node.js v20 become the minimum supported version\n      // and getSetCookie in Headers can be used directly.\n      const responseCookiePairs = HeadersPolyfill.prototype.getSetCookie.call(\n        init.headers,\n      )\n\n      for (const cookieString of responseCookiePairs) {\n        // No need to parse the cookie headers because it's defined\n        // as the valid cookie string to begin with.\n        document.cookie = cookieString\n      }\n    }\n  }\n\n  return response\n}\n","import { cookieStore } from '../cookieStore'\nimport { kSetCookie } from '../HttpResponse/decorators'\n\nexport function storeResponseCookies(\n  request: Request,\n  response: Response,\n): void {\n  // Grab the raw \"Set-Cookie\" response header provided\n  // in the HeadersInit for this mocked response.\n  const responseCookies = Reflect.get(response, kSetCookie) as\n    | string\n    | undefined\n\n  if (responseCookies) {\n    cookieStore.setCookie(responseCookies, request.url)\n  }\n}\n","import { until } from '@open-draft/until'\nimport { Emitter } from 'strict-event-emitter'\nimport { LifeCycleEventsMap, SharedOptions } from '../sharedOptions'\nimport { RequiredDeep } from '../typeUtils'\nimport type { RequestHandler } from '../handlers/RequestHandler'\nimport { HandlersExecutionResult, executeHandlers } from './executeHandlers'\nimport { onUnhandledRequest } from './request/onUnhandledRequest'\nimport { storeResponseCookies } from './request/storeResponseCookies'\n\nexport interface HandleRequestOptions {\n  /**\n   * `resolutionContext` is not part of the general public api\n   * but is exposed to aid in creating extensions like\n   * `@mswjs/http-middleware`.\n   */\n  resolutionContext?: {\n    /**\n     * A base url to use when resolving relative urls.\n     * @note This is primarily used by the `@mswjs/http-middleware`\n     * to resolve relative urls in the context of the running server\n     */\n    baseUrl?: string\n  }\n\n  /**\n   * Invoked whenever a request is performed as-is.\n   */\n  onPassthroughResponse?(request: Request): void\n\n  /**\n   * Invoked when the mocked response is ready to be sent.\n   */\n  onMockedResponse?(\n    response: Response,\n    handler: RequiredDeep<HandlersExecutionResult>,\n  ): void\n}\n\nexport async function handleRequest(\n  request: Request,\n  requestId: string,\n  handlers: Array<RequestHandler>,\n  options: RequiredDeep<SharedOptions>,\n  emitter: Emitter<LifeCycleEventsMap>,\n  handleRequestOptions?: HandleRequestOptions,\n): Promise<Response | undefined> {\n  emitter.emit('request:start', { request, requestId })\n\n  // Perform requests wrapped in \"bypass()\" as-is.\n  if (request.headers.get('accept')?.includes('msw/passthrough')) {\n    emitter.emit('request:end', { request, requestId })\n    handleRequestOptions?.onPassthroughResponse?.(request)\n    return\n  }\n\n  // Resolve a mocked response from the list of request handlers.\n  const lookupResult = await until(() => {\n    return executeHandlers({\n      request,\n      requestId,\n      handlers,\n      resolutionContext: handleRequestOptions?.resolutionContext,\n    })\n  })\n\n  if (lookupResult.error) {\n    // Allow developers to react to unhandled exceptions in request handlers.\n    emitter.emit('unhandledException', {\n      error: lookupResult.error,\n      request,\n      requestId,\n    })\n    throw lookupResult.error\n  }\n\n  // If the handler lookup returned nothing, no request handler was found\n  // matching this request. Report the request as unhandled.\n  if (!lookupResult.data) {\n    await onUnhandledRequest(request, options.onUnhandledRequest)\n    emitter.emit('request:unhandled', { request, requestId })\n    emitter.emit('request:end', { request, requestId })\n    handleRequestOptions?.onPassthroughResponse?.(request)\n    return\n  }\n\n  const { response } = lookupResult.data\n\n  // When the handled request returned no mocked response, warn the developer,\n  // as it may be an oversight on their part. Perform the request as-is.\n  if (!response) {\n    emitter.emit('request:end', { request, requestId })\n    handleRequestOptions?.onPassthroughResponse?.(request)\n    return\n  }\n\n  // Perform the request as-is when the developer explicitly returned \"req.passthrough()\".\n  // This produces no warning as the request was handled.\n  if (\n    response.status === 302 &&\n    response.headers.get('x-msw-intention') === 'passthrough'\n  ) {\n    emitter.emit('request:end', { request, requestId })\n    handleRequestOptions?.onPassthroughResponse?.(request)\n    return\n  }\n\n  // Store all the received response cookies in the cookie jar.\n  storeResponseCookies(request, response)\n\n  emitter.emit('request:match', { request, requestId })\n\n  const requiredLookupResult =\n    lookupResult.data as RequiredDeep<HandlersExecutionResult>\n\n  handleRequestOptions?.onMockedResponse?.(response, requiredLookupResult)\n\n  emitter.emit('request:end', { request, requestId })\n\n  return response\n}\n","import { createRequestId } from '@mswjs/interceptors'\nimport type { RequestHandler } from './handlers/RequestHandler'\nimport { executeHandlers } from './utils/executeHandlers'\n\n/**\n * Finds a response for the given request instance\n * in the array of request handlers.\n * @param handlers The array of request handlers.\n * @param request The `Request` instance.\n * @returns {Response} A mocked response, if any.\n */\nexport const getResponse = async (\n  handlers: Array<RequestHandler>,\n  request: Request,\n): Promise<Response | undefined> => {\n  const result = await executeHandlers({\n    request,\n    requestId: createRequestId(),\n    handlers,\n  })\n\n  return result?.response\n}\n","import type { DefaultBodyType, JsonBodyType } from './handlers/RequestHandler'\nimport type { NoInfer } from './typeUtils'\nimport {\n  decorateResponse,\n  normalizeResponseInit,\n} from './utils/HttpResponse/decorators'\n\nexport interface HttpResponseInit extends ResponseInit {\n  type?: ResponseType\n}\n\ndeclare const bodyType: unique symbol\n\nexport interface StrictRequest<BodyType extends DefaultBodyType>\n  extends Request {\n  json(): Promise<BodyType>\n}\n\n/**\n * Opaque `Response` type that supports strict body type.\n */\nexport interface StrictResponse<BodyType extends DefaultBodyType>\n  extends Response {\n  readonly [bodyType]: BodyType\n}\n\n/**\n * A drop-in replacement for the standard `Response` class\n * to allow additional features, like mocking the response `Set-Cookie` header.\n *\n * @example\n * new HttpResponse('Hello world', { status: 201 })\n * HttpResponse.json({ name: 'John' })\n * HttpResponse.formData(form)\n *\n * @see {@link https://mswjs.io/docs/api/http-response `HttpResponse` API reference}\n */\nexport class HttpResponse extends Response {\n  constructor(body?: BodyInit | null, init?: HttpResponseInit) {\n    const responseInit = normalizeResponseInit(init)\n    super(body, responseInit)\n    decorateResponse(this, responseInit)\n  }\n\n  /**\n   * Create a `Response` with a `Content-Type: \"text/plain\"` body.\n   * @example\n   * HttpResponse.text('hello world')\n   * HttpResponse.text('Error', { status: 500 })\n   */\n  static text<BodyType extends string>(\n    body?: NoInfer<BodyType> | null,\n    init?: HttpResponseInit,\n  ): StrictResponse<BodyType> {\n    const responseInit = normalizeResponseInit(init)\n\n    if (!responseInit.headers.has('Content-Type')) {\n      responseInit.headers.set('Content-Type', 'text/plain')\n    }\n\n    // Automatically set the \"Content-Length\" response header\n    // for non-empty text responses. This enforces consistency and\n    // brings mocked responses closer to production.\n    if (!responseInit.headers.has('Content-Length')) {\n      responseInit.headers.set(\n        'Content-Length',\n        body ? new Blob([body]).size.toString() : '0',\n      )\n    }\n\n    return new HttpResponse(body, responseInit) as StrictResponse<BodyType>\n  }\n\n  /**\n   * Create a `Response` with a `Content-Type: \"application/json\"` body.\n   * @example\n   * HttpResponse.json({ firstName: 'John' })\n   * HttpResponse.json({ error: 'Not Authorized' }, { status: 401 })\n   */\n  static json<BodyType extends JsonBodyType>(\n    body?: NoInfer<BodyType> | null,\n    init?: HttpResponseInit,\n  ): StrictResponse<BodyType> {\n    const responseInit = normalizeResponseInit(init)\n\n    if (!responseInit.headers.has('Content-Type')) {\n      responseInit.headers.set('Content-Type', 'application/json')\n    }\n\n    /**\n     * @note TypeScript is incorrect here.\n     * Stringifying undefined will return undefined.\n     */\n    const responseText = JSON.stringify(body) as string | undefined\n\n    if (!responseInit.headers.has('Content-Length')) {\n      responseInit.headers.set(\n        'Content-Length',\n        responseText ? new Blob([responseText]).size.toString() : '0',\n      )\n    }\n\n    return new HttpResponse(\n      responseText,\n      responseInit,\n    ) as StrictResponse<BodyType>\n  }\n\n  /**\n   * Create a `Response` with a `Content-Type: \"application/xml\"` body.\n   * @example\n   * HttpResponse.xml(`<user name=\"John\" />`)\n   * HttpResponse.xml(`<article id=\"abc-123\" />`, { status: 201 })\n   */\n  static xml<BodyType extends string>(\n    body?: BodyType | null,\n    init?: HttpResponseInit,\n  ): Response {\n    const responseInit = normalizeResponseInit(init)\n\n    if (!responseInit.headers.has('Content-Type')) {\n      responseInit.headers.set('Content-Type', 'text/xml')\n    }\n\n    return new HttpResponse(body, responseInit)\n  }\n\n  /**\n   * Create a `Response` with a `Content-Type: \"text/html\"` body.\n   * @example\n   * HttpResponse.html(`<p class=\"author\">Jane Doe</p>`)\n   * HttpResponse.html(`<main id=\"abc-123\">Main text</main>`, { status: 201 })\n   */\n  static html<BodyType extends string>(\n    body?: BodyType | null,\n    init?: HttpResponseInit,\n  ): Response {\n    const responseInit = normalizeResponseInit(init)\n\n    if (!responseInit.headers.has('Content-Type')) {\n      responseInit.headers.set('Content-Type', 'text/html')\n    }\n\n    return new HttpResponse(body, responseInit)\n  }\n\n  /**\n   * Create a `Response` with an `ArrayBuffer` body.\n   * @example\n   * const buffer = new ArrayBuffer(3)\n   * const view = new Uint8Array(buffer)\n   * view.set([1, 2, 3])\n   *\n   * HttpResponse.arrayBuffer(buffer)\n   */\n  static arrayBuffer(\n    body?: ArrayBuffer | SharedArrayBuffer,\n    init?: HttpResponseInit,\n  ): Response {\n    const responseInit = normalizeResponseInit(init)\n\n    if (!responseInit.headers.has('Content-Type')) {\n      responseInit.headers.set('Content-Type', 'application/octet-stream')\n    }\n\n    if (body && !responseInit.headers.has('Content-Length')) {\n      responseInit.headers.set('Content-Length', body.byteLength.toString())\n    }\n\n    return new HttpResponse(body, responseInit)\n  }\n\n  /**\n   * Create a `Response` with a `FormData` body.\n   * @example\n   * const data = new FormData()\n   * data.set('name', 'Alice')\n   *\n   * HttpResponse.formData(data)\n   */\n  static formData(body?: FormData, init?: HttpResponseInit): Response {\n    return new HttpResponse(body, normalizeResponseInit(init))\n  }\n}\n","import { isNodeProcess } from 'is-node-process'\n\nexport const SET_TIMEOUT_MAX_ALLOWED_INT = 2147483647\nexport const MIN_SERVER_RESPONSE_TIME = 100\nexport const MAX_SERVER_RESPONSE_TIME = 400\nexport const NODE_SERVER_RESPONSE_TIME = 5\n\nfunction getRealisticResponseTime(): number {\n  if (isNodeProcess()) {\n    return NODE_SERVER_RESPONSE_TIME\n  }\n\n  return Math.floor(\n    Math.random() * (MAX_SERVER_RESPONSE_TIME - MIN_SERVER_RESPONSE_TIME) +\n      MIN_SERVER_RESPONSE_TIME,\n  )\n}\n\nexport type DelayMode = 'real' | 'infinite'\n\n/**\n * Delays the response by the given duration (ms).\n *\n * @example\n * await delay() // emulate realistic server response time\n * await delay(1200) // delay response by 1200ms\n * await delay('infinite') // delay response infinitely\n *\n * @see {@link https://mswjs.io/docs/api/delay `delay()` API reference}\n */\nexport async function delay(\n  durationOrMode?: DelayMode | number,\n): Promise<void> {\n  let delayTime: number\n\n  if (typeof durationOrMode === 'string') {\n    switch (durationOrMode) {\n      case 'infinite': {\n        // Using `Infinity` as a delay value executes the response timeout immediately.\n        // Instead, use the maximum allowed integer for `setTimeout`.\n        delayTime = SET_TIMEOUT_MAX_ALLOWED_INT\n        break\n      }\n      case 'real': {\n        delayTime = getRealisticResponseTime()\n        break\n      }\n      default: {\n        throw new Error(\n          `Failed to delay a response: unknown delay mode \"${durationOrMode}\". Please make sure you provide one of the supported modes (\"real\", \"infinite\") or a number.`,\n        )\n      }\n    }\n  } else if (typeof durationOrMode === 'undefined') {\n    // Use random realistic server response time when no explicit delay duration was provided.\n    delayTime = getRealisticResponseTime()\n  } else {\n    // Guard against passing values like `Infinity` or `Number.MAX_VALUE`\n    // as the response delay duration. They don't produce the result you may expect.\n    if (durationOrMode > SET_TIMEOUT_MAX_ALLOWED_INT) {\n      throw new Error(\n        `Failed to delay a response: provided delay duration (${durationOrMode}) exceeds the maximum allowed duration for \"setTimeout\" (${SET_TIMEOUT_MAX_ALLOWED_INT}). This will cause the response to be returned immediately. Please use a number within the allowed range to delay the response by exact duration, or consider the \"infinite\" delay mode to delay the response indefinitely.`,\n      )\n    }\n\n    delayTime = durationOrMode\n  }\n\n  return new Promise((resolve) => setTimeout(resolve, delayTime))\n}\n","import { invariant } from 'outvariant'\n\nexport type BypassRequestInput = string | URL | Request\n\n/**\n * Creates a `Request` instance that will always be ignored by MSW.\n *\n * @example\n * import { bypass } from 'msw'\n *\n * fetch(bypass('/resource'))\n * fetch(bypass(new URL('/resource', 'https://example.com)))\n * fetch(bypass(new Request('https://example.com/resource')))\n *\n * @see {@link https://mswjs.io/docs/api/bypass `bypass()` API reference}\n */\nexport function bypass(input: BypassRequestInput, init?: RequestInit): Request {\n  // Always create a new Request instance.\n  // This way, the \"init\" modifications will propagate\n  // to the bypass request instance automatically.\n  const request = new Request(\n    // If given a Request instance, clone it not to exhaust\n    // the original request's body.\n    input instanceof Request ? input.clone() : input,\n    init,\n  )\n\n  invariant(\n    !request.bodyUsed,\n    'Failed to create a bypassed request to \"%s %s\": given request instance already has its body read. Make sure to clone the intercepted request if you wish to read its body before bypassing it.',\n    request.method,\n    request.url,\n  )\n\n  const requestClone = request.clone()\n\n  /**\n   * Send the internal request header that would instruct MSW\n   * to perform this request as-is, ignoring any matching handlers.\n   * @note Use the `accept` header to support scenarios when the\n   * request cannot have headers (e.g. `sendBeacon` requests).\n   */\n  requestClone.headers.append('accept', 'msw/passthrough')\n\n  return requestClone\n}\n","import type { StrictResponse } from './HttpResponse'\n\n/**\n * Performs the intercepted request as-is.\n *\n * This stops request handler lookup so no other handlers\n * can affect this request past this point.\n * Unlike `bypass()`, this will not trigger an additional request.\n *\n * @example\n * http.get('/resource', () => {\n *   return passthrough()\n * })\n *\n * @see {@link https://mswjs.io/docs/api/passthrough `passthrough()` API reference}\n */\nexport function passthrough(): StrictResponse<any> {\n  return new Response(null, {\n    status: 302,\n    statusText: 'Passthrough',\n    headers: {\n      'x-msw-intention': 'passthrough',\n    },\n  }) as StrictResponse<any>\n}\n","import { checkGlobals } from './utils/internal/checkGlobals'\n\nexport { SetupApi } from './SetupApi'\n\n/* HTTP handlers */\nexport { RequestHandler } from './handlers/RequestHandler'\nexport { http } from './http'\nexport { HttpHandler, HttpMethods } from './handlers/HttpHandler'\nexport { graphql } from './graphql'\nexport { GraphQLHandler } from './handlers/GraphQLHandler'\n\n/* WebSocket handler */\nexport { ws, type WebSocketLink } from './ws'\nexport {\n  WebSocketHandler,\n  type WebSocketHandlerEventMap,\n  type WebSocketHandlerConnection,\n} from './handlers/WebSocketHandler'\n\n/* Utils */\nexport { matchRequestUrl } from './utils/matching/matchRequestUrl'\nexport * from './utils/handleRequest'\nexport { getResponse } from './getResponse'\nexport { cleanUrl } from './utils/url/cleanUrl'\n\n/**\n * Type definitions.\n */\n\nexport type { SharedOptions, LifeCycleEventsMap } from './sharedOptions'\n\nexport type {\n  ResponseResolver,\n  ResponseResolverReturnType,\n  AsyncResponseResolverReturnType,\n  RequestHandlerOptions,\n  DefaultBodyType,\n  DefaultRequestMultipartBody,\n  JsonBodyType,\n} from './handlers/RequestHandler'\n\nexport type {\n  RequestQuery,\n  HttpRequestParsedResult,\n} from './handlers/HttpHandler'\nexport type { HttpRequestHandler, HttpResponseResolver } from './http'\n\nexport type {\n  GraphQLQuery,\n  GraphQLVariables,\n  GraphQLRequestBody,\n  GraphQLJsonRequestBody,\n} from './handlers/GraphQLHandler'\nexport type { GraphQLRequestHandler, GraphQLResponseResolver } from './graphql'\n\nexport type { WebSocketData, WebSocketEventListener } from './ws'\n\nexport type { Path, PathParams, Match } from './utils/matching/matchRequestUrl'\nexport type { ParsedGraphQLRequest } from './utils/internal/parseGraphQLRequest'\n\nexport * from './HttpResponse'\nexport * from './delay'\nexport { bypass } from './bypass'\nexport { passthrough } from './passthrough'\n\n// Validate environmental globals before executing any code.\n// This ensures that the library gives user-friendly errors\n// when ran in the environments that require additional polyfills\n// from the end user.\ncheckGlobals()\n","/**\n * Returns an absolute Service Worker URL based on the given\n * relative URL (known during the registration).\n */\nexport function getAbsoluteWorkerUrl(workerUrl: string): string {\n  return new URL(workerUrl, location.href).href\n}\n","import { FindWorker } from '../../glossary'\n\n/**\n * Attempts to resolve a Service Worker instance from a given registration,\n * regardless of its state (active, installing, waiting).\n */\nexport function getWorkerByRegistration(\n  registration: ServiceWorkerRegistration,\n  absoluteWorkerUrl: string,\n  findWorker: FindWorker,\n): ServiceWorker | null {\n  const allStates = [\n    registration.active,\n    registration.installing,\n    registration.waiting,\n  ]\n  const relevantStates = allStates.filter((state): state is ServiceWorker => {\n    return state != null\n  })\n  const worker = relevantStates.find((worker) => {\n    return findWorker(worker.scriptURL, absoluteWorkerUrl)\n  })\n\n  return worker || null\n}\n","import { until } from '@open-draft/until'\nimport { devUtils } from '~/core/utils/internal/devUtils'\nimport { getAbsoluteWorkerUrl } from '../../../utils/getAbsoluteWorkerUrl'\nimport { getWorkerByRegistration } from './getWorkerByRegistration'\nimport { ServiceWorkerInstanceTuple, FindWorker } from '../../glossary'\n\n/**\n * Returns an active Service Worker instance.\n * When not found, registers a new Service Worker.\n */\nexport const getWorkerInstance = async (\n  url: string,\n  options: RegistrationOptions = {},\n  findWorker: FindWorker,\n): Promise<ServiceWorkerInstanceTuple> => {\n  // Resolve the absolute Service Worker URL.\n  const absoluteWorkerUrl = getAbsoluteWorkerUrl(url)\n\n  const mockRegistrations = await navigator.serviceWorker\n    .getRegistrations()\n    .then((registrations) =>\n      registrations.filter((registration) =>\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n      ),\n    )\n  if (!navigator.serviceWorker.controller && mockRegistrations.length > 0) {\n    // Reload the page when it has associated workers, but no active controller.\n    // The absence of a controller can mean either:\n    // - page has no Service Worker associated with it\n    // - page has been hard-reloaded and its workers won't be used until the next reload.\n    // Since we've checked that there are registrations associated with this page,\n    // at this point we are sure it's hard reload that falls into this clause.\n    location.reload()\n  }\n\n  const [existingRegistration] = mockRegistrations\n\n  if (existingRegistration) {\n    // Schedule the worker update in the background.\n    // Update ensures the existing worker is up-to-date.\n    existingRegistration.update()\n\n    // Return the worker reference immediately.\n    return [\n      getWorkerByRegistration(\n        existingRegistration,\n        absoluteWorkerUrl,\n        findWorker,\n      ),\n      existingRegistration,\n    ]\n  }\n\n  // When the Service Worker wasn't found, register it anew and return the reference.\n  const registrationResult = await until<Error, ServiceWorkerInstanceTuple>(\n    async () => {\n      const registration = await navigator.serviceWorker.register(url, options)\n      return [\n        // Compare existing worker registration by its worker URL,\n        // to prevent irrelevant workers to resolve here (such as Codesandbox worker).\n        getWorkerByRegistration(registration, absoluteWorkerUrl, findWorker),\n        registration,\n      ]\n    },\n  )\n\n  // Handle Service Worker registration errors.\n  if (registrationResult.error) {\n    const isWorkerMissing = registrationResult.error.message.includes('(404)')\n\n    // Produce a custom error message when given a non-existing Service Worker url.\n    // Suggest developers to check their setup.\n    if (isWorkerMissing) {\n      const scopeUrl = new URL(options?.scope || '/', location.href)\n\n      throw new Error(\n        devUtils.formatMessage(`\\\nFailed to register a Service Worker for scope ('${scopeUrl.href}') with script ('${absoluteWorkerUrl}'): Service Worker script does not exist at the given path.\n\nDid you forget to run \"npx msw init <PUBLIC_DIR>\"?\n\nLearn more about creating the Service Worker script: https://mswjs.io/docs/cli/init`),\n      )\n    }\n\n    // Fallback error message for any other registration errors.\n    throw new Error(\n      devUtils.formatMessage(\n        'Failed to register the Service Worker:\\n\\n%s',\n        registrationResult.error.message,\n      ),\n    )\n  }\n\n  return registrationResult.data\n}\n","import type { ServiceWorkerIncomingEventsMap } from 'browser/setupWorker/glossary'\nimport { devUtils } from '~/core/utils/internal/devUtils'\n\nexport interface PrintStartMessageArgs {\n  quiet?: boolean\n  message?: string\n  workerUrl?: string\n  workerScope?: string\n  client?: ServiceWorkerIncomingEventsMap['MOCKING_ENABLED']['client']\n}\n\n/**\n * Prints a worker activation message in the browser's console.\n */\nexport function printStartMessage(args: PrintStartMessageArgs = {}) {\n  if (args.quiet) {\n    return\n  }\n\n  const message = args.message || 'Mocking enabled.'\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    `%c${devUtils.formatMessage(message)}`,\n    'color:orangered;font-weight:bold;',\n  )\n  // eslint-disable-next-line no-console\n  console.log(\n    '%cDocumentation: %chttps://mswjs.io/docs',\n    'font-weight:bold',\n    'font-weight:normal',\n  )\n  // eslint-disable-next-line no-console\n  console.log('Found an issue? https://github.com/mswjs/msw/issues')\n\n  if (args.workerUrl) {\n    // eslint-disable-next-line no-console\n    console.log('Worker script URL:', args.workerUrl)\n  }\n\n  if (args.workerScope) {\n    // eslint-disable-next-line no-console\n    console.log('Worker scope:', args.workerScope)\n  }\n\n  if (args.client) {\n    // eslint-disable-next-line no-console\n    console.log('Client ID: %s (%s)', args.client.id, args.client.frameType)\n  }\n\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n","import { devUtils } from '~/core/utils/internal/devUtils'\nimport { StartOptions, SetupWorkerInternalContext } from '../../glossary'\nimport { printStartMessage } from './printStartMessage'\n\n/**\n * Signals the worker to enable the interception of requests.\n */\nexport async function enableMocking(\n  context: SetupWorkerInternalContext,\n  options: StartOptions,\n) {\n  context.workerChannel.send('MOCK_ACTIVATE')\n  const { payload } = await context.events.once('MOCKING_ENABLED')\n\n  // Warn the developer on multiple \"worker.start()\" calls.\n  // While this will not affect the worker in any way,\n  // it likely indicates an issue with the developer's code.\n  if (context.isMockingEnabled) {\n    devUtils.warn(\n      `Found a redundant \"worker.start()\" call. Note that starting the worker while mocking is already enabled will have no effect. Consider removing this \"worker.start()\" call.`,\n    )\n    return\n  }\n\n  context.isMockingEnabled = true\n\n  printStartMessage({\n    quiet: options.quiet,\n    workerScope: context.registration?.scope,\n    workerUrl: context.worker?.scriptURL,\n    client: payload.client,\n  })\n}\n","import {\n  StringifiedResponse,\n  ServiceWorkerIncomingEventsMap,\n} from '../../glossary'\n\nexport interface ServiceWorkerMessage<\n  EventType extends keyof ServiceWorkerIncomingEventsMap,\n  EventPayload,\n> {\n  type: EventType\n  payload: EventPayload\n}\n\ninterface WorkerChannelEventsMap {\n  MOCK_RESPONSE: [\n    data: StringifiedResponse,\n    transfer?: [ReadableStream<Uint8Array>],\n  ]\n  PASSTHROUGH: []\n}\n\nexport class WorkerChannel {\n  constructor(private readonly port: MessagePort) {}\n\n  public postMessage<Event extends keyof WorkerChannelEventsMap>(\n    event: Event,\n    ...rest: WorkerChannelEventsMap[Event]\n  ): void {\n    const [data, transfer] = rest\n    this.port.postMessage({ type: event, data }, { transfer })\n  }\n}\n","import type { ServiceWorkerIncomingRequest } from '../setupWorker/glossary'\n\ntype Input = Pick<ServiceWorkerIncomingRequest, 'method' | 'body'>\n\n/**\n * Ensures that an empty GET request body is always represented as `undefined`.\n */\nexport function pruneGetRequestBody(\n  request: Input,\n): ServiceWorkerIncomingRequest['body'] {\n  // Force HEAD/GET request body to always be empty.\n  // The worker reads any request's body as ArrayBuffer,\n  // and you cannot re-construct a GET/HEAD Request\n  // with an ArrayBuffer, even if empty. Also note that\n  // \"request.body\" is always undefined in the worker.\n  if (['HEAD', 'GET'].includes(request.method)) {\n    return undefined\n  }\n\n  return request.body\n}\n","import { pruneGetRequestBody } from './pruneGetRequestBody'\nimport type { ServiceWorkerIncomingRequest } from '../setupWorker/glossary'\n\n/**\n * Converts a given request received from the Service Worker\n * into a Fetch `Request` instance.\n */\nexport function parseWorkerRequest(\n  incomingRequest: ServiceWorkerIncomingRequest,\n): Request {\n  return new Request(incomingRequest.url, {\n    ...incomingRequest,\n    body: pruneGetRequestBody(incomingRequest),\n  })\n}\n","export function toResponseInit(response: Response): ResponseInit {\n  return {\n    status: response.status,\n    statusText: response.statusText,\n    headers: Object.fromEntries(response.headers.entries()),\n  }\n}\n","import type { HandlerKind } from '../../handlers/common'\nimport type { RequestHandler } from '../../handlers/RequestHandler'\nimport type { WebSocketHandler } from '../../handlers/WebSocketHandler'\n\n/**\n * A filter function that ensures that the provided argument\n * is a handler of the given kind. This helps differentiate\n * between different kinds of handlers, e.g. request and event handlers.\n */\nexport function isHandlerKind<K extends HandlerKind>(kind: K) {\n  return (\n    input: unknown,\n  ): input is K extends 'EventHandler' ? WebSocketHandler : RequestHandler => {\n    return (\n      input != null &&\n      typeof input === 'object' &&\n      '__kind' in input &&\n      input.__kind === kind\n    )\n  }\n}\n","import {\n  StartOptions,\n  SetupWorkerInternalContext,\n  ServiceWorkerIncomingEventsMap,\n} from '../glossary'\nimport {\n  ServiceWorkerMessage,\n  WorkerChannel,\n} from './utils/createMessageChannel'\nimport { parseWorkerRequest } from '../../utils/parseWorkerRequest'\nimport { RequestHandler } from '~/core/handlers/RequestHandler'\nimport { handleRequest } from '~/core/utils/handleRequest'\nimport { RequiredDeep } from '~/core/typeUtils'\nimport { devUtils } from '~/core/utils/internal/devUtils'\nimport { toResponseInit } from '~/core/utils/toResponseInit'\nimport { isHandlerKind } from '~/core/utils/internal/isHandlerKind'\n\nexport const createRequestListener = (\n  context: SetupWorkerInternalContext,\n  options: RequiredDeep<StartOptions>,\n) => {\n  return async (\n    event: MessageEvent,\n    message: ServiceWorkerMessage<\n      'REQUEST',\n      ServiceWorkerIncomingEventsMap['REQUEST']\n    >,\n  ) => {\n    const messageChannel = new WorkerChannel(event.ports[0])\n\n    const requestId = message.payload.id\n    const request = parseWorkerRequest(message.payload)\n    const requestCloneForLogs = request.clone()\n\n    // Make this the first requets clone before the\n    // request resolution pipeline even starts.\n    // Store the clone in cache so the first matching\n    // request handler would skip the cloning phase.\n    const requestClone = request.clone()\n    RequestHandler.cache.set(request, requestClone)\n    context.requests.set(requestId, requestClone)\n\n    try {\n      await handleRequest(\n        request,\n        requestId,\n        context.getRequestHandlers().filter(isHandlerKind('RequestHandler')),\n        options,\n        context.emitter,\n        {\n          onPassthroughResponse() {\n            messageChannel.postMessage('PASSTHROUGH')\n          },\n          async onMockedResponse(response, { handler, parsedResult }) {\n            // Clone the mocked response so its body could be read\n            // to buffer to be sent to the worker and also in the\n            // \".log()\" method of the request handler.\n            const responseClone = response.clone()\n            const responseCloneForLogs = response.clone()\n            const responseInit = toResponseInit(response)\n\n            /**\n             * @note Safari doesn't support transferring a \"ReadableStream\".\n             * Check that the browser supports that before sending it to the worker.\n             */\n            if (context.supports.readableStreamTransfer) {\n              const responseStreamOrNull = response.body\n\n              messageChannel.postMessage(\n                'MOCK_RESPONSE',\n                {\n                  ...responseInit,\n                  body: responseStreamOrNull,\n                },\n                responseStreamOrNull ? [responseStreamOrNull] : undefined,\n              )\n            } else {\n              /**\n               * @note If we are here, this means the current environment doesn't\n               * support \"ReadableStream\" as transferable. In that case,\n               * attempt to read the non-empty response body as ArrayBuffer, if it's not empty.\n               * @see https://github.com/mswjs/msw/issues/1827\n               */\n              const responseBufferOrNull =\n                response.body === null\n                  ? null\n                  : await responseClone.arrayBuffer()\n\n              messageChannel.postMessage('MOCK_RESPONSE', {\n                ...responseInit,\n                body: responseBufferOrNull,\n              })\n            }\n\n            if (!options.quiet) {\n              context.emitter.once('response:mocked', () => {\n                handler.log({\n                  request: requestCloneForLogs,\n                  response: responseCloneForLogs,\n                  parsedResult,\n                })\n              })\n            }\n          },\n        },\n      )\n    } catch (error) {\n      if (error instanceof Error) {\n        devUtils.error(\n          `Uncaught exception in the request handler for \"%s %s\":\n\n%s\n\nThis exception has been gracefully handled as a 500 response, however, it's strongly recommended to resolve this error, as it indicates a mistake in your code. If you wish to mock an error response, please see this guide: https://mswjs.io/docs/recipes/mocking-error-responses`,\n          request.method,\n          request.url,\n          error.stack ?? error,\n        )\n\n        // Treat all other exceptions in a request handler as unintended,\n        // alerting that there is a problem that needs fixing.\n        messageChannel.postMessage('MOCK_RESPONSE', {\n          status: 500,\n          statusText: 'Request Handler Error',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            name: error.name,\n            message: error.message,\n            stack: error.stack,\n          }),\n        })\n      }\n    }\n  }\n}\n","import { devUtils } from '~/core/utils/internal/devUtils'\nimport type { SetupWorkerInternalContext } from '../setupWorker/glossary'\n\n/**\n * Check whether the registered Service Worker has been\n * generated by the installed version of the library.\n * Prints a warning message if the worker scripts mismatch.\n */\nexport async function checkWorkerIntegrity(\n  context: SetupWorkerInternalContext,\n): Promise<void> {\n  // Request the integrity checksum from the registered worker.\n  context.workerChannel.send('INTEGRITY_CHECK_REQUEST')\n\n  const { payload } = await context.events.once('INTEGRITY_CHECK_RESPONSE')\n\n  // Compare the response from the Service Worker and the\n  // global variable set during the build.\n\n  // The integrity is validated based on the worker script's checksum\n  // that's derived from its minified content during the build.\n  // The \"SERVICE_WORKER_CHECKSUM\" global variable is injected by the build.\n  if (payload.checksum !== SERVICE_WORKER_CHECKSUM) {\n    devUtils.warn(\n      `The currently registered Service Worker has been generated by a different version of MSW (${payload.packageVersion}) and may not be fully compatible with the installed version.\n\nIt's recommended you update your worker script by running this command:\n\n  \\u2022 npx msw init <PUBLIC_DIR>\n\nYou can also automate this process and make the worker script update automatically upon the library installations. Read more: https://mswjs.io/docs/cli/init.`,\n    )\n  }\n}\n","import { FetchResponse } from '@mswjs/interceptors'\nimport type {\n  ServiceWorkerIncomingEventsMap,\n  SetupWorkerInternalContext,\n} from '../glossary'\nimport type { ServiceWorkerMessage } from './utils/createMessageChannel'\n\nexport function createResponseListener(context: SetupWorkerInternalContext) {\n  return (\n    _: MessageEvent,\n    message: ServiceWorkerMessage<\n      'RESPONSE',\n      ServiceWorkerIncomingEventsMap['RESPONSE']\n    >,\n  ) => {\n    const { payload: responseJson } = message\n\n    // Get the Request instance reference stored in the\n    // request listener.\n    const { requestId } = responseJson\n    const request = context.requests.get(requestId)!\n    context.requests.delete(requestId)\n\n    /**\n     * CORS requests with `mode: \"no-cors\"` result in \"opaque\" responses.\n     * That kind of responses cannot be manipulated in JavaScript due\n     * to the security considerations.\n     * @see https://fetch.spec.whatwg.org/#concept-filtered-response-opaque\n     * @see https://github.com/mswjs/msw/issues/529\n     */\n    if (responseJson.type?.includes('opaque')) {\n      return\n    }\n\n    const response =\n      responseJson.status === 0\n        ? Response.error()\n        : new FetchResponse(\n            /**\n             * Responses may be streams here, but when we create a response object\n             * with null-body status codes, like 204, 205, 304 Response will\n             * throw when passed a non-null body, so ensure it's null here\n             * for those codes\n             */\n            FetchResponse.isResponseWithBody(responseJson.status)\n              ? responseJson.body\n              : null,\n            {\n              ...responseJson,\n              /**\n               * Set response URL if it's not set already.\n               * @see https://github.com/mswjs/msw/issues/2030\n               * @see https://developer.mozilla.org/en-US/docs/Web/API/Response/url\n               */\n              url: request.url,\n            },\n          )\n\n    context.emitter.emit(\n      responseJson.isMockedResponse ? 'response:mocked' : 'response:bypass',\n      {\n        response,\n        request,\n        requestId: responseJson.requestId,\n      },\n    )\n  }\n}\n","import { devUtils } from '~/core/utils/internal/devUtils'\nimport { StartOptions } from '../../glossary'\n\nexport function validateWorkerScope(\n  registration: ServiceWorkerRegistration,\n  options?: StartOptions,\n): void {\n  if (!options?.quiet && !location.href.startsWith(registration.scope)) {\n    devUtils.warn(\n      `\\\nCannot intercept requests on this page because it's outside of the worker's scope (\"${registration.scope}\"). If you wish to mock API requests on this page, you must resolve this scope issue.\n\n- (Recommended) Register the worker at the root level (\"/\") of your application.\n- Set the \"Service-Worker-Allowed\" response header to allow out-of-scope workers.\\\n`,\n    )\n  }\n}\n","import { devUtils } from '~/core/utils/internal/devUtils'\nimport { getWorkerInstance } from './utils/getWorkerInstance'\nimport { enableMocking } from './utils/enableMocking'\nimport { SetupWorkerInternalContext, StartHandler } from '../glossary'\nimport { createRequestListener } from './createRequestListener'\nimport { checkWorkerIntegrity } from '../../utils/checkWorkerIntegrity'\nimport { createResponseListener } from './createResponseListener'\nimport { validateWorkerScope } from './utils/validateWorkerScope'\n\nexport const createStartHandler = (\n  context: SetupWorkerInternalContext,\n): StartHandler => {\n  return function start(options, customOptions) {\n    const startWorkerInstance = async () => {\n      // Remove all previously existing event listeners.\n      // This way none of the listeners persists between Fast refresh\n      // of the application's code.\n      context.events.removeAllListeners()\n\n      // Handle requests signaled by the worker.\n      context.workerChannel.on(\n        'REQUEST',\n        createRequestListener(context, options),\n      )\n\n      // Handle responses signaled by the worker.\n      context.workerChannel.on('RESPONSE', createResponseListener(context))\n\n      const instance = await getWorkerInstance(\n        options.serviceWorker.url,\n        options.serviceWorker.options,\n        options.findWorker,\n      )\n\n      const [worker, registration] = instance\n\n      if (!worker) {\n        const missingWorkerMessage = customOptions?.findWorker\n          ? devUtils.formatMessage(\n              `Failed to locate the Service Worker registration using a custom \"findWorker\" predicate.\n\nPlease ensure that the custom predicate properly locates the Service Worker registration at \"%s\".\nMore details: https://mswjs.io/docs/api/setup-worker/start#findworker\n`,\n              options.serviceWorker.url,\n            )\n          : devUtils.formatMessage(\n              `Failed to locate the Service Worker registration.\n\nThis most likely means that the worker script URL \"%s\" cannot resolve against the actual public hostname (%s). This may happen if your application runs behind a proxy, or has a dynamic hostname.\n\nPlease consider using a custom \"serviceWorker.url\" option to point to the actual worker script location, or a custom \"findWorker\" option to resolve the Service Worker registration manually. More details: https://mswjs.io/docs/api/setup-worker/start`,\n              options.serviceWorker.url,\n              location.host,\n            )\n\n        throw new Error(missingWorkerMessage)\n      }\n\n      context.worker = worker\n      context.registration = registration\n\n      context.events.addListener(window, 'beforeunload', () => {\n        if (worker.state !== 'redundant') {\n          // Notify the Service Worker that this client has closed.\n          // Internally, it's similar to disabling the mocking, only\n          // client close event has a handler that self-terminates\n          // the Service Worker when there are no open clients.\n          context.workerChannel.send('CLIENT_CLOSED')\n        }\n        // Make sure we're always clearing the interval - there are reports that not doing this can\n        // cause memory leaks in headless browser environments.\n        window.clearInterval(context.keepAliveInterval)\n\n        // Notify others about this client disconnecting.\n        // E.g. this will purge the in-memory WebSocket clients since\n        // starting the worker again will assign them new IDs.\n        window.postMessage({ type: 'msw/worker:stop' })\n      })\n\n      // Check if the active Service Worker has been generated\n      // by the currently installed version of MSW.\n      await checkWorkerIntegrity(context).catch((error) => {\n        devUtils.error(\n          'Error while checking the worker script integrity. Please report this on GitHub (https://github.com/mswjs/msw/issues), including the original error below.',\n        )\n        // eslint-disable-next-line no-console\n        console.error(error)\n      })\n\n      context.keepAliveInterval = window.setInterval(\n        () => context.workerChannel.send('KEEPALIVE_REQUEST'),\n        5000,\n      )\n\n      // Warn the user when loading the page that lies outside\n      // of the worker's scope.\n      validateWorkerScope(registration, context.startOptions)\n\n      return registration\n    }\n\n    const workerRegistration = startWorkerInstance().then(\n      async (registration) => {\n        const pendingInstance = registration.installing || registration.waiting\n\n        // Wait until the worker is activated.\n        // Assume the worker is already activated if there's no pending registration\n        // (i.e. when reloading the page after a successful activation).\n        if (pendingInstance) {\n          await new Promise<void>((resolve) => {\n            pendingInstance.addEventListener('statechange', () => {\n              if (pendingInstance.state === 'activated') {\n                return resolve()\n              }\n            })\n          })\n        }\n\n        // Print the activation message only after the worker has been activated.\n        await enableMocking(context, options).catch((error) => {\n          throw new Error(`Failed to enable mocking: ${error?.message}`)\n        })\n\n        return registration\n      },\n    )\n\n    return workerRegistration\n  }\n}\n","import { devUtils } from '~/core/utils/internal/devUtils'\n\nexport function printStopMessage(args: { quiet?: boolean } = {}): void {\n  if (args.quiet) {\n    return\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(\n    `%c${devUtils.formatMessage('Mocking disabled.')}`,\n    'color:orangered;font-weight:bold;',\n  )\n}\n","import { devUtils } from '~/core/utils/internal/devUtils'\nimport { SetupWorkerInternalContext, StopHandler } from '../glossary'\nimport { printStopMessage } from './utils/printStopMessage'\n\nexport const createStop = (\n  context: SetupWorkerInternalContext,\n): StopHandler => {\n  return function stop() {\n    // Warn developers calling \"worker.stop()\" more times than necessary.\n    // This likely indicates a mistake in their code.\n    if (!context.isMockingEnabled) {\n      devUtils.warn(\n        'Found a redundant \"worker.stop()\" call. Note that stopping the worker while mocking already stopped has no effect. Consider removing this \"worker.stop()\" call.',\n      )\n      return\n    }\n\n    /**\n     * Signal the Service Worker to disable mocking for this client.\n     * Use this an an explicit way to stop the mocking, while preserving\n     * the worker-client relation. Does not affect the worker's lifecycle.\n     */\n    context.workerChannel.send('MOCK_DEACTIVATE')\n    context.isMockingEnabled = false\n    window.clearInterval(context.keepAliveInterval)\n\n    // Post the internal stop message on the window\n    // to let any logic know when the worker has stopped.\n    // E.g. the WebSocket client manager needs this to know\n    // when to clear its in-memory clients list.\n    window.postMessage({ type: 'msw/worker:stop' })\n\n    printStopMessage({ quiet: context.startOptions?.quiet })\n  }\n}\n","/**\n * Determines if the given value is an object.\n */\nexport function isObject(value: any): boolean {\n  return value != null && typeof value === 'object' && !Array.isArray(value)\n}\n","import { isObject } from './isObject'\n\n/**\n * Deeply merges two given objects with the right one\n * having a priority during property assignment.\n */\nexport function mergeRight(\n  left: Record<string, any>,\n  right: Record<string, any>,\n) {\n  return Object.entries(right).reduce(\n    (result, [key, rightValue]) => {\n      const leftValue = result[key]\n\n      if (Array.isArray(leftValue) && Array.isArray(rightValue)) {\n        result[key] = leftValue.concat(rightValue)\n        return result\n      }\n\n      if (isObject(leftValue) && isObject(rightValue)) {\n        result[key] = mergeRight(leftValue, rightValue)\n        return result\n      }\n\n      result[key] = rightValue\n      return result\n    },\n    Object.assign({}, left),\n  )\n}\n","import { RequiredDeep } from '~/core/typeUtils'\nimport { mergeRight } from '~/core/utils/internal/mergeRight'\nimport {\n  SetupWorker,\n  SetupWorkerInternalContext,\n  StartHandler,\n  StartOptions,\n} from '../../glossary'\n\nexport const DEFAULT_START_OPTIONS: RequiredDeep<StartOptions> = {\n  serviceWorker: {\n    url: '/mockServiceWorker.js',\n    options: null as any,\n  },\n  quiet: false,\n  waitUntilReady: true,\n  onUnhandledRequest: 'warn',\n  findWorker(scriptURL, mockServiceWorkerUrl) {\n    return scriptURL === mockServiceWorkerUrl\n  },\n}\n\n/**\n * Returns resolved worker start options, merging the default options\n * with the given custom options.\n */\nexport function resolveStartOptions(\n  initialOptions?: StartOptions,\n): RequiredDeep<StartOptions> {\n  return mergeRight(\n    DEFAULT_START_OPTIONS,\n    initialOptions || {},\n  ) as RequiredDeep<StartOptions>\n}\n\nexport function prepareStartHandler(\n  handler: StartHandler,\n  context: SetupWorkerInternalContext,\n): SetupWorker['start'] {\n  return (initialOptions) => {\n    context.startOptions = resolveStartOptions(initialOptions)\n    return handler(context.startOptions, initialOptions || {})\n  }\n}\n","import { invariant } from 'outvariant'\nimport { DeferredPromise } from '@open-draft/deferred-promise'\nimport { InterceptorError } from './InterceptorError'\n\nconst kRequestHandled = Symbol('kRequestHandled')\nexport const kResponsePromise = Symbol('kResponsePromise')\n\nexport class RequestController {\n  /**\n   * Internal response promise.\n   * Available only for the library internals to grab the\n   * response instance provided by the developer.\n   * @note This promise cannot be rejected. It's either infinitely\n   * pending or resolved with whichever Response was passed to `respondWith()`.\n   */\n  [kResponsePromise]: DeferredPromise<Response | Error | undefined>;\n\n  /**\n   * Internal flag indicating if this request has been handled.\n   * @note The response promise becomes \"fulfilled\" on the next tick.\n   */\n  [kRequestHandled]: boolean\n\n  constructor(private request: Request) {\n    this[kRequestHandled] = false\n    this[kResponsePromise] = new DeferredPromise()\n  }\n\n  /**\n   * Respond to this request with the given `Response` instance.\n   * @example\n   * controller.respondWith(new Response())\n   * controller.respondWith(Response.json({ id }))\n   * controller.respondWith(Response.error())\n   */\n  public respondWith(response: Response): void {\n    invariant.as(\n      InterceptorError,\n      !this[kRequestHandled],\n      'Failed to respond to the \"%s %s\" request: the \"request\" event has already been handled.',\n      this.request.method,\n      this.request.url\n    )\n\n    this[kRequestHandled] = true\n    this[kResponsePromise].resolve(response)\n\n    /**\n     * @note The request conrtoller doesn't do anything\n     * apart from letting the interceptor await the response\n     * provided by the developer through the response promise.\n     * Each interceptor implements the actual respondWith/errorWith\n     * logic based on that interceptor's needs.\n     */\n  }\n\n  /**\n   * Error this request with the given error.\n   * @example\n   * controller.errorWith()\n   * controller.errorWith(new Error('Oops!'))\n   */\n  public errorWith(error?: Error): void {\n    invariant.as(\n      InterceptorError,\n      !this[kRequestHandled],\n      'Failed to error the \"%s %s\" request: the \"request\" event has already been handled.',\n      this.request.method,\n      this.request.url\n    )\n\n    this[kRequestHandled] = true\n\n    /**\n     * @note Resolve the response promise, not reject.\n     * This helps us differentiate between unhandled exceptions\n     * and intended errors (\"errorWith\") while waiting for the response.\n     */\n    this[kResponsePromise].resolve(error)\n  }\n}\n","export class InterceptorError extends Error {\n  constructor(message?: string) {\n    super(message)\n    this.name = 'InterceptorError'\n    Object.setPrototypeOf(this, InterceptorError.prototype)\n  }\n}\n","import { Emitter, EventMap } from 'strict-event-emitter'\n\n/**\n * Emits an event on the given emitter but executes\n * the listeners sequentially. This accounts for asynchronous\n * listeners (e.g. those having \"sleep\" and handling the request).\n */\nexport async function emitAsync<\n  Events extends EventMap,\n  EventName extends keyof Events\n>(\n  emitter: Emitter<Events>,\n  eventName: EventName,\n  ...data: Events[EventName]\n): Promise<void> {\n  const listners = emitter.listeners(eventName)\n\n  if (listners.length === 0) {\n    return\n  }\n\n  for (const listener of listners) {\n    await listener.apply(emitter, data)\n  }\n}\n","import type { Emitter } from 'strict-event-emitter'\nimport { DeferredPromise } from '@open-draft/deferred-promise'\nimport { until } from '@open-draft/until'\nimport type { HttpRequestEventMap } from '../glossary'\nimport { emitAsync } from './emitAsync'\nimport { kResponsePromise, RequestController } from '../RequestController'\nimport {\n  createServerErrorResponse,\n  isResponseError,\n  ResponseError,\n} from './responseUtils'\nimport { InterceptorError } from '../InterceptorError'\nimport { isNodeLikeError } from './isNodeLikeError'\n\ninterface HandleRequestOptions {\n  requestId: string\n  request: Request\n  emitter: Emitter<HttpRequestEventMap>\n  controller: RequestController\n\n  /**\n   * Called when the request has been handled\n   * with the given `Response` instance.\n   */\n  onResponse: (response: Response) => void | Promise<void>\n\n  /**\n   * Called when the request has been handled\n   * with the given `Response.error()` instance.\n   */\n  onRequestError: (response: ResponseError) => void\n\n  /**\n   * Called when an unhandled error happens during the\n   * request handling. This is never a thrown error/response.\n   */\n  onError: (error: unknown) => void\n}\n\n/**\n * @returns {Promise<boolean>} Indicates whether the request has been handled.\n */\nexport async function handleRequest(\n  options: HandleRequestOptions\n): Promise<boolean> {\n  const handleResponse = async (response: Response | Error) => {\n    if (response instanceof Error) {\n      options.onError(response)\n    }\n\n    // Handle \"Response.error()\" instances.\n    else if (isResponseError(response)) {\n      options.onRequestError(response)\n    } else {\n      await options.onResponse(response)\n    }\n\n    return true\n  }\n\n  const handleResponseError = async (error: unknown): Promise<boolean> => {\n    // Forward the special interceptor error instances\n    // to the developer. These must not be handled in any way.\n    if (error instanceof InterceptorError) {\n      throw result.error\n    }\n\n    // Support mocking Node.js-like errors.\n    if (isNodeLikeError(error)) {\n      options.onError(error)\n      return true\n    }\n\n    // Handle thrown responses.\n    if (error instanceof Response) {\n      return await handleResponse(error)\n    }\n\n    return false\n  }\n\n  // Add the last \"request\" listener to check if the request\n  // has been handled in any way. If it hasn't, resolve the\n  // response promise with undefined.\n  options.emitter.once('request', ({ requestId: pendingRequestId }) => {\n    if (pendingRequestId !== options.requestId) {\n      return\n    }\n\n    if (options.controller[kResponsePromise].state === 'pending') {\n      options.controller[kResponsePromise].resolve(undefined)\n    }\n  })\n\n  const requestAbortPromise = new DeferredPromise<void, unknown>()\n\n  /**\n   * @note `signal` is not always defined in React Native.\n   */\n  if (options.request.signal) {\n    if (options.request.signal.aborted) {\n      requestAbortPromise.reject(options.request.signal.reason)\n    } else {\n      options.request.signal.addEventListener(\n        'abort',\n        () => {\n          requestAbortPromise.reject(options.request.signal.reason)\n        },\n        { once: true }\n      )\n    }\n  }\n\n  const result = await until(async () => {\n    // Emit the \"request\" event and wait until all the listeners\n    // for that event are finished (e.g. async listeners awaited).\n    // By the end of this promise, the developer cannot affect the\n    // request anymore.\n    const requestListtenersPromise = emitAsync(options.emitter, 'request', {\n      requestId: options.requestId,\n      request: options.request,\n      controller: options.controller,\n    })\n\n    await Promise.race([\n      // Short-circuit the request handling promise if the request gets aborted.\n      requestAbortPromise,\n      requestListtenersPromise,\n      options.controller[kResponsePromise],\n    ])\n\n    // The response promise will settle immediately once\n    // the developer calls either \"respondWith\" or \"errorWith\".\n    const mockedResponse = await options.controller[kResponsePromise]\n    return mockedResponse\n  })\n\n  // Handle the request being aborted while waiting for the request listeners.\n  if (requestAbortPromise.state === 'rejected') {\n    options.onError(requestAbortPromise.rejectionReason)\n    return true\n  }\n\n  if (result.error) {\n    // Handle the error during the request listener execution.\n    // These can be thrown responses or request errors.\n    if (await handleResponseError(result.error)) {\n      return true\n    }\n\n    // If the developer has added \"unhandledException\" listeners,\n    // allow them to handle the error. They can translate it to a\n    // mocked response, network error, or forward it as-is.\n    if (options.emitter.listenerCount('unhandledException') > 0) {\n      // Create a new request controller just for the unhandled exception case.\n      // This is needed because the original controller might have been already\n      // interacted with (e.g. \"respondWith\" or \"errorWith\" called on it).\n      const unhandledExceptionController = new RequestController(\n        options.request\n      )\n\n      await emitAsync(options.emitter, 'unhandledException', {\n        error: result.error,\n        request: options.request,\n        requestId: options.requestId,\n        controller: unhandledExceptionController,\n      }).then(() => {\n        // If all the \"unhandledException\" listeners have finished\n        // but have not handled the response in any way, preemptively\n        // resolve the pending response promise from the new controller.\n        // This prevents it from hanging forever.\n        if (\n          unhandledExceptionController[kResponsePromise].state === 'pending'\n        ) {\n          unhandledExceptionController[kResponsePromise].resolve(undefined)\n        }\n      })\n\n      const nextResult = await until(\n        () => unhandledExceptionController[kResponsePromise]\n      )\n\n      /**\n       * @note Handle the result of the unhandled controller\n       * in the same way as the original request controller.\n       * The exception here is that thrown errors within the\n       * \"unhandledException\" event do NOT result in another\n       * emit of the same event. They are forwarded as-is.\n       */\n      if (nextResult.error) {\n        return handleResponseError(nextResult.error)\n      }\n\n      if (nextResult.data) {\n        return handleResponse(nextResult.data)\n      }\n    }\n\n    // Otherwise, coerce unhandled exceptions to a 500 Internal Server Error response.\n    options.onResponse(createServerErrorResponse(result.error))\n    return true\n  }\n\n  /**\n   * Handle a mocked Response instance.\n   * @note That this can also be an Error in case\n   * the developer called \"errorWith\". This differentiates\n   * unhandled exceptions from intended errors.\n   */\n  if (result.data) {\n    return handleResponse(result.data)\n  }\n\n  // In all other cases, consider the request unhandled.\n  // The interceptor must perform it as-is.\n  return false\n}\n","/**\n * A function that validates if property access is possible on an object\n * without throwing. It returns `true` if the property access is possible\n * and `false` otherwise.\n *\n * Environments like miniflare will throw on property access on certain objects\n * like Request and Response, for unimplemented properties.\n */\nexport function isPropertyAccessible<Obj extends Record<string, any>>(\n  obj: Obj,\n  key: keyof Obj\n) {\n  try {\n    obj[key]\n    return true\n  } catch {\n    return false\n  }\n}\n","import { isPropertyAccessible } from './isPropertyAccessible'\n\n/**\n * Creates a generic 500 Unhandled Exception response.\n */\nexport function createServerErrorResponse(body: unknown): Response {\n  return new Response(\n    JSON.stringify(\n      body instanceof Error\n        ? {\n            name: body.name,\n            message: body.message,\n            stack: body.stack,\n          }\n        : body\n    ),\n    {\n      status: 500,\n      statusText: 'Unhandled Exception',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n  )\n}\n\nexport type ResponseError = Response & { type: 'error' }\n\n/**\n * Check if the given response is a `Response.error()`.\n *\n * @note Some environments, like Miniflare (Cloudflare) do not\n * implement the \"Response.type\" property and throw on its access.\n * Safely check if we can access \"type\" on \"Response\" before continuing.\n * @see https://github.com/mswjs/msw/issues/1834\n */\nexport function isResponseError(response: Response): response is ResponseError {\n  return isPropertyAccessible(response, 'type') && response.type === 'error'\n}\n","export function isNodeLikeError(\n  error: unknown\n): error is NodeJS.ErrnoException {\n  if (error == null) {\n    return false\n  }\n\n  if (!(error instanceof Error)) {\n    return false\n  }\n\n  return 'code' in error && 'errno' in error\n}\n","/**\n * Returns a boolean indicating whether the given global property\n * is defined and is configurable.\n */\nexport function hasConfigurableGlobal(propertyName: string): boolean {\n  const descriptor = Object.getOwnPropertyDescriptor(globalThis, propertyName)\n\n  // The property is not set at all.\n  if (typeof descriptor === 'undefined') {\n    return false\n  }\n\n  // The property is set to a getter that returns undefined.\n  if (\n    typeof descriptor.get === 'function' &&\n    typeof descriptor.get() === 'undefined'\n  ) {\n    return false\n  }\n\n  // The property is set to a value equal to undefined.\n  if (typeof descriptor.get === 'undefined' && descriptor.value == null) {\n    return false\n  }\n\n  if (typeof descriptor.set === 'undefined' && !descriptor.configurable) {\n    console.error(\n      `[MSW] Failed to apply interceptor: the global \\`${propertyName}\\` property is non-configurable. This is likely an issue with your environment. If you are using a framework, please open an issue about this in their repository.`\n    )\n    return false\n  }\n\n  return true\n}\n","import { invariant } from 'outvariant'\nimport { DeferredPromise } from '@open-draft/deferred-promise'\nimport { HttpRequestEventMap, IS_PATCHED_MODULE } from '../../glossary'\nimport { Interceptor } from '../../Interceptor'\nimport { RequestController } from '../../RequestController'\nimport { emitAsync } from '../../utils/emitAsync'\nimport { handleRequest } from '../../utils/handleRequest'\nimport { canParseUrl } from '../../utils/canParseUrl'\nimport { createRequestId } from '../../createRequestId'\nimport { createNetworkError } from './utils/createNetworkError'\nimport { followFetchRedirect } from './utils/followRedirect'\nimport { decompressResponse } from './utils/decompression'\nimport { hasConfigurableGlobal } from '../../utils/hasConfigurableGlobal'\nimport { FetchResponse } from '../../utils/fetchUtils'\n\nexport class FetchInterceptor extends Interceptor<HttpRequestEventMap> {\n  static symbol = Symbol('fetch')\n\n  constructor() {\n    super(FetchInterceptor.symbol)\n  }\n\n  protected checkEnvironment() {\n    return hasConfigurableGlobal('fetch')\n  }\n\n  protected async setup() {\n    const pureFetch = globalThis.fetch\n\n    invariant(\n      !(pureFetch as any)[IS_PATCHED_MODULE],\n      'Failed to patch the \"fetch\" module: already patched.'\n    )\n\n    globalThis.fetch = async (input, init) => {\n      const requestId = createRequestId()\n\n      /**\n       * @note Resolve potentially relative request URL\n       * against the present `location`. This is mainly\n       * for native `fetch` in JSDOM.\n       * @see https://github.com/mswjs/msw/issues/1625\n       */\n      const resolvedInput =\n        typeof input === 'string' &&\n        typeof location !== 'undefined' &&\n        !canParseUrl(input)\n          ? new URL(input, location.origin)\n          : input\n\n      const request = new Request(resolvedInput, init)\n      const responsePromise = new DeferredPromise<Response>()\n      const controller = new RequestController(request)\n\n      this.logger.info('[%s] %s', request.method, request.url)\n      this.logger.info('awaiting for the mocked response...')\n\n      this.logger.info(\n        'emitting the \"request\" event for %s listener(s)...',\n        this.emitter.listenerCount('request')\n      )\n\n      const isRequestHandled = await handleRequest({\n        request,\n        requestId,\n        emitter: this.emitter,\n        controller,\n        onResponse: async (rawResponse) => {\n          this.logger.info('received mocked response!', {\n            rawResponse,\n          })\n\n          // Decompress the mocked response body, if applicable.\n          const decompressedStream = decompressResponse(rawResponse)\n          const response =\n            decompressedStream === null\n              ? rawResponse\n              : new FetchResponse(decompressedStream, rawResponse)\n\n          FetchResponse.setUrl(request.url, response)\n\n          /**\n           * Undici's handling of following redirect responses.\n           * Treat the \"manual\" redirect mode as a regular mocked response.\n           * This way, the client can manually follow the redirect it receives.\n           * @see https://github.com/nodejs/undici/blob/a6dac3149c505b58d2e6d068b97f4dc993da55f0/lib/web/fetch/index.js#L1173\n           */\n          if (FetchResponse.isRedirectResponse(response.status)) {\n            // Reject the request promise if its `redirect` is set to `error`\n            // and it receives a mocked redirect response.\n            if (request.redirect === 'error') {\n              responsePromise.reject(createNetworkError('unexpected redirect'))\n              return\n            }\n\n            if (request.redirect === 'follow') {\n              followFetchRedirect(request, response).then(\n                (response) => {\n                  responsePromise.resolve(response)\n                },\n                (reason) => {\n                  responsePromise.reject(reason)\n                }\n              )\n              return\n            }\n          }\n\n          if (this.emitter.listenerCount('response') > 0) {\n            this.logger.info('emitting the \"response\" event...')\n\n            // Await the response listeners to finish before resolving\n            // the response promise. This ensures all your logic finishes\n            // before the interceptor resolves the pending response.\n            await emitAsync(this.emitter, 'response', {\n              // Clone the mocked response for the \"response\" event listener.\n              // This way, the listener can read the response and not lock its body\n              // for the actual fetch consumer.\n              response: response.clone(),\n              isMockedResponse: true,\n              request,\n              requestId,\n            })\n          }\n\n          responsePromise.resolve(response)\n        },\n        onRequestError: (response) => {\n          this.logger.info('request has errored!', { response })\n          responsePromise.reject(createNetworkError(response))\n        },\n        onError: (error) => {\n          this.logger.info('request has been aborted!', { error })\n          responsePromise.reject(error)\n        },\n      })\n\n      if (isRequestHandled) {\n        this.logger.info('request has been handled, returning mock promise...')\n        return responsePromise\n      }\n\n      this.logger.info(\n        'no mocked response received, performing request as-is...'\n      )\n\n      return pureFetch(request).then(async (response) => {\n        this.logger.info('original fetch performed', response)\n\n        if (this.emitter.listenerCount('response') > 0) {\n          this.logger.info('emitting the \"response\" event...')\n\n          const responseClone = response.clone()\n\n          await emitAsync(this.emitter, 'response', {\n            response: responseClone,\n            isMockedResponse: false,\n            request,\n            requestId,\n          })\n        }\n\n        return response\n      })\n    }\n\n    Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true,\n    })\n\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.fetch, IS_PATCHED_MODULE, {\n        value: undefined,\n      })\n\n      globalThis.fetch = pureFetch\n\n      this.logger.info(\n        'restored native \"globalThis.fetch\"!',\n        globalThis.fetch.name\n      )\n    })\n  }\n}\n","/**\n * Returns a boolean indicating whether the given URL string\n * can be parsed into a `URL` instance.\n * A substitute for `URL.canParse()` for Node.js 18.\n */\nexport function canParseUrl(url: string): boolean {\n  try {\n    new URL(url)\n    return true\n  } catch (_error) {\n    return false\n  }\n}\n","export function createNetworkError(cause?: unknown) {\n  return Object.assign(new TypeError('Failed to fetch'), {\n    cause,\n  })\n}\n","import { createNetworkError } from './createNetworkError'\n\nconst REQUEST_BODY_HEADERS = [\n  'content-encoding',\n  'content-language',\n  'content-location',\n  'content-type',\n  'content-length',\n]\n\nconst kRedirectCount = Symbol('kRedirectCount')\n\n/**\n * @see https://github.com/nodejs/undici/blob/a6dac3149c505b58d2e6d068b97f4dc993da55f0/lib/web/fetch/index.js#L1210\n */\nexport async function followFetchRedirect(\n  request: Request,\n  response: Response\n): Promise<Response> {\n  if (response.status !== 303 && request.body != null) {\n    return Promise.reject(createNetworkError())\n  }\n\n  const requestUrl = new URL(request.url)\n\n  let locationUrl: URL\n  try {\n    // If the location is a relative URL, use the request URL as the base URL.\n    locationUrl = new URL(response.headers.get('location')!, request.url) \n  } catch (error) {\n    return Promise.reject(createNetworkError(error))\n  }\n\n  if (\n    !(locationUrl.protocol === 'http:' || locationUrl.protocol === 'https:')\n  ) {\n    return Promise.reject(\n      createNetworkError('URL scheme must be a HTTP(S) scheme')\n    )\n  }\n\n  if (Reflect.get(request, kRedirectCount) > 20) {\n    return Promise.reject(createNetworkError('redirect count exceeded'))\n  }\n\n  Object.defineProperty(request, kRedirectCount, {\n    value: (Reflect.get(request, kRedirectCount) || 0) + 1,\n  })\n\n  if (\n    request.mode === 'cors' &&\n    (locationUrl.username || locationUrl.password) &&\n    !sameOrigin(requestUrl, locationUrl)\n  ) {\n    return Promise.reject(\n      createNetworkError('cross origin not allowed for request mode \"cors\"')\n    )\n  }\n\n  const requestInit: RequestInit = {}\n\n  if (\n    ([301, 302].includes(response.status) && request.method === 'POST') ||\n    (response.status === 303 && !['HEAD', 'GET'].includes(request.method))\n  ) {\n    requestInit.method = 'GET'\n    requestInit.body = null\n\n    REQUEST_BODY_HEADERS.forEach((headerName) => {\n      request.headers.delete(headerName)\n    })\n  }\n\n  if (!sameOrigin(requestUrl, locationUrl)) {\n    request.headers.delete('authorization')\n    request.headers.delete('proxy-authorization')\n    request.headers.delete('cookie')\n    request.headers.delete('host')\n  }\n\n  /**\n   * @note Undici \"safely\" extracts the request body.\n   * I suspect we cannot dispatch this request again\n   * since its body has been read and the stream is locked.\n   */\n\n  requestInit.headers = request.headers\n  return fetch(new Request(locationUrl, requestInit))\n}\n\n/**\n * @see https://github.com/nodejs/undici/blob/a6dac3149c505b58d2e6d068b97f4dc993da55f0/lib/web/fetch/util.js#L761\n */\nfunction sameOrigin(left: URL, right: URL): boolean {\n  if (left.origin === right.origin && left.origin === 'null') {\n    return true\n  }\n\n  if (\n    left.protocol === right.protocol &&\n    left.hostname === right.hostname &&\n    left.port === right.port\n  ) {\n    return true\n  }\n\n  return false\n}\n","export class BrotliDecompressionStream extends TransformStream {\n  constructor() {\n    console.warn(\n      '[Interceptors]: Brotli decompression of response streams is not supported in the browser'\n    )\n\n    super({\n      transform(chunk, controller) {\n        // Keep the stream as passthrough, it does nothing.\n        controller.enqueue(chunk)\n      },\n    })\n  }\n}\n","// Import from an internal alias that resolves to different modules\n// depending on the environment. This way, we can keep the fetch interceptor\n// intact while using different strategies for Brotli decompression.\nimport { BrotliDecompressionStream } from 'internal:brotli-decompress'\n\nclass PipelineStream extends TransformStream {\n  constructor(\n    transformStreams: Array<TransformStream>,\n    ...strategies: Array<QueuingStrategy>\n  ) {\n    super({}, ...strategies)\n\n    const readable = [super.readable as any, ...transformStreams].reduce(\n      (readable, transform) => readable.pipeThrough(transform)\n    )\n\n    Object.defineProperty(this, 'readable', {\n      get() {\n        return readable\n      },\n    })\n  }\n}\n\nexport function parseContentEncoding(contentEncoding: string): Array<string> {\n  return contentEncoding\n    .toLowerCase()\n    .split(',')\n    .map((coding) => coding.trim())\n}\n\nfunction createDecompressionStream(\n  contentEncoding: string\n): TransformStream | null {\n  if (contentEncoding === '') {\n    return null\n  }\n\n  const codings = parseContentEncoding(contentEncoding)\n\n  if (codings.length === 0) {\n    return null\n  }\n\n  const transformers = codings.reduceRight<Array<TransformStream>>(\n    (transformers, coding) => {\n      if (coding === 'gzip' || coding === 'x-gzip') {\n        return transformers.concat(new DecompressionStream('gzip'))\n      } else if (coding === 'deflate') {\n        return transformers.concat(new DecompressionStream('deflate'))\n      } else if (coding === 'br') {\n        return transformers.concat(new BrotliDecompressionStream())\n      } else {\n        transformers.length = 0\n      }\n\n      return transformers\n    },\n    []\n  )\n\n  return new PipelineStream(transformers)\n}\n\nexport function decompressResponse(\n  response: Response\n): ReadableStream<any> | null {\n  if (response.body === null) {\n    return null\n  }\n\n  const decompressionStream = createDecompressionStream(\n    response.headers.get('content-encoding') || ''\n  )\n\n  if (!decompressionStream) {\n    return null\n  }\n\n  // Use `pipeTo` and return the decompression stream's readable\n  // instead of `pipeThrough` because that will lock the original\n  // response stream, making it unusable as the input to Response.\n  response.body.pipeTo(decompressionStream.writable)\n  return decompressionStream.readable\n}\n","import { invariant } from 'outvariant'\nimport { Emitter } from 'strict-event-emitter'\nimport { HttpRequestEventMap, IS_PATCHED_MODULE } from '../../glossary'\nimport { Interceptor } from '../../Interceptor'\nimport { createXMLHttpRequestProxy } from './XMLHttpRequestProxy'\nimport { hasConfigurableGlobal } from '../../utils/hasConfigurableGlobal'\n\nexport type XMLHttpRequestEmitter = Emitter<HttpRequestEventMap>\n\nexport class XMLHttpRequestInterceptor extends Interceptor<HttpRequestEventMap> {\n  static interceptorSymbol = Symbol('xhr')\n\n  constructor() {\n    super(XMLHttpRequestInterceptor.interceptorSymbol)\n  }\n\n  protected checkEnvironment() {\n    return hasConfigurableGlobal('XMLHttpRequest')\n  }\n\n  protected setup() {\n    const logger = this.logger.extend('setup')\n\n    logger.info('patching \"XMLHttpRequest\" module...')\n\n    const PureXMLHttpRequest = globalThis.XMLHttpRequest\n\n    invariant(\n      !(PureXMLHttpRequest as any)[IS_PATCHED_MODULE],\n      'Failed to patch the \"XMLHttpRequest\" module: already patched.'\n    )\n\n    globalThis.XMLHttpRequest = createXMLHttpRequestProxy({\n      emitter: this.emitter,\n      logger: this.logger,\n    })\n\n    logger.info(\n      'native \"XMLHttpRequest\" module patched!',\n      globalThis.XMLHttpRequest.name\n    )\n\n    Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n      enumerable: true,\n      configurable: true,\n      value: true,\n    })\n\n    this.subscriptions.push(() => {\n      Object.defineProperty(globalThis.XMLHttpRequest, IS_PATCHED_MODULE, {\n        value: undefined,\n      })\n\n      globalThis.XMLHttpRequest = PureXMLHttpRequest\n      logger.info(\n        'native \"XMLHttpRequest\" module restored!',\n        globalThis.XMLHttpRequest.name\n      )\n    })\n  }\n}\n","import { invariant } from 'outvariant'\nimport { isNodeProcess } from 'is-node-process'\nimport type { Logger } from '@open-draft/logger'\nimport { concatArrayBuffer } from './utils/concatArrayBuffer'\nimport { createEvent } from './utils/createEvent'\nimport {\n  decodeBuffer,\n  encodeBuffer,\n  toArrayBuffer,\n} from '../../utils/bufferUtils'\nimport { createProxy } from '../../utils/createProxy'\nimport { isDomParserSupportedType } from './utils/isDomParserSupportedType'\nimport { parseJson } from '../../utils/parseJson'\nimport { createResponse } from './utils/createResponse'\nimport { INTERNAL_REQUEST_ID_HEADER_NAME } from '../../Interceptor'\nimport { createRequestId } from '../../createRequestId'\nimport { getBodyByteLength } from './utils/getBodyByteLength'\n\nconst kIsRequestHandled = Symbol('kIsRequestHandled')\nconst IS_NODE = isNodeProcess()\nconst kFetchRequest = Symbol('kFetchRequest')\n\n/**\n * An `XMLHttpRequest` instance controller that allows us\n * to handle any given request instance (e.g. responding to it).\n */\nexport class XMLHttpRequestController {\n  public request: XMLHttpRequest\n  public requestId: string\n  public onRequest?: (\n    this: XMLHttpRequestController,\n    args: {\n      request: Request\n      requestId: string\n    }\n  ) => Promise<void>\n  public onResponse?: (\n    this: XMLHttpRequestController,\n    args: {\n      response: Response\n      isMockedResponse: boolean\n      request: Request\n      requestId: string\n    }\n  ) => void;\n\n  [kIsRequestHandled]: boolean;\n  [kFetchRequest]?: Request\n  private method: string = 'GET'\n  private url: URL = null as any\n  private requestHeaders: Headers\n  private responseBuffer: Uint8Array\n  private events: Map<keyof XMLHttpRequestEventTargetEventMap, Array<Function>>\n  private uploadEvents: Map<\n    keyof XMLHttpRequestEventTargetEventMap,\n    Array<Function>\n  >\n\n  constructor(readonly initialRequest: XMLHttpRequest, public logger: Logger) {\n    this[kIsRequestHandled] = false\n\n    this.events = new Map()\n    this.uploadEvents = new Map()\n    this.requestId = createRequestId()\n    this.requestHeaders = new Headers()\n    this.responseBuffer = new Uint8Array()\n\n    this.request = createProxy(initialRequest, {\n      setProperty: ([propertyName, nextValue], invoke) => {\n        switch (propertyName) {\n          case 'ontimeout': {\n            const eventName = propertyName.slice(\n              2\n            ) as keyof XMLHttpRequestEventTargetEventMap\n\n            /**\n             * @note Proxy callbacks to event listeners because JSDOM has trouble\n             * translating these properties to callbacks. It seemed to be operating\n             * on events exclusively.\n             */\n            this.request.addEventListener(eventName, nextValue as any)\n\n            return invoke()\n          }\n\n          default: {\n            return invoke()\n          }\n        }\n      },\n      methodCall: ([methodName, args], invoke) => {\n        switch (methodName) {\n          case 'open': {\n            const [method, url] = args as [string, string | undefined]\n\n            if (typeof url === 'undefined') {\n              this.method = 'GET'\n              this.url = toAbsoluteUrl(method)\n            } else {\n              this.method = method\n              this.url = toAbsoluteUrl(url)\n            }\n\n            this.logger = this.logger.extend(`${this.method} ${this.url.href}`)\n            this.logger.info('open', this.method, this.url.href)\n\n            return invoke()\n          }\n\n          case 'addEventListener': {\n            const [eventName, listener] = args as [\n              keyof XMLHttpRequestEventTargetEventMap,\n              Function\n            ]\n\n            this.registerEvent(eventName, listener)\n            this.logger.info('addEventListener', eventName, listener)\n\n            return invoke()\n          }\n\n          case 'setRequestHeader': {\n            const [name, value] = args as [string, string]\n            this.requestHeaders.set(name, value)\n\n            this.logger.info('setRequestHeader', name, value)\n\n            return invoke()\n          }\n\n          case 'send': {\n            const [body] = args as [\n              body?: XMLHttpRequestBodyInit | Document | null\n            ]\n\n            this.request.addEventListener('load', () => {\n              if (typeof this.onResponse !== 'undefined') {\n                // Create a Fetch API Response representation of whichever\n                // response this XMLHttpRequest received. Note those may\n                // be either a mocked and the original response.\n                const fetchResponse = createResponse(\n                  this.request,\n                  /**\n                   * The `response` property is the right way to read\n                   * the ambiguous response body, as the request's \"responseType\" may differ.\n                   * @see https://xhr.spec.whatwg.org/#the-response-attribute\n                   */\n                  this.request.response\n                )\n\n                // Notify the consumer about the response.\n                this.onResponse.call(this, {\n                  response: fetchResponse,\n                  isMockedResponse: this[kIsRequestHandled],\n                  request: fetchRequest,\n                  requestId: this.requestId!,\n                })\n              }\n            })\n\n            const requestBody =\n              typeof body === 'string' ? encodeBuffer(body) : body\n\n            // Delegate request handling to the consumer.\n            const fetchRequest = this.toFetchApiRequest(requestBody)\n            this[kFetchRequest] = fetchRequest.clone()\n\n            const onceRequestSettled =\n              this.onRequest?.call(this, {\n                request: fetchRequest,\n                requestId: this.requestId!,\n              }) || Promise.resolve()\n\n            onceRequestSettled.finally(() => {\n              // If the consumer didn't handle the request (called `.respondWith()`) perform it as-is.\n              if (!this[kIsRequestHandled]) {\n                this.logger.info(\n                  'request callback settled but request has not been handled (readystate %d), performing as-is...',\n                  this.request.readyState\n                )\n\n                /**\n                 * @note Set the intercepted request ID on the original request in Node.js\n                 * so that if it triggers any other interceptors, they don't attempt\n                 * to process it once again.\n                 *\n                 * For instance, XMLHttpRequest is often implemented via \"http.ClientRequest\"\n                 * and we don't want for both XHR and ClientRequest interceptors to\n                 * handle the same request at the same time (e.g. emit the \"response\" event twice).\n                 */\n                if (IS_NODE) {\n                  this.request.setRequestHeader(\n                    INTERNAL_REQUEST_ID_HEADER_NAME,\n                    this.requestId!\n                  )\n                }\n\n                return invoke()\n              }\n            })\n\n            break\n          }\n\n          default: {\n            return invoke()\n          }\n        }\n      },\n    })\n\n    /**\n     * Proxy the `.upload` property to gather the event listeners/callbacks.\n     */\n    define(\n      this.request,\n      'upload',\n      createProxy(this.request.upload, {\n        setProperty: ([propertyName, nextValue], invoke) => {\n          switch (propertyName) {\n            case 'onloadstart':\n            case 'onprogress':\n            case 'onaboart':\n            case 'onerror':\n            case 'onload':\n            case 'ontimeout':\n            case 'onloadend': {\n              const eventName = propertyName.slice(\n                2\n              ) as keyof XMLHttpRequestEventTargetEventMap\n\n              this.registerUploadEvent(eventName, nextValue as Function)\n            }\n          }\n\n          return invoke()\n        },\n        methodCall: ([methodName, args], invoke) => {\n          switch (methodName) {\n            case 'addEventListener': {\n              const [eventName, listener] = args as [\n                keyof XMLHttpRequestEventTargetEventMap,\n                Function\n              ]\n              this.registerUploadEvent(eventName, listener)\n              this.logger.info('upload.addEventListener', eventName, listener)\n\n              return invoke()\n            }\n          }\n        },\n      })\n    )\n  }\n\n  private registerEvent(\n    eventName: keyof XMLHttpRequestEventTargetEventMap,\n    listener: Function\n  ): void {\n    const prevEvents = this.events.get(eventName) || []\n    const nextEvents = prevEvents.concat(listener)\n    this.events.set(eventName, nextEvents)\n\n    this.logger.info('registered event \"%s\"', eventName, listener)\n  }\n\n  private registerUploadEvent(\n    eventName: keyof XMLHttpRequestEventTargetEventMap,\n    listener: Function\n  ): void {\n    const prevEvents = this.uploadEvents.get(eventName) || []\n    const nextEvents = prevEvents.concat(listener)\n    this.uploadEvents.set(eventName, nextEvents)\n\n    this.logger.info('registered upload event \"%s\"', eventName, listener)\n  }\n\n  /**\n   * Responds to the current request with the given\n   * Fetch API `Response` instance.\n   */\n  public async respondWith(response: Response): Promise<void> {\n    /**\n     * @note Since `XMLHttpRequestController` delegates the handling of the responses\n     * to the \"load\" event listener that doesn't distinguish between the mocked and original\n     * responses, mark the request that had a mocked response with a corresponding symbol.\n     *\n     * Mark this request as having a mocked response immediately since\n     * calculating request/response total body length is asynchronous.\n     */\n    this[kIsRequestHandled] = true\n\n    /**\n     * Dispatch request upload events for requests with a body.\n     * @see https://github.com/mswjs/interceptors/issues/573\n     */\n    if (this[kFetchRequest]) {\n      const totalRequestBodyLength = await getBodyByteLength(\n        this[kFetchRequest]\n      )\n\n      this.trigger('loadstart', this.request.upload, {\n        loaded: 0,\n        total: totalRequestBodyLength,\n      })\n      this.trigger('progress', this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength,\n      })\n      this.trigger('load', this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength,\n      })\n      this.trigger('loadend', this.request.upload, {\n        loaded: totalRequestBodyLength,\n        total: totalRequestBodyLength,\n      })\n    }\n\n    this.logger.info(\n      'responding with a mocked response: %d %s',\n      response.status,\n      response.statusText\n    )\n\n    define(this.request, 'status', response.status)\n    define(this.request, 'statusText', response.statusText)\n    define(this.request, 'responseURL', this.url.href)\n\n    this.request.getResponseHeader = new Proxy(this.request.getResponseHeader, {\n      apply: (_, __, args: [name: string]) => {\n        this.logger.info('getResponseHeader', args[0])\n\n        if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n          this.logger.info('headers not received yet, returning null')\n\n          // Headers not received yet, nothing to return.\n          return null\n        }\n\n        const headerValue = response.headers.get(args[0])\n        this.logger.info(\n          'resolved response header \"%s\" to',\n          args[0],\n          headerValue\n        )\n\n        return headerValue\n      },\n    })\n\n    this.request.getAllResponseHeaders = new Proxy(\n      this.request.getAllResponseHeaders,\n      {\n        apply: () => {\n          this.logger.info('getAllResponseHeaders')\n\n          if (this.request.readyState < this.request.HEADERS_RECEIVED) {\n            this.logger.info('headers not received yet, returning empty string')\n\n            // Headers not received yet, nothing to return.\n            return ''\n          }\n\n          const headersList = Array.from(response.headers.entries())\n          const allHeaders = headersList\n            .map(([headerName, headerValue]) => {\n              return `${headerName}: ${headerValue}`\n            })\n            .join('\\r\\n')\n\n          this.logger.info('resolved all response headers to', allHeaders)\n\n          return allHeaders\n        },\n      }\n    )\n\n    // Update the response getters to resolve against the mocked response.\n    Object.defineProperties(this.request, {\n      response: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.response,\n      },\n      responseText: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseText,\n      },\n      responseXML: {\n        enumerable: true,\n        configurable: false,\n        get: () => this.responseXML,\n      },\n    })\n\n    const totalResponseBodyLength = await getBodyByteLength(response.clone())\n\n    this.logger.info('calculated response body length', totalResponseBodyLength)\n\n    this.trigger('loadstart', this.request, {\n      loaded: 0,\n      total: totalResponseBodyLength,\n    })\n\n    this.setReadyState(this.request.HEADERS_RECEIVED)\n    this.setReadyState(this.request.LOADING)\n\n    const finalizeResponse = () => {\n      this.logger.info('finalizing the mocked response...')\n\n      this.setReadyState(this.request.DONE)\n\n      this.trigger('load', this.request, {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength,\n      })\n\n      this.trigger('loadend', this.request, {\n        loaded: this.responseBuffer.byteLength,\n        total: totalResponseBodyLength,\n      })\n    }\n\n    if (response.body) {\n      this.logger.info('mocked response has body, streaming...')\n\n      const reader = response.body.getReader()\n\n      const readNextResponseBodyChunk = async () => {\n        const { value, done } = await reader.read()\n\n        if (done) {\n          this.logger.info('response body stream done!')\n          finalizeResponse()\n          return\n        }\n\n        if (value) {\n          this.logger.info('read response body chunk:', value)\n          this.responseBuffer = concatArrayBuffer(this.responseBuffer, value)\n\n          this.trigger('progress', this.request, {\n            loaded: this.responseBuffer.byteLength,\n            total: totalResponseBodyLength,\n          })\n        }\n\n        readNextResponseBodyChunk()\n      }\n\n      readNextResponseBodyChunk()\n    } else {\n      finalizeResponse()\n    }\n  }\n\n  private responseBufferToText(): string {\n    return decodeBuffer(this.responseBuffer)\n  }\n\n  get response(): unknown {\n    this.logger.info(\n      'getResponse (responseType: %s)',\n      this.request.responseType\n    )\n\n    if (this.request.readyState !== this.request.DONE) {\n      return null\n    }\n\n    switch (this.request.responseType) {\n      case 'json': {\n        const responseJson = parseJson(this.responseBufferToText())\n        this.logger.info('resolved response JSON', responseJson)\n\n        return responseJson\n      }\n\n      case 'arraybuffer': {\n        const arrayBuffer = toArrayBuffer(this.responseBuffer)\n        this.logger.info('resolved response ArrayBuffer', arrayBuffer)\n\n        return arrayBuffer\n      }\n\n      case 'blob': {\n        const mimeType =\n          this.request.getResponseHeader('Content-Type') || 'text/plain'\n        const responseBlob = new Blob([this.responseBufferToText()], {\n          type: mimeType,\n        })\n\n        this.logger.info(\n          'resolved response Blob (mime type: %s)',\n          responseBlob,\n          mimeType\n        )\n\n        return responseBlob\n      }\n\n      default: {\n        const responseText = this.responseBufferToText()\n        this.logger.info(\n          'resolving \"%s\" response type as text',\n          this.request.responseType,\n          responseText\n        )\n\n        return responseText\n      }\n    }\n  }\n\n  get responseText(): string {\n    /**\n     * Throw when trying to read the response body as text when the\n     * \"responseType\" doesn't expect text. This just respects the spec better.\n     * @see https://xhr.spec.whatwg.org/#the-responsetext-attribute\n     */\n    invariant(\n      this.request.responseType === '' || this.request.responseType === 'text',\n      'InvalidStateError: The object is in invalid state.'\n    )\n\n    if (\n      this.request.readyState !== this.request.LOADING &&\n      this.request.readyState !== this.request.DONE\n    ) {\n      return ''\n    }\n\n    const responseText = this.responseBufferToText()\n    this.logger.info('getResponseText: \"%s\"', responseText)\n\n    return responseText\n  }\n\n  get responseXML(): Document | null {\n    invariant(\n      this.request.responseType === '' ||\n        this.request.responseType === 'document',\n      'InvalidStateError: The object is in invalid state.'\n    )\n\n    if (this.request.readyState !== this.request.DONE) {\n      return null\n    }\n\n    const contentType = this.request.getResponseHeader('Content-Type') || ''\n\n    if (typeof DOMParser === 'undefined') {\n      console.warn(\n        'Cannot retrieve XMLHttpRequest response body as XML: DOMParser is not defined. You are likely using an environment that is not browser or does not polyfill browser globals correctly.'\n      )\n      return null\n    }\n\n    if (isDomParserSupportedType(contentType)) {\n      return new DOMParser().parseFromString(\n        this.responseBufferToText(),\n        contentType\n      )\n    }\n\n    return null\n  }\n\n  public errorWith(error?: Error): void {\n    /**\n     * @note Mark this request as handled even if it received a mock error.\n     * This prevents the controller from trying to perform this request as-is.\n     */\n    this[kIsRequestHandled] = true\n    this.logger.info('responding with an error')\n\n    this.setReadyState(this.request.DONE)\n    this.trigger('error', this.request)\n    this.trigger('loadend', this.request)\n  }\n\n  /**\n   * Transitions this request's `readyState` to the given one.\n   */\n  private setReadyState(nextReadyState: number): void {\n    this.logger.info(\n      'setReadyState: %d -> %d',\n      this.request.readyState,\n      nextReadyState\n    )\n\n    if (this.request.readyState === nextReadyState) {\n      this.logger.info('ready state identical, skipping transition...')\n      return\n    }\n\n    define(this.request, 'readyState', nextReadyState)\n\n    this.logger.info('set readyState to: %d', nextReadyState)\n\n    if (nextReadyState !== this.request.UNSENT) {\n      this.logger.info('triggerring \"readystatechange\" event...')\n\n      this.trigger('readystatechange', this.request)\n    }\n  }\n\n  /**\n   * Triggers given event on the `XMLHttpRequest` instance.\n   */\n  private trigger<\n    EventName extends keyof (XMLHttpRequestEventTargetEventMap & {\n      readystatechange: ProgressEvent<XMLHttpRequestEventTarget>\n    })\n  >(\n    eventName: EventName,\n    target: XMLHttpRequest | XMLHttpRequestUpload,\n    options?: ProgressEventInit\n  ): void {\n    const callback = (target as XMLHttpRequest)[`on${eventName}`]\n    const event = createEvent(target, eventName, options)\n\n    this.logger.info('trigger \"%s\"', eventName, options || '')\n\n    // Invoke direct callbacks.\n    if (typeof callback === 'function') {\n      this.logger.info('found a direct \"%s\" callback, calling...', eventName)\n      callback.call(target as XMLHttpRequest, event)\n    }\n\n    // Invoke event listeners.\n    const events =\n      target instanceof XMLHttpRequestUpload ? this.uploadEvents : this.events\n\n    for (const [registeredEventName, listeners] of events) {\n      if (registeredEventName === eventName) {\n        this.logger.info(\n          'found %d listener(s) for \"%s\" event, calling...',\n          listeners.length,\n          eventName\n        )\n\n        listeners.forEach((listener) => listener.call(target, event))\n      }\n    }\n  }\n\n  /**\n   * Converts this `XMLHttpRequest` instance into a Fetch API `Request` instance.\n   */\n  private toFetchApiRequest(\n    body: XMLHttpRequestBodyInit | Document | null | undefined\n  ): Request {\n    this.logger.info('converting request to a Fetch API Request...')\n\n    // If the `Document` is used as the body of this XMLHttpRequest,\n    // set its inner text as the Fetch API Request body.\n    const resolvedBody =\n      body instanceof Document ? body.documentElement.innerText : body\n\n    const fetchRequest = new Request(this.url.href, {\n      method: this.method,\n      headers: this.requestHeaders,\n      /**\n       * @see https://xhr.spec.whatwg.org/#cross-origin-credentials\n       */\n      credentials: this.request.withCredentials ? 'include' : 'same-origin',\n      body: ['GET', 'HEAD'].includes(this.method.toUpperCase())\n        ? null\n        : resolvedBody,\n    })\n\n    const proxyHeaders = createProxy(fetchRequest.headers, {\n      methodCall: ([methodName, args], invoke) => {\n        // Forward the latest state of the internal request headers\n        // because the interceptor might have modified them\n        // without responding to the request.\n        switch (methodName) {\n          case 'append':\n          case 'set': {\n            const [headerName, headerValue] = args as [string, string]\n            this.request.setRequestHeader(headerName, headerValue)\n            break\n          }\n\n          case 'delete': {\n            const [headerName] = args as [string]\n            console.warn(\n              `XMLHttpRequest: Cannot remove a \"${headerName}\" header from the Fetch API representation of the \"${fetchRequest.method} ${fetchRequest.url}\" request. XMLHttpRequest headers cannot be removed.`\n            )\n            break\n          }\n        }\n\n        return invoke()\n      },\n    })\n    define(fetchRequest, 'headers', proxyHeaders)\n\n    this.logger.info('converted request to a Fetch API Request!', fetchRequest)\n\n    return fetchRequest\n  }\n}\n\nfunction toAbsoluteUrl(url: string | URL): URL {\n  /**\n   * @note XMLHttpRequest interceptor may run in environments\n   * that implement XMLHttpRequest but don't implement \"location\"\n   * (for example, React Native). If that's the case, return the\n   * input URL as-is (nothing to be relative to).\n   * @see https://github.com/mswjs/msw/issues/1777\n   */\n  if (typeof location === 'undefined') {\n    return new URL(url)\n  }\n\n  return new URL(url.toString(), location.href)\n}\n\nfunction define(\n  target: object,\n  property: string | symbol,\n  value: unknown\n): void {\n  Reflect.defineProperty(target, property, {\n    // Ensure writable properties to allow redefining readonly properties.\n    writable: true,\n    enumerable: true,\n    value,\n  })\n}\n","/**\n * Concatenate two `Uint8Array` buffers.\n */\nexport function concatArrayBuffer(\n  left: Uint8Array,\n  right: Uint8Array\n): Uint8Array {\n  const result = new Uint8Array(left.byteLength + right.byteLength)\n  result.set(left, 0)\n  result.set(right, left.byteLength)\n  return result\n}\n","export class EventPolyfill implements Event {\n  readonly NONE = 0\n  readonly CAPTURING_PHASE = 1\n  readonly AT_TARGET = 2\n  readonly BUBBLING_PHASE = 3\n\n  public type: string = ''\n  public srcElement: EventTarget | null = null\n  public target: EventTarget | null\n  public currentTarget: EventTarget | null = null\n  public eventPhase: number = 0\n  public timeStamp: number\n  public isTrusted: boolean = true\n  public composed: boolean = false\n  public cancelable: boolean = true\n  public defaultPrevented: boolean = false\n  public bubbles: boolean = true\n  public lengthComputable: boolean = true\n  public loaded: number = 0\n  public total: number = 0\n\n  cancelBubble: boolean = false\n  returnValue: boolean = true\n\n  constructor(\n    type: string,\n    options?: { target: EventTarget; currentTarget: EventTarget }\n  ) {\n    this.type = type\n    this.target = options?.target || null\n    this.currentTarget = options?.currentTarget || null\n    this.timeStamp = Date.now()\n  }\n\n  public composedPath(): EventTarget[] {\n    return []\n  }\n\n  public initEvent(type: string, bubbles?: boolean, cancelable?: boolean) {\n    this.type = type\n    this.bubbles = !!bubbles\n    this.cancelable = !!cancelable\n  }\n\n  public preventDefault() {\n    this.defaultPrevented = true\n  }\n\n  public stopPropagation() {}\n  public stopImmediatePropagation() {}\n}\n","import { EventPolyfill } from './EventPolyfill'\n\nexport class ProgressEventPolyfill extends EventPolyfill {\n  readonly lengthComputable: boolean\n  readonly composed: boolean\n  readonly loaded: number\n  readonly total: number\n\n  constructor(type: string, init?: ProgressEventInit) {\n    super(type)\n\n    this.lengthComputable = init?.lengthComputable || false\n    this.composed = init?.composed || false\n    this.loaded = init?.loaded || 0\n    this.total = init?.total || 0\n  }\n}\n","import { EventPolyfill } from '../polyfills/EventPolyfill'\nimport { ProgressEventPolyfill } from '../polyfills/ProgressEventPolyfill'\n\nconst SUPPORTS_PROGRESS_EVENT = typeof ProgressEvent !== 'undefined'\n\nexport function createEvent(\n  target: XMLHttpRequest | XMLHttpRequestUpload,\n  type: string,\n  init?: ProgressEventInit\n): EventPolyfill {\n  const progressEvents = [\n    'error',\n    'progress',\n    'loadstart',\n    'loadend',\n    'load',\n    'timeout',\n    'abort',\n  ]\n\n  /**\n   * `ProgressEvent` is not supported in React Native.\n   * @see https://github.com/mswjs/interceptors/issues/40\n   */\n  const ProgressEventClass = SUPPORTS_PROGRESS_EVENT\n    ? ProgressEvent\n    : ProgressEventPolyfill\n\n  const event = progressEvents.includes(type)\n    ? new ProgressEventClass(type, {\n        lengthComputable: true,\n        loaded: init?.loaded || 0,\n        total: init?.total || 0,\n      })\n    : new EventPolyfill(type, {\n        target,\n        currentTarget: target,\n      })\n\n  return event\n}\n","/**\n * Returns the source object of the given property on the target object\n * (the target itself, any parent in its prototype, or null).\n */\nexport function findPropertySource(\n  target: object,\n  propertyName: string | symbol\n): object | null {\n  if (!(propertyName in target)) {\n    return null\n  }\n\n  const hasProperty = Object.prototype.hasOwnProperty.call(target, propertyName)\n  if (hasProperty) {\n    return target\n  }\n\n  const prototype = Reflect.getPrototypeOf(target)\n  return prototype ? findPropertySource(prototype, propertyName) : null\n}\n","import { findPropertySource } from './findPropertySource'\n\nexport interface ProxyOptions<Target extends Record<string, any>> {\n  constructorCall?(args: Array<unknown>, next: NextFunction<Target>): Target\n\n  methodCall?<F extends keyof Target>(\n    this: Target,\n    data: [methodName: F, args: Array<unknown>],\n    next: NextFunction<void>\n  ): void\n\n  setProperty?(\n    data: [propertyName: string | symbol, nextValue: unknown],\n    next: NextFunction<boolean>\n  ): boolean\n\n  getProperty?(\n    data: [propertyName: string | symbol, receiver: Target],\n    next: NextFunction<void>\n  ): void\n}\n\nexport type NextFunction<ReturnType> = () => ReturnType\n\nexport function createProxy<Target extends object>(\n  target: Target,\n  options: ProxyOptions<Target>\n): Target {\n  const proxy = new Proxy(target, optionsToProxyHandler(options))\n\n  return proxy\n}\n\nfunction optionsToProxyHandler<T extends Record<string, any>>(\n  options: ProxyOptions<T>\n): ProxyHandler<T> {\n  const { constructorCall, methodCall, getProperty, setProperty } = options\n  const handler: ProxyHandler<T> = {}\n\n  if (typeof constructorCall !== 'undefined') {\n    handler.construct = function (target, args, newTarget) {\n      const next = Reflect.construct.bind(null, target as any, args, newTarget)\n      return constructorCall.call(newTarget, args, next)\n    }\n  }\n\n  handler.set = function (target, propertyName, nextValue) {\n    const next = () => {\n      const propertySource = findPropertySource(target, propertyName) || target\n      const ownDescriptors = Reflect.getOwnPropertyDescriptor(\n        propertySource,\n        propertyName\n      )\n\n      // Respect any custom setters present for this property.\n      if (typeof ownDescriptors?.set !== 'undefined') {\n        ownDescriptors.set.apply(target, [nextValue])\n        return true\n      }\n\n      // Otherwise, set the property on the source.\n      return Reflect.defineProperty(propertySource, propertyName, {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: nextValue,\n      })\n    }\n\n    if (typeof setProperty !== 'undefined') {\n      return setProperty.call(target, [propertyName, nextValue], next)\n    }\n\n    return next()\n  }\n\n  handler.get = function (target, propertyName, receiver) {\n    /**\n     * @note Using `Reflect.get()` here causes \"TypeError: Illegal invocation\".\n     */\n    const next = () => target[propertyName as any]\n\n    const value =\n      typeof getProperty !== 'undefined'\n        ? getProperty.call(target, [propertyName, receiver], next)\n        : next()\n\n    if (typeof value === 'function') {\n      return (...args: Array<any>) => {\n        const next = value.bind(target, ...args)\n\n        if (typeof methodCall !== 'undefined') {\n          return methodCall.call(target, [propertyName as any, args], next)\n        }\n\n        return next()\n      }\n    }\n\n    return value\n  }\n\n  return handler\n}\n","export function isDomParserSupportedType(\n  type: string\n): type is DOMParserSupportedType {\n  const supportedTypes: Array<DOMParserSupportedType> = [\n    'application/xhtml+xml',\n    'application/xml',\n    'image/svg+xml',\n    'text/html',\n    'text/xml',\n  ]\n  return supportedTypes.some((supportedType) => {\n    return type.startsWith(supportedType)\n  })\n}\n","/**\n * Parses a given string into JSON.\n * Gracefully handles invalid JSON by returning `null`.\n */\nexport function parseJson(data: string): Record<string, unknown> | null {\n  try {\n    const json = JSON.parse(data)\n    return json\n  } catch (_) {\n    return null\n  }\n}\n","import { FetchResponse } from '../../../utils/fetchUtils'\n\n/**\n * Creates a Fetch API `Response` instance from the given\n * `XMLHttpRequest` instance and a response body.\n */\nexport function createResponse(\n  request: XMLHttpRequest,\n  body: BodyInit | null\n): Response {\n  /**\n   * Handle XMLHttpRequest responses that must have null as the\n   * response body when represented using Fetch API Response.\n   * XMLHttpRequest response will always have an empty string\n   * as the \"request.response\" in those cases, resulting in an error\n   * when constructing a Response instance.\n   * @see https://github.com/mswjs/interceptors/issues/379\n   */\n  const responseBodyOrNull = FetchResponse.isResponseWithBody(request.status)\n    ? body\n    : null\n\n  return new FetchResponse(responseBodyOrNull, {\n    url: request.responseURL,\n    status: request.status,\n    statusText: request.statusText,\n    headers: createHeadersFromXMLHttpReqestHeaders(\n      request.getAllResponseHeaders()\n    ),\n  })\n}\n\nfunction createHeadersFromXMLHttpReqestHeaders(headersString: string): Headers {\n  const headers = new Headers()\n\n  const lines = headersString.split(/[\\r\\n]+/)\n  for (const line of lines) {\n    if (line.trim() === '') {\n      continue\n    }\n\n    const [name, ...parts] = line.split(': ')\n    const value = parts.join(': ')\n\n    headers.append(name, value)\n  }\n\n  return headers\n}\n","/**\n * Return a total byte length of the given request/response body.\n * If the `Content-Length` header is present, it will be used as the byte length.\n */\nexport async function getBodyByteLength(\n  input: Request | Response\n): Promise<number> {\n  const explicitContentLength = input.headers.get('content-length')\n\n  if (explicitContentLength != null && explicitContentLength !== '') {\n    return Number(explicitContentLength)\n  }\n\n  const buffer = await input.arrayBuffer()\n  return buffer.byteLength\n}\n","import type { Logger } from '@open-draft/logger'\nimport { XMLHttpRequestEmitter } from '.'\nimport { RequestController } from '../../RequestController'\nimport { XMLHttpRequestController } from './XMLHttpRequestController'\nimport { handleRequest } from '../../utils/handleRequest'\n\nexport interface XMLHttpRequestProxyOptions {\n  emitter: XMLHttpRequestEmitter\n  logger: Logger\n}\n\n/**\n * Create a proxied `XMLHttpRequest` class.\n * The proxied class establishes spies on certain methods,\n * allowing us to intercept requests and respond to them.\n */\nexport function createXMLHttpRequestProxy({\n  emitter,\n  logger,\n}: XMLHttpRequestProxyOptions) {\n  const XMLHttpRequestProxy = new Proxy(globalThis.XMLHttpRequest, {\n    construct(target, args, newTarget) {\n      logger.info('constructed new XMLHttpRequest')\n\n      const originalRequest = Reflect.construct(\n        target,\n        args,\n        newTarget\n      ) as XMLHttpRequest\n\n      /**\n       * @note Forward prototype descriptors onto the proxied object.\n       * XMLHttpRequest is implemented in JSDOM in a way that assigns\n       * a bunch of descriptors, like \"set responseType()\" on the prototype.\n       * With this propagation, we make sure that those descriptors trigger\n       * when the user operates with the proxied request instance.\n       */\n      const prototypeDescriptors = Object.getOwnPropertyDescriptors(\n        target.prototype\n      )\n      for (const propertyName in prototypeDescriptors) {\n        Reflect.defineProperty(\n          originalRequest,\n          propertyName,\n          prototypeDescriptors[propertyName]\n        )\n      }\n\n      const xhrRequestController = new XMLHttpRequestController(\n        originalRequest,\n        logger\n      )\n\n      xhrRequestController.onRequest = async function ({ request, requestId }) {\n        const controller = new RequestController(request)\n\n        this.logger.info('awaiting mocked response...')\n\n        this.logger.info(\n          'emitting the \"request\" event for %s listener(s)...',\n          emitter.listenerCount('request')\n        )\n\n        const isRequestHandled = await handleRequest({\n          request,\n          requestId,\n          controller,\n          emitter,\n          onResponse: async (response) => {\n            await this.respondWith(response)\n          },\n          onRequestError: () => {\n            this.errorWith(new TypeError('Network error'))\n          },\n          onError: (error) => {\n            this.logger.info('request errored!', { error })\n\n            if (error instanceof Error) {\n              this.errorWith(error)\n            }\n          },\n        })\n\n        if (!isRequestHandled) {\n          this.logger.info(\n            'no mocked response received, performing request as-is...'\n          )\n        }\n      }\n\n      xhrRequestController.onResponse = async function ({\n        response,\n        isMockedResponse,\n        request,\n        requestId,\n      }) {\n        this.logger.info(\n          'emitting the \"response\" event for %s listener(s)...',\n          emitter.listenerCount('response')\n        )\n\n        emitter.emit('response', {\n          response,\n          isMockedResponse,\n          request,\n          requestId,\n        })\n      }\n\n      // Return the proxied request from the controller\n      // so that the controller can react to the consumer's interactions\n      // with this request (opening/sending/etc).\n      return xhrRequestController.request\n    },\n  })\n\n  return XMLHttpRequestProxy\n}\n","import {\n  Interceptor,\n  BatchInterceptor,\n  HttpRequestEventMap,\n} from '@mswjs/interceptors'\nimport { FetchInterceptor } from '@mswjs/interceptors/fetch'\nimport { XMLHttpRequestInterceptor } from '@mswjs/interceptors/XMLHttpRequest'\nimport { SetupWorkerInternalContext, StartOptions } from '../glossary'\nimport type { RequiredDeep } from '~/core/typeUtils'\nimport { handleRequest } from '~/core/utils/handleRequest'\nimport { isHandlerKind } from '~/core/utils/internal/isHandlerKind'\n\nexport function createFallbackRequestListener(\n  context: SetupWorkerInternalContext,\n  options: RequiredDeep<StartOptions>,\n): Interceptor<HttpRequestEventMap> {\n  const interceptor = new BatchInterceptor({\n    name: 'fallback',\n    interceptors: [new FetchInterceptor(), new XMLHttpRequestInterceptor()],\n  })\n\n  interceptor.on('request', async ({ request, requestId, controller }) => {\n    const requestCloneForLogs = request.clone()\n\n    const response = await handleRequest(\n      request,\n      requestId,\n      context.getRequestHandlers().filter(isHandlerKind('RequestHandler')),\n      options,\n      context.emitter,\n      {\n        onMockedResponse(_, { handler, parsedResult }) {\n          if (!options.quiet) {\n            context.emitter.once('response:mocked', ({ response }) => {\n              handler.log({\n                request: requestCloneForLogs,\n                response,\n                parsedResult,\n              })\n            })\n          }\n        },\n      },\n    )\n\n    if (response) {\n      controller.respondWith(response)\n    }\n  })\n\n  interceptor.on(\n    'response',\n    ({ response, isMockedResponse, request, requestId }) => {\n      context.emitter.emit(\n        isMockedResponse ? 'response:mocked' : 'response:bypass',\n        {\n          response,\n          request,\n          requestId,\n        },\n      )\n    },\n  )\n\n  interceptor.apply()\n\n  return interceptor\n}\n","import { createFallbackRequestListener } from './createFallbackRequestListener'\nimport { SetupWorkerInternalContext, StartHandler } from '../glossary'\nimport { printStartMessage } from './utils/printStartMessage'\n\nexport function createFallbackStart(\n  context: SetupWorkerInternalContext,\n): StartHandler {\n  return async function start(options) {\n    context.fallbackInterceptor = createFallbackRequestListener(\n      context,\n      options,\n    )\n\n    printStartMessage({\n      message: 'Mocking enabled (fallback mode).',\n      quiet: options.quiet,\n    })\n\n    return undefined\n  }\n}\n","import { SetupWorkerInternalContext, StopHandler } from '../glossary'\nimport { printStopMessage } from './utils/printStopMessage'\n\nexport function createFallbackStop(\n  context: SetupWorkerInternalContext,\n): StopHandler {\n  return function stop() {\n    context.fallbackInterceptor?.dispose()\n    printStopMessage({ quiet: context.startOptions?.quiet })\n  }\n}\n","/**\n * Returns a boolean indicating whether the current browser\n * supports `ReadableStream` as a `Transferable` when posting\n * messages.\n */\nexport function supportsReadableStreamTransfer() {\n  try {\n    const stream = new ReadableStream({\n      start: (controller) => controller.close(),\n    })\n    const message = new MessageChannel()\n    message.port1.postMessage(stream, [stream])\n    return true\n  } catch {\n    return false\n  }\n}\n","type EventWithTarget<E extends Event, T> = E & { target: T }\n\nexport function bindEvent<E extends Event, T>(\n  target: T,\n  event: E\n): EventWithTarget<E, T> {\n  Object.defineProperties(event, {\n    target: {\n      value: target,\n      enumerable: true,\n      writable: true,\n    },\n    currentTarget: {\n      value: target,\n      enumerable: true,\n      writable: true,\n    },\n  })\n\n  return event as EventWithTarget<E, T>\n}\n","const kCancelable = Symbol('kCancelable')\nconst kDefaultPrevented = Symbol('kDefaultPrevented')\n\n/**\n * A `MessageEvent` superset that supports event cancellation\n * in Node.js. It's rather non-intrusive so it can be safely\n * used in the browser as well.\n *\n * @see https://github.com/nodejs/node/issues/51767\n */\nexport class CancelableMessageEvent<T = any> extends MessageEvent<T> {\n  [kCancelable]: boolean;\n  [kDefaultPrevented]: boolean\n\n  constructor(type: string, init: MessageEventInit<T>) {\n    super(type, init)\n    this[kCancelable] = !!init.cancelable\n    this[kDefaultPrevented] = false\n  }\n\n  get cancelable() {\n    return this[kCancelable]\n  }\n\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable\n  }\n\n  get defaultPrevented() {\n    return this[kDefaultPrevented]\n  }\n\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented\n  }\n\n  public preventDefault(): void {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true\n    }\n  }\n}\n\ninterface CloseEventInit extends EventInit {\n  code?: number\n  reason?: string\n  wasClean?: boolean\n}\n\nexport class CloseEvent extends Event {\n  public code: number\n  public reason: string\n  public wasClean: boolean\n\n  constructor(type: string, init: CloseEventInit = {}) {\n    super(type, init)\n    this.code = init.code === undefined ? 0 : init.code\n    this.reason = init.reason === undefined ? '' : init.reason\n    this.wasClean = init.wasClean === undefined ? false : init.wasClean\n  }\n}\n\nexport class CancelableCloseEvent extends CloseEvent {\n  [kCancelable]: boolean;\n  [kDefaultPrevented]: boolean\n\n  constructor(type: string, init: CloseEventInit = {}) {\n    super(type, init)\n    this[kCancelable] = !!init.cancelable\n    this[kDefaultPrevented] = false\n  }\n\n  get cancelable() {\n    return this[kCancelable]\n  }\n\n  set cancelable(nextCancelable) {\n    this[kCancelable] = nextCancelable\n  }\n\n  get defaultPrevented() {\n    return this[kDefaultPrevented]\n  }\n\n  set defaultPrevented(nextDefaultPrevented) {\n    this[kDefaultPrevented] = nextDefaultPrevented\n  }\n\n  public preventDefault(): void {\n    if (this.cancelable && !this[kDefaultPrevented]) {\n      this[kDefaultPrevented] = true\n    }\n  }\n}\n","import type { WebSocketData, WebSocketTransport } from './WebSocketTransport'\nimport type { WebSocketEventListener } from './WebSocketOverride'\nimport { bindEvent } from './utils/bindEvent'\nimport { CancelableMessageEvent, CloseEvent } from './utils/events'\nimport { createRequestId } from '../../createRequestId'\n\nconst kEmitter = Symbol('kEmitter')\nconst kBoundListener = Symbol('kBoundListener')\n\ninterface WebSocketClientEventMap {\n  message: MessageEvent<WebSocketData>\n  close: CloseEvent\n}\n\nexport interface WebSocketClientConnectionProtocol {\n  id: string\n  url: URL\n  send(data: WebSocketData): void\n  close(code?: number, reason?: string): void\n}\n\n/**\n * The WebSocket client instance represents an incoming\n * client connection. The user can control the connection,\n * send and receive events.\n */\nexport class WebSocketClientConnection\n  implements WebSocketClientConnectionProtocol\n{\n  public readonly id: string\n  public readonly url: URL\n\n  private [kEmitter]: EventTarget\n\n  constructor(\n    public readonly socket: WebSocket,\n    private readonly transport: WebSocketTransport\n  ) {\n    this.id = createRequestId()\n    this.url = new URL(socket.url)\n    this[kEmitter] = new EventTarget()\n\n    // Emit outgoing client data (\"ws.send()\") as \"message\"\n    // events on the \"client\" connection.\n    this.transport.addEventListener('outgoing', (event) => {\n      const message = bindEvent(\n        this.socket,\n        new CancelableMessageEvent('message', {\n          data: event.data,\n          origin: event.origin,\n          cancelable: true,\n        })\n      )\n\n      this[kEmitter].dispatchEvent(message)\n\n      // This is a bit silly but forward the cancellation state\n      // of the \"client\" message event to the \"outgoing\" transport event.\n      // This way, other agens (like \"server\" connection) can know\n      // whether the client listener has pervented the default.\n      if (message.defaultPrevented) {\n        event.preventDefault()\n      }\n    })\n\n    /**\n     * Emit the \"close\" event on the \"client\" connection\n     * whenever the underlying transport is closed.\n     * @note \"client.close()\" does NOT dispatch the \"close\"\n     * event on the WebSocket because it uses non-configurable\n     * close status code. Thus, we listen to the transport\n     * instead of the WebSocket's \"close\" event.\n     */\n    this.transport.addEventListener('close', (event) => {\n      this[kEmitter].dispatchEvent(\n        bindEvent(this.socket, new CloseEvent('close', event))\n      )\n    })\n  }\n\n  /**\n   * Listen for the outgoing events from the connected WebSocket client.\n   */\n  public addEventListener<EventType extends keyof WebSocketClientEventMap>(\n    type: EventType,\n    listener: WebSocketEventListener<WebSocketClientEventMap[EventType]>,\n    options?: AddEventListenerOptions | boolean\n  ): void {\n    if (!Reflect.has(listener, kBoundListener)) {\n      const boundListener = listener.bind(this.socket)\n\n      // Store the bound listener on the original listener\n      // so the exact bound function can be accessed in \"removeEventListener()\".\n      Object.defineProperty(listener, kBoundListener, {\n        value: boundListener,\n        enumerable: false,\n        configurable: false,\n      })\n    }\n\n    this[kEmitter].addEventListener(\n      type,\n      Reflect.get(listener, kBoundListener) as EventListener,\n      options\n    )\n  }\n\n  /**\n   * Removes the listener for the given event.\n   */\n  public removeEventListener<EventType extends keyof WebSocketClientEventMap>(\n    event: EventType,\n    listener: WebSocketEventListener<WebSocketClientEventMap[EventType]>,\n    options?: EventListenerOptions | boolean\n  ): void {\n    this[kEmitter].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener) as EventListener,\n      options\n    )\n  }\n\n  /**\n   * Send data to the connected client.\n   */\n  public send(data: WebSocketData): void {\n    this.transport.send(data)\n  }\n\n  /**\n   * Close the WebSocket connection.\n   * @param {number} code A status code (see https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1).\n   * @param {string} reason A custom connection close reason.\n   */\n  public close(code?: number, reason?: string): void {\n    this.transport.close(code, reason)\n  }\n}\n","import { invariant } from 'outvariant'\nimport {\n  kClose,\n  WebSocketEventListener,\n  WebSocketOverride,\n} from './WebSocketOverride'\nimport type { WebSocketData } from './WebSocketTransport'\nimport type { WebSocketClassTransport } from './WebSocketClassTransport'\nimport { bindEvent } from './utils/bindEvent'\nimport {\n  CancelableMessageEvent,\n  CancelableCloseEvent,\n  CloseEvent,\n} from './utils/events'\n\nconst kEmitter = Symbol('kEmitter')\nconst kBoundListener = Symbol('kBoundListener')\nconst kSend = Symbol('kSend')\n\ninterface WebSocketServerEventMap {\n  open: Event\n  message: MessageEvent<WebSocketData>\n  error: Event\n  close: CloseEvent\n}\n\n/**\n * The WebSocket server instance represents the actual production\n * WebSocket server connection. It's idle by default but you can\n * establish it by calling `server.connect()`.\n */\nexport class WebSocketServerConnection {\n  /**\n   * A WebSocket instance connected to the original server.\n   */\n  private realWebSocket?: WebSocket\n  private mockCloseController: AbortController\n  private realCloseController: AbortController\n  private [kEmitter]: EventTarget\n\n  constructor(\n    private readonly client: WebSocketOverride,\n    private readonly transport: WebSocketClassTransport,\n    private readonly createConnection: () => WebSocket\n  ) {\n    this[kEmitter] = new EventTarget()\n    this.mockCloseController = new AbortController()\n    this.realCloseController = new AbortController()\n\n    // Automatically forward outgoing client events\n    // to the actual server unless the outgoing message event\n    // has been prevented. The \"outgoing\" transport event it\n    // dispatched by the \"client\" connection.\n    this.transport.addEventListener('outgoing', (event) => {\n      // Ignore client messages if the server connection\n      // hasn't been established yet. Nowhere to forward.\n      if (typeof this.realWebSocket === 'undefined') {\n        return\n      }\n\n      // Every outgoing client message can prevent this forwarding\n      // by preventing the default of the outgoing message event.\n      // This listener will be added before user-defined listeners,\n      // so execute the logic on the next tick.\n      queueMicrotask(() => {\n        if (!event.defaultPrevented) {\n          /**\n           * @note Use the internal send mechanism so consumers can tell\n           * apart direct user calls to `server.send()` and internal calls.\n           * E.g. MSW has to ignore this internal call to log out messages correctly.\n           */\n          this[kSend](event.data)\n        }\n      })\n    })\n\n    this.transport.addEventListener(\n      'incoming',\n      this.handleIncomingMessage.bind(this)\n    )\n  }\n\n  /**\n   * The `WebSocket` instance connected to the original server.\n   * Accessing this before calling `server.connect()` will throw.\n   */\n  public get socket(): WebSocket {\n    invariant(\n      this.realWebSocket,\n      'Cannot access \"socket\" on the original WebSocket server object: the connection is not open. Did you forget to call `server.connect()`?'\n    )\n\n    return this.realWebSocket\n  }\n\n  /**\n   * Open connection to the original WebSocket server.\n   */\n  public connect(): void {\n    invariant(\n      !this.realWebSocket || this.realWebSocket.readyState !== WebSocket.OPEN,\n      'Failed to call \"connect()\" on the original WebSocket instance: the connection already open'\n    )\n\n    const realWebSocket = this.createConnection()\n\n    // Inherit the binary type from the mock WebSocket client.\n    realWebSocket.binaryType = this.client.binaryType\n\n    // Allow the interceptor to listen to when the server connection\n    // has been established. This isn't necessary to operate with the connection\n    // but may be beneficial in some cases (like conditionally adding logging).\n    realWebSocket.addEventListener(\n      'open',\n      (event) => {\n        this[kEmitter].dispatchEvent(\n          bindEvent(this.realWebSocket!, new Event('open', event))\n        )\n      },\n      { once: true }\n    )\n\n    realWebSocket.addEventListener('message', (event) => {\n      // Dispatch the \"incoming\" transport event instead of\n      // invoking the internal handler directly. This way,\n      // anyone can listen to the \"incoming\" event but this\n      // class is the one resulting in it.\n      this.transport.dispatchEvent(\n        bindEvent(\n          this.realWebSocket!,\n          new MessageEvent('incoming', {\n            data: event.data,\n            origin: event.origin,\n          })\n        )\n      )\n    })\n\n    // Close the original connection when the mock client closes.\n    // E.g. \"client.close()\" was called. This is never forwarded anywhere.\n    this.client.addEventListener(\n      'close',\n      (event) => {\n        this.handleMockClose(event)\n      },\n      {\n        signal: this.mockCloseController.signal,\n      }\n    )\n\n    // Forward the \"close\" event to let the interceptor handle\n    // closures initiated by the original server.\n    realWebSocket.addEventListener(\n      'close',\n      (event) => {\n        this.handleRealClose(event)\n      },\n      {\n        signal: this.realCloseController.signal,\n      }\n    )\n\n    realWebSocket.addEventListener('error', () => {\n      const errorEvent = bindEvent(\n        realWebSocket,\n        new Event('error', { cancelable: true })\n      )\n\n      // Emit the \"error\" event on the `server` connection\n      // to let the interceptor react to original server errors.\n      this[kEmitter].dispatchEvent(errorEvent)\n\n      // If the error event from the original server hasn't been prevented,\n      // forward it to the underlying client.\n      if (!errorEvent.defaultPrevented) {\n        this.client.dispatchEvent(bindEvent(this.client, new Event('error')))\n      }\n    })\n\n    this.realWebSocket = realWebSocket\n  }\n\n  /**\n   * Listen for the incoming events from the original WebSocket server.\n   */\n  public addEventListener<EventType extends keyof WebSocketServerEventMap>(\n    event: EventType,\n    listener: WebSocketEventListener<WebSocketServerEventMap[EventType]>,\n    options?: AddEventListenerOptions | boolean\n  ): void {\n    if (!Reflect.has(listener, kBoundListener)) {\n      const boundListener = listener.bind(this.client)\n\n      // Store the bound listener on the original listener\n      // so the exact bound function can be accessed in \"removeEventListener()\".\n      Object.defineProperty(listener, kBoundListener, {\n        value: boundListener,\n        enumerable: false,\n      })\n    }\n\n    this[kEmitter].addEventListener(\n      event,\n      Reflect.get(listener, kBoundListener) as EventListener,\n      options\n    )\n  }\n\n  /**\n   * Remove the listener for the given event.\n   */\n  public removeEventListener<EventType extends keyof WebSocketServerEventMap>(\n    event: EventType,\n    listener: WebSocketEventListener<WebSocketServerEventMap[EventType]>,\n    options?: EventListenerOptions | boolean\n  ): void {\n    this[kEmitter].removeEventListener(\n      event,\n      Reflect.get(listener, kBoundListener) as EventListener,\n      options\n    )\n  }\n\n  /**\n   * Send data to the original WebSocket server.\n   * @example\n   * server.send('hello')\n   * server.send(new Blob(['hello']))\n   * server.send(new TextEncoder().encode('hello'))\n   */\n  public send(data: WebSocketData): void {\n    this[kSend](data)\n  }\n\n  private [kSend](data: WebSocketData): void {\n    const { realWebSocket } = this\n\n    invariant(\n      realWebSocket,\n      'Failed to call \"server.send()\" for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    )\n\n    // Silently ignore writes on the closed original WebSocket.\n    if (\n      realWebSocket.readyState === WebSocket.CLOSING ||\n      realWebSocket.readyState === WebSocket.CLOSED\n    ) {\n      return\n    }\n\n    // Delegate the send to when the original connection is open.\n    // Unlike the mock, connecting to the original server may take time\n    // so we cannot call this on the next tick.\n    if (realWebSocket.readyState === WebSocket.CONNECTING) {\n      realWebSocket.addEventListener(\n        'open',\n        () => {\n          realWebSocket.send(data)\n        },\n        { once: true }\n      )\n      return\n    }\n\n    // Send the data to the original WebSocket server.\n    realWebSocket.send(data)\n  }\n\n  /**\n   * Close the actual server connection.\n   */\n  public close(): void {\n    const { realWebSocket } = this\n\n    invariant(\n      realWebSocket,\n      'Failed to close server connection for \"%s\": the connection is not open. Did you forget to call \"server.connect()\"?',\n      this.client.url\n    )\n\n    // Remove the \"close\" event listener from the server\n    // so it doesn't close the underlying WebSocket client\n    // when you call \"server.close()\". This also prevents the\n    // `close` event on the `server` connection from being dispatched twice.\n    this.realCloseController.abort()\n\n    if (\n      realWebSocket.readyState === WebSocket.CLOSING ||\n      realWebSocket.readyState === WebSocket.CLOSED\n    ) {\n      return\n    }\n\n    // Close the actual client connection.\n    realWebSocket.close()\n\n    // Dispatch the \"close\" event on the `server` connection.\n    queueMicrotask(() => {\n      this[kEmitter].dispatchEvent(\n        bindEvent(\n          this.realWebSocket,\n          new CancelableCloseEvent('close', {\n            /**\n             * @note `server.close()` in the interceptor\n             * always results in clean closures.\n             */\n            code: 1000,\n            cancelable: true,\n          })\n        )\n      )\n    })\n  }\n\n  private handleIncomingMessage(event: MessageEvent<WebSocketData>): void {\n    // Clone the event to dispatch it on this class\n    // once again and prevent the \"already being dispatched\"\n    // exception. Clone it here so we can observe this event\n    // being prevented in the \"server.on()\" listeners.\n    const messageEvent = bindEvent(\n      event.target,\n      new CancelableMessageEvent('message', {\n        data: event.data,\n        origin: event.origin,\n        cancelable: true,\n      })\n    )\n\n    /**\n     * @note Emit \"message\" event on the server connection\n     * instance to let the interceptor know about these\n     * incoming events from the original server. In that listener,\n     * the interceptor can modify or skip the event forwarding\n     * to the mock WebSocket instance.\n     */\n    this[kEmitter].dispatchEvent(messageEvent)\n\n    /**\n     * @note Forward the incoming server events to the client.\n     * Preventing the default on the message event stops this.\n     */\n    if (!messageEvent.defaultPrevented) {\n      this.client.dispatchEvent(\n        bindEvent(\n          /**\n           * @note Bind the forwarded original server events\n           * to the mock WebSocket instance so it would\n           * dispatch them straight away.\n           */\n          this.client,\n          // Clone the message event again to prevent\n          // the \"already being dispatched\" exception.\n          new MessageEvent('message', {\n            data: event.data,\n            origin: event.origin,\n          })\n        )\n      )\n    }\n  }\n\n  private handleMockClose(_event: Event): void {\n    // Close the original connection if the mock client closes.\n    if (this.realWebSocket) {\n      this.realWebSocket.close()\n    }\n  }\n\n  private handleRealClose(event: CloseEvent): void {\n    // For closures originating from the original server,\n    // remove the \"close\" listener from the mock client.\n    // original close -> (?) client[kClose]() --X--> \"close\" (again).\n    this.mockCloseController.abort()\n\n    const closeEvent = bindEvent(\n      this.realWebSocket,\n      new CancelableCloseEvent('close', {\n        code: event.code,\n        reason: event.reason,\n        wasClean: event.wasClean,\n        cancelable: true,\n      })\n    )\n\n    this[kEmitter].dispatchEvent(closeEvent)\n\n    // If the close event from the server hasn't been prevented,\n    // forward the closure to the mock client.\n    if (!closeEvent.defaultPrevented) {\n      // Close the intercepted client forcefully to\n      // allow non-configurable status codes from the server.\n      // If the socket has been closed by now, no harm calling\n      // this again—it will have no effect.\n      this.client[kClose](event.code, event.reason)\n    }\n  }\n}\n","import { invariant } from 'outvariant'\nimport type { WebSocketData } from './WebSocketTransport'\nimport { bindEvent } from './utils/bindEvent'\nimport { CloseEvent } from './utils/events'\nimport { DeferredPromise } from '@open-draft/deferred-promise'\n\nexport type WebSocketEventListener<\n  EventType extends WebSocketEventMap[keyof WebSocketEventMap] = Event\n> = (this: WebSocket, event: EventType) => void\n\nconst WEBSOCKET_CLOSE_CODE_RANGE_ERROR =\n  'InvalidAccessError: close code out of user configurable range'\n\nexport const kPassthroughPromise = Symbol('kPassthroughPromise')\nexport const kOnSend = Symbol('kOnSend')\nexport const kClose = Symbol('kClose')\n\nexport class WebSocketOverride extends EventTarget implements WebSocket {\n  static readonly CONNECTING = 0\n  static readonly OPEN = 1\n  static readonly CLOSING = 2\n  static readonly CLOSED = 3\n  readonly CONNECTING = 0\n  readonly OPEN = 1\n  readonly CLOSING = 2\n  readonly CLOSED = 3\n\n  public url: string\n  public protocol: string\n  public extensions: string\n  public binaryType: BinaryType\n  public readyState: number\n  public bufferedAmount: number\n\n  private _onopen: WebSocketEventListener | null = null\n  private _onmessage: WebSocketEventListener<\n    MessageEvent<WebSocketData>\n  > | null = null\n  private _onerror: WebSocketEventListener | null = null\n  private _onclose: WebSocketEventListener<CloseEvent> | null = null\n\n  private [kPassthroughPromise]: DeferredPromise<boolean>\n  private [kOnSend]?: (data: WebSocketData) => void\n\n  constructor(url: string | URL, protocols?: string | Array<string>) {\n    super()\n    this.url = url.toString()\n    this.protocol = ''\n    this.extensions = ''\n    this.binaryType = 'blob'\n    this.readyState = this.CONNECTING\n    this.bufferedAmount = 0\n\n    this[kPassthroughPromise] = new DeferredPromise<boolean>()\n\n    queueMicrotask(async () => {\n      if (await this[kPassthroughPromise]) {\n        return\n      }\n\n      this.protocol =\n        typeof protocols === 'string'\n          ? protocols\n          : Array.isArray(protocols) && protocols.length > 0\n          ? protocols[0]\n          : ''\n\n      /**\n       * @note Check that nothing has prevented this connection\n       * (e.g. called `client.close()` in the connection listener).\n       * If the connection has been prevented, never dispatch the open event,.\n       */\n      if (this.readyState === this.CONNECTING) {\n        this.readyState = this.OPEN\n        this.dispatchEvent(bindEvent(this, new Event('open')))\n      }\n    })\n  }\n\n  set onopen(listener: WebSocketEventListener | null) {\n    this.removeEventListener('open', this._onopen)\n    this._onopen = listener\n    if (listener !== null) {\n      this.addEventListener('open', listener)\n    }\n  }\n  get onopen(): WebSocketEventListener | null {\n    return this._onopen\n  }\n\n  set onmessage(\n    listener: WebSocketEventListener<MessageEvent<WebSocketData>> | null\n  ) {\n    this.removeEventListener(\n      'message',\n      this._onmessage as WebSocketEventListener\n    )\n    this._onmessage = listener\n    if (listener !== null) {\n      this.addEventListener('message', listener)\n    }\n  }\n  get onmessage(): WebSocketEventListener<MessageEvent<WebSocketData>> | null {\n    return this._onmessage\n  }\n\n  set onerror(listener: WebSocketEventListener | null) {\n    this.removeEventListener('error', this._onerror)\n    this._onerror = listener\n    if (listener !== null) {\n      this.addEventListener('error', listener)\n    }\n  }\n  get onerror(): WebSocketEventListener | null {\n    return this._onerror\n  }\n\n  set onclose(listener: WebSocketEventListener<CloseEvent> | null) {\n    this.removeEventListener('close', this._onclose as WebSocketEventListener)\n    this._onclose = listener\n    if (listener !== null) {\n      this.addEventListener('close', listener)\n    }\n  }\n  get onclose(): WebSocketEventListener<CloseEvent> | null {\n    return this._onclose\n  }\n\n  /**\n   * @see https://websockets.spec.whatwg.org/#ref-for-dom-websocket-send%E2%91%A0\n   */\n  public send(data: WebSocketData): void {\n    if (this.readyState === this.CONNECTING) {\n      this.close()\n      throw new DOMException('InvalidStateError')\n    }\n\n    // Sending when the socket is about to close\n    // discards the sent data.\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return\n    }\n\n    // Buffer the data to send in this even loop\n    // but send it in the next.\n    this.bufferedAmount += getDataSize(data)\n\n    queueMicrotask(() => {\n      // This is a bit optimistic but since no actual data transfer\n      // is involved, all the data will be \"sent\" on the next tick.\n      this.bufferedAmount = 0\n\n      /**\n       * @note Notify the parent about outgoing data.\n       * This notifies the transport and the connection\n       * listens to the outgoing data to emit the \"message\" event.\n       */\n      this[kOnSend]?.(data)\n    })\n  }\n\n  public close(code: number = 1000, reason?: string): void {\n    invariant(code, WEBSOCKET_CLOSE_CODE_RANGE_ERROR)\n    invariant(\n      code === 1000 || (code >= 3000 && code <= 4999),\n      WEBSOCKET_CLOSE_CODE_RANGE_ERROR\n    )\n\n    this[kClose](code, reason)\n  }\n\n  private [kClose](\n    code: number = 1000,\n    reason?: string,\n    wasClean = true\n  ): void {\n    /**\n     * @note Move this check here so that even internall closures,\n     * like those triggered by the `server` connection, are not\n     * performed twice.\n     */\n    if (this.readyState === this.CLOSING || this.readyState === this.CLOSED) {\n      return\n    }\n\n    this.readyState = this.CLOSING\n\n    queueMicrotask(() => {\n      this.readyState = this.CLOSED\n\n      this.dispatchEvent(\n        bindEvent(\n          this,\n          new CloseEvent('close', {\n            code,\n            reason,\n            wasClean,\n          })\n        )\n      )\n\n      // Remove all event listeners once the socket is closed.\n      this._onopen = null\n      this._onmessage = null\n      this._onerror = null\n      this._onclose = null\n    })\n  }\n\n  public addEventListener<K extends keyof WebSocketEventMap>(\n    type: K,\n    listener: (this: WebSocket, event: WebSocketEventMap[K]) => void,\n    options?: boolean | AddEventListenerOptions\n  ): void\n  public addEventListener(\n    type: string,\n    listener: EventListenerOrEventListenerObject,\n    options?: boolean | AddEventListenerOptions\n  ): void\n  public addEventListener(\n    type: unknown,\n    listener: unknown,\n    options?: unknown\n  ): void {\n    return super.addEventListener(\n      type as string,\n      listener as EventListener,\n      options as AddEventListenerOptions\n    )\n  }\n\n  removeEventListener<K extends keyof WebSocketEventMap>(\n    type: K,\n    callback: EventListenerOrEventListenerObject | null,\n    options?: boolean | EventListenerOptions\n  ): void {\n    return super.removeEventListener(type, callback, options)\n  }\n}\n\nfunction getDataSize(data: WebSocketData): number {\n  if (typeof data === 'string') {\n    return data.length\n  }\n\n  if (data instanceof Blob) {\n    return data.size\n  }\n\n  return data.byteLength\n}\n","import { bindEvent } from './utils/bindEvent'\nimport {\n  StrictEventListenerOrEventListenerObject,\n  WebSocketData,\n  WebSocketTransport,\n  WebSocketTransportEventMap,\n} from './WebSocketTransport'\nimport { kOnSend, kClose, WebSocketOverride } from './WebSocketOverride'\nimport { CancelableMessageEvent, CloseEvent } from './utils/events'\n\n/**\n * Abstraction over the given mock `WebSocket` instance that allows\n * for controlling that instance (e.g. sending and receiving messages).\n */\nexport class WebSocketClassTransport\n  extends EventTarget\n  implements WebSocketTransport\n{\n  constructor(protected readonly socket: WebSocketOverride) {\n    super()\n\n    // Emit the \"close\" event on the transport if the close\n    // originates from the WebSocket client. E.g. the application\n    // calls \"ws.close()\", not the interceptor.\n    this.socket.addEventListener('close', (event) => {\n      this.dispatchEvent(bindEvent(this.socket, new CloseEvent('close', event)))\n    })\n\n    /**\n     * Emit the \"outgoing\" event on the transport\n     * whenever the WebSocket client sends data (\"ws.send()\").\n     */\n    this.socket[kOnSend] = (data) => {\n      this.dispatchEvent(\n        bindEvent(\n          this.socket,\n          // Dispatch this as cancelable because \"client\" connection\n          // re-creates this message event (cannot dispatch the same event).\n          new CancelableMessageEvent('outgoing', {\n            data,\n            origin: this.socket.url,\n            cancelable: true,\n          })\n        )\n      )\n    }\n  }\n\n  public addEventListener<EventType extends keyof WebSocketTransportEventMap>(\n    type: EventType,\n    callback: StrictEventListenerOrEventListenerObject<\n      WebSocketTransportEventMap[EventType]\n    > | null,\n    options?: boolean | AddEventListenerOptions\n  ): void {\n    return super.addEventListener(type, callback as EventListener, options)\n  }\n\n  public dispatchEvent<EventType extends keyof WebSocketTransportEventMap>(\n    event: WebSocketTransportEventMap[EventType]\n  ): boolean {\n    return super.dispatchEvent(event)\n  }\n\n  public send(data: WebSocketData): void {\n    queueMicrotask(() => {\n      if (\n        this.socket.readyState === this.socket.CLOSING ||\n        this.socket.readyState === this.socket.CLOSED\n      ) {\n        return\n      }\n\n      const dispatchEvent = () => {\n        this.socket.dispatchEvent(\n          bindEvent(\n            /**\n             * @note Setting this event's \"target\" to the\n             * WebSocket override instance is important.\n             * This way it can tell apart original incoming events\n             * (must be forwarded to the transport) from the\n             * mocked message events like the one below\n             * (must be dispatched on the client instance).\n             */\n            this.socket,\n            new MessageEvent('message', {\n              data,\n              origin: this.socket.url,\n            })\n          )\n        )\n      }\n\n      if (this.socket.readyState === this.socket.CONNECTING) {\n        this.socket.addEventListener(\n          'open',\n          () => {\n            dispatchEvent()\n          },\n          { once: true }\n        )\n      } else {\n        dispatchEvent()\n      }\n    })\n  }\n\n  public close(code: number, reason?: string): void {\n    /**\n     * @note Call the internal close method directly\n     * to allow closing the connection with the status codes\n     * that are non-configurable by the user (> 1000 <= 1015).\n     */\n    this.socket[kClose](code, reason)\n  }\n}\n","import { Interceptor } from '../../Interceptor'\nimport {\n  type WebSocketClientConnectionProtocol,\n  WebSocketClientConnection,\n} from './WebSocketClientConnection'\nimport { WebSocketServerConnection } from './WebSocketServerConnection'\nimport { WebSocketClassTransport } from './WebSocketClassTransport'\nimport {\n  kClose,\n  kPassthroughPromise,\n  WebSocketOverride,\n} from './WebSocketOverride'\nimport { bindEvent } from './utils/bindEvent'\nimport { hasConfigurableGlobal } from '../../utils/hasConfigurableGlobal'\n\nexport { type WebSocketData, WebSocketTransport } from './WebSocketTransport'\nexport {\n  WebSocketClientConnection,\n  WebSocketClientConnectionProtocol,\n  WebSocketServerConnection,\n}\n\nexport type WebSocketEventMap = {\n  connection: [args: WebSocketConnectionData]\n}\n\nexport type WebSocketConnectionData = {\n  /**\n   * The incoming WebSocket client connection.\n   */\n  client: WebSocketClientConnection\n\n  /**\n   * The original WebSocket server connection.\n   */\n  server: WebSocketServerConnection\n\n  /**\n   * The connection information.\n   */\n  info: {\n    /**\n     * The protocols supported by the WebSocket client.\n     */\n    protocols: string | Array<string> | undefined\n  }\n}\n\n/**\n * Intercept the outgoing WebSocket connections created using\n * the global `WebSocket` class.\n */\nexport class WebSocketInterceptor extends Interceptor<WebSocketEventMap> {\n  static symbol = Symbol('websocket')\n\n  constructor() {\n    super(WebSocketInterceptor.symbol)\n  }\n\n  protected checkEnvironment(): boolean {\n    return hasConfigurableGlobal('WebSocket')\n  }\n\n  protected setup(): void {\n    const originalWebSocketDescriptor = Object.getOwnPropertyDescriptor(\n      globalThis,\n      'WebSocket'\n    )\n\n    const WebSocketProxy = new Proxy(globalThis.WebSocket, {\n      construct: (\n        target,\n        args: ConstructorParameters<typeof globalThis.WebSocket>,\n        newTarget\n      ) => {\n        const [url, protocols] = args\n\n        const createConnection = (): WebSocket => {\n          return Reflect.construct(target, args, newTarget)\n        }\n\n        // All WebSocket instances are mocked and don't forward\n        // any events to the original server (no connection established).\n        // To forward the events, the user must use the \"server.send()\" API.\n        const socket = new WebSocketOverride(url, protocols)\n        const transport = new WebSocketClassTransport(socket)\n\n        // Emit the \"connection\" event to the interceptor on the next tick\n        // so the client can modify WebSocket options, like \"binaryType\"\n        // while the connection is already pending.\n        queueMicrotask(() => {\n          try {\n            const server = new WebSocketServerConnection(\n              socket,\n              transport,\n              createConnection\n            )\n\n            // The \"globalThis.WebSocket\" class stands for\n            // the client-side connection. Assume it's established\n            // as soon as the WebSocket instance is constructed.\n            const hasConnectionListeners = this.emitter.emit('connection', {\n              client: new WebSocketClientConnection(socket, transport),\n              server,\n              info: {\n                protocols,\n              },\n            })\n\n            if (hasConnectionListeners) {\n              socket[kPassthroughPromise].resolve(false)\n            } else {\n              socket[kPassthroughPromise].resolve(true)\n\n              server.connect()\n\n              // Forward the \"open\" event from the original server\n              // to the mock WebSocket client in the case of a passthrough connection.\n              server.addEventListener('open', () => {\n                socket.dispatchEvent(bindEvent(socket, new Event('open')))\n\n                // Forward the original connection protocol to the\n                // mock WebSocket client.\n                if (server['realWebSocket']) {\n                  socket.protocol = server['realWebSocket'].protocol\n                }\n              })\n            }\n          } catch (error) {\n            /**\n             * @note Translate unhandled exceptions during the connection\n             * handling (i.e. interceptor exceptions) as WebSocket connection\n             * closures with error. This prevents from the exceptions occurring\n             * in `queueMicrotask` from being process-wide and uncatchable.\n             */\n            if (error instanceof Error) {\n              socket.dispatchEvent(new Event('error'))\n\n              // No need to close the connection if it's already being closed.\n              // E.g. the interceptor called `client.close()` and then threw an error.\n              if (\n                socket.readyState !== WebSocket.CLOSING &&\n                socket.readyState !== WebSocket.CLOSED\n              ) {\n                socket[kClose](1011, error.message, false)\n              }\n\n              console.error(error)\n            }\n          }\n        })\n\n        return socket\n      },\n    })\n\n    Object.defineProperty(globalThis, 'WebSocket', {\n      value: WebSocketProxy,\n      configurable: true,\n    })\n\n    this.subscriptions.push(() => {\n      Object.defineProperty(\n        globalThis,\n        'WebSocket',\n        originalWebSocketDescriptor!\n      )\n    })\n  }\n}\n","import { WebSocketInterceptor } from '@mswjs/interceptors/WebSocket'\n\nexport const webSocketInterceptor = new WebSocketInterceptor()\n","import type { WebSocketConnectionData } from '@mswjs/interceptors/lib/browser/interceptors/WebSocket'\nimport { RequestHandler } from '../handlers/RequestHandler'\nimport { WebSocketHandler, kDispatchEvent } from '../handlers/WebSocketHandler'\nimport { webSocketInterceptor } from './webSocketInterceptor'\nimport {\n  onUnhandledRequest,\n  UnhandledRequestStrategy,\n} from '../utils/request/onUnhandledRequest'\nimport { isHandlerKind } from '../utils/internal/isHandlerKind'\n\ninterface HandleWebSocketEventOptions {\n  getUnhandledRequestStrategy: () => UnhandledRequestStrategy\n  getHandlers: () => Array<RequestHandler | WebSocketHandler>\n  onMockedConnection: (connection: WebSocketConnectionData) => void\n  onPassthroughConnection: (onnection: WebSocketConnectionData) => void\n}\n\nexport function handleWebSocketEvent(options: HandleWebSocketEventOptions) {\n  webSocketInterceptor.on('connection', async (connection) => {\n    const handlers = options.getHandlers()\n\n    const connectionEvent = new MessageEvent('connection', {\n      data: connection,\n    })\n\n    // First, filter only those WebSocket handlers that\n    // match the \"ws.link()\" endpoint predicate. Don't dispatch\n    // anything yet so the logger can be attached to the connection\n    // before it potentially sends events.\n    const matchingHandlers: Array<WebSocketHandler> = []\n\n    for (const handler of handlers) {\n      if (\n        isHandlerKind('EventHandler')(handler) &&\n        handler.predicate({\n          event: connectionEvent,\n          parsedResult: handler.parse({\n            event: connectionEvent,\n          }),\n        })\n      ) {\n        matchingHandlers.push(handler)\n      }\n    }\n\n    if (matchingHandlers.length > 0) {\n      options?.onMockedConnection(connection)\n\n      // Iterate over the handlers and forward the connection\n      // event to WebSocket event handlers. This is equivalent\n      // to dispatching that event onto multiple listeners.\n      for (const handler of matchingHandlers) {\n        handler[kDispatchEvent](connectionEvent)\n      }\n    } else {\n      // Construct a request representing this WebSocket connection.\n      const request = new Request(connection.client.url, {\n        headers: {\n          upgrade: 'websocket',\n          connection: 'upgrade',\n        },\n      })\n      await onUnhandledRequest(\n        request,\n        options.getUnhandledRequestStrategy(),\n      ).catch((error) => {\n        const errorEvent = new Event('error')\n        Object.defineProperty(errorEvent, 'cause', {\n          enumerable: true,\n          configurable: false,\n          value: error,\n        })\n        connection.client.socket.dispatchEvent(errorEvent)\n      })\n\n      options?.onPassthroughConnection(connection)\n\n      // If none of the \"ws\" handlers matched,\n      // establish the WebSocket connection as-is.\n      connection.server.connect()\n    }\n  })\n}\n","import type { WebSocketData } from '@mswjs/interceptors/lib/browser/interceptors/WebSocket'\n\n/**\n * Returns the byte length of the given WebSocket message.\n * @example\n * getMessageLength('hello') // 5\n * getMessageLength(new Blob(['hello'])) // 5\n */\nexport function getMessageLength(data: WebSocketData): number {\n  if (data instanceof Blob) {\n    return data.size\n  }\n\n  if (data instanceof ArrayBuffer) {\n    return data.byteLength\n  }\n\n  return new Blob([data]).size\n}\n","const MAX_LENGTH = 24\n\nexport function truncateMessage(message: string): string {\n  if (message.length <= MAX_LENGTH) {\n    return message\n  }\n\n  return `${message.slice(0, MAX_LENGTH)}…`\n}\n","import { WebSocketData } from '@mswjs/interceptors/WebSocket'\nimport { truncateMessage } from './truncateMessage'\n\nexport async function getPublicData(data: WebSocketData): Promise<string> {\n  if (data instanceof Blob) {\n    const text = await data.text()\n    return `Blob(${truncateMessage(text)})`\n  }\n\n  // Handle all ArrayBuffer-like objects.\n  if (typeof data === 'object' && 'byteLength' in data) {\n    const text = new TextDecoder().decode(data)\n    return `ArrayBuffer(${truncateMessage(text)})`\n  }\n\n  return truncateMessage(data)\n}\n","import type {\n  WebSocketClientConnection,\n  WebSocketConnectionData,\n  WebSocketData,\n} from '@mswjs/interceptors/WebSocket'\nimport { devUtils } from '../../utils/internal/devUtils'\nimport { getTimestamp } from '../../utils/logging/getTimestamp'\nimport { toPublicUrl } from '../../utils/request/toPublicUrl'\nimport { getMessageLength } from './getMessageLength'\nimport { getPublicData } from './getPublicData'\n\nconst colors = {\n  system: '#3b82f6',\n  outgoing: '#22c55e',\n  incoming: '#ef4444',\n  mocked: '#ff6a33',\n}\n\nexport function attachWebSocketLogger(\n  connection: WebSocketConnectionData,\n): void {\n  const { client, server } = connection\n\n  logConnectionOpen(client)\n\n  // Log the events sent from the WebSocket client.\n  // WebSocket client connection object is written from the\n  // server's perspective so these message events are outgoing.\n  /**\n   * @todo Provide the reference to the exact event handler\n   * that called this `client.send()`.\n   */\n  client.addEventListener('message', (event) => {\n    logOutgoingClientMessage(event)\n  })\n\n  client.addEventListener('close', (event) => {\n    logConnectionClose(event)\n  })\n\n  // Log client errors (connection closures due to errors).\n  client.socket.addEventListener('error', (event) => {\n    logClientError(event)\n  })\n\n  client.send = new Proxy(client.send, {\n    apply(target, thisArg, args) {\n      const [data] = args\n      const messageEvent = new MessageEvent('message', { data })\n      Object.defineProperties(messageEvent, {\n        currentTarget: {\n          enumerable: true,\n          writable: false,\n          value: client.socket,\n        },\n        target: {\n          enumerable: true,\n          writable: false,\n          value: client.socket,\n        },\n      })\n\n      queueMicrotask(() => {\n        logIncomingMockedClientMessage(messageEvent)\n      })\n\n      return Reflect.apply(target, thisArg, args)\n    },\n  })\n\n  server.addEventListener(\n    'open',\n    () => {\n      server.addEventListener('message', (event) => {\n        logIncomingServerMessage(event)\n      })\n    },\n    { once: true },\n  )\n\n  // Log outgoing client events initiated by the event handler.\n  // The actual client never sent these but the handler did.\n  server.send = new Proxy(server.send, {\n    apply(target, thisArg, args) {\n      const [data] = args\n      const messageEvent = new MessageEvent('message', { data })\n      Object.defineProperties(messageEvent, {\n        currentTarget: {\n          enumerable: true,\n          writable: false,\n          value: server.socket,\n        },\n        target: {\n          enumerable: true,\n          writable: false,\n          value: server.socket,\n        },\n      })\n\n      logOutgoingMockedClientMessage(messageEvent)\n\n      return Reflect.apply(target, thisArg, args)\n    },\n  })\n}\n\n/**\n * Prints the WebSocket connection.\n * This is meant to be logged by every WebSocket handler\n * that intercepted this connection. This helps you see\n * what handlers observe this connection.\n */\nexport function logConnectionOpen(client: WebSocketClientConnection) {\n  const publicUrl = toPublicUrl(client.url)\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    devUtils.formatMessage(`${getTimestamp()} %c▶%c ${publicUrl}`),\n    `color:${colors.system}`,\n    'color:inherit',\n  )\n  // eslint-disable-next-line no-console\n  console.log('Client:', client.socket)\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n\nfunction logConnectionClose(event: CloseEvent) {\n  const target = event.target as WebSocket\n  const publicUrl = toPublicUrl(target.url)\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c■%c ${publicUrl}`,\n    ),\n    `color:${colors.system}`,\n    'color:inherit',\n  )\n  // eslint-disable-next-line no-console\n  console.log(event)\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n\nfunction logClientError(event: Event) {\n  const socket = event.target as WebSocket\n  const publicUrl = toPublicUrl(socket.url)\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c\\u00D7%c ${publicUrl}`,\n    ),\n    `color:${colors.system}`,\n    'color:inherit',\n  )\n  // eslint-disable-next-line no-console\n  console.log(event)\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n\n/**\n * Prints the outgoing client message.\n */\nasync function logOutgoingClientMessage(event: MessageEvent<WebSocketData>) {\n  const byteLength = getMessageLength(event.data)\n  const publicData = await getPublicData(event.data)\n  const arrow = event.defaultPrevented ? '⇡' : '⬆'\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c${arrow}%c ${publicData} %c${byteLength}%c`,\n    ),\n    `color:${colors.outgoing}`,\n    'color:inherit',\n    'color:gray;font-weight:normal',\n    'color:inherit;font-weight:inherit',\n  )\n  // eslint-disable-next-line no-console\n  console.log(event)\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n\n/**\n * Prints the outgoing client message initiated\n * by `server.send()` in the event handler.\n */\nasync function logOutgoingMockedClientMessage(\n  event: MessageEvent<WebSocketData>,\n) {\n  const byteLength = getMessageLength(event.data)\n  const publicData = await getPublicData(event.data)\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c⬆%c ${publicData} %c${byteLength}%c`,\n    ),\n    `color:${colors.mocked}`,\n    'color:inherit',\n    'color:gray;font-weight:normal',\n    'color:inherit;font-weight:inherit',\n  )\n  // eslint-disable-next-line no-console\n  console.log(event)\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n\n/**\n * Prints the outgoing client message initiated\n * by `client.send()` in the event handler.\n */\nasync function logIncomingMockedClientMessage(\n  event: MessageEvent<WebSocketData>,\n) {\n  const byteLength = getMessageLength(event.data)\n  const publicData = await getPublicData(event.data)\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c⬇%c ${publicData} %c${byteLength}%c`,\n    ),\n    `color:${colors.mocked}`,\n    'color:inherit',\n    'color:gray;font-weight:normal',\n    'color:inherit;font-weight:inherit',\n  )\n  // eslint-disable-next-line no-console\n  console.log(event)\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n\nasync function logIncomingServerMessage(event: MessageEvent<WebSocketData>) {\n  const byteLength = getMessageLength(event.data)\n  const publicData = await getPublicData(event.data)\n  const arrow = event.defaultPrevented ? '⇣' : '⬇'\n\n  // eslint-disable-next-line no-console\n  console.groupCollapsed(\n    devUtils.formatMessage(\n      `${getTimestamp({ milliseconds: true })} %c${arrow}%c ${publicData} %c${byteLength}%c`,\n    ),\n    `color:${colors.incoming}`,\n    'color:inherit',\n    'color:gray;font-weight:normal',\n    'color:inherit;font-weight:inherit',\n  )\n  // eslint-disable-next-line no-console\n  console.log(event)\n  // eslint-disable-next-line no-console\n  console.groupEnd()\n}\n","import { invariant } from 'outvariant'\nimport { isNodeProcess } from 'is-node-process'\nimport {\n  SetupWorkerInternalContext,\n  ServiceWorkerIncomingEventsMap,\n  StartReturnType,\n  StopHandler,\n  StartHandler,\n  StartOptions,\n} from './glossary'\nimport { createStartHandler } from './start/createStartHandler'\nimport { createStop } from './stop/createStop'\nimport { ServiceWorkerMessage } from './start/utils/createMessageChannel'\nimport { RequestHandler } from '~/core/handlers/RequestHandler'\nimport { DEFAULT_START_OPTIONS } from './start/utils/prepareStartHandler'\nimport { createFallbackStart } from './start/createFallbackStart'\nimport { createFallbackStop } from './stop/createFallbackStop'\nimport { devUtils } from '~/core/utils/internal/devUtils'\nimport { SetupApi } from '~/core/SetupApi'\nimport { mergeRight } from '~/core/utils/internal/mergeRight'\nimport type { LifeCycleEventsMap } from '~/core/sharedOptions'\nimport type { WebSocketHandler } from '~/core/handlers/WebSocketHandler'\nimport { SetupWorker } from './glossary'\nimport { supportsReadableStreamTransfer } from '../utils/supportsReadableStreamTransfer'\nimport { webSocketInterceptor } from '~/core/ws/webSocketInterceptor'\nimport { handleWebSocketEvent } from '~/core/ws/handleWebSocketEvent'\nimport { attachWebSocketLogger } from '~/core/ws/utils/attachWebSocketLogger'\n\ninterface Listener {\n  target: EventTarget\n  eventType: string\n  callback: EventListenerOrEventListenerObject\n}\n\nexport class SetupWorkerApi\n  extends SetupApi<LifeCycleEventsMap>\n  implements SetupWorker\n{\n  private context: SetupWorkerInternalContext\n  private startHandler: StartHandler = null as any\n  private stopHandler: StopHandler = null as any\n  private listeners: Array<Listener>\n\n  constructor(...handlers: Array<RequestHandler | WebSocketHandler>) {\n    super(...handlers)\n\n    invariant(\n      !isNodeProcess(),\n      devUtils.formatMessage(\n        'Failed to execute `setupWorker` in a non-browser environment. Consider using `setupServer` for Node.js environment instead.',\n      ),\n    )\n\n    this.listeners = []\n    this.context = this.createWorkerContext()\n  }\n\n  private createWorkerContext(): SetupWorkerInternalContext {\n    const context: SetupWorkerInternalContext = {\n      // Mocking is not considered enabled until the worker\n      // signals back the successful activation event.\n      isMockingEnabled: false,\n      startOptions: null as any,\n      worker: null,\n      getRequestHandlers: () => {\n        return this.handlersController.currentHandlers()\n      },\n      registration: null,\n      requests: new Map(),\n      emitter: this.emitter,\n      workerChannel: {\n        on: (eventType, callback) => {\n          this.context.events.addListener<\n            MessageEvent<ServiceWorkerMessage<typeof eventType, any>>\n          >(navigator.serviceWorker, 'message', (event) => {\n            // Avoid messages broadcasted from unrelated workers.\n            if (event.source !== this.context.worker) {\n              return\n            }\n\n            const message = event.data\n\n            if (!message) {\n              return\n            }\n\n            if (message.type === eventType) {\n              callback(event, message)\n            }\n          })\n        },\n        send: (type) => {\n          this.context.worker?.postMessage(type)\n        },\n      },\n      events: {\n        addListener: (target, eventType, callback) => {\n          target.addEventListener(eventType, callback as EventListener)\n          this.listeners.push({\n            eventType,\n            target,\n            callback: callback as EventListener,\n          })\n\n          return () => {\n            target.removeEventListener(eventType, callback as EventListener)\n          }\n        },\n        removeAllListeners: () => {\n          for (const { target, eventType, callback } of this.listeners) {\n            target.removeEventListener(eventType, callback)\n          }\n          this.listeners = []\n        },\n        once: (eventType) => {\n          const bindings: Array<() => void> = []\n\n          return new Promise<\n            ServiceWorkerMessage<\n              typeof eventType,\n              ServiceWorkerIncomingEventsMap[typeof eventType]\n            >\n          >((resolve, reject) => {\n            const handleIncomingMessage = (event: MessageEvent) => {\n              try {\n                const message = event.data\n\n                if (message.type === eventType) {\n                  resolve(message)\n                }\n              } catch (error) {\n                reject(error)\n              }\n            }\n\n            bindings.push(\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                'message',\n                handleIncomingMessage,\n              ),\n              this.context.events.addListener(\n                navigator.serviceWorker,\n                'messageerror',\n                reject,\n              ),\n            )\n          }).finally(() => {\n            bindings.forEach((unbind) => unbind())\n          })\n        },\n      },\n      supports: {\n        serviceWorkerApi:\n          !('serviceWorker' in navigator) || location.protocol === 'file:',\n        readableStreamTransfer: supportsReadableStreamTransfer(),\n      },\n    }\n\n    this.startHandler = context.supports.serviceWorkerApi\n      ? createFallbackStart(context)\n      : createStartHandler(context)\n\n    this.stopHandler = context.supports.serviceWorkerApi\n      ? createFallbackStop(context)\n      : createStop(context)\n\n    return context\n  }\n\n  public async start(options: StartOptions = {}): StartReturnType {\n    if (options.waitUntilReady === true) {\n      devUtils.warn(\n        'The \"waitUntilReady\" option has been deprecated. Please remove it from this \"worker.start()\" call. Follow the recommended Browser integration (https://mswjs.io/docs/integrations/browser) to eliminate any race conditions between the Service Worker registration and any requests made by your application on initial render.',\n      )\n    }\n\n    this.context.startOptions = mergeRight(\n      DEFAULT_START_OPTIONS,\n      options,\n    ) as SetupWorkerInternalContext['startOptions']\n\n    // Enable the WebSocket interception.\n    handleWebSocketEvent({\n      getUnhandledRequestStrategy: () => {\n        return this.context.startOptions.onUnhandledRequest\n      },\n      getHandlers: () => {\n        return this.handlersController.currentHandlers()\n      },\n      onMockedConnection: (connection) => {\n        if (!this.context.startOptions.quiet) {\n          // Attach the logger for mocked connections since\n          // those won't be visible in the browser's devtools.\n          attachWebSocketLogger(connection)\n        }\n      },\n      onPassthroughConnection() {},\n    })\n    webSocketInterceptor.apply()\n\n    this.subscriptions.push(() => {\n      webSocketInterceptor.dispose()\n    })\n\n    return await this.startHandler(this.context.startOptions, options)\n  }\n\n  public stop(): void {\n    super.dispose()\n    this.context.events.removeAllListeners()\n    this.context.emitter.removeAllListeners()\n    this.stopHandler()\n  }\n}\n\n/**\n * Sets up a requests interception in the browser with the given request handlers.\n * @param {RequestHandler[]} handlers List of request handlers.\n *\n * @see {@link https://mswjs.io/docs/api/setup-worker `setupWorker()` API reference}\n */\nexport function setupWorker(\n  ...handlers: Array<RequestHandler | WebSocketHandler>\n): SetupWorker {\n  return new SetupWorkerApi(...handlers)\n}\n"],"mappings":"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","names":["message","invariant","message","match","invariant","location","error","message","location","OperationTypeNode","DirectiveLocation","Kind","indent","TokenKind","location","lexer","instanceOf","parse","message","isDigit","parseValue","invariant","invariant","TypeKind","error","message","invariant","invariant","error","invariant","invariant","error","document","invariant","error","error","error","init_validate","error","document","error","getFieldDef","invariant","collectSubfields","document","parse","syntaxError","init_validate","error","document","error","getFieldDef","invariant","init_validate","document","parse","invariant","getNamedType","invariant","getNamedType","init_validate","document","parse","init_validate","sortFields","invariant","invariant","lexer","error","location","stringifyValue","invariant","BreakingChangeType","DangerousChangeType","parse","init_graphql","graphql","message","match","error","formatMessage","message","sourceEmit","error","__defProp","__getOwnPropDesc","__getOwnPropNames","__hasOwnProp","__require","__copyProps","message","_a","_b","value","result","char","prefix","_a","i","_b","_c","_a","__defProp","__export","message","message2","warn","error","_a","cleanUrl","__create","__defProp","__getOwnPropDesc","__getOwnPropNames","__getProtoOf","__hasOwnProp","__commonJS","__require","__copyProps","__toESM","parse","source_default","__create","__defProp","__getOwnPropDesc","__getOwnPropNames","__getProtoOf","__hasOwnProp","__require","__commonJS","__require2","__copyProps","__toESM","error","location","match","parse","Store","pathMatch","inspect","MemoryCookieStore","indent","isObject","validate","require_cookie","domainMatch","Cookie","jsonParse","CookieJar","store","http","source_default","source_default","store","error","source_default","HttpMethods","match","__commonJS","value","parse","cookies","splitCookiesString","__toESM","Headers","Headers","name","contentType","parse","error","error","match","graphql","match","store","message","error","strategy","message","Headers","worker","message","message","error","message","error","message","error","error","handleRequest","DeferredPromise","error","readable","transformers","handleRequest","response","next","IS_NODE","_a","error","handleRequest","error","invariant","response","message","kEmitter","message","_a","kEmitter","kBoundListener","invariant","error","error","message","message","error"]}