{"version":3,"sources":["../src/popper.placement.ts"],"sourcesContent":["import type { Placement } from \"@popperjs/core\"\n\ntype Logical =\n  | \"start-start\"\n  | \"start-end\"\n  | \"end-start\"\n  | \"end-end\"\n  | \"start\"\n  | \"end\"\n\ntype PlacementWithLogical = Placement | Logical\n\nexport type { Placement, PlacementWithLogical }\n\nconst logicals: Record<Logical, { ltr: Placement; rtl: Placement }> = {\n  \"start-start\": { ltr: \"left-start\", rtl: \"right-start\" },\n  \"start-end\": { ltr: \"left-end\", rtl: \"right-end\" },\n  \"end-start\": { ltr: \"right-start\", rtl: \"left-start\" },\n  \"end-end\": { ltr: \"right-end\", rtl: \"left-end\" },\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" },\n}\n\nconst opposites: Partial<Record<Placement, Placement>> = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\",\n}\n\nexport function getPopperPlacement(\n  placement: PlacementWithLogical,\n  dir: \"ltr\" | \"rtl\" = \"ltr\",\n): Placement {\n  const value = ((logicals as any)[placement]?.[dir] || placement) as Placement\n  if (dir === \"ltr\") return value\n  return (opposites as any)[placement] ?? value\n}\n"],"mappings":";;;AAcA,IAAM,WAAgE;AAAA,EACpE,eAAe,EAAE,KAAK,cAAc,KAAK,cAAc;AAAA,EACvD,aAAa,EAAE,KAAK,YAAY,KAAK,YAAY;AAAA,EACjD,aAAa,EAAE,KAAK,eAAe,KAAK,aAAa;AAAA,EACrD,WAAW,EAAE,KAAK,aAAa,KAAK,WAAW;AAAA,EAC/C,OAAO,EAAE,KAAK,QAAQ,KAAK,QAAQ;AAAA,EACnC,KAAK,EAAE,KAAK,SAAS,KAAK,OAAO;AACnC;AAEA,IAAM,YAAmD;AAAA,EACvD,cAAc;AAAA,EACd,YAAY;AAAA,EACZ,aAAa;AAAA,EACb,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,cAAc;AAChB;AAEO,SAAS,mBACd,WACA,MAAqB,OACV;AAnCb;AAoCE,QAAM,UAAU,cAAiB,SAAS,MAA1B,mBAA8B,SAAQ;AACtD,MAAI,QAAQ;AAAO,WAAO;AAC1B,UAAQ,eAAkB,SAAS,MAA3B,YAAgC;AAC1C;","names":[]}