{"version":3,"sources":["../src/use-popper.ts","../src/utils.ts","../src/modifiers.ts","../src/popper.placement.ts"],"sourcesContent":["import { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { PropGetter } from \"@chakra-ui/react-types\"\nimport {\n  createPopper,\n  Instance,\n  Modifier,\n  VirtualElement,\n} from \"@popperjs/core\"\nimport { useCallback, useEffect, useRef } from \"react\"\nimport * as customModifiers from \"./modifiers\"\nimport { getPopperPlacement, PlacementWithLogical } from \"./popper.placement\"\nimport { cssVars, getEventListenerOptions } from \"./utils\"\n\nexport interface UsePopperProps {\n  /**\n   * Whether the popper.js should be enabled\n   */\n  enabled?: boolean\n  /**\n   * The main and cross-axis offset to displace popper element\n   * from its reference element.\n   */\n  offset?: [number, number]\n  /**\n   * The distance or margin between the reference and popper.\n   * It is used internally to create an `offset` modifier.\n   *\n   * NB: If you define `offset` prop, it'll override the gutter.\n   * @default 8\n   */\n  gutter?: number\n  /**\n   * If `true`, will prevent the popper from being cut off and ensure\n   * it's visible within the boundary area.\n   * @default true\n   */\n  preventOverflow?: boolean\n  /**\n   * If `true`, the popper will change its placement and flip when it's\n   * about to overflow its boundary area.\n   * @default true\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popper will match the width of the reference at all times.\n   * It's useful for `autocomplete`, `date-picker` and `select` patterns.\n   * @default false\n   */\n  matchWidth?: boolean\n  /**\n   * The boundary area for the popper. Used within the `preventOverflow` modifier\n   * @default \"clippingParents\"\n   */\n  boundary?: \"clippingParents\" | \"scrollParent\" | HTMLElement\n  /**\n   * If provided, determines whether the popper will reposition itself on `scroll`\n   * and `resize` of the window.\n   * @default true\n   */\n  eventListeners?: boolean | { scroll?: boolean; resize?: boolean }\n  /**\n   * The padding required to prevent the arrow from\n   * reaching the very edge of the popper.\n   * @default 8\n   */\n  arrowPadding?: number\n  /**\n   * The CSS positioning strategy to use.\n   * @default \"absolute\"\n   */\n  strategy?: \"absolute\" | \"fixed\"\n  /**\n   * The placement of the popper relative to its reference.\n   * @default \"bottom\"\n   */\n  placement?: PlacementWithLogical\n  /**\n   * Array of popper.js modifiers. Check the docs to see\n   * the list of possible modifiers you can pass.\n   *\n   * @see Docs https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Partial<Modifier<string, any>>>\n  /**\n   * Theme direction `ltr` or `rtl`. Popper's placement will\n   * be set accordingly\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport type ArrowCSSVarProps = {\n  /**\n   * The size of the popover arrow.\n   * This sets the `--popper-arrow-size` css property\n   */\n  size?: string | number\n  /**\n   * The box-shadow color of the popover arrow.\n   * This sets the `--popper-arrow-shadow-color` css property\n   */\n  shadowColor?: string\n  /**\n   * The background color of the popper arrow.\n   * This sets the `--popper-arrow-bg` css property.\n   */\n  bg?: string\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth,\n    direction = \"ltr\",\n  } = props\n\n  const reference = useRef<Element | VirtualElement | null>(null)\n  const popper = useRef<HTMLElement | null>(null)\n  const instance = useRef<Instance | null>(null)\n  const placement = getPopperPlacement(placementProp, direction)\n\n  const cleanup = useRef(() => {})\n\n  const setupPopper = useCallback(() => {\n    if (!enabled || !reference.current || !popper.current) return\n\n    // If popper instance exists, destroy it, so we can create a new one\n    cleanup.current?.()\n\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        customModifiers.innerArrow,\n        customModifiers.positionArrow,\n        customModifiers.transformOrigin,\n        {\n          ...customModifiers.matchWidth,\n          enabled: !!matchWidth,\n        },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners),\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding },\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter],\n          },\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 },\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary },\n        },\n        // allow users override internal modifiers\n        ...(modifiers ?? []),\n      ],\n      strategy,\n    })\n\n    // force update one-time to fix any positioning issues\n    instance.current.forceUpdate()\n\n    cleanup.current = instance.current.destroy\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy,\n  ])\n\n  useEffect(() => {\n    return () => {\n      /**\n       * Fast refresh might call this function and tear down the popper\n       * even if the reference still exists. This checks against that\n       */\n      if (!reference.current && !popper.current) {\n        instance.current?.destroy()\n        instance.current = null\n      }\n    }\n  }, [])\n\n  const referenceRef = useCallback(\n    <T extends Element | VirtualElement>(node: T | null) => {\n      reference.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getReferenceProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(referenceRef, ref),\n    }),\n    [referenceRef],\n  )\n\n  const popperRef = useCallback(\n    <T extends HTMLElement>(node: T | null) => {\n      popper.current = node\n      setupPopper()\n    },\n    [setupPopper],\n  )\n\n  const getPopperProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(popperRef, ref),\n      style: {\n        ...props.style,\n        position: strategy,\n        minWidth: matchWidth ? undefined : \"max-content\",\n        inset: \"0 auto auto 0\",\n      },\n    }),\n    [strategy, popperRef, matchWidth],\n  )\n\n  const getArrowProps: PropGetter = useCallback((props = {}, ref = null) => {\n    const { size, shadowColor, bg, style, ...rest } = props\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle(props),\n    }\n  }, [])\n\n  const getArrowInnerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      \"data-popper-arrow-inner\": \"\",\n    }),\n    [],\n  )\n\n  return {\n    update() {\n      instance.current?.update()\n    },\n    forceUpdate() {\n      instance.current?.forceUpdate()\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps,\n  }\n}\n\nfunction getArrowStyle(props: any) {\n  const { size, shadowColor, bg, style } = props\n  const computedStyle = { ...style, position: \"absolute\" }\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg\n  }\n  return computedStyle\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n","import { Placement } from \"@popperjs/core\"\n\nconst toVar = (value: string, fallback?: string) => ({\n  var: value,\n  varRef: fallback ? `var(${value}, ${fallback})` : `var(${value})`,\n})\n\nexport const cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\"),\n} as const\n\nexport function getBoxShadow(placement: Placement) {\n  if (placement.includes(\"top\"))\n    return `1px 1px 0px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"bottom\"))\n    return `-1px -1px 0px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"right\"))\n    return `-1px 1px 0px 0 var(--popper-arrow-shadow-color)`\n  if (placement.includes(\"left\"))\n    return `1px -1px 0px 0 var(--popper-arrow-shadow-color)`\n}\n\nconst transforms: Record<string, string> = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\",\n}\n\nexport const toTransformOrigin = (placement: Placement) => transforms[placement]\n\nconst defaultEventListeners = {\n  scroll: true,\n  resize: true,\n}\n\nexport function getEventListenerOptions(\n  value?: boolean | Partial<typeof defaultEventListeners>,\n) {\n  let eventListeners: {\n    enabled?: boolean\n    options?: typeof defaultEventListeners\n  }\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: { ...defaultEventListeners, ...value },\n    }\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners,\n    }\n  }\n  return eventListeners\n}\n","import { Placement, Modifier, State } from \"@popperjs/core\"\nimport { getBoxShadow, toTransformOrigin, cssVars } from \"./utils\"\n\n/* -------------------------------------------------------------------------------------------------\n The match width modifier sets the popper width to match the reference.\n It is useful for custom selects, autocomplete, etc.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const matchWidth: Modifier<\"matchWidth\", any> = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      const reference = state.elements.reference as HTMLElement\n      state.elements.popper.style.width = `${reference.offsetWidth}px`\n    },\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The transform origin modifier sets the css `transformOrigin` value of the popper\n  based on the dynamic placement state of the popper.\n  \n  Useful when we need to animate/transition the popper.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const transformOrigin: Modifier<\"transformOrigin\", any> = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setTransformOrigin(state)\n    },\n}\n\nconst setTransformOrigin = (state: State) => {\n  state.elements.popper.style.setProperty(\n    cssVars.transformOrigin.var,\n    toTransformOrigin(state.placement),\n  )\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The position arrow modifier adds width, height and overrides the `top/left/right/bottom`\n  styles generated by popper.js to properly position the arrow\n* -----------------------------------------------------------------------------------------------*/\n\nexport const positionArrow: Modifier<\"positionArrow\", any> = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state)\n  },\n}\n\nconst setArrowStyles = (state: Partial<State>) => {\n  if (!state.placement) return\n  const overrides = getArrowStyle(state.placement)\n\n  if (state.elements?.arrow && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1,\n    })\n\n    const vars = {\n      [cssVars.arrowSizeHalf\n        .var]: `calc(${cssVars.arrowSize.varRef} / 2 - 1px)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`,\n    }\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property])\n    }\n  }\n}\n\nconst getArrowStyle = (placement: Placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef }\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef }\n  }\n}\n\n/* -------------------------------------------------------------------------------------------------\n  The inner arrow modifier, sets the placement styles for the inner arrow that forms\n  the popper arrow tip.\n* -----------------------------------------------------------------------------------------------*/\n\nexport const innerArrow: Modifier<\"innerArrow\", any> = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state)\n  },\n  effect:\n    ({ state }) =>\n    () => {\n      setInnerArrowStyles(state)\n    },\n}\n\nconst setInnerArrowStyles = (state: State) => {\n  if (!state.elements.arrow) return\n\n  const inner = state.elements.arrow.querySelector(\n    \"[data-popper-arrow-inner]\",\n  ) as HTMLElement | null\n\n  if (!inner) return\n  const boxShadow = getBoxShadow(state.placement)\n  if (boxShadow) {\n    inner.style.setProperty(\"--popper-arrow-default-shadow\", boxShadow)\n  }\n\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: `var(--popper-arrow-shadow, var(--popper-arrow-default-shadow))`,\n  })\n}\n","import type { Placement } from \"@popperjs/core\"\n\ntype Logical =\n  | \"start-start\"\n  | \"start-end\"\n  | \"end-start\"\n  | \"end-end\"\n  | \"start\"\n  | \"end\"\n\ntype PlacementWithLogical = Placement | Logical\n\nexport type { Placement, PlacementWithLogical }\n\nconst logicals: Record<Logical, { ltr: Placement; rtl: Placement }> = {\n  \"start-start\": { ltr: \"left-start\", rtl: \"right-start\" },\n  \"start-end\": { ltr: \"left-end\", rtl: \"right-end\" },\n  \"end-start\": { ltr: \"right-start\", rtl: \"left-start\" },\n  \"end-end\": { ltr: \"right-end\", rtl: \"left-end\" },\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" },\n}\n\nconst opposites: Partial<Record<Placement, Placement>> = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\",\n}\n\nexport function getPopperPlacement(\n  placement: PlacementWithLogical,\n  dir: \"ltr\" | \"rtl\" = \"ltr\",\n): Placement {\n  const value = ((logicals as any)[placement]?.[dir] || placement) as Placement\n  if (dir === \"ltr\") return value\n  return (opposites as any)[placement] ?? value\n}\n"],"mappings":"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","names":["matchWidth","props","getArrowStyle"]}