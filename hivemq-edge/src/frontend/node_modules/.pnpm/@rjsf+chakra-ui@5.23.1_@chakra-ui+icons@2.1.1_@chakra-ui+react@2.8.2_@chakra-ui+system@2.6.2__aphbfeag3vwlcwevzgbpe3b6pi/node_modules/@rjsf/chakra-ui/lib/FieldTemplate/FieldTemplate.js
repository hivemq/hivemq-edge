import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { getTemplate, getUiOptions, } from '@rjsf/utils';
import { Text, FormControl } from '@chakra-ui/react';
export default function FieldTemplate(props) {
    const { id, children, classNames, style, disabled, displayLabel, hidden, label, onDropPropertyClick, onKeyChange, readonly, registry, required, rawErrors = [], errors, help, description, rawDescription, schema, uiSchema, } = props;
    const uiOptions = getUiOptions(uiSchema);
    const WrapIfAdditionalTemplate = getTemplate('WrapIfAdditionalTemplate', registry, uiOptions);
    if (hidden) {
        return _jsx("div", { style: { display: 'none' }, children: children });
    }
    return (_jsx(WrapIfAdditionalTemplate, { classNames: classNames, style: style, disabled: disabled, id: id, label: label, onDropPropertyClick: onDropPropertyClick, onKeyChange: onKeyChange, readonly: readonly, required: required, schema: schema, uiSchema: uiSchema, registry: registry, children: _jsxs(FormControl, { isRequired: required, isInvalid: rawErrors && rawErrors.length > 0, children: [children, displayLabel && rawDescription ? _jsx(Text, { mt: 2, children: description }) : null, errors, help] }) }));
}
//# sourceMappingURL=FieldTemplate.js.map