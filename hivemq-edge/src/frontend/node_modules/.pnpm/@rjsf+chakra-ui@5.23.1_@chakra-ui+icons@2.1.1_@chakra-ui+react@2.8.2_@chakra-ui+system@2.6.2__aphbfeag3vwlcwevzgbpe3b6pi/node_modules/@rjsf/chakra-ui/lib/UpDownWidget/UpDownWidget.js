import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { NumberInput, NumberDecrementStepper, NumberIncrementStepper, NumberInputField, NumberInputStepper, FormControl, FormLabel, } from '@chakra-ui/react';
import { ariaDescribedByIds, labelValue, } from '@rjsf/utils';
import { getChakra } from '../utils';
export default function UpDownWidget(props) {
    const { id, uiSchema, readonly, disabled, label, hideLabel, value, onChange, onBlur, onFocus, rawErrors, required } = props;
    const chakraProps = getChakra({ uiSchema });
    const _onChange = (value) => onChange(value);
    const _onBlur = ({ target }) => onBlur(id, target && target.value);
    const _onFocus = ({ target }) => onFocus(id, target && target.value);
    return (_jsxs(FormControl, { mb: 1, ...chakraProps, isDisabled: disabled || readonly, isRequired: required, isReadOnly: readonly, isInvalid: rawErrors && rawErrors.length > 0, children: [labelValue(_jsx(FormLabel, { htmlFor: id, children: label }), hideLabel || !label), _jsxs(NumberInput, { value: value !== null && value !== void 0 ? value : '', onChange: _onChange, onBlur: _onBlur, onFocus: _onFocus, "aria-describedby": ariaDescribedByIds(id), children: [_jsx(NumberInputField, { id: id, name: id }), _jsxs(NumberInputStepper, { children: [_jsx(NumberIncrementStepper, {}), _jsx(NumberDecrementStepper, {})] })] })] }));
}
//# sourceMappingURL=UpDownWidget.js.map