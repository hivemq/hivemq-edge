{"version":3,"sources":["../src/form-label.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useFormControlContext, useFormControlStyles } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactNode\n   */\n  requiredIndicator?: React.ReactNode\n  /**\n   * @type React.ReactNode\n   */\n  optionalIndicator?: React.ReactNode\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(function FormLabel(\n  passedProps,\n  ref,\n) {\n  const styles = useStyleConfig(\"FormLabel\", passedProps)\n  const props = omitThemingProps(passedProps)\n\n  const {\n    className,\n    children,\n    requiredIndicator = <RequiredIndicator />,\n    optionalIndicator = null,\n    ...rest\n  } = props\n\n  const field = useFormControlContext()\n  const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest }\n\n  return (\n    <chakra.label\n      {...ownProps}\n      className={cx(\"chakra-form__label\", props.className)}\n      __css={{\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles,\n      }}\n    >\n      {children}\n      {field?.isRequired ? requiredIndicator : optionalIndicator}\n    </chakra.label>\n  )\n})\n\nFormLabel.displayName = \"FormLabel\"\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  function RequiredIndicator(props, ref) {\n    const field = useFormControlContext()\n    const styles = useFormControlStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nRequiredIndicator.displayName = \"RequiredIndicator\"\n"],"mappings":";;;;;;;AAAA;AAAA,EACE;AAAA,EACA;AAAA,EAEA;AAAA,EAEA;AAAA,OACK;AACP,SAAS,UAAU;AAkCK,cASpB,YAToB;AAVjB,IAAM,YAAY,WAAoC,SAASA,WACpE,aACA,KACA;AAnCF;AAoCE,QAAM,SAAS,eAAe,aAAa,WAAW;AACtD,QAAM,QAAQ,iBAAiB,WAAW;AAE1C,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA,oBAAoB,oBAAC,qBAAkB;AAAA,IACvC,oBAAoB;AAAA,IACpB,GAAG;AAAA,EACL,IAAI;AAEJ,QAAM,QAAQ,sBAAsB;AACpC,QAAM,YAAW,oCAAO,cAAc,MAAM,SAA3B,YAAmC,EAAE,KAAK,GAAG,KAAK;AAEnE,SACE;AAAA,IAAC,OAAO;AAAA,IAAP;AAAA,MACE,GAAG;AAAA,MACJ,WAAW,GAAG,sBAAsB,MAAM,SAAS;AAAA,MACnD,OAAO;AAAA,QACL,SAAS;AAAA,QACT,WAAW;AAAA,QACX,GAAG;AAAA,MACL;AAAA,MAEC;AAAA;AAAA,SACA,+BAAO,cAAa,oBAAoB;AAAA;AAAA;AAAA,EAC3C;AAEJ,CAAC;AAED,UAAU,cAAc;AAQjB,IAAM,oBAAoB;AAAA,EAC/B,SAASC,mBAAkB,OAAO,KAAK;AACrC,UAAM,QAAQ,sBAAsB;AACpC,UAAM,SAAS,qBAAqB;AAEpC,QAAI,EAAC,+BAAO;AAAY,aAAO;AAE/B,UAAM,YAAY,GAAG,mCAAmC,MAAM,SAAS;AAEvE,WACE;AAAA,MAAC,OAAO;AAAA,MAAP;AAAA,QACE,GAAG,+BAAO,0BAA0B,OAAO;AAAA,QAC5C,OAAO,OAAO;AAAA,QACd;AAAA;AAAA,IACF;AAAA,EAEJ;AACF;AAEA,kBAAkB,cAAc;","names":["FormLabel","RequiredIndicator"]}