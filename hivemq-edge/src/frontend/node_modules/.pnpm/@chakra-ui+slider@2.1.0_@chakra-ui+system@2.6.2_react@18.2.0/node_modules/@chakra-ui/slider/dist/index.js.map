{"version":3,"sources":["../src/index.ts","../src/range-slider.tsx","../../../legacy/utils/src/dom.ts","../../../legacy/utils/src/function.ts","../src/use-range-slider.ts","../src/slider-utils.ts","../src/slider.tsx","../src/use-slider.ts"],"sourcesContent":["export {\n  RangeSlider,\n  RangeSliderFilledTrack,\n  RangeSliderMark,\n  RangeSliderProvider,\n  RangeSliderThumb,\n  RangeSliderTrack,\n  useRangeSliderContext,\n  useRangeSliderStyles,\n} from \"./range-slider\"\nexport type {\n  RangeSliderInnerTrackProps,\n  RangeSliderMarkProps,\n  RangeSliderProps,\n  RangeSliderTrackProps,\n  RangeSliderThumbProps,\n} from \"./range-slider\"\nexport {\n  Slider,\n  SliderFilledTrack,\n  SliderMark,\n  SliderProvider,\n  SliderThumb,\n  SliderTrack,\n  useSliderContext,\n  useSliderStyles,\n} from \"./slider\"\nexport type {\n  SliderInnerTrackProps,\n  SliderMarkProps,\n  SliderProps,\n  SliderThumbProps,\n  SliderTrackProps,\n} from \"./slider\"\nexport { useRangeSlider } from \"./use-range-slider\"\nexport type {\n  UseRangeSliderProps,\n  UseRangeSliderReturn,\n} from \"./use-range-slider\"\nexport { useSlider } from \"./use-slider\"\nexport type { UseSliderProps, UseSliderReturn } from \"./use-slider\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n  SystemStyleObject,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport { useMemo } from \"react\"\nimport {\n  useRangeSlider,\n  UseRangeSliderProps,\n  UseRangeSliderReturn,\n} from \"./use-range-slider\"\n\ninterface RangeSliderContext\n  extends Omit<UseRangeSliderReturn, \"getRootProps\"> {\n  name?: string | string[]\n}\n\nconst [RangeSliderProvider, useRangeSliderContext] =\n  createContext<RangeSliderContext>({\n    name: \"SliderContext\",\n    errorMessage:\n      \"useSliderContext: `context` is undefined. Seems you forgot to wrap all slider components within <RangeSlider />\",\n  })\n\nconst [RangeSliderStylesProvider, useRangeSliderStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `RangeSliderStylesContext`,\n  errorMessage: `useRangeSliderStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<RangeSlider />\" `,\n})\n\nexport { useRangeSliderStyles }\n\nexport { RangeSliderProvider, useRangeSliderContext }\n\nexport interface RangeSliderProps\n  extends UseRangeSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, keyof UseRangeSliderProps> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slidertwothumb/\n */\nexport const RangeSlider = forwardRef<RangeSliderProps, \"div\">(\n  function RangeSlider(props, ref) {\n    const sliderProps: RangeSliderProps = {\n      orientation: \"horizontal\",\n      ...props,\n    }\n\n    const styles = useMultiStyleConfig(\"Slider\", sliderProps)\n    const ownProps = omitThemingProps(sliderProps)\n\n    const { direction } = useTheme()\n    ownProps.direction = direction\n\n    const { getRootProps, ...context } = useRangeSlider(ownProps)\n    const ctx = useMemo(\n      () => ({ ...context, name: sliderProps.name }),\n      [context, sliderProps.name],\n    )\n\n    return (\n      <RangeSliderProvider value={ctx}>\n        <RangeSliderStylesProvider value={styles}>\n          <chakra.div\n            {...getRootProps({}, ref)}\n            className=\"chakra-slider\"\n            __css={styles.container}\n          >\n            {sliderProps.children}\n          </chakra.div>\n        </RangeSliderStylesProvider>\n      </RangeSliderProvider>\n    )\n  },\n)\n\nRangeSlider.displayName = \"RangeSlider\"\n\nexport interface RangeSliderThumbProps extends HTMLChakraProps<\"div\"> {\n  index: number\n}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const RangeSliderThumb = forwardRef<RangeSliderThumbProps, \"div\">(\n  function RangeSliderThumb(props, ref) {\n    const { getThumbProps, getInputProps, name } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const thumbProps = getThumbProps(props, ref)\n\n    return (\n      <chakra.div\n        {...thumbProps}\n        className={cx(\"chakra-slider__thumb\", props.className)}\n        __css={styles.thumb}\n      >\n        {thumbProps.children}\n        {name && <input {...getInputProps({ index: props.index })} />}\n      </chakra.div>\n    )\n  },\n)\n\nRangeSliderThumb.displayName = \"RangeSliderThumb\"\n\nexport interface RangeSliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const RangeSliderTrack = forwardRef<RangeSliderTrackProps, \"div\">(\n  function RangeSliderTrack(props, ref) {\n    const { getTrackProps } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const trackProps = getTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className={cx(\"chakra-slider__track\", props.className)}\n        __css={styles.track}\n        data-testid=\"chakra-range-slider-track\"\n      />\n    )\n  },\n)\n\nRangeSliderTrack.displayName = \"RangeSliderTrack\"\n\nexport interface RangeSliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const RangeSliderFilledTrack = forwardRef<\n  RangeSliderInnerTrackProps,\n  \"div\"\n>(function RangeSliderFilledTrack(props, ref) {\n  const { getInnerTrackProps } = useRangeSliderContext()\n  const styles = useRangeSliderStyles()\n  const trackProps = getInnerTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className=\"chakra-slider__filled-track\"\n      __css={styles.filledTrack}\n    />\n  )\n})\n\nRangeSliderFilledTrack.displayName = \"RangeSliderFilledTrack\"\n\nexport interface RangeSliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const RangeSliderMark = forwardRef<RangeSliderMarkProps, \"div\">(\n  function RangeSliderMark(props, ref) {\n    const { getMarkerProps } = useRangeSliderContext()\n    const styles = useRangeSliderStyles()\n    const markProps = getMarkerProps(props, ref)\n    return (\n      <chakra.div\n        {...markProps}\n        className={cx(\"chakra-slider__marker\", props.className)}\n        __css={styles.mark}\n      />\n    )\n  },\n)\n\nRangeSliderMark.displayName = \"RangeSliderMark\"\n","import { Booleanish, EventKeys } from \"./types\"\n\nexport function isElement(el: any): el is Element {\n  return (\n    el != null &&\n    typeof el == \"object\" &&\n    \"nodeType\" in el &&\n    el.nodeType === Node.ELEMENT_NODE\n  )\n}\n\nexport function isHTMLElement(el: any): el is HTMLElement {\n  if (!isElement(el)) {\n    return false\n  }\n\n  const win = el.ownerDocument.defaultView ?? window\n  return el instanceof win.HTMLElement\n}\n\nexport function getOwnerWindow(node?: Element | null): typeof globalThis {\n  return isElement(node)\n    ? getOwnerDocument(node)?.defaultView ?? window\n    : window\n}\n\nexport function getOwnerDocument(node?: Element | null): Document {\n  return isElement(node) ? node.ownerDocument ?? document : document\n}\n\nexport function getEventWindow(event: Event): typeof globalThis {\n  return ((event as UIEvent).view ?? window) as unknown as typeof globalThis\n}\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport const isBrowser = /* @__PURE__ */ canUseDOM()\n\nexport const dataAttr = (condition: boolean | undefined) =>\n  (condition ? \"\" : undefined) as Booleanish\n\nexport const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined\n\nexport const cx = (...classNames: any[]) => classNames.filter(Boolean).join(\" \")\n\nexport function getActiveElement(node?: HTMLElement) {\n  const doc = getOwnerDocument(node)\n  return doc?.activeElement as HTMLElement\n}\n\nexport function contains(parent: HTMLElement | null, child: HTMLElement) {\n  if (!parent) return false\n  return parent === child || parent.contains(child)\n}\n\nexport function addDomEvent(\n  target: EventTarget,\n  eventName: string,\n  handler: EventListener,\n  options?: AddEventListenerOptions,\n) {\n  target.addEventListener(eventName, handler, options)\n  return () => {\n    target.removeEventListener(eventName, handler, options)\n  }\n}\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(\n  event: Pick<KeyboardEvent, \"key\" | \"keyCode\">,\n) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport function getRelatedTarget(\n  event: Pick<FocusEvent, \"relatedTarget\" | \"target\" | \"currentTarget\">,\n) {\n  const target = (event.target ?? event.currentTarget) as HTMLElement\n  const activeElement = getActiveElement(target)\n  return (event.relatedTarget ?? activeElement) as HTMLElement\n}\n\nexport function isRightClick(event: Pick<MouseEvent, \"button\">): boolean {\n  return event.button !== 0\n}\n","/* eslint-disable no-nested-ternary */\nimport { isFunction, isNumber, __DEV__ } from \"./assertion\"\nimport { AnyFunction, FunctionArguments } from \"./types\"\n\nexport type MaybeFunction<T, Args extends unknown[] = []> =\n  | T\n  | ((...args: Args) => T)\n\nexport function runIfFn<T, U>(\n  valueOrFn: T | ((...fnArgs: U[]) => T),\n  ...args: U[]\n): T {\n  return isFunction(valueOrFn) ? valueOrFn(...args) : valueOrFn\n}\n\nexport function callAllHandlers<T extends (event: any) => void>(\n  ...fns: (T | undefined)[]\n) {\n  return function func(event: FunctionArguments<T>[0]) {\n    fns.some((fn) => {\n      fn?.(event)\n      return event?.defaultPrevented\n    })\n  }\n}\n\nexport function callAll<T extends AnyFunction>(...fns: (T | undefined)[]) {\n  return function mergedFn(arg: FunctionArguments<T>[0]) {\n    fns.forEach((fn) => {\n      fn?.(arg)\n    })\n  }\n}\n\nexport const compose = <T>(\n  fn1: (...args: T[]) => T,\n  ...fns: Array<(...args: T[]) => T>\n) =>\n  fns.reduce(\n    (f1, f2) =>\n      (...args) =>\n        f1(f2(...args)),\n    fn1,\n  )\n\nexport function once<T extends AnyFunction>(fn?: T | null) {\n  let result: any\n\n  return function func(this: any, ...args: Parameters<T>) {\n    if (fn) {\n      result = fn.apply(this, args)\n      fn = null\n    }\n\n    return result\n  }\n}\n\nexport const noop = () => {}\n\ntype MessageOptions = {\n  condition: boolean\n  message: string\n}\n\nexport const warn = /* @__PURE__ */ once((options: MessageOptions) => () => {\n  const { condition, message } = options\n  if (condition && __DEV__) {\n    console.warn(message)\n  }\n})\n\nexport const error = /* @__PURE__ */ once((options: MessageOptions) => () => {\n  const { condition, message } = options\n  if (condition && __DEV__) {\n    console.error(message)\n  }\n})\n\nexport const pipe =\n  <R>(...fns: Array<(a: R) => R>) =>\n  (v: R) =>\n    fns.reduce((a, b) => b(a), v)\n\nconst distance1D = (a: number, b: number) => Math.abs(a - b)\ntype Point = { x: number; y: number }\n\nconst isPoint = (point: any): point is { x: number; y: number } =>\n  \"x\" in point && \"y\" in point\n\nexport function distance<P extends Point | number>(a: P, b: P) {\n  if (isNumber(a) && isNumber(b)) {\n    return distance1D(a, b)\n  }\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x)\n    const yDelta = distance1D(a.y, b.y)\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2)\n  }\n  return 0\n}\n","import { usePanEvent } from \"@chakra-ui/react-use-pan-event\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport type { PropGetter, RequiredPropGetter } from \"@chakra-ui/react-types\"\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/utils\"\nimport {\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n  clampValue,\n} from \"@chakra-ui/number-utils\"\nimport { useCallback, useMemo, useRef, useState, useId } from \"react\"\nimport { getIds, getIsReversed, getStyles, orient } from \"./slider-utils\"\nimport { useSizes } from \"@chakra-ui/react-use-size\"\n\nexport interface UseRangeSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number[]\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number[]\n  /**\n   * Orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   * @default false\n   */\n  isReversed?: boolean\n\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number[]): void\n\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number[]): void\n\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number[]): void\n\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string | string[]\n  /**\n   * If `true`, the slider will be disabled\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   * @default false\n   */\n  isReadOnly?: boolean\n\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string[]\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string[]\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string[]\n  /**\n   * The writing mode\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n  /**\n   * The minimum distance between slider thumbs. Useful for preventing\n   * the thumbs from being too close together.\n   * @default 0\n   */\n  minStepsBetweenThumbs?: number\n}\n\nexport interface RangeSliderState {\n  value: number[]\n  isFocused: boolean\n  isDragging: boolean\n  getThumbPercent: (index: number) => number\n  getThumbMinValue: (index: number) => number\n  getThumbMaxValue: (index: number) => number\n}\n\nexport interface RangeSliderActions {\n  setValueAtIndex(index: number, val: number): void\n  setActiveIndex: React.Dispatch<React.SetStateAction<number>>\n  stepUp(index: number, step?: number): void\n  stepDown(index: number, step?: number): void\n  reset(): void\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slidertwothumb/\n */\nexport function useRangeSlider(props: UseRangeSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange,\n  })\n\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\n      `[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``,\n    )\n  }\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const [activeIndex, setActiveIndex] = useState(-1)\n\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const initialValue = useRef(valueState)\n  const value = valueState.map((val) => clampValue(val, min, max))\n\n  const spacing = minStepsBetweenThumbs * step\n  const valueBounds = getValueBounds(value, min, max, spacing)\n\n  const stateRef = useRef<{\n    eventSource: \"pointer\" | \"keyboard\" | null\n    value: number[]\n    valueBounds: Array<{ min: number; max: number }>\n  }>({\n    eventSource: null,\n    value: [],\n    valueBounds: [],\n  })\n\n  stateRef.current.value = value\n  stateRef.current.valueBounds = valueBounds\n\n  const reversedValue = value.map((val) => max - val + min)\n  const thumbValues = isReversed ? reversedValue : value\n  const thumbPercents = thumbValues.map((val) => valueToPercent(val, min, max))\n\n  const isVertical = orientation === \"vertical\"\n\n  const trackRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  const thumbRects = useSizes({\n    getNodes() {\n      const rootNode = rootRef.current\n      const thumbNodes =\n        rootNode?.querySelectorAll<HTMLElement>(\"[role=slider]\")\n      return thumbNodes ? Array.from(thumbNodes) : []\n    },\n  })\n\n  const reactId = useId()\n  const uuid = idProp ?? reactId\n  const ids = getIds(uuid)\n\n  const getValueFromPointer = useCallback(\n    (event: any) => {\n      if (!trackRef.current) return\n      stateRef.current.eventSource = \"pointer\"\n      const rect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical ? rect.bottom - clientY : clientX - rect.left\n      const length = isVertical ? rect.height : rect.width\n\n      let percent = diff / length\n      if (isReversed) percent = 1 - percent\n\n      return percentToValue(percent, min, max)\n    },\n    [isVertical, isReversed, max, min],\n  )\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const actions: RangeSliderActions = useMemo(\n    () => ({\n      setValueAtIndex(index: number, val: number) {\n        if (!isInteractive) return\n        const bounds = stateRef.current.valueBounds[index]\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep))\n        val = clampValue(val, bounds.min, bounds.max)\n        const next = [...stateRef.current.value]\n        next[index] = val\n        setValue(next)\n      },\n      setActiveIndex,\n      stepUp(index: number, step = oneStep) {\n        const valueAtIndex = stateRef.current.value[index]\n        const next = isReversed ? valueAtIndex - step : valueAtIndex + step\n        actions.setValueAtIndex(index, next)\n      },\n      stepDown(index: number, step = oneStep) {\n        const valueAtIndex = stateRef.current.value[index]\n        const next = isReversed ? valueAtIndex + step : valueAtIndex - step\n        actions.setValueAtIndex(index, next)\n      },\n      reset() {\n        setValue(initialValue.current)\n      },\n    }),\n    [oneStep, isReversed, setValue, isInteractive],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const eventKey = event.key\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        ArrowRight: () => actions.stepUp(activeIndex),\n        ArrowUp: () => actions.stepUp(activeIndex),\n        ArrowLeft: () => actions.stepDown(activeIndex),\n        ArrowDown: () => actions.stepDown(activeIndex),\n        PageUp: () => actions.stepUp(activeIndex, tenSteps),\n        PageDown: () => actions.stepDown(activeIndex, tenSteps),\n        Home: () => {\n          const { min: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n        End: () => {\n          const { max: value } = valueBounds[activeIndex]\n          actions.setValueAtIndex(activeIndex, value)\n        },\n      }\n\n      const action = keyMap[eventKey]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        stateRef.current.eventSource = \"keyboard\"\n      }\n    },\n    [actions, activeIndex, tenSteps, valueBounds],\n  )\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(\n    () =>\n      getStyles({\n        isReversed,\n        orientation,\n        thumbRects,\n        thumbPercents,\n      }),\n    [isReversed, orientation, thumbPercents, thumbRects],\n  )\n\n  const focusThumb = useCallback(\n    (index?: number) => {\n      const idx = index ?? activeIndex\n      if (idx !== -1 && focusThumbOnChange) {\n        const id = ids.getThumb(idx)\n        const thumb = rootRef.current?.ownerDocument.getElementById(id)\n        if (thumb) {\n          setTimeout(() => thumb.focus())\n        }\n      }\n    },\n    [focusThumbOnChange, activeIndex, ids],\n  )\n\n  useUpdateEffect(() => {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd?.(stateRef.current.value)\n    }\n  }, [value, onChangeEnd])\n\n  const onPanSessionStart = (event: MouseEvent | TouchEvent | PointerEvent) => {\n    const pointValue = getValueFromPointer(event) || 0\n    const distances = stateRef.current.value.map((val) =>\n      Math.abs(val - pointValue),\n    )\n    const closest = Math.min(...distances)\n    let index = distances.indexOf(closest)\n\n    // check if the clicked thumb is stacked by checking if there are multiple\n    // thumbs at the same distance\n    const thumbsAtPosition = distances.filter(\n      (distance) => distance === closest,\n    )\n    const isThumbStacked = thumbsAtPosition.length > 1\n\n    // when two thumbs are stacked and the user clicks at a point larger than\n    // their values, pick the last thumb with the greatest index\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1\n    }\n\n    setActiveIndex(index)\n    actions.setValueAtIndex(index, pointValue)\n    focusThumb(index)\n  }\n\n  const onPan = (event: MouseEvent | TouchEvent | PointerEvent) => {\n    if (activeIndex == -1) return\n    const pointValue = getValueFromPointer(event) || 0\n    setActiveIndex(activeIndex)\n    actions.setValueAtIndex(activeIndex, pointValue)\n    focusThumb(activeIndex)\n  }\n\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return\n      setDragging(true)\n      onPanSessionStart(event)\n      onChangeStart?.(stateRef.current.value)\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return\n      setDragging(false)\n      onChangeEnd?.(stateRef.current.value)\n    },\n    onPan(event) {\n      if (!isInteractive) return\n      onPan(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ...htmlProps,\n        id: ids.root,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: { ...props.style, ...rootStyle },\n      }\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle, ids],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, trackRef),\n        id: ids.track,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: { ...props.style, ...trackStyle },\n      }\n    },\n    [isDisabled, trackStyle, ids],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        id: ids.innerTrack,\n        style: {\n          ...props.style,\n          ...innerTrackStyle,\n        },\n      }\n    },\n    [innerTrackStyle, ids],\n  )\n\n  const getThumbProps: RequiredPropGetter<{ index: number }> = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n\n      const valueAtIndex = value[index]\n      if (valueAtIndex == null) {\n        throw new TypeError(\n          `[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`,\n        )\n      }\n\n      const bounds = valueBounds[index]\n\n      return {\n        ...rest,\n        ref,\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: ids.getThumb(index),\n        \"data-active\": dataAttr(isDragging && activeIndex === index),\n        \"aria-valuetext\":\n          getAriaValueText?.(valueAtIndex) ?? ariaValueText?.[index],\n        \"aria-valuemin\": bounds.min,\n        \"aria-valuemax\": bounds.max,\n        \"aria-valuenow\": valueAtIndex,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel?.[index],\n        \"aria-labelledby\": ariaLabel?.[index]\n          ? undefined\n          : ariaLabelledBy?.[index],\n        style: { ...props.style, ...getThumbStyle(index) },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => {\n          setFocused(true)\n          setActiveIndex(index)\n        }),\n        onBlur: callAllHandlers(props.onBlur, () => {\n          setFocused(false)\n          setActiveIndex(-1)\n        }),\n      }\n    },\n    [\n      ids,\n      value,\n      valueBounds,\n      isInteractive,\n      isDragging,\n      activeIndex,\n      getAriaValueText,\n      ariaValueText,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n      setFocused,\n    ],\n  )\n\n  const getOutputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        id: ids.output,\n        htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n        \"aria-live\": \"off\",\n      }\n    },\n    [ids, value],\n  )\n\n  const getMarkerProps: RequiredPropGetter<{ value: number }> = useCallback(\n    (props, ref = null) => {\n      const { value: v, ...rest } = props\n\n      const isInRange = !(v < min || v > max)\n      const isHighlighted = v >= value[0] && v <= value[value.length - 1]\n\n      let percent = valueToPercent(v, min, max)\n      percent = isReversed ? 100 - percent : percent\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: { bottom: `${percent}%` },\n          horizontal: { left: `${percent}%` },\n        }),\n      }\n\n      return {\n        ...rest,\n        ref,\n        id: ids.getMarker(props.value),\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value, ids],\n  )\n\n  const getInputProps: RequiredPropGetter<{ index: number }> = useCallback(\n    (props, ref = null) => {\n      const { index, ...rest } = props\n      return {\n        ...rest,\n        ref,\n        id: ids.getInput(index),\n        type: \"hidden\",\n        value: value[index],\n        name: Array.isArray(name) ? name[index] : `${name}-${index}`,\n      }\n    },\n    [name, value, ids],\n  )\n\n  const state: RangeSliderState = {\n    value,\n    isFocused,\n    isDragging,\n    getThumbPercent: (index: number) => thumbPercents[index],\n    getThumbMinValue: (index: number) => valueBounds[index].min,\n    getThumbMaxValue: (index: number) => valueBounds[index].max,\n  }\n\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps,\n  }\n}\n\nexport type UseRangeSliderReturn = ReturnType<typeof useRangeSlider>\n\nfunction getValueBounds(\n  arr: number[],\n  min: number,\n  max: number,\n  spacing: number,\n) {\n  return arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing\n    return { min: _min, max: _max }\n  })\n}\n","export function getIds(id: string | number) {\n  return {\n    root: `slider-root-${id}`,\n    getThumb: (i: number) => `slider-thumb-${id}-${i}`,\n    getInput: (i: number) => `slider-input-${id}-${i}`,\n    track: `slider-track-${id}`,\n    innerTrack: `slider-filled-track-${id}`,\n    getMarker: (i: number) => `slider-marker-${id}-${i}`,\n    output: `slider-output-${id}`,\n  }\n}\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nexport function orient(options: {\n  orientation: Orientation\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\ntype Size = { height: number; width: number }\n\nconst zeroSize: Size = { width: 0, height: 0 }\n\nconst normalize = (a: Size | undefined) => a || zeroSize\n\nexport function getStyles(options: {\n  orientation: Orientation\n  thumbPercents: number[]\n  thumbRects: Array<Size | undefined>\n  isReversed?: boolean\n}) {\n  const { orientation, thumbPercents, thumbRects, isReversed } = options\n\n  const getThumbStyle = (i: number): React.CSSProperties => {\n    const rect = thumbRects[i] ?? zeroSize\n    return {\n      position: \"absolute\",\n      userSelect: \"none\",\n      WebkitUserSelect: \"none\",\n      MozUserSelect: \"none\",\n      msUserSelect: \"none\",\n      touchAction: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `calc(${thumbPercents[i]}% - ${rect.height / 2}px)`,\n        },\n        horizontal: {\n          left: `calc(${thumbPercents[i]}% - ${rect.width / 2}px)`,\n        },\n      }),\n    }\n  }\n\n  const size =\n    orientation === \"vertical\"\n      ? thumbRects.reduce(\n          (a, b) => (normalize(a).height > normalize(b).height ? a : b),\n          zeroSize,\n        )\n      : thumbRects.reduce(\n          (a, b) => (normalize(a).width > normalize(b).width ? a : b),\n          zeroSize,\n        )\n\n  const rootStyle: React.CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: size\n        ? {\n            paddingLeft: size.width / 2,\n            paddingRight: size.width / 2,\n          }\n        : {},\n      horizontal: size\n        ? {\n            paddingTop: size.height / 2,\n            paddingBottom: size.height / 2,\n          }\n        : {},\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const isSingleThumb = thumbPercents.length === 1\n  const fallback = [0, isReversed ? 100 - thumbPercents[0] : thumbPercents[0]]\n  const range = isSingleThumb ? fallback : thumbPercents\n\n  let start = range[0]\n  if (!isSingleThumb && isReversed) {\n    start = 100 - start\n  }\n  const percent = Math.abs(range[range.length - 1] - range[0])\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${percent}%`, top: `${start}%` }\n        : { height: `${percent}%`, bottom: `${start}%` },\n      horizontal: isReversed\n        ? { width: `${percent}%`, right: `${start}%` }\n        : { width: `${percent}%`, left: `${start}%` },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, getThumbStyle }\n}\n\nexport function getIsReversed(options: {\n  isReversed?: boolean\n  direction: \"ltr\" | \"rtl\"\n  orientation?: \"horizontal\" | \"vertical\"\n}) {\n  const { isReversed, direction, orientation } = options\n\n  if (direction === \"ltr\" || orientation === \"vertical\") {\n    return isReversed\n  }\n  // only flip for horizontal RTL\n  // if isReserved 🔜  otherwise  🔚\n  return !isReversed\n}\n","import { createContext } from \"@chakra-ui/react-context\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useTheme,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport { useSlider, UseSliderProps, UseSliderReturn } from \"./use-slider\"\n\ninterface SliderContext\n  extends Omit<UseSliderReturn, \"getInputProps\" | \"getRootProps\"> {}\n\nconst [SliderProvider, useSliderContext] = createContext<SliderContext>({\n  name: \"SliderContext\",\n  hookName: \"useSliderContext\",\n  providerName: \"<Slider />\",\n})\n\nconst [SliderStylesProvider, useSliderStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `SliderStylesContext`,\n  hookName: `useSliderStyles`,\n  providerName: \"<Slider />\",\n})\n\nexport { useSliderStyles }\nexport { SliderProvider, useSliderContext }\n\nexport interface SliderProps\n  extends UseSliderProps,\n    ThemingProps<\"Slider\">,\n    Omit<HTMLChakraProps<\"div\">, keyof UseSliderProps> {}\n\n/**\n * The Slider is used to allow users to make selections from a range of values.\n * It provides context and functionality for all slider components\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slider/\n */\nexport const Slider = forwardRef<SliderProps, \"div\">((props, ref) => {\n  const sliderProps: SliderProps = {\n    ...props,\n    orientation: props?.orientation ?? \"horizontal\",\n  }\n\n  const styles = useMultiStyleConfig(\"Slider\", sliderProps)\n  const ownProps = omitThemingProps(sliderProps)\n\n  const { direction } = useTheme()\n  ownProps.direction = direction\n\n  const { getInputProps, getRootProps, ...context } = useSlider(ownProps)\n\n  const rootProps = getRootProps()\n  const inputProps = getInputProps({}, ref)\n\n  return (\n    <SliderProvider value={context}>\n      <SliderStylesProvider value={styles}>\n        <chakra.div\n          {...rootProps}\n          className={cx(\"chakra-slider\", sliderProps.className)}\n          __css={styles.container}\n        >\n          {sliderProps.children}\n          <input {...inputProps} />\n        </chakra.div>\n      </SliderStylesProvider>\n    </SliderProvider>\n  )\n})\n\nSlider.displayName = \"Slider\"\n\nexport interface SliderThumbProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Slider component that acts as the handle used to select predefined\n * values by dragging its handle along the track\n */\nexport const SliderThumb = forwardRef<SliderThumbProps, \"div\">((props, ref) => {\n  const { getThumbProps } = useSliderContext()\n  const styles = useSliderStyles()\n  const thumbProps = getThumbProps(props, ref)\n\n  return (\n    <chakra.div\n      {...thumbProps}\n      className={cx(\"chakra-slider__thumb\", props.className)}\n      __css={styles.thumb}\n    />\n  )\n})\n\nSliderThumb.displayName = \"SliderThumb\"\n\nexport interface SliderTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderTrack = forwardRef<SliderTrackProps, \"div\">((props, ref) => {\n  const { getTrackProps } = useSliderContext()\n  const styles = useSliderStyles()\n  const trackProps = getTrackProps(props, ref)\n\n  return (\n    <chakra.div\n      {...trackProps}\n      className={cx(\"chakra-slider__track\", props.className)}\n      __css={styles.track}\n    />\n  )\n})\n\nSliderTrack.displayName = \"SliderTrack\"\n\nexport interface SliderInnerTrackProps extends HTMLChakraProps<\"div\"> {}\n\nexport const SliderFilledTrack = forwardRef<SliderInnerTrackProps, \"div\">(\n  (props, ref) => {\n    const { getInnerTrackProps } = useSliderContext()\n    const styles = useSliderStyles()\n    const trackProps = getInnerTrackProps(props, ref)\n\n    return (\n      <chakra.div\n        {...trackProps}\n        className={cx(\"chakra-slider__filled-track\", props.className)}\n        __css={styles.filledTrack}\n      />\n    )\n  },\n)\n\nSliderFilledTrack.displayName = \"SliderFilledTrack\"\n\nexport interface SliderMarkProps extends HTMLChakraProps<\"div\"> {\n  value: number\n}\n\n/**\n * SliderMark is used to provide names for specific Slider\n * values by defining labels or markers along the track.\n *\n * @see Docs https://chakra-ui.com/slider\n */\nexport const SliderMark = forwardRef<SliderMarkProps, \"div\">((props, ref) => {\n  const { getMarkerProps } = useSliderContext()\n  const styles = useSliderStyles()\n  const markProps = getMarkerProps(props, ref)\n  return (\n    <chakra.div\n      {...markProps}\n      className={cx(\"chakra-slider__marker\", props.className)}\n      __css={styles.mark}\n    />\n  )\n})\n\nSliderMark.displayName = \"SliderMark\"\n","import { usePanEvent } from \"@chakra-ui/react-use-pan-event\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\"\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"\nimport { useSize } from \"@chakra-ui/react-use-size\"\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"\nimport { useLatestRef } from \"@chakra-ui/react-use-latest-ref\"\nimport type { PropGetter, RequiredPropGetter } from \"@chakra-ui/react-types\"\nimport {\n  clampValue,\n  percentToValue,\n  roundValueToStep,\n  valueToPercent,\n} from \"@chakra-ui/number-utils\"\nimport { ariaAttr, callAllHandlers, dataAttr } from \"@chakra-ui/utils\"\nimport { useCallback, useMemo, useRef, useId, useState } from \"react\"\nimport { getIsReversed, getStyles } from \"./slider-utils\"\n\nexport interface UseSliderProps {\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments/decrements have to be made\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider in controlled mode\n   */\n  value?: number\n  /**\n   * The initial value of the slider in uncontrolled mode\n   */\n  defaultValue?: number\n  /**\n   * Orientation of the slider\n   * @default \"horizontal\"\n   */\n  orientation?: \"horizontal\" | \"vertical\"\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * Function called when the user starts selecting a new value (by dragging or clicking)\n   */\n  onChangeStart?(value: number): void\n  /**\n   * Function called when the user is done selecting a new value (by dragging or clicking)\n   */\n  onChangeEnd?(value: number): void\n  /**\n   * Function called whenever the slider value changes  (by dragging or clicking)\n   */\n  onChange?(value: number): void\n  /**\n   * The base `id` to use for the slider and its components\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms\n   */\n  name?: string\n  /**\n   * If `true`, the slider will be disabled\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the slider will be in `read-only` state\n   * @default false\n   */\n  isReadOnly?: boolean\n  /**\n   * Function that returns the `aria-valuetext` for screen readers.\n   * It is mostly used to generate a more human-readable\n   * representation of the value for assistive technologies\n   */\n  getAriaValueText?(value: number): string\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * The static string to use used for `aria-valuetext`\n   */\n  \"aria-valuetext\"?: string\n  /**\n   * The static string to use used for `aria-label`\n   * if no visible label is used.\n   */\n  \"aria-label\"?: string\n  /**\n   * The static string `aria-labelledby` that points to the\n   * ID of the element that serves as label for the slider\n   */\n  \"aria-labelledby\"?: string\n  /**\n   * The writing mode\n   * @default \"ltr\"\n   */\n  direction?: \"ltr\" | \"rtl\"\n}\n\nexport interface SliderState {\n  value: number\n  isFocused: boolean\n  isDragging: boolean\n}\n\nexport interface SliderActions {\n  stepUp(step?: number): void\n  stepDown(step?: number): void\n  reset(): void\n  stepTo(value: number): void\n}\n\n/**\n * React hook that implements an accessible range slider.\n *\n * It is an alternative to `<input type=\"range\" />`, and returns\n * prop getters for the component parts\n *\n * @see Docs     https://chakra-ui.com/docs/form/slider\n * @see WAI-ARIA https://www.w3.org/WAI/ARIA/apg/patterns/slider/\n */\nexport function useSlider(props: UseSliderProps) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props\n\n  const onChangeStart = useCallbackRef(onChangeStartProp)\n  const onChangeEnd = useCallbackRef(onChangeEndProp)\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp)\n\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation,\n  })\n\n  /**\n   * Enable the slider handle controlled and uncontrolled scenarios\n   */\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange,\n  })\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const isInteractive = !(isDisabled || isReadOnly)\n\n  const tenSteps = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  /**\n   * Constrain the value because it can't be less than min\n   * or greater than max\n   */\n  const value = clampValue(computedValue, min, max)\n  const reversedValue = max - value + min\n  const trackValue = isReversed ? reversedValue : value\n  const thumbPercent = valueToPercent(trackValue, min, max)\n\n  const isVertical = orientation === \"vertical\"\n\n  const stateRef = useLatestRef({\n    min,\n    max,\n    step,\n    isDisabled,\n    value,\n    isInteractive,\n    isReversed,\n    isVertical,\n    eventSource: null as \"pointer\" | \"keyboard\" | null,\n    focusThumbOnChange,\n    orientation,\n  })\n\n  /**\n   * Let's keep a reference to the slider track and thumb\n   */\n  const trackRef = useRef<HTMLElement>(null)\n  const thumbRef = useRef<HTMLElement>(null)\n  const rootRef = useRef<HTMLElement>(null)\n\n  /**\n   * Generate unique ids for component parts\n   */\n  const reactId = useId()\n  const uuid = idProp ?? reactId\n  const [thumbId, trackId] = [`slider-thumb-${uuid}`, `slider-track-${uuid}`]\n\n  /**\n   * Get relative value of slider from the event by tracking\n   * how far you clicked within the track to determine the value\n   *\n   * @todo - Refactor this later on to use info from pan session\n   */\n\n  const getValueFromPointer = useCallback(\n    (event: any) => {\n      if (!trackRef.current) return\n\n      const state = stateRef.current\n      state.eventSource = \"pointer\"\n\n      const trackRect = trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = event.touches?.[0] ?? event\n\n      const diff = isVertical\n        ? trackRect.bottom - clientY\n        : clientX - trackRect.left\n\n      const length = isVertical ? trackRect.height : trackRect.width\n      let percent = diff / length\n\n      if (isReversed) {\n        percent = 1 - percent\n      }\n\n      let nextValue = percentToValue(percent, state.min, state.max)\n\n      if (state.step) {\n        nextValue = parseFloat(\n          roundValueToStep(nextValue, state.min, state.step),\n        )\n      }\n\n      nextValue = clampValue(nextValue, state.min, state.max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, stateRef],\n  )\n\n  const constrain = useCallback(\n    (value: number) => {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      value = parseFloat(roundValueToStep(value, state.min, oneStep))\n      value = clampValue(value, state.min, state.max)\n      setValue(value)\n    },\n    [oneStep, setValue, stateRef],\n  )\n\n  const actions: SliderActions = useMemo(\n    () => ({\n      stepUp(step = oneStep) {\n        const next = isReversed ? value - step : value + step\n        constrain(next)\n      },\n      stepDown(step = oneStep) {\n        const next = isReversed ? value + step : value - step\n        constrain(next)\n      },\n      reset() {\n        constrain(defaultValue || 0)\n      },\n      stepTo(value: number) {\n        constrain(value)\n      },\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue],\n  )\n\n  /**\n   * Keyboard interaction to ensure users can operate\n   * the slider using only their keyboard.\n   */\n  const onKeyDown = useCallback(\n    (event: React.KeyboardEvent) => {\n      const state = stateRef.current\n\n      const keyMap: Record<string, React.KeyboardEventHandler> = {\n        ArrowRight: () => actions.stepUp(),\n        ArrowUp: () => actions.stepUp(),\n        ArrowLeft: () => actions.stepDown(),\n        ArrowDown: () => actions.stepDown(),\n        PageUp: () => actions.stepUp(tenSteps),\n        PageDown: () => actions.stepDown(tenSteps),\n        Home: () => constrain(state.min),\n        End: () => constrain(state.max),\n      }\n\n      const action = keyMap[event.key]\n\n      if (action) {\n        event.preventDefault()\n        event.stopPropagation()\n        action(event)\n        state.eventSource = \"keyboard\"\n      }\n    },\n    [actions, constrain, tenSteps, stateRef],\n  )\n\n  /**\n   * ARIA (Optional): To define a human-readable representation of the value,\n   * we allow users pass aria-valuetext.\n   */\n  const valueText = getAriaValueText?.(value) ?? ariaValueText\n\n  /**\n   * Measure the dimensions of the thumb, so\n   * we can center it within the track properly\n   */\n  const thumbSize = useSize(thumbRef)\n\n  /**\n   * Compute styles for all component parts.\n   */\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } =\n    useMemo(() => {\n      const state = stateRef.current\n\n      const thumbRect = thumbSize ?? { width: 0, height: 0 }\n      return getStyles({\n        isReversed,\n        orientation: state.orientation,\n        thumbRects: [thumbRect],\n        thumbPercents: [thumbPercent],\n      })\n    }, [isReversed, thumbSize, thumbPercent, stateRef])\n\n  const focusThumb = useCallback(() => {\n    const state = stateRef.current\n    if (state.focusThumbOnChange) {\n      setTimeout(() => thumbRef.current?.focus())\n    }\n  }, [stateRef])\n\n  useUpdateEffect(() => {\n    const state = stateRef.current\n    focusThumb()\n    if (state.eventSource === \"keyboard\") {\n      onChangeEnd?.(state.value)\n    }\n  }, [value, onChangeEnd])\n\n  function setValueFromPointer(event: MouseEvent | TouchEvent | PointerEvent) {\n    const nextValue = getValueFromPointer(event)\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue)\n    }\n  }\n\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setDragging(true)\n      focusThumb()\n      setValueFromPointer(event)\n      onChangeStart?.(state.value)\n    },\n    onPanSessionEnd() {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setDragging(false)\n      onChangeEnd?.(state.value)\n    },\n    onPan(event) {\n      const state = stateRef.current\n      if (!state.isInteractive) return\n      setValueFromPointer(event)\n    },\n  })\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ...htmlProps,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: {\n          ...props.style,\n          ...rootStyle,\n        },\n      }\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, trackRef),\n        id: trackId,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: {\n          ...props.style,\n          ...trackStyle,\n        },\n      }\n    },\n    [isDisabled, trackId, trackStyle],\n  )\n\n  const getInnerTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        style: {\n          ...props.style,\n          ...innerTrackStyle,\n        },\n      }\n    },\n    [innerTrackStyle],\n  )\n\n  const getThumbProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, thumbRef),\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : undefined,\n        id: thumbId,\n        \"data-active\": dataAttr(isDragging),\n        \"aria-valuetext\": valueText,\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-valuenow\": value,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n        style: {\n          ...props.style,\n          ...getThumbStyle(0),\n        },\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props.onFocus, () => setFocused(true)),\n        onBlur: callAllHandlers(props.onBlur, () => setFocused(false)),\n      }\n    },\n    [\n      isInteractive,\n      thumbId,\n      isDragging,\n      valueText,\n      min,\n      max,\n      value,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n    ],\n  )\n\n  const getMarkerProps: RequiredPropGetter<{ value: number }> = useCallback(\n    (props, ref = null) => {\n      const isInRange = !(props.value < min || props.value > max)\n      const isHighlighted = value >= props.value\n      const markerPercent = valueToPercent(props.value, min, max)\n\n      const markerStyle: React.CSSProperties = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation: orientation,\n          vertical: {\n            bottom: isReversed\n              ? `${100 - markerPercent}%`\n              : `${markerPercent}%`,\n          },\n          horizontal: {\n            left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`,\n          },\n        }),\n      }\n\n      return {\n        ...props,\n        ref,\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props.style,\n          ...markerStyle,\n        },\n      }\n    },\n    [isDisabled, isReversed, max, min, orientation, value],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref,\n        type: \"hidden\",\n        value,\n        name,\n      }\n    },\n    [name, value],\n  )\n\n  const state: SliderState = { value, isFocused, isDragging }\n\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n  }\n}\n\nexport type UseSliderReturn = ReturnType<typeof useSlider>\n\nfunction orient(options: {\n  orientation: UseSliderProps[\"orientation\"]\n  vertical: React.CSSProperties\n  horizontal: React.CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\n/**\n * The browser <input type=\"range\" /> calculates\n * the default value of a slider by using mid-point\n * between the min and the max.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/range\n */\nfunction getDefaultValue(min: number, max: number) {\n  return max < min ? min : min + (max - min) / 2\n}\n"],"mappings":"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","names":["import_react","step","value","props","RangeSlider","RangeSliderThumb","RangeSliderTrack","RangeSliderFilledTrack","RangeSliderMark","import_react_context","import_system","import_react_use_pan_event","import_react_use_callback_ref","import_react_use_update_effect","import_react_use_controllable_state","import_react_use_size","import_react_use_merge_refs","import_number_utils","import_react","_a","state","value","step","props","orient","import_jsx_runtime"]}