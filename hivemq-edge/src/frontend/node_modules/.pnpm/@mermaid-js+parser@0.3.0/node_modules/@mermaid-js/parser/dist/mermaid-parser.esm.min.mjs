import{a as q,b as F}from"./chunks/mermaid-parser.esm.min/chunk-U243OZML.mjs";import{a as H,b as J}from"./chunks/mermaid-parser.esm.min/chunk-2VPUA6L7.mjs";import{a as K,b as Q}from"./chunks/mermaid-parser.esm.min/chunk-2ED2KSS6.mjs";import{a as V,b as W}from"./chunks/mermaid-parser.esm.min/chunk-FZXWD2CL.mjs";import{a as X,b as Y}from"./chunks/mermaid-parser.esm.min/chunk-RTD5PL4J.mjs";import{A as I,B as L,C as R,D as j,E as B,F as z,G as C,H as D,I as b,J as N,K as O,L as U,a as t,g as p,h as m,i as u,j as P,k as f,l as g,m as x,n as h,o as d,p as l,q as G,r as y,s as k,t as A,u as T,v as S,w,x as M,y as v,z as E}from"./chunks/mermaid-parser.esm.min/chunk-NIDWWGYF.mjs";var i={},$={info:t(async()=>{let{createInfoServices:e}=await import("./chunks/mermaid-parser.esm.min/info-U2PFMMS5.mjs"),r=e().Info.parser.LangiumParser;i.info=r},"info"),packet:t(async()=>{let{createPacketServices:e}=await import("./chunks/mermaid-parser.esm.min/packet-U5B2DVJA.mjs"),r=e().Packet.parser.LangiumParser;i.packet=r},"packet"),pie:t(async()=>{let{createPieServices:e}=await import("./chunks/mermaid-parser.esm.min/pie-OX4U37UH.mjs"),r=e().Pie.parser.LangiumParser;i.pie=r},"pie"),architecture:t(async()=>{let{createArchitectureServices:e}=await import("./chunks/mermaid-parser.esm.min/architecture-D37I4WPX.mjs"),r=e().Architecture.parser.LangiumParser;i.architecture=r},"architecture"),gitGraph:t(async()=>{let{createGitGraphServices:e}=await import("./chunks/mermaid-parser.esm.min/gitGraph-OUM7RVR2.mjs"),r=e().GitGraph.parser.LangiumParser;i.gitGraph=r},"gitGraph")};async function ce(e,r){let s=$[e];if(!s)throw new Error(`Unknown diagram type: ${e}`);i[e]||await s();let a=i[e].parse(r);if(a.lexerErrors.length>0||a.parserErrors.length>0)throw new n(a);return a.value}t(ce,"parse");var n=class extends Error{constructor(s){let c=s.lexerErrors.map(o=>o.message).join(`
`),a=s.parserErrors.map(o=>o.message).join(`
`);super(`Parsing failed: ${c} ${a}`);this.result=s}static{t(this,"MermaidParseError")}};export{O as AbstractMermaidTokenBuilder,b as AbstractMermaidValueConverter,m as Architecture,C as ArchitectureGeneratedModule,X as ArchitectureModule,P as Branch,g as Commit,U as CommonTokenBuilder,N as CommonValueConverter,d as GitGraph,D as GitGraphGeneratedModule,q as GitGraphModule,G as Info,j as InfoGeneratedModule,H as InfoModule,k as Merge,R as MermaidGeneratedSharedModule,n as MermaidParseError,T as Packet,w as PacketBlock,B as PacketGeneratedModule,K as PacketModule,v as Pie,z as PieGeneratedModule,V as PieModule,I as PieSection,p as Statement,Y as createArchitectureServices,F as createGitGraphServices,J as createInfoServices,Q as createPacketServices,W as createPieServices,u as isArchitecture,f as isBranch,x as isCommit,h as isCommon,l as isGitGraph,y as isInfo,A as isMerge,S as isPacket,M as isPacketBlock,E as isPie,L as isPieSection,ce as parse};
