{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import { useEffect } from \"react\"\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\"\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\nexport function useTimeout(\n  callback: (...args: any[]) => void,\n  delay: number | null,\n) {\n  const fn = useCallbackRef(callback)\n\n  useEffect(() => {\n    if (delay == null) return undefined\n\n    let timeoutId: number | null = null\n\n    timeoutId = window.setTimeout(() => {\n      fn()\n    }, delay)\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [delay, fn])\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA0B;AAC1B,oCAA+B;AAQxB,SAAS,WACd,UACA,OACA;AACA,QAAM,SAAK,8CAAe,QAAQ;AAElC,8BAAU,MAAM;AACd,QAAI,SAAS;AAAM,aAAO;AAE1B,QAAI,YAA2B;AAE/B,gBAAY,OAAO,WAAW,MAAM;AAClC,SAAG;AAAA,IACL,GAAG,KAAK;AAER,WAAO,MAAM;AACX,UAAI,WAAW;AACb,eAAO,aAAa,SAAS;AAAA,MAC/B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,OAAO,EAAE,CAAC;AAChB;","names":[]}