{"version":3,"sources":["../src/visibility.tsx","../src/use-media-query.ts"],"sourcesContent":["import { useMediaQuery } from \"./use-media-query\"\n\ninterface VisibilityProps {\n  ssr?: boolean\n  breakpoint: string\n  hide?: boolean\n  children: React.ReactNode\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nexport function Visibility(props: VisibilityProps) {\n  const { breakpoint, hide, children, ssr } = props\n  const [show] = useMediaQuery(breakpoint, { ssr })\n  const isVisible = hide ? !show : show\n\n  const rendered = isVisible ? children : null\n  return rendered as React.ReactElement\n}\n","import { useEnvironment } from \"@chakra-ui/react-env\"\nimport { useEffect, useState } from \"react\"\n\nexport type UseMediaQueryOptions = {\n  fallback?: boolean | boolean[]\n  ssr?: boolean\n}\n\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n * @param options the media query options { fallback, ssr }\n *\n * @see Docs https://chakra-ui.com/docs/hooks/use-media-query\n */\nexport function useMediaQuery(\n  query: string | string[],\n  options: UseMediaQueryOptions = {},\n): boolean[] {\n  const { ssr = true, fallback } = options\n\n  const { getWindow } = useEnvironment()\n\n  const queries = Array.isArray(query) ? query : [query]\n\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback]\n  fallbackValues = fallbackValues.filter((v) => v != null) as boolean[]\n\n  const [value, setValue] = useState(() => {\n    return queries.map((query, index) => ({\n      media: query,\n      matches: ssr\n        ? !!fallbackValues[index]\n        : getWindow().matchMedia(query).matches,\n    }))\n  })\n\n  useEffect(() => {\n    const win = getWindow()\n    setValue(\n      queries.map((query) => ({\n        media: query,\n        matches: win.matchMedia(query).matches,\n      })),\n    )\n\n    const mql = queries.map((query) => win.matchMedia(query))\n\n    const handler = (evt: MediaQueryListEvent) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media) return { ...item, matches: evt.matches }\n          return item\n        })\n      })\n    }\n\n    mql.forEach((mql) => {\n      if (typeof mql.addListener === \"function\") {\n        mql.addListener(handler)\n      } else {\n        mql.addEventListener(\"change\", handler)\n      }\n    })\n\n    return () => {\n      mql.forEach((mql) => {\n        if (typeof mql.removeListener === \"function\") {\n          mql.removeListener(handler)\n        } else {\n          mql.removeEventListener(\"change\", handler)\n        }\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getWindow])\n\n  return value.map((item) => item.matches)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,uBAA+B;AAC/B,mBAAoC;AAe7B,SAAS,cACd,OACA,UAAgC,CAAC,GACtB;AACX,QAAM,EAAE,MAAM,MAAM,SAAS,IAAI;AAEjC,QAAM,EAAE,UAAU,QAAI,iCAAe;AAErC,QAAM,UAAU,MAAM,QAAQ,KAAK,IAAI,QAAQ,CAAC,KAAK;AAErD,MAAI,iBAAiB,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ;AACnE,mBAAiB,eAAe,OAAO,CAAC,MAAM,KAAK,IAAI;AAEvD,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAS,MAAM;AACvC,WAAO,QAAQ,IAAI,CAACA,QAAO,WAAW;AAAA,MACpC,OAAOA;AAAA,MACP,SAAS,MACL,CAAC,CAAC,eAAe,KAAK,IACtB,UAAU,EAAE,WAAWA,MAAK,EAAE;AAAA,IACpC,EAAE;AAAA,EACJ,CAAC;AAED,8BAAU,MAAM;AACd,UAAM,MAAM,UAAU;AACtB;AAAA,MACE,QAAQ,IAAI,CAACA,YAAW;AAAA,QACtB,OAAOA;AAAA,QACP,SAAS,IAAI,WAAWA,MAAK,EAAE;AAAA,MACjC,EAAE;AAAA,IACJ;AAEA,UAAM,MAAM,QAAQ,IAAI,CAACA,WAAU,IAAI,WAAWA,MAAK,CAAC;AAExD,UAAM,UAAU,CAAC,QAA6B;AAC5C,eAAS,CAAC,SAAS;AACjB,eAAO,KAAK,MAAM,EAAE,IAAI,CAAC,SAAS;AAChC,cAAI,KAAK,UAAU,IAAI;AAAO,mBAAO,EAAE,GAAG,MAAM,SAAS,IAAI,QAAQ;AACrE,iBAAO;AAAA,QACT,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,QAAI,QAAQ,CAACC,SAAQ;AACnB,UAAI,OAAOA,KAAI,gBAAgB,YAAY;AACzC,QAAAA,KAAI,YAAY,OAAO;AAAA,MACzB,OAAO;AACL,QAAAA,KAAI,iBAAiB,UAAU,OAAO;AAAA,MACxC;AAAA,IACF,CAAC;AAED,WAAO,MAAM;AACX,UAAI,QAAQ,CAACA,SAAQ;AACnB,YAAI,OAAOA,KAAI,mBAAmB,YAAY;AAC5C,UAAAA,KAAI,eAAe,OAAO;AAAA,QAC5B,OAAO;AACL,UAAAA,KAAI,oBAAoB,UAAU,OAAO;AAAA,QAC3C;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EAEF,GAAG,CAAC,SAAS,CAAC;AAEd,SAAO,MAAM,IAAI,CAAC,SAAS,KAAK,OAAO;AACzC;;;ADhEO,SAAS,WAAW,OAAwB;AACjD,QAAM,EAAE,YAAY,MAAM,UAAU,IAAI,IAAI;AAC5C,QAAM,CAAC,IAAI,IAAI,cAAc,YAAY,EAAE,IAAI,CAAC;AAChD,QAAM,YAAY,OAAO,CAAC,OAAO;AAEjC,QAAM,WAAW,YAAY,WAAW;AACxC,SAAO;AACT;","names":["query","mql"]}