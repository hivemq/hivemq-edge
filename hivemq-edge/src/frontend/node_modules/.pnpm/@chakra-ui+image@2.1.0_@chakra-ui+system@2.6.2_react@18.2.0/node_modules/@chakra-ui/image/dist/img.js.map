{"version":3,"sources":["../src/img.tsx","../src/native-image.tsx"],"sourcesContent":["import { HTMLChakraProps, chakra, forwardRef } from \"@chakra-ui/system\"\n\nimport { NativeImageOptions, NativeImage } from \"./native-image\"\n\nexport interface ImgProps extends HTMLChakraProps<\"img\">, NativeImageOptions {}\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nexport const Img = forwardRef<ImgProps, \"img\">((props, ref) => (\n  <chakra.img ref={ref} as={NativeImage} className=\"chakra-image\" {...props} />\n))\n","import { PropsOf, forwardRef } from \"@chakra-ui/system\"\n\nexport interface NativeImageOptions {\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n}\n\ninterface NativeImageProps extends PropsOf<\"img\">, NativeImageOptions {}\n\nexport const NativeImage = forwardRef(function NativeImage(\n  props: NativeImageProps,\n  ref: React.Ref<any>,\n) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props\n  return (\n    <img width={htmlWidth} height={htmlHeight} ref={ref} alt={alt} {...rest} />\n  )\n})\n\nNativeImage.displayName = \"NativeImage\"\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,iBAAoD;;;ACApD,oBAAoC;AAqBhC;AANG,IAAM,kBAAc,0BAAW,SAASC,aAC7C,OACA,KACA;AACA,QAAM,EAAE,WAAW,YAAY,KAAK,GAAG,KAAK,IAAI;AAChD,SACE,4CAAC,SAAI,OAAO,WAAW,QAAQ,YAAY,KAAU,KAAW,GAAG,MAAM;AAE7E,CAAC;AAED,YAAY,cAAc;;;ADdxB,IAAAC,sBAAA;AADK,IAAM,UAAM,2BAA4B,CAAC,OAAO,QACrD,6CAAC,sBAAO,KAAP,EAAW,KAAU,IAAI,aAAa,WAAU,gBAAgB,GAAG,OAAO,CAC5E;","names":["import_system","NativeImage","import_jsx_runtime"]}