{"version":3,"sources":["../src/css-calc.ts"],"sourcesContent":["import { isObject } from \"@chakra-ui/shared-utils\"\nimport { CSSVar } from \"./css-var\"\n\nexport type Operand = string | number | CSSVar\ntype Operands = Operand[]\n\ntype Operator = \"+\" | \"-\" | \"*\" | \"/\"\n\nfunction toRef(operand: Operand): string {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference\n  }\n  return String(operand)\n}\n\nconst toExpr = (operator: Operator, ...operands: Operands) =>\n  operands.map(toRef).join(` ${operator} `).replace(/calc/g, \"\")\n\nconst add = (...operands: Operands) => `calc(${toExpr(\"+\", ...operands)})`\n\nconst subtract = (...operands: Operands) => `calc(${toExpr(\"-\", ...operands)})`\n\nconst multiply = (...operands: Operands) => `calc(${toExpr(\"*\", ...operands)})`\n\nconst divide = (...operands: Operands) => `calc(${toExpr(\"/\", ...operands)})`\n\nconst negate = (x: Operand) => {\n  const value = toRef(x)\n\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`\n  }\n\n  return multiply(value, -1)\n}\n\nexport interface CalcChain {\n  add: (...operands: Operands) => CalcChain\n  subtract: (...operands: Operands) => CalcChain\n  multiply: (...operands: Operands) => CalcChain\n  divide: (...operands: Operands) => CalcChain\n  negate: () => CalcChain\n  toString: () => string\n}\n\nexport const calc = Object.assign(\n  (x: Operand): CalcChain => ({\n    add: (...operands) => calc(add(x, ...operands)),\n    subtract: (...operands) => calc(subtract(x, ...operands)),\n    multiply: (...operands) => calc(multiply(x, ...operands)),\n    divide: (...operands) => calc(divide(x, ...operands)),\n    negate: () => calc(negate(x)),\n    toString: () => x.toString(),\n  }),\n  {\n    add,\n    subtract,\n    multiply,\n    divide,\n    negate,\n  },\n)\n"],"mappings":";AAAA,SAAS,gBAAgB;AAQzB,SAAS,MAAM,SAA0B;AACvC,MAAI,SAAS,OAAO,KAAK,QAAQ,WAAW;AAC1C,WAAO,QAAQ;AAAA,EACjB;AACA,SAAO,OAAO,OAAO;AACvB;AAEA,IAAM,SAAS,CAAC,aAAuB,aACrC,SAAS,IAAI,KAAK,EAAE,KAAK,IAAI,QAAQ,GAAG,EAAE,QAAQ,SAAS,EAAE;AAE/D,IAAM,MAAM,IAAI,aAAuB,QAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC;AAEvE,IAAM,WAAW,IAAI,aAAuB,QAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC;AAE5E,IAAM,WAAW,IAAI,aAAuB,QAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC;AAE5E,IAAM,SAAS,IAAI,aAAuB,QAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC;AAE1E,IAAM,SAAS,CAAC,MAAe;AAC7B,QAAM,QAAQ,MAAM,CAAC;AAErB,MAAI,SAAS,QAAQ,CAAC,OAAO,MAAM,WAAW,KAAK,CAAC,GAAG;AACrD,WAAO,OAAO,KAAK,EAAE,WAAW,GAAG,IAAI,OAAO,KAAK,EAAE,MAAM,CAAC,IAAI,IAAI,KAAK;AAAA,EAC3E;AAEA,SAAO,SAAS,OAAO,EAAE;AAC3B;AAWO,IAAM,OAAO,OAAO;AAAA,EACzB,CAAC,OAA2B;AAAA,IAC1B,KAAK,IAAI,aAAa,KAAK,IAAI,GAAG,GAAG,QAAQ,CAAC;AAAA,IAC9C,UAAU,IAAI,aAAa,KAAK,SAAS,GAAG,GAAG,QAAQ,CAAC;AAAA,IACxD,UAAU,IAAI,aAAa,KAAK,SAAS,GAAG,GAAG,QAAQ,CAAC;AAAA,IACxD,QAAQ,IAAI,aAAa,KAAK,OAAO,GAAG,GAAG,QAAQ,CAAC;AAAA,IACpD,QAAQ,MAAM,KAAK,OAAO,CAAC,CAAC;AAAA,IAC5B,UAAU,MAAM,EAAE,SAAS;AAAA,EAC7B;AAAA,EACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}