{"version":3,"sources":["../src/use-editable-state.tsx","../src/editable-context.ts"],"sourcesContent":["import { useEditableContext } from \"./editable-context\"\n\n/**\n * React hook use to gain access to the editable state and actions.\n */\n\nexport function useEditableState() {\n  const { isEditing, onSubmit, onCancel, onEdit, isDisabled } =\n    useEditableContext()\n\n  return {\n    isEditing,\n    onSubmit,\n    onCancel,\n    onEdit,\n    isDisabled,\n  }\n}\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\nimport { UseEditableReturn } from \"./use-editable\"\n\nexport const [EditableStylesProvider, useEditableStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `EditableStylesContext`,\n  errorMessage: `useEditableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Editable />\" `,\n})\n\nexport type EditableContext = Omit<UseEditableReturn, \"htmlProps\">\n\nexport const [EditableProvider, useEditableContext] =\n  createContext<EditableContext>({\n    name: \"EditableContext\",\n    errorMessage:\n      \"useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`\",\n  })\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,2BAA8B;AAIvB,IAAM,CAAC,wBAAwB,iBAAiB,QAAI,oCAEzD;AAAA,EACA,MAAM;AAAA,EACN,cAAc;AAChB,CAAC;AAIM,IAAM,CAAC,kBAAkB,kBAAkB,QAChD,oCAA+B;AAAA,EAC7B,MAAM;AAAA,EACN,cACE;AACJ,CAAC;;;ADZI,SAAS,mBAAmB;AACjC,QAAM,EAAE,WAAW,UAAU,UAAU,QAAQ,WAAW,IACxD,mBAAmB;AAErB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":[]}