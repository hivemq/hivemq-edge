{"version":3,"sources":["../src/editable-input.tsx","../src/editable-context.ts","../src/shared.ts"],"sourcesContent":["import { chakra, forwardRef, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { useEditableContext, useEditableStyles } from \"./editable-context\"\nimport { commonStyles } from \"./shared\"\n\nexport interface EditableInputProps extends HTMLChakraProps<\"input\"> {}\n/**\n * EditableInput\n *\n * The input used in the `edit` mode\n */\n\nexport const EditableInput = forwardRef<EditableInputProps, \"input\">(\n  function EditableInput(props, ref) {\n    const { getInputProps } = useEditableContext()\n    const styles = useEditableStyles()\n\n    const inputProps = getInputProps(props, ref)\n    const _className = cx(\"chakra-editable__input\", props.className)\n\n    return (\n      <chakra.input\n        {...inputProps}\n        __css={{\n          outline: 0,\n          ...commonStyles,\n          ...styles.input,\n        }}\n        className={_className}\n      />\n    )\n  },\n)\nEditableInput.displayName = \"EditableInput\"\n","import { createContext } from \"@chakra-ui/react-context\"\nimport { SystemStyleObject } from \"@chakra-ui/system\"\nimport { UseEditableReturn } from \"./use-editable\"\n\nexport const [EditableStylesProvider, useEditableStyles] = createContext<\n  Record<string, SystemStyleObject>\n>({\n  name: `EditableStylesContext`,\n  errorMessage: `useEditableStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Editable />\" `,\n})\n\nexport type EditableContext = Omit<UseEditableReturn, \"htmlProps\">\n\nexport const [EditableProvider, useEditableContext] =\n  createContext<EditableContext>({\n    name: \"EditableContext\",\n    errorMessage:\n      \"useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`\",\n  })\n","import { SystemStyleObject } from \"@chakra-ui/system\"\n\nexport const commonStyles: SystemStyleObject = {\n  fontSize: \"inherit\",\n  fontWeight: \"inherit\",\n  textAlign: \"inherit\",\n  bg: \"transparent\",\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoD;AACpD,0BAAmB;;;ACDnB,2BAA8B;AAIvB,IAAM,CAAC,wBAAwB,iBAAiB,QAAI,oCAEzD;AAAA,EACA,MAAM;AAAA,EACN,cAAc;AAChB,CAAC;AAIM,IAAM,CAAC,kBAAkB,kBAAkB,QAChD,oCAA+B;AAAA,EAC7B,MAAM;AAAA,EACN,cACE;AACJ,CAAC;;;AChBI,IAAM,eAAkC;AAAA,EAC7C,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,IAAI;AACN;;;AFcM;AATC,IAAM,oBAAgB;AAAA,EAC3B,SAASA,eAAc,OAAO,KAAK;AACjC,UAAM,EAAE,cAAc,IAAI,mBAAmB;AAC7C,UAAM,SAAS,kBAAkB;AAEjC,UAAM,aAAa,cAAc,OAAO,GAAG;AAC3C,UAAM,iBAAa,wBAAG,0BAA0B,MAAM,SAAS;AAE/D,WACE;AAAA,MAAC,qBAAO;AAAA,MAAP;AAAA,QACE,GAAG;AAAA,QACJ,OAAO;AAAA,UACL,SAAS;AAAA,UACT,GAAG;AAAA,UACH,GAAG,OAAO;AAAA,QACZ;AAAA,QACA,WAAW;AAAA;AAAA,IACb;AAAA,EAEJ;AACF;AACA,cAAc,cAAc;","names":["EditableInput"]}