{"version":3,"sources":["../src/control-box.tsx"],"sourcesContent":["import { chakra, SystemStyleObject, HTMLChakraProps } from \"@chakra-ui/system\"\n\nexport interface ControlBoxOptions {\n  type?: \"checkbox\" | \"radio\"\n  _hover?: SystemStyleObject\n  _invalid?: SystemStyleObject\n  _disabled?: SystemStyleObject\n  _focus?: SystemStyleObject\n  _checked?: SystemStyleObject\n  _child?: SystemStyleObject\n  _checkedAndChild?: SystemStyleObject\n  _checkedAndDisabled?: SystemStyleObject\n  _checkedAndFocus?: SystemStyleObject\n  _checkedAndHover?: SystemStyleObject\n}\n\nexport type IControlBox = ControlBoxOptions\n\ninterface BaseControlProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof ControlBoxOptions> {}\n\nexport interface ControlBoxProps extends BaseControlProps, ControlBoxOptions {}\n\n/**\n * @deprecated This component will be removed in the next major release.\n */\nexport const ControlBox: React.FC<ControlBoxProps> = (props) => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = { opacity: 0 },\n    _checkedAndChild = { opacity: 1 },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props\n\n  const checkedAndDisabled = `input[type=${type}]:checked:disabled + &`\n  const checkedAndHover = `input[type=${type}]:checked:hover:not(:disabled) + &`\n  const checkedAndFocus = `input[type=${type}]:checked:focus + &`\n  const disabled = `input[type=${type}]:disabled + &`\n  const focus = `input[type=${type}]:focus + &`\n  const hover = `input[type=${type}]:hover:not(:disabled):not(:checked) + &`\n  const checked = `input[type=${type}]:checked + &, input[type=${type}][aria-checked=mixed] + &`\n  const invalid = `input[type=${type}][aria-invalid=true] + &`\n  const child = `& > *`\n\n  return (\n    <chakra.div\n      {...rest}\n      aria-hidden\n      __css={{\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        transitionProperty: \"common\",\n        transitionDuration: \"fast\",\n        flexShrink: 0,\n        [focus]: _focus,\n        [hover]: _hover,\n        [disabled]: _disabled,\n        [invalid]: _invalid,\n        [checkedAndDisabled]: _checkedAndDisabled,\n        [checkedAndFocus]: _checkedAndFocus,\n        [checkedAndHover]: _checkedAndHover,\n        [child]: _child,\n        [checked]: {\n          ..._checked,\n          [child]: _checkedAndChild,\n        },\n      }}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nControlBox.displayName = \"ControlBox\"\n\nexport default ControlBox\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2D;AAsDvD;AA5BG,IAAM,aAAwC,CAAC,UAAU;AAC9D,QAAM;AAAA,IACJ,OAAO;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,SAAS,EAAE,SAAS,EAAE;AAAA,IACtB,mBAAmB,EAAE,SAAS,EAAE;AAAA,IAChC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EACL,IAAI;AAEJ,QAAM,qBAAqB,cAAc;AACzC,QAAM,kBAAkB,cAAc;AACtC,QAAM,kBAAkB,cAAc;AACtC,QAAM,WAAW,cAAc;AAC/B,QAAM,QAAQ,cAAc;AAC5B,QAAM,QAAQ,cAAc;AAC5B,QAAM,UAAU,cAAc,iCAAiC;AAC/D,QAAM,UAAU,cAAc;AAC9B,QAAM,QAAQ;AAEd,SACE;AAAA,IAAC,qBAAO;AAAA,IAAP;AAAA,MACE,GAAG;AAAA,MACJ,eAAW;AAAA,MACX,OAAO;AAAA,QACL,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,gBAAgB;AAAA,QAChB,oBAAoB;AAAA,QACpB,oBAAoB;AAAA,QACpB,YAAY;AAAA,QACZ,CAAC,KAAK,GAAG;AAAA,QACT,CAAC,KAAK,GAAG;AAAA,QACT,CAAC,QAAQ,GAAG;AAAA,QACZ,CAAC,OAAO,GAAG;AAAA,QACX,CAAC,kBAAkB,GAAG;AAAA,QACtB,CAAC,eAAe,GAAG;AAAA,QACnB,CAAC,eAAe,GAAG;AAAA,QACnB,CAAC,KAAK,GAAG;AAAA,QACT,CAAC,OAAO,GAAG;AAAA,UACT,GAAG;AAAA,UACH,CAAC,KAAK,GAAG;AAAA,QACX;AAAA,MACF;AAAA,MAEC;AAAA;AAAA,EACH;AAEJ;AAEA,WAAW,cAAc;AAEzB,IAAO,sBAAQ;","names":[]}