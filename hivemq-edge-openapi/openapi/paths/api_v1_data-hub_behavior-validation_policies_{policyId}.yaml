delete:
  description: |-
    Deletes an existing policy. 

     
  operationId: deleteBehaviorPolicy
  parameters:
    - description: The identifier of the policy to delete.
      example: policy1
      in: path
      name: policyId
      required: true
      schema:
        type: string
    - description: The entity tag
      in: header
      name: If-Match
      required: false
      schema:
        type: string
  responses:
    '204':
      description: Success, no response body
    '400':
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "../components/schemas/errors/http/UrlParameterMissingError.yaml"
            discriminator:
              propertyName: type
              mapping:
                https://hivemq.com/edge/api/model/UrlParameterMissingError: "../components/schemas/errors/http/UrlParameterMissingError.yaml"
      description: URL parameter missing
    '404':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/datahub/PolicyNotFoundError.yaml"
      description: Behavior policy not found
    '412':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/PreconditionFailedError.yaml"
      description: Precondition failed
    '500':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/InternalServerError.yaml"
      description: Internal server error
    '503':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/TemporaryNotAvailableError.yaml"
      description: Request resource temporary unavailable
  summary: Delete a behavior policy
  tags:
    - Data Hub - Behavior Policies
get:
  description: |-
    Get a specific policy. 

     This endpoint returns the content of the policy with the content-type `application/json`. 

     
  operationId: getBehaviorPolicy
  parameters:
    - description: The identifier of the policy.
      example: policy1
      in: path
      name: policyId
      required: true
      schema:
        type: string
    - description: >-
        Comma-separated list of fields to include in the response. Allowed
        values are: id, createdAt, lastUpdatedAt, deserialization, matching,
        behavior, onTransitions
      example: id,createdAt
      in: query
      name: fields
      schema:
        type: string
  responses:
    '200':
      content:
        application/json:
          examples:
            get-response:
              description: Get Policy
              summary: Get  Policy
              value:
                id: wildcardLogBehaviorPolicy
                createdAt: '2023-08-23T10:14:38.447Z'
                lastUpdatedAt: '2023-08-23T10:14:38.447Z'
                matching:
                  clientIdRegex: .*
                deserialization:
                  publish:
                    schema:
                      schemaId: schema
                      version: latest
                  will:
                    schema:
                      schemaId: schema
                      version: latest
                    arguments: {}
                behavior:
                  id: Mqtt.events
                  arguments: {}
                onTransitions:
                  - fromState: Any.*
                    toState: Any.*
                    Event.OnAny:
                      pipeline:
                        - id: log1
                          functionId: System.log
                          arguments:
                            level: INFO
                            message: transition happened
          schema:
            $ref: ../components/schemas/BehaviorPolicy.yaml
      description: Success
    '400':
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "../components/schemas/errors/http/UrlParameterMissingError.yaml"
            discriminator:
              propertyName: type
              mapping:
                https://hivemq.com/edge/api/model/UrlParameterMissingError: "../components/schemas/errors/http/UrlParameterMissingError.yaml"
      description: Bad request
    '404':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/datahub/BehaviorPolicyNotFoundError.yaml"
      description: Policy not found
    '500':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/InternalServerError.yaml"
      description: Internal server error
    '503':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/TemporaryNotAvailableError.yaml"
      description: Request resource temporary unavailable
  summary: Get a  policy
  tags:
    - Data Hub - Behavior Policies
put:
  description: >-
    Update a behavior policy


    The path parameter 'policyId' must match the 'id' of the policy in the
    request body.
     
  operationId: updateBehaviorPolicy
  parameters:
    - description: The identifier of the policy.
      example: policy1
      in: path
      name: policyId
      required: true
      schema:
        type: string
    - description: The entity tag
      in: header
      name: If-Match
      required: false
      schema:
        type: string
  requestBody:
    content:
      application/json:
        example:
          id: wildcardLogBehaviorPolicy
          createdAt: '2023-08-23T10:14:38.447Z'
          matching:
            clientIdRegex: .*
          deserialization:
            publish:
              schema:
                schemaId: schema
                version: latest
            will:
              schema:
                schemaId: schema
                version: latest
          behavior:
            id: Mqtt.events
            arguments: {}
          onTransitions:
            - fromState: Any.*
              toState: Any.*
              Event.OnAny:
                pipeline:
                  - id: log1
                    functionId: System.log
                    arguments:
                      level: INFO
                      message: transition happened
        schema:
          $ref: ../components/schemas/BehaviorPolicy.yaml
    description: The policy that should be updated.
    required: true
  responses:
    '200':
      content:
        application/json:
          examples:
            response-example:
              description: Example response.
              summary: Policy was updated successfully
              value:
                id: wildcardLogBehaviorPolicy
                createdAt: '2023-08-23T10:14:38.447Z'
                lastUpdatedAt: '2023-09-26T11:17:22.311Z'
                matching:
                  clientIdRegex: .*
                deserialization:
                  publish:
                    schema:
                      schemaId: schema
                      version: latest
                  will:
                    schema:
                      schemaId: schema
                      version: latest
                    arguments: {}
                behavior:
                  id: Mqtt.events
                  arguments: {}
                onTransitions:
                  - fromState: Any.*
                    toState: Any.*
                    Event.OnAny:
                      pipeline:
                        - id: log1
                          functionId: System.log
                          arguments:
                            level: INFO
                            message: transition happened
          schema:
            $ref: ../components/schemas/BehaviorPolicy.yaml
      description: Success
    '400':
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "../components/schemas/errors/http/RequestBodyMissingError.yaml"
              - $ref: "../components/schemas/errors/http/UrlParameterMissingError.yaml"
              - $ref: "../components/schemas/errors/datahub/BehaviorPolicyCreationFailureError.yaml"
              - $ref: "../components/schemas/errors/datahub/BehaviorPolicyInvalidErrors.yaml"
              - $ref: "../components/schemas/errors/datahub/BehaviorPolicyUpdateFailureError.yaml"
              - $ref: "../components/schemas/errors/datahub/PolicyIdMismatchError.yaml"
            discriminator:
              propertyName: type
              mapping:
                https://hivemq.com/edge/api/model/RequestBodyMissingError: "../components/schemas/errors/http/RequestBodyMissingError.yaml"
                https://hivemq.com/edge/api/model/UrlParameterMissingError: "../components/schemas/errors/http/UrlParameterMissingError.yaml"
                https://hivemq.com/edge/api/model/BehaviorPolicyCreationFailureError: "../components/schemas/errors/datahub/BehaviorPolicyCreationFailureError.yaml"
                https://hivemq.com/edge/api/model/BehaviorPolicyInvalidErrors: "../components/schemas/errors/datahub/BehaviorPolicyInvalidErrors.yaml"
                https://hivemq.com/edge/api/model/BehaviorPolicyUpdateFailureError: "../components/schemas/errors/datahub/BehaviorPolicyUpdateFailureError.yaml"
                https://hivemq.com/edge/api/model/PolicyIdMismatchError: "../components/schemas/errors/datahub/PolicyIdMismatchError.yaml"
      description: Behavior policy creation failed
    '404':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/datahub/BehaviorPolicyNotFoundError.yaml"
      description: Data policy not found
    '412':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/PreconditionFailedError.yaml"
      description: Precondition failed
    '500':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/InternalServerError.yaml"
      description: Internal server error
    '503':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/TemporaryNotAvailableError.yaml"
      description: Request resource temporary unavailable
    '507':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/InsufficientStorageError.yaml"
      description: Insufficient storage
  summary: Update an existing behavior policy
  tags:
    - Data Hub - Behavior Policies
