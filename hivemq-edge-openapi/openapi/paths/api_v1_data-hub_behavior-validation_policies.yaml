get:
  description: |-
    Get all policies. 

     This endpoint returns the content of the policies with the content-type `application/json`. 

     
  operationId: getAllBehaviorPolicies
  parameters:
    - description: >-
        Comma-separated list of fields to include in the response. Allowed
        values are: id, createdAt, lastUpdatedAt, deserialization, matching,
        behavior, onTransitions
      example: id,createdAt
      in: query
      name: fields
      schema:
        type: string
    - description: >-
        Comma-separated list of policy ids used for filtering. Multiple filters
        can be applied together.
      example: policy1,policy2
      in: query
      name: policyIds
      schema:
        type: string
    - description: >-
        Comma-separated list of MQTT client identifiers that are used for
        filtering. Client identifiers are matched by the retrieved policies.
        Multiple filters can be applied together.
      example: client1,client2
      in: query
      name: clientIds
      schema:
        type: string
    - description: >-
        Specifies the page size for the returned results. Has to be between 10
        and 500. Default page size is 50. Limit is ignored if the 'topic' query
        parameter is set.
      example: 100
      in: query
      name: limit
      schema:
        type: integer
        format: int32
    - description: >-
        The cursor that has been returned by the previous result page. Do not
        pass this parameter if you want to fetch the first page.
      in: query
      name: cursor
      schema:
        type: string
  responses:
    '200':
      content:
        application/json:
          examples:
            list-response-a:
              description: Example response with multiple policies. No more pages left
              summary: Multiple results, last page
              value:
                items:
                  - id: P18
                    createdAt: '2023-07-28T07:27:24.531Z'
                    lastUpdatedAt: '2023-07-28T07:27:24.531Z'
                    matching:
                      clientIdRegex: .*
                    behavior:
                      id: Mqtt.events
                      arguments: {}
                    onTransitions:
                      - fromState: Any.*
                        toState: Any.*
                        Event.OnAny:
                          pipeline:
                            - id: log1
                              functionId: System.log
                              arguments:
                                level: INFO
                                message: transition happened
                  - id: P19
                    createdAt: '2023-07-28T07:27:24.532Z'
                    lastUpdatedAt: '2023-07-28T07:27:24.532Z'
                    matching:
                      clientIdRegex: .*
                    behavior:
                      id: Mqtt.events
                      arguments: {}
                    onTransitions:
                      - fromState: Any.*
                        toState: Any.*
                        Event.OnAny:
                          pipeline:
                            - id: log1
                              functionId: System.log
                              arguments:
                                level: INFO
                                message: transition happened
            list-response-b:
              description: Example response with multiple policies. More pages left
              summary: Multiple results, more pages left
              value:
                items:
                  - id: P0
                    createdAt: '2023-07-28T07:44:35.382Z'
                    lastUpdatedAt: '2023-07-28T07:44:35.382Z'
                    matching:
                      clientIdRegex: .*
                    behavior:
                      id: Mqtt.events
                      arguments: {}
                    onTransitions:
                      - fromState: Any.*
                        toState: Any.*
                        Event.OnAny:
                          pipeline:
                            - id: log1
                              functionId: System.log
                              arguments:
                                level: INFO
                                message: transition happened
                  - id: P1
                    createdAt: '2023-07-28T07:44:35.405Z'
                    lastUpdatedAt: '2023-07-28T07:44:35.405Z'
                    matching:
                      clientIdRegex: .*
                    behavior:
                      id: Mqtt.events
                      arguments: {}
                    onTransitions:
                      - fromState: Any.*
                        toState: Any.*
                        Event.OnAny:
                          pipeline:
                            - id: log1
                              functionId: System.log
                              arguments:
                                level: INFO
                                message: transition happened
                _links:
                  next: >-
                    /api/v1/data-hub/behavior-validation/policies?cursor=a-Wva-QBoB5yAX_HJ0WRQ8ng==&limit=2
            list-response-c:
              description: >-
                Example response with requested fields and multiple policies.
                More pages left
              summary: Multiple results, requested 'id' field
              value:
                items:
                  - id: P0
                  - id: P1
                _links:
                  next: >-
                    /api/v1/data-hub/behavior-validation/policies?cursor=a-Wva-QBoB5yAX_HZxWBM9mQ==&limit=2&fields=id
            list-response-d:
              description: Example response with a single policy
              summary: Single Result
              value:
                items:
                  - id: policy1
                    createdAt: '2023-07-28T07:34:14.150Z'
                    lastUpdatedAt: '2023-07-28T07:34:14.150Z'
                    matching:
                      clientIdRegex: .*
                    behavior:
                      id: Mqtt.events
                      arguments: {}
                    onTransitions:
                      - fromState: Any.*
                        toState: Any.*
                        Event.OnAny:
                          pipeline:
                            - id: log1
                              functionId: System.log
                              arguments:
                                level: INFO
                                message: transition happened
          schema:
            $ref: ../components/schemas/BehaviorPolicyList.yaml
      description: Success
    '400':
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "../components/schemas/errors/http/InvalidQueryParameterError.yaml"
            discriminator:
              propertyName: type
      description: URL parameter missing
    '503':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/TemporaryNotAvailableError.yaml"
      description: Request resource temporary unavailable
  summary: Get all policies
  tags:
    - Data Hub - Behavior Policies
post:
  description: |+
    Create a behavior policy

  operationId: createBehaviorPolicy
  requestBody:
    content:
      application/json:
        example:
          id: wildcardLogBehaviorPolicy
          createdAt: '2023-08-23T10:14:38.447Z'
          matching:
            clientIdRegex: .*
          deserialization:
            publish:
              schema:
                schemaId: schema
                version: latest
            will:
              schema:
                schemaId: schema
                version: latest
          behavior:
            id: Mqtt.events
            arguments: {}
          onTransitions:
            - fromState: Any.*
              toState: Any.*
              Event.OnAny:
                pipeline:
                  - id: log1
                    functionId: System.log
                    arguments:
                      level: INFO
                      message: transition happened
        schema:
          $ref: ../components/schemas/BehaviorPolicy.yaml
    description: The policy that should be created.
    required: true
  responses:
    '201':
      content:
        application/json:
          examples:
            response-example:
              description: Example response.
              summary: Policy was created successfully
              value:
                id: wildcardLogBehaviorPolicy
                createdAt: '2023-08-23T10:14:38.447Z'
                lastUpdatedAt: '2023-08-23T10:14:38.447Z'
                matching:
                  clientIdRegex: .*
                deserialization:
                  publish:
                    schema:
                      schemaId: schema
                      version: latest
                  will:
                    schema:
                      schemaId: schema
                      version: latest
                    arguments: {}
                behavior:
                  id: Mqtt.events
                  arguments: {}
                onTransitions:
                  - fromState: Any.*
                    toState: Any.*
                    Event.OnAny:
                      pipeline:
                        - id: log1
                          functionId: System.log
                          arguments:
                            level: INFO
                            message: transition happened
          schema:
            $ref: ../components/schemas/BehaviorPolicy.yaml
      description: Success
    '400':
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "../components/schemas/errors/http/RequestBodyMissingError.yaml"
              - $ref: "../components/schemas/errors/datahub/BehaviorPolicyValidationErrors.yaml"
            discriminator:
              propertyName: type
      description: Policy creation failed
    '409':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ProblemDetails.yaml
      description: Already exists
    '500':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ProblemDetails.yaml
      description: Internal error
    '503':
      content:
        application/json:
          schema:
            $ref: "../components/schemas/errors/http/TemporaryNotAvailableError.yaml"
      description: Temporarily unavailable
    '507':
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ProblemDetails.yaml
      description: Insufficient storage error
  summary: Create a new policy
  tags:
    - Data Hub - Behavior Policies
