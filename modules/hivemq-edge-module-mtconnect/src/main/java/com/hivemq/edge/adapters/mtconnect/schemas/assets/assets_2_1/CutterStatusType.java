//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.hivemq.edge.adapters.mtconnect.schemas.assets.assets_2_1;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * {{block(CutterStatus)}} provides the status of the assembly and
 *         {{term(organize)}} one or more {{block(Status)}} entities. See
 *         {{sect(Status)}}. The following combinations of {{block(Status)}}
 *         entities **MUST NOT** occur for a {{block(CutterStatus)}}: * `NEW`
 *         **MUST NOT** be used with `USED`, `RECONDITIONED`, or `EXPIRED`. *
 *         `UNKNOWN` **MUST NOT** be used with any other status. * `ALLOCATED` and
 *         `UNALLOCATED` **MUST NOT** be used together. * `AVAILABLE` and
 *         `UNAVAILABLE` **MUST NOT** be used together. * If the tool is `EXPIRED`,
 *         `BROKEN`, or `NOT_REGISTERED` it **MUST NOT** be `AVAILABLE`.
 * 
 * <p>Java class for CutterStatusType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="CutterStatusType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="Status" type="{urn:mtconnect.org:MTConnectAssets:2.1}CutterStatusValueType" maxOccurs="unbounded"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@com.fasterxml.jackson.annotation.JsonTypeName(value = "CutterStatusType")
@XmlType(name = "CutterStatusType", propOrder = {
    "status"
})
public class CutterStatusType {

    /**
     * status of the cutting tool.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "Status")
    @XmlElement(name = "Status", required = true)
    @XmlSchemaType(name = "string")
    protected List<CutterStatusValueType> status;

    /**
     * status of the cutting tool.
     * 
     * Gets the value of the status property.
     * 
     * <p>This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the status property.</p>
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * </p>
     * <pre>
     * getStatus().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CutterStatusValueType }
     * </p>
     * 
     * 
     * @return
     *     The value of the status property.
     */
    public List<CutterStatusValueType> getStatus() {
        if (status == null) {
            status = new ArrayList<>();
        }
        return this.status;
    }

}
