//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.hivemq.edge.adapters.mtconnect.schemas.devices.devices_1_6;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * The semantic definition of an entry
 * 
 * <p>Java class for EntryDefinitionType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="EntryDefinitionType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="Description" type="{urn:mtconnect.org:MTConnectDevices:1.6}DataItemDescriptionType" minOccurs="0"/>
 *         <element name="CellDefinitions" type="{urn:mtconnect.org:MTConnectDevices:1.6}CellDefinitionsType" minOccurs="0"/>
 *       </sequence>
 *       <attGroup ref="{urn:mtconnect.org:MTConnectDevices:1.6}DefinitionAttrsType"/>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@com.fasterxml.jackson.annotation.JsonTypeName(value = "EntryDefinitionType")
@XmlType(name = "EntryDefinitionType", propOrder = {
    "description",
    "cellDefinitions"
})
public class EntryDefinitionType {

    /**
     * An XML element that can contain any descriptive content.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "Description")
    @XmlElement(name = "Description")
    protected DataItemDescriptionType description;
    /**
     * The CellDefinitions aggregates CellDefinition.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "CellDefinitions")
    @XmlElement(name = "CellDefinitions")
    protected CellDefinitionsType cellDefinitions;
    /**
     * unique key
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "key")
    @XmlAttribute(name = "key", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String key;
    /**
     * The type of either a structural element or a dataitem being measured.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "type")
    @XmlAttribute(name = "type")
    protected String type;
    /**
     * A sub-categorization of the data item type.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "subType")
    @XmlAttribute(name = "subType")
    protected String subType;
    /**
     * The unit of measurement for the reported value of the data item.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "units")
    @XmlAttribute(name = "units")
    protected String units;

    /**
     * An XML element that can contain any descriptive content.
     * 
     * @return
     *     possible object is
     *     {@link DataItemDescriptionType }
     *     
     */
    public DataItemDescriptionType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link DataItemDescriptionType }
     *     
     * @see #getDescription()
     */
    public void setDescription(DataItemDescriptionType value) {
        this.description = value;
    }

    /**
     * The CellDefinitions aggregates CellDefinition.
     * 
     * @return
     *     possible object is
     *     {@link CellDefinitionsType }
     *     
     */
    public CellDefinitionsType getCellDefinitions() {
        return cellDefinitions;
    }

    /**
     * Sets the value of the cellDefinitions property.
     * 
     * @param value
     *     allowed object is
     *     {@link CellDefinitionsType }
     *     
     * @see #getCellDefinitions()
     */
    public void setCellDefinitions(CellDefinitionsType value) {
        this.cellDefinitions = value;
    }

    /**
     * unique key
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getKey() {
        return key;
    }

    /**
     * Sets the value of the key property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getKey()
     */
    public void setKey(String value) {
        this.key = value;
    }

    /**
     * The type of either a structural element or a dataitem being measured.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getType()
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * A sub-categorization of the data item type.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSubType() {
        return subType;
    }

    /**
     * Sets the value of the subType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getSubType()
     */
    public void setSubType(String value) {
        this.subType = value;
    }

    /**
     * The unit of measurement for the reported value of the data item.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUnits() {
        return units;
    }

    /**
     * Sets the value of the units property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getUnits()
     */
    public void setUnits(String value) {
        this.units = value;
    }

}
