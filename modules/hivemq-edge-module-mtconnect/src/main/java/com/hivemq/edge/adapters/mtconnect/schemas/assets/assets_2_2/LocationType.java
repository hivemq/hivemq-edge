//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.hivemq.edge.adapters.mtconnect.schemas.assets.assets_2_2;

import java.math.BigInteger;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlType;
import jakarta.xml.bind.annotation.XmlValue;
import jakarta.xml.bind.annotation.adapters.CollapsedStringAdapter;
import jakarta.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * Description
 * 
 * <p>Java class for LocationType complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="LocationType">
 *   <simpleContent>
 *     <extension base="<urn:mtconnect.org:MTConnectAssets:2.2>LocationValueType">
 *       <attribute name="type" use="required" type="{urn:mtconnect.org:MTConnectAssets:2.2}LocationsTypeType" />
 *       <attribute name="negativeOverlap" type="{urn:mtconnect.org:MTConnectAssets:2.2}OverlapType" />
 *       <attribute name="positiveOverlap" type="{urn:mtconnect.org:MTConnectAssets:2.2}OverlapType" />
 *       <attribute name="turret" type="{urn:mtconnect.org:MTConnectAssets:2.2}LocationRelationType" />
 *       <attribute name="toolMagazine" type="{urn:mtconnect.org:MTConnectAssets:2.2}LocationRelationType" />
 *       <attribute name="toolRack" type="{urn:mtconnect.org:MTConnectAssets:2.2}LocationRelationType" />
 *       <attribute name="toolBar" type="{urn:mtconnect.org:MTConnectAssets:2.2}LocationRelationType" />
 *       <attribute name="automaticToolChanger" type="{urn:mtconnect.org:MTConnectAssets:2.2}LocationRelationType" />
 *     </extension>
 *   </simpleContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@com.fasterxml.jackson.annotation.JsonTypeName(value = "LocationType")
@XmlType(name = "LocationType", propOrder = {
    "value"
})
public class LocationType {

    /**
     * The tool location
     * 
     */
    @XmlValue
    protected BigInteger value;
    /**
     * The type of location
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "type")
    @XmlAttribute(name = "type", required = true)
    protected LocationsTypeType type;
    /**
     * number of locations at lower index values from this location.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "negativeOverlap")
    @XmlAttribute(name = "negativeOverlap")
    protected BigInteger negativeOverlap;
    /**
     * number of locations at higher index value from this location.
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "positiveOverlap")
    @XmlAttribute(name = "positiveOverlap")
    protected BigInteger positiveOverlap;
    /**
     * Description
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "turret")
    @XmlAttribute(name = "turret")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String turret;
    /**
     * Description
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "toolMagazine")
    @XmlAttribute(name = "toolMagazine")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String toolMagazine;
    /**
     * Description
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "toolRack")
    @XmlAttribute(name = "toolRack")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String toolRack;
    /**
     * The tool bar associated with a tool
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "toolBar")
    @XmlAttribute(name = "toolBar")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String toolBar;
    /**
     * Description
     * 
     */
    @com.fasterxml.jackson.annotation.JsonProperty(value = "automaticToolChanger")
    @XmlAttribute(name = "automaticToolChanger")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String automaticToolChanger;

    /**
     * The tool location
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getValue() {
        return value;
    }

    /**
     * Sets the value of the value property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     * @see #getValue()
     */
    public void setValue(BigInteger value) {
        this.value = value;
    }

    /**
     * The type of location
     * 
     * @return
     *     possible object is
     *     {@link LocationsTypeType }
     *     
     */
    public LocationsTypeType getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link LocationsTypeType }
     *     
     * @see #getType()
     */
    public void setType(LocationsTypeType value) {
        this.type = value;
    }

    /**
     * number of locations at lower index values from this location.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNegativeOverlap() {
        return negativeOverlap;
    }

    /**
     * Sets the value of the negativeOverlap property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     * @see #getNegativeOverlap()
     */
    public void setNegativeOverlap(BigInteger value) {
        this.negativeOverlap = value;
    }

    /**
     * number of locations at higher index value from this location.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getPositiveOverlap() {
        return positiveOverlap;
    }

    /**
     * Sets the value of the positiveOverlap property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     * @see #getPositiveOverlap()
     */
    public void setPositiveOverlap(BigInteger value) {
        this.positiveOverlap = value;
    }

    /**
     * Description
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTurret() {
        return turret;
    }

    /**
     * Sets the value of the turret property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getTurret()
     */
    public void setTurret(String value) {
        this.turret = value;
    }

    /**
     * Description
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToolMagazine() {
        return toolMagazine;
    }

    /**
     * Sets the value of the toolMagazine property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getToolMagazine()
     */
    public void setToolMagazine(String value) {
        this.toolMagazine = value;
    }

    /**
     * Description
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToolRack() {
        return toolRack;
    }

    /**
     * Sets the value of the toolRack property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getToolRack()
     */
    public void setToolRack(String value) {
        this.toolRack = value;
    }

    /**
     * The tool bar associated with a tool
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getToolBar() {
        return toolBar;
    }

    /**
     * Sets the value of the toolBar property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getToolBar()
     */
    public void setToolBar(String value) {
        this.toolBar = value;
    }

    /**
     * Description
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAutomaticToolChanger() {
        return automaticToolChanger;
    }

    /**
     * Sets the value of the automaticToolChanger property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     * @see #getAutomaticToolChanger()
     */
    public void setAutomaticToolChanger(String value) {
        this.automaticToolChanger = value;
    }

}
