//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.hivemq.edge.adapters.mtconnect.schemas.error.error_2_2;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlType;


/**
 * The types of measurements available
 * 
 * <p>Java class for DataItemEnumEnum</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * <pre>{@code
 * <simpleType name="DataItemEnumEnum">
 *   <restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     <enumeration value="ACCELERATION"/>
 *     <enumeration value="ACCUMULATED_TIME"/>
 *     <enumeration value="AMPERAGE"/>
 *     <enumeration value="ANGLE"/>
 *     <enumeration value="ANGULAR_ACCELERATION"/>
 *     <enumeration value="ANGULAR_VELOCITY"/>
 *     <enumeration value="AXIS_FEEDRATE"/>
 *     <enumeration value="CAPACITY_FLUID"/>
 *     <enumeration value="CAPACITY_SPATIAL"/>
 *     <enumeration value="CONCENTRATION"/>
 *     <enumeration value="CONDUCTIVITY"/>
 *     <enumeration value="CUTTING_SPEED"/>
 *     <enumeration value="DENSITY"/>
 *     <enumeration value="DEPOSITION_ACCELERATION_VOLUMETRIC"/>
 *     <enumeration value="DEPOSITION_DENSITY"/>
 *     <enumeration value="DEPOSITION_MASS"/>
 *     <enumeration value="DEPOSITION_RATE_VOLUMETRIC"/>
 *     <enumeration value="DEPOSITION_VOLUME"/>
 *     <enumeration value="DISPLACEMENT"/>
 *     <enumeration value="ELECTRICAL_ENERGY"/>
 *     <enumeration value="EQUIPMENT_TIMER"/>
 *     <enumeration value="FILL_LEVEL"/>
 *     <enumeration value="FLOW"/>
 *     <enumeration value="FREQUENCY"/>
 *     <enumeration value="GLOBAL_POSITION"/>
 *     <enumeration value="LENGTH"/>
 *     <enumeration value="LEVEL"/>
 *     <enumeration value="LINEAR_FORCE"/>
 *     <enumeration value="LOAD"/>
 *     <enumeration value="MASS"/>
 *     <enumeration value="PATH_FEEDRATE"/>
 *     <enumeration value="PATH_FEEDRATE_PER_REVOLUTION"/>
 *     <enumeration value="PATH_POSITION"/>
 *     <enumeration value="PH"/>
 *     <enumeration value="POSITION"/>
 *     <enumeration value="POWER_FACTOR"/>
 *     <enumeration value="PRESSURE"/>
 *     <enumeration value="PROCESS_TIMER"/>
 *     <enumeration value="RESISTANCE"/>
 *     <enumeration value="ROTARY_VELOCITY"/>
 *     <enumeration value="SOUND_LEVEL"/>
 *     <enumeration value="SPINDLE_SPEED"/>
 *     <enumeration value="STRAIN"/>
 *     <enumeration value="TEMPERATURE"/>
 *     <enumeration value="TENSION"/>
 *     <enumeration value="TILT"/>
 *     <enumeration value="TORQUE"/>
 *     <enumeration value="VELOCITY"/>
 *     <enumeration value="VISCOSITY"/>
 *     <enumeration value="VOLTAGE"/>
 *     <enumeration value="VOLT_AMPERE"/>
 *     <enumeration value="VOLT_AMPERE_REACTIVE"/>
 *     <enumeration value="VOLUME_FLUID"/>
 *     <enumeration value="VOLUME_SPATIAL"/>
 *     <enumeration value="WATTAGE"/>
 *     <enumeration value="AMPERAGE_AC"/>
 *     <enumeration value="AMPERAGE_DC"/>
 *     <enumeration value="VOLTAGE_AC"/>
 *     <enumeration value="VOLTAGE_DC"/>
 *     <enumeration value="X_DIMENSION"/>
 *     <enumeration value="Y_DIMENSION"/>
 *     <enumeration value="Z_DIMENSION"/>
 *     <enumeration value="DIAMETER"/>
 *     <enumeration value="ORIENTATION"/>
 *     <enumeration value="HUMIDITY_RELATIVE"/>
 *     <enumeration value="HUMIDITY_ABSOLUTE"/>
 *     <enumeration value="HUMIDITY_SPECIFIC"/>
 *     <enumeration value="OBSERVATION_UPDATE_RATE"/>
 *     <enumeration value="ASSET_UPDATE_RATE"/>
 *     <enumeration value="PRESSURIZATION_RATE"/>
 *     <enumeration value="DECELERATION"/>
 *     <enumeration value="ANGULAR_DECELERATION"/>
 *     <enumeration value="PRESSURE_ABSOLUTE"/>
 *     <enumeration value="OPENNESS"/>
 *     <enumeration value="DEW_POINT"/>
 *     <enumeration value="GRAVITATIONAL_FORCE"/>
 *     <enumeration value="GRAVITATIONAL_ACCELERATION"/>
 *     <enumeration value="BATTERY_CAPACITY"/>
 *     <enumeration value="DISCHARGE_RATE"/>
 *     <enumeration value="CHARGE_RATE"/>
 *     <enumeration value="BATTERY_CHARGE"/>
 *     <enumeration value="SETTLING_ERROR"/>
 *     <enumeration value="FOLLOWING_ERROR"/>
 *     <enumeration value="SETTLING_ERROR_LINEAR"/>
 *     <enumeration value="SETTLING_ERROR_ANGULAR"/>
 *     <enumeration value="FOLLOWING_ERROR_LINEAR"/>
 *     <enumeration value="FOLLOWING_ERROR_ANGULAR"/>
 *     <enumeration value="DISPLACEMENT_LINEAR"/>
 *     <enumeration value="DISPLACEMENT_ANGULAR"/>
 *     <enumeration value="POSITION_CARTESIAN"/>
 *     <enumeration value="ACTIVE_AXES"/>
 *     <enumeration value="ACTUATOR_STATE"/>
 *     <enumeration value="ALARM"/>
 *     <enumeration value="ASSET_CHANGED"/>
 *     <enumeration value="ASSET_REMOVED"/>
 *     <enumeration value="AVAILABILITY"/>
 *     <enumeration value="AXIS_COUPLING"/>
 *     <enumeration value="AXIS_FEEDRATE_OVERRIDE"/>
 *     <enumeration value="AXIS_INTERLOCK"/>
 *     <enumeration value="AXIS_STATE"/>
 *     <enumeration value="BLOCK"/>
 *     <enumeration value="BLOCK_COUNT"/>
 *     <enumeration value="CHUCK_INTERLOCK"/>
 *     <enumeration value="CHUCK_STATE"/>
 *     <enumeration value="CODE"/>
 *     <enumeration value="COMPOSITION_STATE"/>
 *     <enumeration value="CONTROLLER_MODE"/>
 *     <enumeration value="CONTROLLER_MODE_OVERRIDE"/>
 *     <enumeration value="COUPLED_AXES"/>
 *     <enumeration value="DATE_CODE"/>
 *     <enumeration value="DEVICE_UUID"/>
 *     <enumeration value="DIRECTION"/>
 *     <enumeration value="DOOR_STATE"/>
 *     <enumeration value="EMERGENCY_STOP"/>
 *     <enumeration value="END_OF_BAR"/>
 *     <enumeration value="EQUIPMENT_MODE"/>
 *     <enumeration value="EXECUTION"/>
 *     <enumeration value="FUNCTIONAL_MODE"/>
 *     <enumeration value="HARDNESS"/>
 *     <enumeration value="LINE"/>
 *     <enumeration value="LINE_LABEL"/>
 *     <enumeration value="LINE_NUMBER"/>
 *     <enumeration value="MATERIAL"/>
 *     <enumeration value="MATERIAL_LAYER"/>
 *     <enumeration value="MESSAGE"/>
 *     <enumeration value="OPERATOR_ID"/>
 *     <enumeration value="PALLET_ID"/>
 *     <enumeration value="PART_COUNT"/>
 *     <enumeration value="PART_DETECT"/>
 *     <enumeration value="PART_ID"/>
 *     <enumeration value="PART_NUMBER"/>
 *     <enumeration value="PATH_FEEDRATE_OVERRIDE"/>
 *     <enumeration value="PATH_MODE"/>
 *     <enumeration value="POWER_STATE"/>
 *     <enumeration value="POWER_STATUS"/>
 *     <enumeration value="PROCESS_TIME"/>
 *     <enumeration value="PROGRAM"/>
 *     <enumeration value="PROGRAM_COMMENT"/>
 *     <enumeration value="PROGRAM_EDIT"/>
 *     <enumeration value="PROGRAM_EDIT_NAME"/>
 *     <enumeration value="PROGRAM_HEADER"/>
 *     <enumeration value="PROGRAM_LOCATION"/>
 *     <enumeration value="PROGRAM_LOCATION_TYPE"/>
 *     <enumeration value="PROGRAM_NEST_LEVEL"/>
 *     <enumeration value="ROTARY_MODE"/>
 *     <enumeration value="ROTARY_VELOCITY_OVERRIDE"/>
 *     <enumeration value="SERIAL_NUMBER"/>
 *     <enumeration value="SPINDLE_INTERLOCK"/>
 *     <enumeration value="TOOL_ASSET_ID"/>
 *     <enumeration value="TOOL_GROUP"/>
 *     <enumeration value="TOOL_ID"/>
 *     <enumeration value="TOOL_NUMBER"/>
 *     <enumeration value="TOOL_OFFSET"/>
 *     <enumeration value="USER"/>
 *     <enumeration value="VARIABLE"/>
 *     <enumeration value="WAIT_STATE"/>
 *     <enumeration value="WIRE"/>
 *     <enumeration value="WORKHOLDING_ID"/>
 *     <enumeration value="WORK_OFFSET"/>
 *     <enumeration value="OPERATING_SYSTEM"/>
 *     <enumeration value="FIRMWARE"/>
 *     <enumeration value="APPLICATION"/>
 *     <enumeration value="LIBRARY"/>
 *     <enumeration value="HARDWARE"/>
 *     <enumeration value="NETWORK"/>
 *     <enumeration value="ROTATION"/>
 *     <enumeration value="TRANSLATION"/>
 *     <enumeration value="DEVICE_ADDED"/>
 *     <enumeration value="DEVICE_REMOVED"/>
 *     <enumeration value="DEVICE_CHANGED"/>
 *     <enumeration value="CONNECTION_STATUS"/>
 *     <enumeration value="ADAPTER_SOFTWARE_VERSION"/>
 *     <enumeration value="ADAPTER_URI"/>
 *     <enumeration value="MTCONNECT_VERSION"/>
 *     <enumeration value="SENSOR_ATTACHMENT"/>
 *     <enumeration value="PART_STATUS"/>
 *     <enumeration value="PROCESS_OCCURRENCE_ID"/>
 *     <enumeration value="PROCESS_AGGREGATE_ID"/>
 *     <enumeration value="PROCESS_KIND_ID"/>
 *     <enumeration value="PART_GROUP_ID"/>
 *     <enumeration value="PART_KIND_ID"/>
 *     <enumeration value="PART_UNIQUE_ID"/>
 *     <enumeration value="CONTROL_LIMIT"/>
 *     <enumeration value="SPECIFICATION_LIMIT"/>
 *     <enumeration value="ALARM_LIMIT"/>
 *     <enumeration value="LOAD_COUNT"/>
 *     <enumeration value="UNLOAD_COUNT"/>
 *     <enumeration value="TRANSFER_COUNT"/>
 *     <enumeration value="ACTIVATION_COUNT"/>
 *     <enumeration value="DEACTIVATION_COUNT"/>
 *     <enumeration value="CYCLE_COUNT"/>
 *     <enumeration value="VALVE_STATE"/>
 *     <enumeration value="LOCK_STATE"/>
 *     <enumeration value="PROCESS_STATE"/>
 *     <enumeration value="PART_PROCESSING_STATE"/>
 *     <enumeration value="OPERATING_MODE"/>
 *     <enumeration value="ASSET_COUNT"/>
 *     <enumeration value="MAINTENANCE_LIST"/>
 *     <enumeration value="FIXTURE_ID"/>
 *     <enumeration value="PART_COUNT_TYPE"/>
 *     <enumeration value="CLOCK_TIME"/>
 *     <enumeration value="HOST_NAME"/>
 *     <enumeration value="NETWORK_PORT"/>
 *     <enumeration value="LEAK_DETECT"/>
 *     <enumeration value="BATTERY_STATE"/>
 *     <enumeration value="FEATURE_PERSISTENT_ID"/>
 *     <enumeration value="SENSOR_STATE"/>
 *     <enumeration value="COMPONENT_DATA"/>
 *     <enumeration value="WORK_OFFSETS"/>
 *     <enumeration value="TOOL_OFFSETS"/>
 *     <enumeration value="FEATURE_MEASUREMENT"/>
 *     <enumeration value="CHARACTERISTIC_PERSISTENT_ID"/>
 *     <enumeration value="MEASUREMENT_TYPE"/>
 *     <enumeration value="MEASUREMENT_VALUE"/>
 *     <enumeration value="MEASUREMENT_UNITS"/>
 *     <enumeration value="CHARACTERISTIC_STATUS"/>
 *     <enumeration value="UNCERTAINTY_TYPE"/>
 *     <enumeration value="UNCERTAINTY"/>
 *     <enumeration value="COMMUNICATIONS"/>
 *     <enumeration value="DATA_RANGE"/>
 *     <enumeration value="LOGIC_PROGRAM"/>
 *     <enumeration value="MOTION_PROGRAM"/>
 *     <enumeration value="SYSTEM"/>
 *     <enumeration value="ACTUATOR"/>
 *     <enumeration value="INTERFACE_STATE"/>
 *     <enumeration value="MATERIAL_FEED"/>
 *     <enumeration value="MATERIAL_CHANGE"/>
 *     <enumeration value="MATERIAL_RETRACT"/>
 *     <enumeration value="PART_CHANGE"/>
 *     <enumeration value="MATERIAL_LOAD"/>
 *     <enumeration value="MATERIAL_UNLOAD"/>
 *     <enumeration value="OPEN_CHUCK"/>
 *     <enumeration value="OPEN_DOOR"/>
 *     <enumeration value="CLOSE_CHUCK"/>
 *     <enumeration value="CLOSE_DOOR"/>
 *     <enumeration value="VARIABLE"/>
 *   </restriction>
 * </simpleType>
 * }</pre>
 * 
 */
@com.fasterxml.jackson.annotation.JsonTypeName(value = "DataItemEnumEnum")
@XmlType(name = "DataItemEnumEnum")
@XmlEnum
public enum DataItemEnumEnum {


    /**
     * positive rate of change of velocity.
     * 
     */
    ACCELERATION,

    /**
     * accumulated time for an activity or event.
     * 
     */
    ACCUMULATED_TIME,

    /**
     * strength of electrical current. **DEPRECATED** in *Version 1.6*.
     *             Replaced by `AMPERAGE_AC` and `AMPERAGE_DC`.
     * 
     */
    AMPERAGE,

    /**
     * angular position.
     * 
     */
    ANGLE,

    /**
     * positive rate of change of angular velocity.
     * 
     */
    ANGULAR_ACCELERATION,

    /**
     * rate of change of angular position.
     * 
     */
    ANGULAR_VELOCITY,

    /**
     * feedrate of a linear axis.
     * 
     */
    AXIS_FEEDRATE,

    /**
     * fluid capacity of an object or container.
     * 
     */
    CAPACITY_FLUID,

    /**
     * geometric capacity of an object or container.
     * 
     */
    CAPACITY_SPATIAL,

    /**
     * percentage of one component within a mixture of components.
     * 
     */
    CONCENTRATION,

    /**
     * ability of a material to conduct electricity.
     * 
     */
    CONDUCTIVITY,

    /**
     * speed difference (relative velocity) between the cutting mechanism
     *             and the surface of the workpiece it is operating on.
     * 
     */
    CUTTING_SPEED,

    /**
     * volumetric mass of a material per unit volume of that material.
     * 
     */
    DENSITY,

    /**
     * rate of change in spatial volume of material deposited in an
     *             additive manufacturing process.
     * 
     */
    DEPOSITION_ACCELERATION_VOLUMETRIC,

    /**
     * density of the material deposited in an additive manufacturing
     *             process per unit of volume.
     * 
     */
    DEPOSITION_DENSITY,

    /**
     * mass of the material deposited in an additive manufacturing process.
     * 
     */
    DEPOSITION_MASS,

    /**
     * rate at which a spatial volume of material is deposited in an
     *             additive manufacturing process.
     * 
     */
    DEPOSITION_RATE_VOLUMETRIC,

    /**
     * spatial volume of material to be deposited in an additive
     *             manufacturing process.
     * 
     */
    DEPOSITION_VOLUME,

    /**
     * change in position of an object.
     * 
     */
    DISPLACEMENT,

    /**
     * {{block(Wattage)}} used or generated by a component over an interval
     *             of time.
     * 
     */
    ELECTRICAL_ENERGY,

    /**
     * amount of time a piece of equipment or a sub-part of a piece of
     *             equipment has performed specific activities.
     * 
     */
    EQUIPMENT_TIMER,

    /**
     * amount of a substance remaining compared to the planned maximum
     *             amount of that substance.
     * 
     */
    FILL_LEVEL,

    /**
     * rate of flow of a fluid.
     * 
     */
    FLOW,

    /**
     * number of occurrences of a repeating event per unit time.
     * 
     */
    FREQUENCY,

    /**
     * position in three-dimensional space. **DEPRECATED** in Version 1.1.
     * 
     */
    GLOBAL_POSITION,

    /**
     * length of an object.
     * 
     */
    LENGTH,

    /**
     * level of a resource. **DEPRECATED** in *Version 1.2*. See
     *             `FILL_LEVEL`.
     * 
     */
    LEVEL,

    /**
     * {{term(force)}} applied to a mass in one direction only.
     * 
     */
    LINEAR_FORCE,

    /**
     * actual versus the standard rating of a piece of equipment.
     * 
     */
    LOAD,

    /**
     * mass of an object(s) or an amount of material.
     * 
     */
    MASS,

    /**
     * feedrate for the axes, or a single axis, associated with a
     *             {{block(Path)}} component.
     * 
     */
    PATH_FEEDRATE,

    /**
     * feedrate for the axes, or a single axis.
     * 
     */
    PATH_FEEDRATE_PER_REVOLUTION,

    /**
     * position of a control point associated with a {{block(Controller)}}
     *             or a {{block(Path)}}.
     * 
     */
    PATH_POSITION,

    /**
     * acidity or alkalinity of a solution.
     * 
     */
    PH,

    /**
     * point along an axis in a {{term(cartesian coordinate system)}}.
     * 
     */
    POSITION,

    /**
     * ratio of real power flowing to a load to the apparent power in that
     *             AC circuit.
     * 
     */
    POWER_FACTOR,

    /**
     * force per unit area measured relative to atmospheric pressure.
     *             Commonly referred to as gauge pressure.
     * 
     */
    PRESSURE,

    /**
     * amount of time a piece of equipment has performed different types of
     *             activities associated with the process being performed at that piece
     *             of equipment.
     * 
     */
    PROCESS_TIMER,

    /**
     * degree to which a substance opposes the passage of an electric
     *             current.
     * 
     */
    RESISTANCE,

    /**
     * rotational speed of a rotary axis.
     * 
     */
    ROTARY_VELOCITY,

    /**
     * sound level or sound pressure level relative to atmospheric
     *             pressure.
     * 
     */
    SOUND_LEVEL,

    /**
     * rotational speed of the rotary axis. **DEPRECATED** in *Version
     *             1.2*. Replaced by `ROTARY_VELOCITY`.
     * 
     */
    SPINDLE_SPEED,

    /**
     * amount of deformation per unit length of an object when a load is
     *             applied.
     * 
     */
    STRAIN,

    /**
     * degree of hotness or coldness measured on a definite scale.
     * 
     */
    TEMPERATURE,

    /**
     * force that stretches or elongates an object.
     * 
     */
    TENSION,

    /**
     * angular displacement.
     * 
     */
    TILT,

    /**
     * turning force exerted on an object or by an object.
     * 
     */
    TORQUE,

    /**
     * rate of change of position of a {{block(Component)}}.
     * 
     */
    VELOCITY,

    /**
     * fluid's resistance to flow.
     * 
     */
    VISCOSITY,

    /**
     * electrical potential between two points. **DEPRECATED** in *Version
     *             1.6*. Replaced by `VOLTAGE_AC` and `VOLTAGE_DC`.
     * 
     */
    VOLTAGE,

    /**
     * apparent power in an electrical circuit, equal to the product of
     *             root-mean-square (RMS) voltage and RMS current (commonly referred to
     *             as VA).
     * 
     */
    VOLT_AMPERE,

    /**
     * reactive power in an AC electrical circuit (commonly referred to as
     *             VAR).
     * 
     */
    VOLT_AMPERE_REACTIVE,

    /**
     * fluid volume of an object or container.
     * 
     */
    VOLUME_FLUID,

    /**
     * geometric volume of an object or container.
     * 
     */
    VOLUME_SPATIAL,

    /**
     * power flowing through or dissipated by an electrical circuit or
     *             piece of equipment.
     * 
     */
    WATTAGE,

    /**
     * electrical current that reverses direction at regular short
     *             intervals.
     * 
     */
    AMPERAGE_AC,

    /**
     * electric current flowing in one direction only.
     * 
     */
    AMPERAGE_DC,

    /**
     * electrical potential between two points in an electrical circuit in
     *             which the current periodically reverses direction.
     * 
     */
    VOLTAGE_AC,

    /**
     * electrical potential between two points in an electrical circuit in
     *             which the current is unidirectional.
     * 
     */
    VOLTAGE_DC,

    /**
     * dimension of an entity relative to the X direction of the referenced
     *             coordinate system.
     * 
     */
    X_DIMENSION,

    /**
     * dimension of an entity relative to the Y direction of the referenced
     *             coordinate system.
     * 
     */
    Y_DIMENSION,

    /**
     * dimension of an entity relative to the Z direction of the referenced
     *             coordinate system.
     * 
     */
    Z_DIMENSION,

    /**
     * dimension of a diameter.
     * 
     */
    DIAMETER,

    /**
     * angular position of a plane or vector relative to a {{term(cartesian
     *             coordinate system)}}
     * 
     */
    ORIENTATION,

    /**
     * amount of water vapor present expressed as a percent to reach
     *             saturation at the same temperature.
     * 
     */
    HUMIDITY_RELATIVE,

    /**
     * amount of water vapor expressed in grams per cubic meter.
     * 
     */
    HUMIDITY_ABSOLUTE,

    /**
     * ratio of the water vapor present over the total weight of the water
     *             vapor and air present expressed as a percent.
     * 
     */
    HUMIDITY_SPECIFIC,

    /**
     * average rate of change of values for data items in the MTConnect
     *             streams. The average is computed over a rolling window defined by
     *             the implementation.
     * 
     */
    OBSERVATION_UPDATE_RATE,

    /**
     * average rate of change of values for assets in the MTConnect
     *             streams. The average is computed over a rolling window defined by
     *             the implementation.
     * 
     */
    ASSET_UPDATE_RATE,

    /**
     * change of pressure per unit time.
     * 
     */
    PRESSURIZATION_RATE,

    /**
     * negative rate of change of velocity.
     * 
     */
    DECELERATION,

    /**
     * negative rate of change of angular velocity.
     * 
     */
    ANGULAR_DECELERATION,

    /**
     * force per unit area measured relative to a vacuum.
     * 
     */
    PRESSURE_ABSOLUTE,

    /**
     * percentage open where 100% is fully open and 0% is fully closed.
     * 
     */
    OPENNESS,

    /**
     * temperature at which moisture begins to condense, corresponding to
     *             saturation for a given absolute humidity.
     * 
     */
    DEW_POINT,

    /**
     * force relative to earth's gravity.
     * 
     */
    GRAVITATIONAL_FORCE,

    /**
     * acceleration relative to Earth's gravity of 9.80665
     *             `METER/SECOND^2`.
     * 
     */
    GRAVITATIONAL_ACCELERATION,

    /**
     * maximum rated charge a battery is capable of maintaining based on
     *             the battery discharging at a specified current over a specified time
     *             period.
     * 
     */
    BATTERY_CAPACITY,

    /**
     * value of current being drawn from the {{block(Component)}}.
     * 
     */
    DISCHARGE_RATE,

    /**
     * value of the current being supplied to the {{block(Component)}} for
     *             the purpose of charging.
     * 
     */
    CHARGE_RATE,

    /**
     * value of the battery's present capacity expressed as a
     *             percentage of the battery's maximum rated capacity.
     * 
     */
    BATTERY_CHARGE,

    /**
     * difference between actual and commanded position at the end of a
     *             motion.
     * 
     */
    SETTLING_ERROR,

    /**
     * difference between actual and commanded position at any specific
     *             point in time during a motion.
     * 
     */
    FOLLOWING_ERROR,

    /**
     * difference between the commanded encoder/resolver position, and the
     *             actual encoder/resolver position when motion is complete.
     * 
     */
    SETTLING_ERROR_LINEAR,

    /**
     * angular difference between the commanded encoder/resolver position,
     *             and the actual encoder/resolver position when motion is complete.
     * 
     */
    SETTLING_ERROR_ANGULAR,

    /**
     * difference between the commanded encoder/resolver position and the
     *             actual encoder/resolver position at any specified point in time
     *             during a motion.
     * 
     */
    FOLLOWING_ERROR_LINEAR,

    /**
     * angular difference between the commanded encoder/resolver position
     *             and the actual encoder/resolver position at any specified point in
     *             time during a motion.
     * 
     */
    FOLLOWING_ERROR_ANGULAR,

    /**
     * absolute value of the change in position along a vector.
     * 
     */
    DISPLACEMENT_LINEAR,

    /**
     * absolute value of the change in angular position around a vector
     * 
     */
    DISPLACEMENT_ANGULAR,

    /**
     * point in a {{term(cartesian coordinate system)}}.
     * 
     */
    POSITION_CARTESIAN,

    /**
     * set of axes currently associated with a {{block(Path)}} or
     *             {{block(Controller)}}.
     * 
     */
    ACTIVE_AXES,

    /**
     * operational state of an apparatus for moving or controlling a
     *             mechanism or system.
     * 
     */
    ACTUATOR_STATE,

    /**
     * **DEPRECATED:** Replaced with `CONDITION` category data items in
     *             Version 1.1.0.
     * 
     */
    ALARM,

    /**
     * {{block(assetId)}} of the {{term(Asset)}} that has been added or
     *             changed.
     * 
     */
    ASSET_CHANGED,

    /**
     * {{block(assetId)}} of the {{term(Asset)}} that has been removed.
     * 
     */
    ASSET_REMOVED,

    /**
     * {{term(agent)}}'s ability to communicate with the data source.
     * 
     */
    AVAILABILITY,

    /**
     * describes the way the axes will be associated to each other. This is
     *             used in conjunction with `COUPLED_AXES` to indicate the way they are
     *             interacting.
     * 
     */
    AXIS_COUPLING,

    /**
     * value of a signal or calculation issued to adjust the feedrate of an
     *             individual linear type axis.
     * 
     */
    AXIS_FEEDRATE_OVERRIDE,

    /**
     * state of the axis lockout function when power has been removed and
     *             the axis is allowed to move freely.
     * 
     */
    AXIS_INTERLOCK,

    /**
     * state of a {{block(Linear)}} or {{block(Rotary)}} component
     *             representing an axis.
     * 
     */
    AXIS_STATE,

    /**
     * line of code or command being executed by a {{block(Controller)}}
     *             entity.
     * 
     */
    BLOCK,

    /**
     * total count of the number of blocks of program code that have been
     *             executed since execution started.
     * 
     */
    BLOCK_COUNT,

    /**
     * state of an interlock function or control logic state intended to
     *             prevent the associated {{block(Chuck)}} component from being
     *             operated.
     * 
     */
    CHUCK_INTERLOCK,

    /**
     * operating state of a mechanism that holds a part or stock material
     *             during a manufacturing process. It may also represent a mechanism
     *             that holds any other mechanism in place within a piece of equipment.
     * 
     */
    CHUCK_STATE,

    /**
     * programmatic code being executed. **DEPRECATED** in *Version 1.1*.
     * 
     */
    CODE,

    /**
     * operating state of a mechanism represented by a
     *             {{block(Composition)}} entity.
     * 
     */
    COMPOSITION_STATE,

    /**
     * current mode of the {{block(Controller)}} component.
     * 
     */
    CONTROLLER_MODE,

    /**
     * setting or operator selection that changes the behavior of a piece
     *             of equipment.
     * 
     */
    CONTROLLER_MODE_OVERRIDE,

    /**
     * set of associated axes.
     * 
     */
    COUPLED_AXES,

    /**
     * time and date code associated with a material or other physical
     *             item.
     * 
     */
    DATE_CODE,

    /**
     * identifier of another piece of equipment that is temporarily
     *             associated with a component of this piece of equipment to perform a
     *             particular function.
     * 
     */
    DEVICE_UUID,

    /**
     * direction of motion.
     * 
     */
    DIRECTION,

    /**
     * operational state of a {{block(Door)}} component or composition
     *             element.
     * 
     */
    DOOR_STATE,

    /**
     * state of the emergency stop signal for a piece of equipment,
     *             controller path, or any other component or subsystem of a piece of
     *             equipment.
     * 
     */
    EMERGENCY_STOP,

    /**
     * indication of whether the end of a piece of bar stock being feed by
     *             a bar feeder has been reached.
     * 
     */
    END_OF_BAR,

    /**
     * indication that a piece of equipment, or a sub-part of a piece of
     *             equipment, is performing specific types of activities.
     * 
     */
    EQUIPMENT_MODE,

    /**
     * execution status of the {{block(Component)}}.
     * 
     */
    EXECUTION,

    /**
     * current intended production status of the {{block(Component)}}.
     * 
     */
    FUNCTIONAL_MODE,

    /**
     * hardness of a material.
     * 
     */
    HARDNESS,

    /**
     * current line of code being executed. **DEPRECATED** in *Version
     *             1.4.0*.
     * 
     */
    LINE,

    /**
     * identifier for a {{block(Block)}} of code in a {{block(Program)}}.
     * 
     */
    LINE_LABEL,

    /**
     * position of a block of program code within a control program.
     * 
     */
    LINE_NUMBER,

    /**
     * identifier of a material used or consumed in the manufacturing
     *             process.
     * 
     */
    MATERIAL,

    /**
     * identifies the layers of material applied to a part or product as
     *             part of an additive manufacturing process.
     * 
     */
    MATERIAL_LAYER,

    /**
     * information to be transferred from a piece of equipment to a client
     *             software application.
     * 
     */
    MESSAGE,

    /**
     * identifier of the person currently responsible for operating the
     *             piece of equipment.
     * 
     */
    OPERATOR_ID,

    /**
     * identifier for a pallet.
     * 
     */
    PALLET_ID,

    /**
     * aggregate count of parts.
     * 
     */
    PART_COUNT,

    /**
     * indication designating whether a part or work piece has been
     *             detected or is present.
     * 
     */
    PART_DETECT,

    /**
     * identifier of a part in a manufacturing operation.
     * 
     */
    PART_ID,

    /**
     * identifier of a part or product moving through the manufacturing
     *             process. **DEPRECATED** in *Version 1.7*. `PART_NUMBER` is now a
     *             `subType` of `PART_KIND_ID`.
     * 
     */
    PART_NUMBER,

    /**
     * value of a signal or calculation issued to adjust the feedrate for
     *             the axes associated with a {{block(Path)}} component that may
     *             represent a single axis or the coordinated movement of multiple
     *             axes.
     * 
     */
    PATH_FEEDRATE_OVERRIDE,

    /**
     * describes the operational relationship between a {{block(Path)}}
     *             entity and another {{block(Path)}} entity for pieces of equipment
     *             comprised of multiple logical groupings of controlled axes or other
     *             logical operations.
     * 
     */
    PATH_MODE,

    /**
     * indication of the status of the source of energy for an entity to
     *             allow it to perform its intended function or the state of an
     *             enabling signal providing permission for the entity to perform its
     *             functions.
     * 
     */
    POWER_STATE,

    /**
     * status of the {{block(Component)}}. **DEPRECATED** in *Version
     *             1.1.0*.
     * 
     */
    POWER_STATUS,

    /**
     * time and date associated with an activity or event.
     * 
     */
    PROCESS_TIME,

    /**
     * name of the logic or motion program being executed by the
     *             {{block(Controller)}} component.
     * 
     */
    PROGRAM,

    /**
     * comment or non-executable statement in the control program.
     * 
     */
    PROGRAM_COMMENT,

    /**
     * indication of the status of the {{block(Controller)}} components
     *             program editing mode. A program may be edited while another is
     *             executed.
     * 
     */
    PROGRAM_EDIT,

    /**
     * name of the program being edited. This is used in conjunction with
     *             {{block(ProgramEdit)}} when in `ACTIVE` state.
     * 
     */
    PROGRAM_EDIT_NAME,

    /**
     * non-executable header section of the control program.
     * 
     */
    PROGRAM_HEADER,

    /**
     * {{term(URI)}} for the source file associated with
     *             {{block(Program)}}.
     * 
     */
    PROGRAM_LOCATION,

    /**
     * defines whether the logic or motion program defined by
     *             {{block(Program)}} is being executed from the local memory of the
     *             controller or from an outside source.
     * 
     */
    PROGRAM_LOCATION_TYPE,

    /**
     * indication of the nesting level within a control program that is
     *             associated with the code or instructions that is currently being
     *             executed.
     * 
     */
    PROGRAM_NEST_LEVEL,

    /**
     * current operating mode for a {{block(Rotary)}} type axis.
     * 
     */
    ROTARY_MODE,

    /**
     * percentage change to the velocity of the programmed velocity for a
     *             {{block(Rotary)}} axis.
     * 
     */
    ROTARY_VELOCITY_OVERRIDE,

    /**
     * serial number associated with a {{block(Component)}},
     *             {{block(Asset)}}, or {{block(Device)}}.
     * 
     */
    SERIAL_NUMBER,

    /**
     * indication of the status of the spindle for a piece of equipment
     *             when power has been removed and it is free to rotate.
     * 
     */
    SPINDLE_INTERLOCK,

    /**
     * identifier of an individual tool asset.
     * 
     */
    TOOL_ASSET_ID,

    /**
     * identifier for the tool group associated with a specific tool.
     *             Commonly used to designate spare tools.
     * 
     */
    TOOL_GROUP,

    /**
     * identifier of the tool currently in use for a given `Path`.
     *             **DEPRECATED** in *Version 1.2.0*. See `TOOL_ASSET_ID`.
     * 
     */
    TOOL_ID,

    /**
     * identifier assigned by the {{block(Controller)}} component to a
     *             cutting tool when in use by a piece of equipment.
     * 
     */
    TOOL_NUMBER,

    /**
     * reference to the tool offset variables applied to the active cutting
     *             tool.
     * 
     */
    TOOL_OFFSET,

    /**
     * identifier of the person currently responsible for operating the
     *             piece of equipment.
     * 
     */
    USER,

    /**
     * data whose meaning may change over time due to changes in the
     *             operation of a piece of equipment or the process being executed on
     *             that piece of equipment.
     * 
     */
    VARIABLE,

    /**
     * indication of the reason that {{block(Execution)}} is reporting a
     *             value of `WAIT`.
     * 
     */
    WAIT_STATE,

    /**
     * identifier for the type of wire used as the cutting mechanism in
     *             Electrical Discharge Machining or similar processes.
     * 
     */
    WIRE,

    /**
     * identifier for the current workholding or part clamp in use by a
     *             piece of equipment.
     * 
     */
    WORKHOLDING_ID,

    /**
     * reference to offset variables for a work piece or part.
     * 
     */
    WORK_OFFSET,

    /**
     * Operating System (OS) of a {{block(Component)}}.
     * 
     */
    OPERATING_SYSTEM,

    /**
     * embedded software of a {{block(Component)}} .
     * 
     */
    FIRMWARE,

    /**
     * application on a {{block(Component)}}.
     * 
     */
    APPLICATION,

    /**
     * software library on a {{block(Component)}}
     * 
     */
    LIBRARY,

    /**
     * hardware of a {{block(Component)}}.
     * 
     */
    HARDWARE,

    /**
     * network details of a {{block(Component)}}.
     * 
     */
    NETWORK,

    /**
     * three space angular displacement of an object or coordinate system
     *             relative to a {{term(cartesian coordinate system)}}.
     * 
     */
    ROTATION,

    /**
     * three space linear displacement of an object or coordinate system
     *             relative to a {{term(cartesian coordinate system)}}.
     * 
     */
    TRANSLATION,

    /**
     * {{term(UUID)}} of new device added to an {{term(MTConnect Agent)}}.
     * 
     */
    DEVICE_ADDED,

    /**
     * {{term(UUID)}} of a device removed from an {{term(MTConnect
     *             Agent)}}.
     * 
     */
    DEVICE_REMOVED,

    /**
     * {{term(UUID)}} of the device whose {{term(metadata)}} has changed.
     * 
     */
    DEVICE_CHANGED,

    /**
     * status of the connection between an {{term(adapter)}} and an
     *             {{term(agent)}}.
     * 
     */
    CONNECTION_STATUS,

    /**
     * originator’s software version of the {{term(adapter)}}.
     * 
     */
    ADAPTER_SOFTWARE_VERSION,

    /**
     * {{term(URI)}} of the {{term(adapter)}}.
     * 
     */
    ADAPTER_URI,

    /**
     * reference version of the MTConnect Standard supported by the
     *             {{term(adapter)}}.
     * 
     */
    MTCONNECT_VERSION,

    /**
     * {{term(attachment)}} between a sensor and an entity.
     * 
     */
    SENSOR_ATTACHMENT,

    /**
     * state or condition of a part.
     * 
     */
    PART_STATUS,

    /**
     * identifier of a process being executed by the device.
     * 
     */
    PROCESS_OCCURRENCE_ID,

    /**
     * identifier given to link the individual occurrence to a group of
     *             related occurrences, such as a process step in a process plan.
     * 
     */
    PROCESS_AGGREGATE_ID,

    /**
     * identifier given to link the individual occurrence to a class of
     *             processes or process definition.
     * 
     */
    PROCESS_KIND_ID,

    /**
     * identifier given to a collection of individual parts.
     * 
     */
    PART_GROUP_ID,

    /**
     * identifier given to link the individual occurrence to a class of
     *             parts, typically distinguished by a particular part design.
     * 
     */
    PART_KIND_ID,

    /**
     * identifier given to a distinguishable, individual part.
     * 
     */
    PART_UNIQUE_ID,

    /**
     * set of limits used to indicate whether a process variable is stable
     *             and in control.
     * 
     */
    CONTROL_LIMIT,

    /**
     * set of limits defining a range of values designating acceptable
     *             performance for a variable.
     * 
     */
    SPECIFICATION_LIMIT,

    /**
     * set of limits used to trigger warning or alarm indicators.
     * 
     */
    ALARM_LIMIT,

    /**
     * accumulation of the number of times an operation has attempted to,
     *             or is planned to attempt to, load materials, parts, or other items.
     * 
     */
    LOAD_COUNT,

    /**
     * accumulation of the number of times an operation has attempted to,
     *             or is planned to attempt to, unload materials, parts, or other
     *             items.
     * 
     */
    UNLOAD_COUNT,

    /**
     * accumulation of the number of times an operation has attempted to,
     *             or is planned to attempt to, transfer materials, parts, or other
     *             items from one location to another.
     * 
     */
    TRANSFER_COUNT,

    /**
     * accumulation of the number of times a function has attempted to, or
     *             is planned to attempt to, activate or be performed.
     * 
     */
    ACTIVATION_COUNT,

    /**
     * accumulation of the number of times a function has attempted to, or
     *             is planned to attempt to, deactivate or cease.
     * 
     */
    DEACTIVATION_COUNT,

    /**
     * accumulation of the number of times a cyclic function has attempted
     *             to, or is planned to attempt to execute.
     * 
     */
    CYCLE_COUNT,

    /**
     * state of a valve is one of open, closed, or transitioning between
     *             the states.
     * 
     */
    VALVE_STATE,

    /**
     * state or operating mode of a {{block(Lock)}}.
     * 
     */
    LOCK_STATE,

    /**
     * particular condition of the process occurrence at a specific time.
     * 
     */
    PROCESS_STATE,

    /**
     * particular condition of the part occurrence at a specific time.
     * 
     */
    PART_PROCESSING_STATE,

    /**
     * state of {{block(Component)}} or {{block(Composition)}} that
     *             describes the automatic or manual operation of the entity.
     * 
     */
    OPERATING_MODE,

    /**
     * {{term(data set)}} of the number of {{termplural(Asset)}} of a given
     *             type for a {{term(Device)}}.
     * 
     */
    ASSET_COUNT,

    /**
     * actions or activities to be performed in support of a piece of
     *             equipment.
     * 
     */
    MAINTENANCE_LIST,

    /**
     * identifier for a fixture.
     * 
     */
    FIXTURE_ID,

    /**
     * interpretation of `PART_COUNT`.
     * 
     */
    PART_COUNT_TYPE,

    /**
     * time provided by a timing device at a specific point in time.
     * 
     */
    CLOCK_TIME,

    /**
     * name of the host computer supplying data.
     * 
     */
    HOST_NAME,

    /**
     * number of the TCP/IP or UDP/IP port for the connection endpoint.
     * 
     */
    NETWORK_PORT,

    /**
     * indication designating whether a leak has been detected.
     * 
     */
    LEAK_DETECT,

    /**
     * present status of the battery.
     * 
     */
    BATTERY_STATE,

    /**
     * {{term(UUID)}} of a {{term(feature)}}. {{cite(ISO 10303 AP
     *             242/239)}}.
     * 
     */
    FEATURE_PERSISTENT_ID,

    /**
     * detection result of a sensor.
     * 
     */
    SENSOR_STATE,

    /**
     * {{block(Event)}} that represents a {{block(Component)}} where the
     *             {{block(EntryDefinition)}} identifies the {{block(Component)}} and
     *             the {{block(CellDefinition)}}s define the
     *             {{block(Component)}}'s observed {{block(DataItem)}}s.
     * 
     */
    COMPONENT_DATA,

    /**
     * properties of each addressable work offset.
     * 
     */
    WORK_OFFSETS,

    /**
     * properties of each addressable tool offset.
     * 
     */
    TOOL_OFFSETS,

    /**
     * assessing elements of a {{term(feature)}}.
     * 
     */
    FEATURE_MEASUREMENT,

    /**
     * {{term(UUID)}} of the {{term(characteristic)}}.
     * 
     */
    CHARACTERISTIC_PERSISTENT_ID,

    /**
     * class of measurement being performed. {{cite(QIF 3:2018 Section
     *             6.3)}}
     * 
     */
    MEASUREMENT_TYPE,

    /**
     * measurement based on the measurement type.
     * 
     */
    MEASUREMENT_VALUE,

    /**
     * engineering units of the measurement.
     * 
     */
    MEASUREMENT_UNITS,

    /**
     * pass/fail result of the measurement.
     * 
     */
    CHARACTERISTIC_STATUS,

    /**
     * method used to compute {{term(standard uncertainty)}}.
     * 
     */
    UNCERTAINTY_TYPE,

    /**
     * {{term(uncertainty)}} specified by {{block(UncertaintyType)}}.
     * 
     */
    UNCERTAINTY,

    /**
     * indication that the piece of equipment has experienced a
     *             communications failure.
     * 
     */
    COMMUNICATIONS,

    /**
     * indication that the value of the data associated with a measured
     *             value or a calculation is outside of an expected range.
     * 
     */
    DATA_RANGE,

    /**
     * indication that an error occurred in the logic program or
     *             programmable logic controller (PLC) associated with a piece of
     *             equipment.
     * 
     */
    LOGIC_PROGRAM,

    /**
     * indication that an error occurred in the motion program associated
     *             with a piece of equipment.
     * 
     */
    MOTION_PROGRAM,

    /**
     * general purpose indication associated with an electronic component
     *             of a piece of equipment or a controller that represents a fault that
     *             is not associated with the operator, program, or hardware.
     * 
     */
    SYSTEM,

    /**
     * indication of a fault associated with an actuator.
     * 
     */
    ACTUATOR,

    /**
     * operational state of an {{block(Interface)}}.
     * 
     */
    INTERFACE_STATE,

    /**
     * operating state of the service to advance material or feed product
     *             to a piece of equipment from a continuous or bulk source.
     * 
     */
    MATERIAL_FEED,

    /**
     * operating state of the service to change the type of material or
     *             product being loaded or fed to a piece of equipment.
     * 
     */
    MATERIAL_CHANGE,

    /**
     * operating state of the service to remove or retract material or
     *             product.
     * 
     */
    MATERIAL_RETRACT,

    /**
     * operating state of the service to change the part or product
     *             associated with a piece of equipment to a different part or product.
     * 
     */
    PART_CHANGE,

    /**
     * operating state of the service to load a piece of material or
     *             product.
     * 
     */
    MATERIAL_LOAD,

    /**
     * operating state of the service to unload a piece of material or
     *             product.
     * 
     */
    MATERIAL_UNLOAD,

    /**
     * operating state of the service to open a chuck.
     * 
     */
    OPEN_CHUCK,

    /**
     * operating state of the service to open a door.
     * 
     */
    OPEN_DOOR,

    /**
     * operating state of the service to close a chuck.
     * 
     */
    CLOSE_CHUCK,

    /**
     * operating state of the service to close a door.
     * 
     */
    CLOSE_DOOR;

    public String value() {
        return name();
    }

    public static DataItemEnumEnum fromValue(String v) {
        return valueOf(v);
    }

}
