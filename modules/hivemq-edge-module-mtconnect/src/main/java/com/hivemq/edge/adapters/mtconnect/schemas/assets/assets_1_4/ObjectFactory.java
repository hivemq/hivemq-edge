//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.hivemq.edge.adapters.mtconnect.schemas.assets.assets_1_4;

import javax.xml.namespace.QName;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.hivemq.edge.adapters.mtconnect.schemas.assets.assets_1_4 package. 
 * <p>An ObjectFactory allows you to programmatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private static final QName _MTConnectAssets_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "MTConnectAssets");
    private static final QName _Asset_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "Asset");
    private static final QName _CuttingTool_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingTool");
    private static final QName _CuttingToolArchetype_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingToolArchetype");
    private static final QName _Measurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "Measurement");
    private static final QName _CommonMeasurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CommonMeasurement");
    private static final QName _AssemblyMeasurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "AssemblyMeasurement");
    private static final QName _CuttingItemMeasurement_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingItemMeasurement");
    private static final QName _ProtrudingLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "ProtrudingLength");
    private static final QName _Weight_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "Weight");
    private static final QName _FunctionalLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "FunctionalLength");
    private static final QName _BodyDiameterMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "BodyDiameterMax");
    private static final QName _BodyLengthMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "BodyLengthMax");
    private static final QName _CuttingDiameterMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingDiameterMax");
    private static final QName _FlangeDiameterMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "FlangeDiameterMax");
    private static final QName _DepthOfCutMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "DepthOfCutMax");
    private static final QName _OverallToolLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "OverallToolLength");
    private static final QName _ShankDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "ShankDiameter");
    private static final QName _ShankHeight_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "ShankHeight");
    private static final QName _ShankLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "ShankLength");
    private static final QName _UsableLengthMax_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "UsableLengthMax");
    private static final QName _CuttingDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingDiameter");
    private static final QName _CornerRadius_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CornerRadius");
    private static final QName _CuttingEdgeLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingEdgeLength");
    private static final QName _CuttingHeight_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingHeight");
    private static final QName _CuttingReferencePoint_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingReferencePoint");
    private static final QName _FlangeDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "FlangeDiameter");
    private static final QName _FunctionalWidth_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "FunctionalWidth");
    private static final QName _InclinationAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "InclinationAngle");
    private static final QName _IncribedCircleDiameter_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "IncribedCircleDiameter");
    private static final QName _PointAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "PointAngle");
    private static final QName _StepDiameterLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "StepDiameterLength");
    private static final QName _StepIncludedAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "StepIncludedAngle");
    private static final QName _ToolCuttingEdgeAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "ToolCuttingEdgeAngle");
    private static final QName _ToolLeadAngle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "ToolLeadAngle");
    private static final QName _WiperEdgeLength_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "WiperEdgeLength");
    private static final QName _CuttingToolArchetypeTypeCuttingToolDefinition_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingToolDefinition");
    private static final QName _CuttingToolArchetypeTypeCuttingToolLifeCycle_QNAME = new QName("urn:mtconnect.org:MTConnectAssets:1.4", "CuttingToolLifeCycle");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.hivemq.edge.adapters.mtconnect.schemas.assets.assets_1_4
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MTConnectAssetsType }
     * 
     * @return
     *     the new instance of {@link MTConnectAssetsType }
     */
    public MTConnectAssetsType createMTConnectAssetsType() {
        return new MTConnectAssetsType();
    }

    /**
     * Create an instance of {@link CuttingToolType }
     * 
     * @return
     *     the new instance of {@link CuttingToolType }
     */
    public CuttingToolType createCuttingToolType() {
        return new CuttingToolType();
    }

    /**
     * Create an instance of {@link CuttingToolArchetypeType }
     * 
     * @return
     *     the new instance of {@link CuttingToolArchetypeType }
     */
    public CuttingToolArchetypeType createCuttingToolArchetypeType() {
        return new CuttingToolArchetypeType();
    }

    /**
     * Create an instance of {@link ProtrudingLengthType }
     * 
     * @return
     *     the new instance of {@link ProtrudingLengthType }
     */
    public ProtrudingLengthType createProtrudingLengthType() {
        return new ProtrudingLengthType();
    }

    /**
     * Create an instance of {@link WeightType }
     * 
     * @return
     *     the new instance of {@link WeightType }
     */
    public WeightType createWeightType() {
        return new WeightType();
    }

    /**
     * Create an instance of {@link FunctionalLengthType }
     * 
     * @return
     *     the new instance of {@link FunctionalLengthType }
     */
    public FunctionalLengthType createFunctionalLengthType() {
        return new FunctionalLengthType();
    }

    /**
     * Create an instance of {@link BodyDiameterMaxType }
     * 
     * @return
     *     the new instance of {@link BodyDiameterMaxType }
     */
    public BodyDiameterMaxType createBodyDiameterMaxType() {
        return new BodyDiameterMaxType();
    }

    /**
     * Create an instance of {@link BodyLengthMaxType }
     * 
     * @return
     *     the new instance of {@link BodyLengthMaxType }
     */
    public BodyLengthMaxType createBodyLengthMaxType() {
        return new BodyLengthMaxType();
    }

    /**
     * Create an instance of {@link CuttingDiameterMaxType }
     * 
     * @return
     *     the new instance of {@link CuttingDiameterMaxType }
     */
    public CuttingDiameterMaxType createCuttingDiameterMaxType() {
        return new CuttingDiameterMaxType();
    }

    /**
     * Create an instance of {@link FlangeDiameterMaxType }
     * 
     * @return
     *     the new instance of {@link FlangeDiameterMaxType }
     */
    public FlangeDiameterMaxType createFlangeDiameterMaxType() {
        return new FlangeDiameterMaxType();
    }

    /**
     * Create an instance of {@link DepthOfCutMaxType }
     * 
     * @return
     *     the new instance of {@link DepthOfCutMaxType }
     */
    public DepthOfCutMaxType createDepthOfCutMaxType() {
        return new DepthOfCutMaxType();
    }

    /**
     * Create an instance of {@link OverallToolLengthType }
     * 
     * @return
     *     the new instance of {@link OverallToolLengthType }
     */
    public OverallToolLengthType createOverallToolLengthType() {
        return new OverallToolLengthType();
    }

    /**
     * Create an instance of {@link ShankDiameterType }
     * 
     * @return
     *     the new instance of {@link ShankDiameterType }
     */
    public ShankDiameterType createShankDiameterType() {
        return new ShankDiameterType();
    }

    /**
     * Create an instance of {@link ShankHeightType }
     * 
     * @return
     *     the new instance of {@link ShankHeightType }
     */
    public ShankHeightType createShankHeightType() {
        return new ShankHeightType();
    }

    /**
     * Create an instance of {@link ShankLengthType }
     * 
     * @return
     *     the new instance of {@link ShankLengthType }
     */
    public ShankLengthType createShankLengthType() {
        return new ShankLengthType();
    }

    /**
     * Create an instance of {@link UsableLengthMaxType }
     * 
     * @return
     *     the new instance of {@link UsableLengthMaxType }
     */
    public UsableLengthMaxType createUsableLengthMaxType() {
        return new UsableLengthMaxType();
    }

    /**
     * Create an instance of {@link CuttingDiameterType }
     * 
     * @return
     *     the new instance of {@link CuttingDiameterType }
     */
    public CuttingDiameterType createCuttingDiameterType() {
        return new CuttingDiameterType();
    }

    /**
     * Create an instance of {@link CornerRadiusType }
     * 
     * @return
     *     the new instance of {@link CornerRadiusType }
     */
    public CornerRadiusType createCornerRadiusType() {
        return new CornerRadiusType();
    }

    /**
     * Create an instance of {@link CuttingEdgeLengthType }
     * 
     * @return
     *     the new instance of {@link CuttingEdgeLengthType }
     */
    public CuttingEdgeLengthType createCuttingEdgeLengthType() {
        return new CuttingEdgeLengthType();
    }

    /**
     * Create an instance of {@link CuttingHeightType }
     * 
     * @return
     *     the new instance of {@link CuttingHeightType }
     */
    public CuttingHeightType createCuttingHeightType() {
        return new CuttingHeightType();
    }

    /**
     * Create an instance of {@link CuttingReferencePointType }
     * 
     * @return
     *     the new instance of {@link CuttingReferencePointType }
     */
    public CuttingReferencePointType createCuttingReferencePointType() {
        return new CuttingReferencePointType();
    }

    /**
     * Create an instance of {@link FlangeDiameterType }
     * 
     * @return
     *     the new instance of {@link FlangeDiameterType }
     */
    public FlangeDiameterType createFlangeDiameterType() {
        return new FlangeDiameterType();
    }

    /**
     * Create an instance of {@link FunctionalWidthType }
     * 
     * @return
     *     the new instance of {@link FunctionalWidthType }
     */
    public FunctionalWidthType createFunctionalWidthType() {
        return new FunctionalWidthType();
    }

    /**
     * Create an instance of {@link InclinationAngleType }
     * 
     * @return
     *     the new instance of {@link InclinationAngleType }
     */
    public InclinationAngleType createInclinationAngleType() {
        return new InclinationAngleType();
    }

    /**
     * Create an instance of {@link IncribedCircleDiameterType }
     * 
     * @return
     *     the new instance of {@link IncribedCircleDiameterType }
     */
    public IncribedCircleDiameterType createIncribedCircleDiameterType() {
        return new IncribedCircleDiameterType();
    }

    /**
     * Create an instance of {@link PointAngleType }
     * 
     * @return
     *     the new instance of {@link PointAngleType }
     */
    public PointAngleType createPointAngleType() {
        return new PointAngleType();
    }

    /**
     * Create an instance of {@link StepDiameterLengthType }
     * 
     * @return
     *     the new instance of {@link StepDiameterLengthType }
     */
    public StepDiameterLengthType createStepDiameterLengthType() {
        return new StepDiameterLengthType();
    }

    /**
     * Create an instance of {@link StepIncludedAngleType }
     * 
     * @return
     *     the new instance of {@link StepIncludedAngleType }
     */
    public StepIncludedAngleType createStepIncludedAngleType() {
        return new StepIncludedAngleType();
    }

    /**
     * Create an instance of {@link ToolCuttingEdgeAngleType }
     * 
     * @return
     *     the new instance of {@link ToolCuttingEdgeAngleType }
     */
    public ToolCuttingEdgeAngleType createToolCuttingEdgeAngleType() {
        return new ToolCuttingEdgeAngleType();
    }

    /**
     * Create an instance of {@link ToolLeadAngleType }
     * 
     * @return
     *     the new instance of {@link ToolLeadAngleType }
     */
    public ToolLeadAngleType createToolLeadAngleType() {
        return new ToolLeadAngleType();
    }

    /**
     * Create an instance of {@link WiperEdgeLengthType }
     * 
     * @return
     *     the new instance of {@link WiperEdgeLengthType }
     */
    public WiperEdgeLengthType createWiperEdgeLengthType() {
        return new WiperEdgeLengthType();
    }

    /**
     * Create an instance of {@link HeaderType }
     * 
     * @return
     *     the new instance of {@link HeaderType }
     */
    public HeaderType createHeaderType() {
        return new HeaderType();
    }

    /**
     * Create an instance of {@link AssetDescriptionType }
     * 
     * @return
     *     the new instance of {@link AssetDescriptionType }
     */
    public AssetDescriptionType createAssetDescriptionType() {
        return new AssetDescriptionType();
    }

    /**
     * Create an instance of {@link AssetsType }
     * 
     * @return
     *     the new instance of {@link AssetsType }
     */
    public AssetsType createAssetsType() {
        return new AssetsType();
    }

    /**
     * Create an instance of {@link CuttingToolDefinitionType }
     * 
     * @return
     *     the new instance of {@link CuttingToolDefinitionType }
     */
    public CuttingToolDefinitionType createCuttingToolDefinitionType() {
        return new CuttingToolDefinitionType();
    }

    /**
     * Create an instance of {@link CuttingToolLifeCycleArchetypeType }
     * 
     * @return
     *     the new instance of {@link CuttingToolLifeCycleArchetypeType }
     */
    public CuttingToolLifeCycleArchetypeType createCuttingToolLifeCycleArchetypeType() {
        return new CuttingToolLifeCycleArchetypeType();
    }

    /**
     * Create an instance of {@link CuttingToolLifeCycleType }
     * 
     * @return
     *     the new instance of {@link CuttingToolLifeCycleType }
     */
    public CuttingToolLifeCycleType createCuttingToolLifeCycleType() {
        return new CuttingToolLifeCycleType();
    }

    /**
     * Create an instance of {@link CuttingToolArchetypeReferenceType }
     * 
     * @return
     *     the new instance of {@link CuttingToolArchetypeReferenceType }
     */
    public CuttingToolArchetypeReferenceType createCuttingToolArchetypeReferenceType() {
        return new CuttingToolArchetypeReferenceType();
    }

    /**
     * Create an instance of {@link CutterStatusType }
     * 
     * @return
     *     the new instance of {@link CutterStatusType }
     */
    public CutterStatusType createCutterStatusType() {
        return new CutterStatusType();
    }

    /**
     * Create an instance of {@link LocationType }
     * 
     * @return
     *     the new instance of {@link LocationType }
     */
    public LocationType createLocationType() {
        return new LocationType();
    }

    /**
     * Create an instance of {@link ReconditionCountType }
     * 
     * @return
     *     the new instance of {@link ReconditionCountType }
     */
    public ReconditionCountType createReconditionCountType() {
        return new ReconditionCountType();
    }

    /**
     * Create an instance of {@link ProcessSpindleSpeedType }
     * 
     * @return
     *     the new instance of {@link ProcessSpindleSpeedType }
     */
    public ProcessSpindleSpeedType createProcessSpindleSpeedType() {
        return new ProcessSpindleSpeedType();
    }

    /**
     * Create an instance of {@link ProcessFeedRateType }
     * 
     * @return
     *     the new instance of {@link ProcessFeedRateType }
     */
    public ProcessFeedRateType createProcessFeedRateType() {
        return new ProcessFeedRateType();
    }

    /**
     * Create an instance of {@link AssemblyMeasurementsType }
     * 
     * @return
     *     the new instance of {@link AssemblyMeasurementsType }
     */
    public AssemblyMeasurementsType createAssemblyMeasurementsType() {
        return new AssemblyMeasurementsType();
    }

    /**
     * Create an instance of {@link LifeType }
     * 
     * @return
     *     the new instance of {@link LifeType }
     */
    public LifeType createLifeType() {
        return new LifeType();
    }

    /**
     * Create an instance of {@link CuttingItemMeasurementsType }
     * 
     * @return
     *     the new instance of {@link CuttingItemMeasurementsType }
     */
    public CuttingItemMeasurementsType createCuttingItemMeasurementsType() {
        return new CuttingItemMeasurementsType();
    }

    /**
     * Create an instance of {@link ToolOrientationType }
     * 
     * @return
     *     the new instance of {@link ToolOrientationType }
     */
    public ToolOrientationType createToolOrientationType() {
        return new ToolOrientationType();
    }

    /**
     * Create an instance of {@link DriveAngleType }
     * 
     * @return
     *     the new instance of {@link DriveAngleType }
     */
    public DriveAngleType createDriveAngleType() {
        return new DriveAngleType();
    }

    /**
     * Create an instance of {@link CuttingItemsType }
     * 
     * @return
     *     the new instance of {@link CuttingItemsType }
     */
    public CuttingItemsType createCuttingItemsType() {
        return new CuttingItemsType();
    }

    /**
     * Create an instance of {@link CuttingItemType }
     * 
     * @return
     *     the new instance of {@link CuttingItemType }
     */
    public CuttingItemType createCuttingItemType() {
        return new CuttingItemType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MTConnectAssetsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MTConnectAssetsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "MTConnectAssets")
    public JAXBElement<MTConnectAssetsType> createMTConnectAssets(MTConnectAssetsType value) {
        return new JAXBElement<>(_MTConnectAssets_QNAME, MTConnectAssetsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssetType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AssetType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "Asset")
    public JAXBElement<AssetType> createAsset(AssetType value) {
        return new JAXBElement<>(_Asset_QNAME, AssetType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingToolType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingTool", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "Asset")
    public JAXBElement<CuttingToolType> createCuttingTool(CuttingToolType value) {
        return new JAXBElement<>(_CuttingTool_QNAME, CuttingToolType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolArchetypeType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingToolArchetypeType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingToolArchetype", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "Asset")
    public JAXBElement<CuttingToolArchetypeType> createCuttingToolArchetype(CuttingToolArchetypeType value) {
        return new JAXBElement<>(_CuttingToolArchetype_QNAME, CuttingToolArchetypeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MeasurementType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MeasurementType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "Measurement")
    public JAXBElement<MeasurementType> createMeasurement(MeasurementType value) {
        return new JAXBElement<>(_Measurement_QNAME, MeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommonMeasurementType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CommonMeasurementType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CommonMeasurement", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "Measurement")
    public JAXBElement<CommonMeasurementType> createCommonMeasurement(CommonMeasurementType value) {
        return new JAXBElement<>(_CommonMeasurement_QNAME, CommonMeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AssemblyMeasurementType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AssemblyMeasurementType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "AssemblyMeasurement", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "Measurement")
    public JAXBElement<AssemblyMeasurementType> createAssemblyMeasurement(AssemblyMeasurementType value) {
        return new JAXBElement<>(_AssemblyMeasurement_QNAME, AssemblyMeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingItemMeasurementType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingItemMeasurementType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingItemMeasurement", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "Measurement")
    public JAXBElement<CuttingItemMeasurementType> createCuttingItemMeasurement(CuttingItemMeasurementType value) {
        return new JAXBElement<>(_CuttingItemMeasurement_QNAME, CuttingItemMeasurementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProtrudingLengthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProtrudingLengthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "ProtrudingLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CommonMeasurement")
    public JAXBElement<ProtrudingLengthType> createProtrudingLength(ProtrudingLengthType value) {
        return new JAXBElement<>(_ProtrudingLength_QNAME, ProtrudingLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WeightType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link WeightType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "Weight", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CommonMeasurement")
    public JAXBElement<WeightType> createWeight(WeightType value) {
        return new JAXBElement<>(_Weight_QNAME, WeightType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalLengthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FunctionalLengthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "FunctionalLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CommonMeasurement")
    public JAXBElement<FunctionalLengthType> createFunctionalLength(FunctionalLengthType value) {
        return new JAXBElement<>(_FunctionalLength_QNAME, FunctionalLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BodyDiameterMaxType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BodyDiameterMaxType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "BodyDiameterMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<BodyDiameterMaxType> createBodyDiameterMax(BodyDiameterMaxType value) {
        return new JAXBElement<>(_BodyDiameterMax_QNAME, BodyDiameterMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BodyLengthMaxType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BodyLengthMaxType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "BodyLengthMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<BodyLengthMaxType> createBodyLengthMax(BodyLengthMaxType value) {
        return new JAXBElement<>(_BodyLengthMax_QNAME, BodyLengthMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingDiameterMaxType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingDiameterMaxType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingDiameterMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<CuttingDiameterMaxType> createCuttingDiameterMax(CuttingDiameterMaxType value) {
        return new JAXBElement<>(_CuttingDiameterMax_QNAME, CuttingDiameterMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlangeDiameterMaxType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FlangeDiameterMaxType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "FlangeDiameterMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<FlangeDiameterMaxType> createFlangeDiameterMax(FlangeDiameterMaxType value) {
        return new JAXBElement<>(_FlangeDiameterMax_QNAME, FlangeDiameterMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DepthOfCutMaxType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DepthOfCutMaxType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "DepthOfCutMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<DepthOfCutMaxType> createDepthOfCutMax(DepthOfCutMaxType value) {
        return new JAXBElement<>(_DepthOfCutMax_QNAME, DepthOfCutMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OverallToolLengthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link OverallToolLengthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "OverallToolLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<OverallToolLengthType> createOverallToolLength(OverallToolLengthType value) {
        return new JAXBElement<>(_OverallToolLength_QNAME, OverallToolLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShankDiameterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ShankDiameterType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "ShankDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<ShankDiameterType> createShankDiameter(ShankDiameterType value) {
        return new JAXBElement<>(_ShankDiameter_QNAME, ShankDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShankHeightType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ShankHeightType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "ShankHeight", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<ShankHeightType> createShankHeight(ShankHeightType value) {
        return new JAXBElement<>(_ShankHeight_QNAME, ShankHeightType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ShankLengthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ShankLengthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "ShankLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<ShankLengthType> createShankLength(ShankLengthType value) {
        return new JAXBElement<>(_ShankLength_QNAME, ShankLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UsableLengthMaxType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link UsableLengthMaxType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "UsableLengthMax", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "AssemblyMeasurement")
    public JAXBElement<UsableLengthMaxType> createUsableLengthMax(UsableLengthMaxType value) {
        return new JAXBElement<>(_UsableLengthMax_QNAME, UsableLengthMaxType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingDiameterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingDiameterType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingDiameterType> createCuttingDiameter(CuttingDiameterType value) {
        return new JAXBElement<>(_CuttingDiameter_QNAME, CuttingDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CornerRadiusType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CornerRadiusType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CornerRadius", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CornerRadiusType> createCornerRadius(CornerRadiusType value) {
        return new JAXBElement<>(_CornerRadius_QNAME, CornerRadiusType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingEdgeLengthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingEdgeLengthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingEdgeLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingEdgeLengthType> createCuttingEdgeLength(CuttingEdgeLengthType value) {
        return new JAXBElement<>(_CuttingEdgeLength_QNAME, CuttingEdgeLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingHeightType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingHeightType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingHeight", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingHeightType> createCuttingHeight(CuttingHeightType value) {
        return new JAXBElement<>(_CuttingHeight_QNAME, CuttingHeightType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingReferencePointType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingReferencePointType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingReferencePoint", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<CuttingReferencePointType> createCuttingReferencePoint(CuttingReferencePointType value) {
        return new JAXBElement<>(_CuttingReferencePoint_QNAME, CuttingReferencePointType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlangeDiameterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FlangeDiameterType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "FlangeDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<FlangeDiameterType> createFlangeDiameter(FlangeDiameterType value) {
        return new JAXBElement<>(_FlangeDiameter_QNAME, FlangeDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FunctionalWidthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FunctionalWidthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "FunctionalWidth", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<FunctionalWidthType> createFunctionalWidth(FunctionalWidthType value) {
        return new JAXBElement<>(_FunctionalWidth_QNAME, FunctionalWidthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InclinationAngleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link InclinationAngleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "InclinationAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<InclinationAngleType> createInclinationAngle(InclinationAngleType value) {
        return new JAXBElement<>(_InclinationAngle_QNAME, InclinationAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IncribedCircleDiameterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link IncribedCircleDiameterType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "IncribedCircleDiameter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<IncribedCircleDiameterType> createIncribedCircleDiameter(IncribedCircleDiameterType value) {
        return new JAXBElement<>(_IncribedCircleDiameter_QNAME, IncribedCircleDiameterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PointAngleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PointAngleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "PointAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<PointAngleType> createPointAngle(PointAngleType value) {
        return new JAXBElement<>(_PointAngle_QNAME, PointAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StepDiameterLengthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StepDiameterLengthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "StepDiameterLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<StepDiameterLengthType> createStepDiameterLength(StepDiameterLengthType value) {
        return new JAXBElement<>(_StepDiameterLength_QNAME, StepDiameterLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StepIncludedAngleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StepIncludedAngleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "StepIncludedAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<StepIncludedAngleType> createStepIncludedAngle(StepIncludedAngleType value) {
        return new JAXBElement<>(_StepIncludedAngle_QNAME, StepIncludedAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ToolCuttingEdgeAngleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ToolCuttingEdgeAngleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "ToolCuttingEdgeAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<ToolCuttingEdgeAngleType> createToolCuttingEdgeAngle(ToolCuttingEdgeAngleType value) {
        return new JAXBElement<>(_ToolCuttingEdgeAngle_QNAME, ToolCuttingEdgeAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ToolLeadAngleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ToolLeadAngleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "ToolLeadAngle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<ToolLeadAngleType> createToolLeadAngle(ToolLeadAngleType value) {
        return new JAXBElement<>(_ToolLeadAngle_QNAME, ToolLeadAngleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WiperEdgeLengthType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link WiperEdgeLengthType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "WiperEdgeLength", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectAssets:1.4", substitutionHeadName = "CuttingItemMeasurement")
    public JAXBElement<WiperEdgeLengthType> createWiperEdgeLength(WiperEdgeLengthType value) {
        return new JAXBElement<>(_WiperEdgeLength_QNAME, WiperEdgeLengthType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolDefinitionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingToolDefinitionType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingToolDefinition", scope = CuttingToolArchetypeType.class)
    public JAXBElement<CuttingToolDefinitionType> createCuttingToolArchetypeTypeCuttingToolDefinition(CuttingToolDefinitionType value) {
        return new JAXBElement<>(_CuttingToolArchetypeTypeCuttingToolDefinition_QNAME, CuttingToolDefinitionType.class, CuttingToolArchetypeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolLifeCycleArchetypeType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingToolLifeCycleArchetypeType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingToolLifeCycle", scope = CuttingToolArchetypeType.class)
    public JAXBElement<CuttingToolLifeCycleArchetypeType> createCuttingToolArchetypeTypeCuttingToolLifeCycle(CuttingToolLifeCycleArchetypeType value) {
        return new JAXBElement<>(_CuttingToolArchetypeTypeCuttingToolLifeCycle_QNAME, CuttingToolLifeCycleArchetypeType.class, CuttingToolArchetypeType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolDefinitionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingToolDefinitionType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingToolDefinition", scope = CuttingToolType.class)
    public JAXBElement<CuttingToolDefinitionType> createCuttingToolTypeCuttingToolDefinition(CuttingToolDefinitionType value) {
        return new JAXBElement<>(_CuttingToolArchetypeTypeCuttingToolDefinition_QNAME, CuttingToolDefinitionType.class, CuttingToolType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CuttingToolLifeCycleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CuttingToolLifeCycleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectAssets:1.4", name = "CuttingToolLifeCycle", scope = CuttingToolType.class)
    public JAXBElement<CuttingToolLifeCycleType> createCuttingToolTypeCuttingToolLifeCycle(CuttingToolLifeCycleType value) {
        return new JAXBElement<>(_CuttingToolArchetypeTypeCuttingToolLifeCycle_QNAME, CuttingToolLifeCycleType.class, CuttingToolType.class, value);
    }

}
