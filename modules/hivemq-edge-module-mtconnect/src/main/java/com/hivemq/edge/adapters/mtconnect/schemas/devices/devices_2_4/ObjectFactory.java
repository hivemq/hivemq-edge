//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.hivemq.edge.adapters.mtconnect.schemas.devices.devices_2_4;

import javax.xml.namespace.QName;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.hivemq.edge.adapters.mtconnect.schemas.devices.devices_2_4 package. 
 * <p>An ObjectFactory allows you to programmatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private static final QName _MTConnectDevices_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "MTConnectDevices");
    private static final QName _Component_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Component");
    private static final QName _CommonComponent_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "CommonComponent");
    private static final QName _Device_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Device");
    private static final QName _Agent_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Agent");
    private static final QName _Actuator_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Actuator");
    private static final QName _System_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "System");
    private static final QName _Auxiliary_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Auxiliary");
    private static final QName _Axis_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Axis");
    private static final QName _BarFeeder_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "BarFeeder");
    private static final QName _Loader_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Loader");
    private static final QName _Controller_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Controller");
    private static final QName _Coolant_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Coolant");
    private static final QName _Deposition_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Deposition");
    private static final QName _Dielectric_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Dielectric");
    private static final QName _Door_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Door");
    private static final QName _Electric_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Electric");
    private static final QName _Enclosure_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Enclosure");
    private static final QName _EndEffector_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "EndEffector");
    private static final QName _Environmental_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Environmental");
    private static final QName _Feeder_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Feeder");
    private static final QName _Hydraulic_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Hydraulic");
    private static final QName _Linear_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Linear");
    private static final QName _Lubrication_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Lubrication");
    private static final QName _Material_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Material");
    private static final QName _Resource_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Resource");
    private static final QName _Path_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Path");
    private static final QName _Personnel_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Personnel");
    private static final QName _Pneumatic_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Pneumatic");
    private static final QName _Power_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Power");
    private static final QName _ProcessPower_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ProcessPower");
    private static final QName _Protective_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Protective");
    private static final QName _Rotary_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Rotary");
    private static final QName _Sensor_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Sensor");
    private static final QName _Stock_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Stock");
    private static final QName _ToolingDelivery_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ToolingDelivery");
    private static final QName _WasteDisposal_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "WasteDisposal");
    private static final QName _Structure_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Structure");
    private static final QName _Link_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Link");
    private static final QName _GangToolBar_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "GangToolBar");
    private static final QName _Heating_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Heating");
    private static final QName _AutomaticToolChanger_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "AutomaticToolChanger");
    private static final QName _Process_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Process");
    private static final QName _ToolMagazine_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ToolMagazine");
    private static final QName _PartOccurrence_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "PartOccurrence");
    private static final QName _Part_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Part");
    private static final QName _Adapter_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Adapter");
    private static final QName _ToolRack_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ToolRack");
    private static final QName _Turret_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Turret");
    private static final QName _Vacuum_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Vacuum");
    private static final QName _Cooling_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Cooling");
    private static final QName _ProcessOccurrence_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ProcessOccurrence");
    private static final QName _Pressure_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Pressure");
    private static final QName _Lock_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Lock");
    private static final QName _Spindle_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Spindle");
    private static final QName _Thermostat_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Thermostat");
    private static final QName _Vibration_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Vibration");
    private static final QName _Chuck_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Chuck");
    private static final QName _Fan_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Fan");
    private static final QName _Spreader_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Spreader");
    private static final QName _Pulley_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Pulley");
    private static final QName _TransferPot_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "TransferPot");
    private static final QName _PowerSupply_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "PowerSupply");
    private static final QName _Drain_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Drain");
    private static final QName _Ballscrew_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Ballscrew");
    private static final QName _Compressor_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Compressor");
    private static final QName _Chute_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Chute");
    private static final QName _Switch_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Switch");
    private static final QName _Tensioner_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Tensioner");
    private static final QName _Water_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Water");
    private static final QName _Wire_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Wire");
    private static final QName _SensingElement_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "SensingElement");
    private static final QName _CoolingTower_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "CoolingTower");
    private static final QName _RemovalPot_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "RemovalPot");
    private static final QName _Gripper_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Gripper");
    private static final QName _StagingPot_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "StagingPot");
    private static final QName _Brake_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Brake");
    private static final QName _Station_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Station");
    private static final QName _Hopper_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Hopper");
    private static final QName _Belt_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Belt");
    private static final QName _TransferArm_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "TransferArm");
    private static final QName _Reel_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Reel");
    private static final QName _Filter_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Filter");
    private static final QName _ReturnPot_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ReturnPot");
    private static final QName _Chain_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Chain");
    private static final QName _Amplifier_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Amplifier");
    private static final QName _Vat_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Vat");
    private static final QName _ExpiredPot_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ExpiredPot");
    private static final QName _Oil_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Oil");
    private static final QName _Table_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Table");
    private static final QName _Chopper_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Chopper");
    private static final QName _Valve_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Valve");
    private static final QName _Pot_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Pot");
    private static final QName _Transformer_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Transformer");
    private static final QName _ExposureUnit_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ExposureUnit");
    private static final QName _Tank_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Tank");
    private static final QName _Encoder_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Encoder");
    private static final QName _StorageBattery_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "StorageBattery");
    private static final QName _CircuitBreaker_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "CircuitBreaker");
    private static final QName _Motor_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Motor");
    private static final QName _ExtrusionUnit_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ExtrusionUnit");
    private static final QName _Galvanomotor_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Galvanomotor");
    private static final QName _Pump_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Pump");
    private static final QName _Clamp_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Clamp");
    private static final QName _LinearPositionFeedback_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "LinearPositionFeedback");
    private static final QName _Workpiece_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Workpiece");
    private static final QName _WorkEnvelope_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "WorkEnvelope");
    private static final QName _FeatureOccurrence_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "FeatureOccurrence");
    private static final QName _AirHandler_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "AirHandler");
    private static final QName _Structures_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Structures");
    private static final QName _Interfaces_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Interfaces");
    private static final QName _Auxiliaries_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Auxiliaries");
    private static final QName _Systems_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Systems");
    private static final QName _Adapters_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Adapters");
    private static final QName _Resources_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Resources");
    private static final QName _Axes_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Axes");
    private static final QName _Processes_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Processes");
    private static final QName _Parts_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Parts");
    private static final QName _Materials_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Materials");
    private static final QName _Controllers_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Controllers");
    private static final QName _Reference_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Reference");
    private static final QName _DataItemRef_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "DataItemRef");
    private static final QName _ComponentRef_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ComponentRef");
    private static final QName _AbstractConfiguration_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "AbstractConfiguration");
    private static final QName _SensorConfiguration_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "SensorConfiguration");
    private static final QName _Specifications_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Specifications");
    private static final QName _AbstractSpecification_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "AbstractSpecification");
    private static final QName _Specification_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Specification");
    private static final QName _Constraint_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Constraint");
    private static final QName _Maximum_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Maximum");
    private static final QName _Minimum_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Minimum");
    private static final QName _Nominal_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Nominal");
    private static final QName _UpperLimit_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "UpperLimit");
    private static final QName _UpperWarning_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "UpperWarning");
    private static final QName _LowerWarning_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "LowerWarning");
    private static final QName _LowerLimit_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "LowerLimit");
    private static final QName _ProcessSpecification_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ProcessSpecification");
    private static final QName _Relationships_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Relationships");
    private static final QName _Relationship_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Relationship");
    private static final QName _ComponentRelationship_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ComponentRelationship");
    private static final QName _DeviceRelationship_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "DeviceRelationship");
    private static final QName _CoordinateSystems_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "CoordinateSystems");
    private static final QName _Motion_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Motion");
    private static final QName _SolidModel_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "SolidModel");
    private static final QName _ImageFiles_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "ImageFiles");
    private static final QName _PowerSources_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "PowerSources");
    private static final QName _AbstractDataItemRelationship_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "AbstractDataItemRelationship");
    private static final QName _DataItemRelationship_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "DataItemRelationship");
    private static final QName _SpecificationRelationship_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "SpecificationRelationship");
    private static final QName _MotionTypeDescription_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Description");
    private static final QName _MotionTypeOrigin_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Origin");
    private static final QName _MotionTypeTransformation_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "Transformation");
    private static final QName _CoordinateSystemsTypeCoordinateSystem_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:2.4", "CoordinateSystem");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.hivemq.edge.adapters.mtconnect.schemas.devices.devices_2_4
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MTConnectDevicesType }
     * 
     * @return
     *     the new instance of {@link MTConnectDevicesType }
     */
    public MTConnectDevicesType createMTConnectDevicesType() {
        return new MTConnectDevicesType();
    }

    /**
     * Create an instance of {@link CommonComponentType }
     * 
     * @return
     *     the new instance of {@link CommonComponentType }
     */
    public CommonComponentType createCommonComponentType() {
        return new CommonComponentType();
    }

    /**
     * Create an instance of {@link DeviceType }
     * 
     * @return
     *     the new instance of {@link DeviceType }
     */
    public DeviceType createDeviceType() {
        return new DeviceType();
    }

    /**
     * Create an instance of {@link AgentType }
     * 
     * @return
     *     the new instance of {@link AgentType }
     */
    public AgentType createAgentType() {
        return new AgentType();
    }

    /**
     * Create an instance of {@link ActuatorType }
     * 
     * @return
     *     the new instance of {@link ActuatorType }
     */
    public ActuatorType createActuatorType() {
        return new ActuatorType();
    }

    /**
     * Create an instance of {@link SystemType }
     * 
     * @return
     *     the new instance of {@link SystemType }
     */
    public SystemType createSystemType() {
        return new SystemType();
    }

    /**
     * Create an instance of {@link AuxiliaryType }
     * 
     * @return
     *     the new instance of {@link AuxiliaryType }
     */
    public AuxiliaryType createAuxiliaryType() {
        return new AuxiliaryType();
    }

    /**
     * Create an instance of {@link AxisType }
     * 
     * @return
     *     the new instance of {@link AxisType }
     */
    public AxisType createAxisType() {
        return new AxisType();
    }

    /**
     * Create an instance of {@link BarFeederType }
     * 
     * @return
     *     the new instance of {@link BarFeederType }
     */
    public BarFeederType createBarFeederType() {
        return new BarFeederType();
    }

    /**
     * Create an instance of {@link LoaderType }
     * 
     * @return
     *     the new instance of {@link LoaderType }
     */
    public LoaderType createLoaderType() {
        return new LoaderType();
    }

    /**
     * Create an instance of {@link ControllerType }
     * 
     * @return
     *     the new instance of {@link ControllerType }
     */
    public ControllerType createControllerType() {
        return new ControllerType();
    }

    /**
     * Create an instance of {@link CoolantType }
     * 
     * @return
     *     the new instance of {@link CoolantType }
     */
    public CoolantType createCoolantType() {
        return new CoolantType();
    }

    /**
     * Create an instance of {@link DepositionType }
     * 
     * @return
     *     the new instance of {@link DepositionType }
     */
    public DepositionType createDepositionType() {
        return new DepositionType();
    }

    /**
     * Create an instance of {@link DielectricType }
     * 
     * @return
     *     the new instance of {@link DielectricType }
     */
    public DielectricType createDielectricType() {
        return new DielectricType();
    }

    /**
     * Create an instance of {@link DoorType }
     * 
     * @return
     *     the new instance of {@link DoorType }
     */
    public DoorType createDoorType() {
        return new DoorType();
    }

    /**
     * Create an instance of {@link ElectricType }
     * 
     * @return
     *     the new instance of {@link ElectricType }
     */
    public ElectricType createElectricType() {
        return new ElectricType();
    }

    /**
     * Create an instance of {@link EnclosureType }
     * 
     * @return
     *     the new instance of {@link EnclosureType }
     */
    public EnclosureType createEnclosureType() {
        return new EnclosureType();
    }

    /**
     * Create an instance of {@link EndEffectorType }
     * 
     * @return
     *     the new instance of {@link EndEffectorType }
     */
    public EndEffectorType createEndEffectorType() {
        return new EndEffectorType();
    }

    /**
     * Create an instance of {@link EnvironmentalType }
     * 
     * @return
     *     the new instance of {@link EnvironmentalType }
     */
    public EnvironmentalType createEnvironmentalType() {
        return new EnvironmentalType();
    }

    /**
     * Create an instance of {@link FeederType }
     * 
     * @return
     *     the new instance of {@link FeederType }
     */
    public FeederType createFeederType() {
        return new FeederType();
    }

    /**
     * Create an instance of {@link HydraulicType }
     * 
     * @return
     *     the new instance of {@link HydraulicType }
     */
    public HydraulicType createHydraulicType() {
        return new HydraulicType();
    }

    /**
     * Create an instance of {@link LinearType }
     * 
     * @return
     *     the new instance of {@link LinearType }
     */
    public LinearType createLinearType() {
        return new LinearType();
    }

    /**
     * Create an instance of {@link LubricationType }
     * 
     * @return
     *     the new instance of {@link LubricationType }
     */
    public LubricationType createLubricationType() {
        return new LubricationType();
    }

    /**
     * Create an instance of {@link MaterialType }
     * 
     * @return
     *     the new instance of {@link MaterialType }
     */
    public MaterialType createMaterialType() {
        return new MaterialType();
    }

    /**
     * Create an instance of {@link ResourceType }
     * 
     * @return
     *     the new instance of {@link ResourceType }
     */
    public ResourceType createResourceType() {
        return new ResourceType();
    }

    /**
     * Create an instance of {@link PathType }
     * 
     * @return
     *     the new instance of {@link PathType }
     */
    public PathType createPathType() {
        return new PathType();
    }

    /**
     * Create an instance of {@link PersonnelType }
     * 
     * @return
     *     the new instance of {@link PersonnelType }
     */
    public PersonnelType createPersonnelType() {
        return new PersonnelType();
    }

    /**
     * Create an instance of {@link PneumaticType }
     * 
     * @return
     *     the new instance of {@link PneumaticType }
     */
    public PneumaticType createPneumaticType() {
        return new PneumaticType();
    }

    /**
     * Create an instance of {@link PowerType }
     * 
     * @return
     *     the new instance of {@link PowerType }
     */
    public PowerType createPowerType() {
        return new PowerType();
    }

    /**
     * Create an instance of {@link ProcessPowerType }
     * 
     * @return
     *     the new instance of {@link ProcessPowerType }
     */
    public ProcessPowerType createProcessPowerType() {
        return new ProcessPowerType();
    }

    /**
     * Create an instance of {@link ProtectiveType }
     * 
     * @return
     *     the new instance of {@link ProtectiveType }
     */
    public ProtectiveType createProtectiveType() {
        return new ProtectiveType();
    }

    /**
     * Create an instance of {@link RotaryType }
     * 
     * @return
     *     the new instance of {@link RotaryType }
     */
    public RotaryType createRotaryType() {
        return new RotaryType();
    }

    /**
     * Create an instance of {@link SensorType }
     * 
     * @return
     *     the new instance of {@link SensorType }
     */
    public SensorType createSensorType() {
        return new SensorType();
    }

    /**
     * Create an instance of {@link StockType }
     * 
     * @return
     *     the new instance of {@link StockType }
     */
    public StockType createStockType() {
        return new StockType();
    }

    /**
     * Create an instance of {@link ToolingDeliveryType }
     * 
     * @return
     *     the new instance of {@link ToolingDeliveryType }
     */
    public ToolingDeliveryType createToolingDeliveryType() {
        return new ToolingDeliveryType();
    }

    /**
     * Create an instance of {@link WasteDisposalType }
     * 
     * @return
     *     the new instance of {@link WasteDisposalType }
     */
    public WasteDisposalType createWasteDisposalType() {
        return new WasteDisposalType();
    }

    /**
     * Create an instance of {@link StructureType }
     * 
     * @return
     *     the new instance of {@link StructureType }
     */
    public StructureType createStructureType() {
        return new StructureType();
    }

    /**
     * Create an instance of {@link LinkType }
     * 
     * @return
     *     the new instance of {@link LinkType }
     */
    public LinkType createLinkType() {
        return new LinkType();
    }

    /**
     * Create an instance of {@link GangToolBarType }
     * 
     * @return
     *     the new instance of {@link GangToolBarType }
     */
    public GangToolBarType createGangToolBarType() {
        return new GangToolBarType();
    }

    /**
     * Create an instance of {@link HeatingType }
     * 
     * @return
     *     the new instance of {@link HeatingType }
     */
    public HeatingType createHeatingType() {
        return new HeatingType();
    }

    /**
     * Create an instance of {@link AutomaticToolChangerType }
     * 
     * @return
     *     the new instance of {@link AutomaticToolChangerType }
     */
    public AutomaticToolChangerType createAutomaticToolChangerType() {
        return new AutomaticToolChangerType();
    }

    /**
     * Create an instance of {@link ProcessType }
     * 
     * @return
     *     the new instance of {@link ProcessType }
     */
    public ProcessType createProcessType() {
        return new ProcessType();
    }

    /**
     * Create an instance of {@link ToolMagazineType }
     * 
     * @return
     *     the new instance of {@link ToolMagazineType }
     */
    public ToolMagazineType createToolMagazineType() {
        return new ToolMagazineType();
    }

    /**
     * Create an instance of {@link PartOccurrenceType }
     * 
     * @return
     *     the new instance of {@link PartOccurrenceType }
     */
    public PartOccurrenceType createPartOccurrenceType() {
        return new PartOccurrenceType();
    }

    /**
     * Create an instance of {@link PartType }
     * 
     * @return
     *     the new instance of {@link PartType }
     */
    public PartType createPartType() {
        return new PartType();
    }

    /**
     * Create an instance of {@link AdapterType }
     * 
     * @return
     *     the new instance of {@link AdapterType }
     */
    public AdapterType createAdapterType() {
        return new AdapterType();
    }

    /**
     * Create an instance of {@link ToolRackType }
     * 
     * @return
     *     the new instance of {@link ToolRackType }
     */
    public ToolRackType createToolRackType() {
        return new ToolRackType();
    }

    /**
     * Create an instance of {@link TurretType }
     * 
     * @return
     *     the new instance of {@link TurretType }
     */
    public TurretType createTurretType() {
        return new TurretType();
    }

    /**
     * Create an instance of {@link VacuumType }
     * 
     * @return
     *     the new instance of {@link VacuumType }
     */
    public VacuumType createVacuumType() {
        return new VacuumType();
    }

    /**
     * Create an instance of {@link CoolingType }
     * 
     * @return
     *     the new instance of {@link CoolingType }
     */
    public CoolingType createCoolingType() {
        return new CoolingType();
    }

    /**
     * Create an instance of {@link ProcessOccurrenceType }
     * 
     * @return
     *     the new instance of {@link ProcessOccurrenceType }
     */
    public ProcessOccurrenceType createProcessOccurrenceType() {
        return new ProcessOccurrenceType();
    }

    /**
     * Create an instance of {@link PressureType }
     * 
     * @return
     *     the new instance of {@link PressureType }
     */
    public PressureType createPressureType() {
        return new PressureType();
    }

    /**
     * Create an instance of {@link LockType }
     * 
     * @return
     *     the new instance of {@link LockType }
     */
    public LockType createLockType() {
        return new LockType();
    }

    /**
     * Create an instance of {@link SpindleType }
     * 
     * @return
     *     the new instance of {@link SpindleType }
     */
    public SpindleType createSpindleType() {
        return new SpindleType();
    }

    /**
     * Create an instance of {@link ThermostatType }
     * 
     * @return
     *     the new instance of {@link ThermostatType }
     */
    public ThermostatType createThermostatType() {
        return new ThermostatType();
    }

    /**
     * Create an instance of {@link VibrationType }
     * 
     * @return
     *     the new instance of {@link VibrationType }
     */
    public VibrationType createVibrationType() {
        return new VibrationType();
    }

    /**
     * Create an instance of {@link ChuckType }
     * 
     * @return
     *     the new instance of {@link ChuckType }
     */
    public ChuckType createChuckType() {
        return new ChuckType();
    }

    /**
     * Create an instance of {@link FanType }
     * 
     * @return
     *     the new instance of {@link FanType }
     */
    public FanType createFanType() {
        return new FanType();
    }

    /**
     * Create an instance of {@link SpreaderType }
     * 
     * @return
     *     the new instance of {@link SpreaderType }
     */
    public SpreaderType createSpreaderType() {
        return new SpreaderType();
    }

    /**
     * Create an instance of {@link PulleyType }
     * 
     * @return
     *     the new instance of {@link PulleyType }
     */
    public PulleyType createPulleyType() {
        return new PulleyType();
    }

    /**
     * Create an instance of {@link TransferPotType }
     * 
     * @return
     *     the new instance of {@link TransferPotType }
     */
    public TransferPotType createTransferPotType() {
        return new TransferPotType();
    }

    /**
     * Create an instance of {@link PowerSupplyType }
     * 
     * @return
     *     the new instance of {@link PowerSupplyType }
     */
    public PowerSupplyType createPowerSupplyType() {
        return new PowerSupplyType();
    }

    /**
     * Create an instance of {@link DrainType }
     * 
     * @return
     *     the new instance of {@link DrainType }
     */
    public DrainType createDrainType() {
        return new DrainType();
    }

    /**
     * Create an instance of {@link BallscrewType }
     * 
     * @return
     *     the new instance of {@link BallscrewType }
     */
    public BallscrewType createBallscrewType() {
        return new BallscrewType();
    }

    /**
     * Create an instance of {@link CompressorType }
     * 
     * @return
     *     the new instance of {@link CompressorType }
     */
    public CompressorType createCompressorType() {
        return new CompressorType();
    }

    /**
     * Create an instance of {@link ChuteType }
     * 
     * @return
     *     the new instance of {@link ChuteType }
     */
    public ChuteType createChuteType() {
        return new ChuteType();
    }

    /**
     * Create an instance of {@link SwitchType }
     * 
     * @return
     *     the new instance of {@link SwitchType }
     */
    public SwitchType createSwitchType() {
        return new SwitchType();
    }

    /**
     * Create an instance of {@link TensionerType }
     * 
     * @return
     *     the new instance of {@link TensionerType }
     */
    public TensionerType createTensionerType() {
        return new TensionerType();
    }

    /**
     * Create an instance of {@link WaterType }
     * 
     * @return
     *     the new instance of {@link WaterType }
     */
    public WaterType createWaterType() {
        return new WaterType();
    }

    /**
     * Create an instance of {@link WireType }
     * 
     * @return
     *     the new instance of {@link WireType }
     */
    public WireType createWireType() {
        return new WireType();
    }

    /**
     * Create an instance of {@link SensingElementType }
     * 
     * @return
     *     the new instance of {@link SensingElementType }
     */
    public SensingElementType createSensingElementType() {
        return new SensingElementType();
    }

    /**
     * Create an instance of {@link CoolingTowerType }
     * 
     * @return
     *     the new instance of {@link CoolingTowerType }
     */
    public CoolingTowerType createCoolingTowerType() {
        return new CoolingTowerType();
    }

    /**
     * Create an instance of {@link RemovalPotType }
     * 
     * @return
     *     the new instance of {@link RemovalPotType }
     */
    public RemovalPotType createRemovalPotType() {
        return new RemovalPotType();
    }

    /**
     * Create an instance of {@link GripperType }
     * 
     * @return
     *     the new instance of {@link GripperType }
     */
    public GripperType createGripperType() {
        return new GripperType();
    }

    /**
     * Create an instance of {@link StagingPotType }
     * 
     * @return
     *     the new instance of {@link StagingPotType }
     */
    public StagingPotType createStagingPotType() {
        return new StagingPotType();
    }

    /**
     * Create an instance of {@link BrakeType }
     * 
     * @return
     *     the new instance of {@link BrakeType }
     */
    public BrakeType createBrakeType() {
        return new BrakeType();
    }

    /**
     * Create an instance of {@link StationType }
     * 
     * @return
     *     the new instance of {@link StationType }
     */
    public StationType createStationType() {
        return new StationType();
    }

    /**
     * Create an instance of {@link HopperType }
     * 
     * @return
     *     the new instance of {@link HopperType }
     */
    public HopperType createHopperType() {
        return new HopperType();
    }

    /**
     * Create an instance of {@link BeltType }
     * 
     * @return
     *     the new instance of {@link BeltType }
     */
    public BeltType createBeltType() {
        return new BeltType();
    }

    /**
     * Create an instance of {@link TransferArmType }
     * 
     * @return
     *     the new instance of {@link TransferArmType }
     */
    public TransferArmType createTransferArmType() {
        return new TransferArmType();
    }

    /**
     * Create an instance of {@link ReelType }
     * 
     * @return
     *     the new instance of {@link ReelType }
     */
    public ReelType createReelType() {
        return new ReelType();
    }

    /**
     * Create an instance of {@link FilterType }
     * 
     * @return
     *     the new instance of {@link FilterType }
     */
    public FilterType createFilterType() {
        return new FilterType();
    }

    /**
     * Create an instance of {@link ReturnPotType }
     * 
     * @return
     *     the new instance of {@link ReturnPotType }
     */
    public ReturnPotType createReturnPotType() {
        return new ReturnPotType();
    }

    /**
     * Create an instance of {@link ChainType }
     * 
     * @return
     *     the new instance of {@link ChainType }
     */
    public ChainType createChainType() {
        return new ChainType();
    }

    /**
     * Create an instance of {@link AmplifierType }
     * 
     * @return
     *     the new instance of {@link AmplifierType }
     */
    public AmplifierType createAmplifierType() {
        return new AmplifierType();
    }

    /**
     * Create an instance of {@link VatType }
     * 
     * @return
     *     the new instance of {@link VatType }
     */
    public VatType createVatType() {
        return new VatType();
    }

    /**
     * Create an instance of {@link ExpiredPotType }
     * 
     * @return
     *     the new instance of {@link ExpiredPotType }
     */
    public ExpiredPotType createExpiredPotType() {
        return new ExpiredPotType();
    }

    /**
     * Create an instance of {@link OilType }
     * 
     * @return
     *     the new instance of {@link OilType }
     */
    public OilType createOilType() {
        return new OilType();
    }

    /**
     * Create an instance of {@link TableType }
     * 
     * @return
     *     the new instance of {@link TableType }
     */
    public TableType createTableType() {
        return new TableType();
    }

    /**
     * Create an instance of {@link ChopperType }
     * 
     * @return
     *     the new instance of {@link ChopperType }
     */
    public ChopperType createChopperType() {
        return new ChopperType();
    }

    /**
     * Create an instance of {@link ValveType }
     * 
     * @return
     *     the new instance of {@link ValveType }
     */
    public ValveType createValveType() {
        return new ValveType();
    }

    /**
     * Create an instance of {@link PotType }
     * 
     * @return
     *     the new instance of {@link PotType }
     */
    public PotType createPotType() {
        return new PotType();
    }

    /**
     * Create an instance of {@link TransformerType }
     * 
     * @return
     *     the new instance of {@link TransformerType }
     */
    public TransformerType createTransformerType() {
        return new TransformerType();
    }

    /**
     * Create an instance of {@link ExposureUnitType }
     * 
     * @return
     *     the new instance of {@link ExposureUnitType }
     */
    public ExposureUnitType createExposureUnitType() {
        return new ExposureUnitType();
    }

    /**
     * Create an instance of {@link TankType }
     * 
     * @return
     *     the new instance of {@link TankType }
     */
    public TankType createTankType() {
        return new TankType();
    }

    /**
     * Create an instance of {@link EncoderType }
     * 
     * @return
     *     the new instance of {@link EncoderType }
     */
    public EncoderType createEncoderType() {
        return new EncoderType();
    }

    /**
     * Create an instance of {@link StorageBatteryType }
     * 
     * @return
     *     the new instance of {@link StorageBatteryType }
     */
    public StorageBatteryType createStorageBatteryType() {
        return new StorageBatteryType();
    }

    /**
     * Create an instance of {@link CircuitBreakerType }
     * 
     * @return
     *     the new instance of {@link CircuitBreakerType }
     */
    public CircuitBreakerType createCircuitBreakerType() {
        return new CircuitBreakerType();
    }

    /**
     * Create an instance of {@link MotorType }
     * 
     * @return
     *     the new instance of {@link MotorType }
     */
    public MotorType createMotorType() {
        return new MotorType();
    }

    /**
     * Create an instance of {@link ExtrusionUnitType }
     * 
     * @return
     *     the new instance of {@link ExtrusionUnitType }
     */
    public ExtrusionUnitType createExtrusionUnitType() {
        return new ExtrusionUnitType();
    }

    /**
     * Create an instance of {@link GalvanomotorType }
     * 
     * @return
     *     the new instance of {@link GalvanomotorType }
     */
    public GalvanomotorType createGalvanomotorType() {
        return new GalvanomotorType();
    }

    /**
     * Create an instance of {@link PumpType }
     * 
     * @return
     *     the new instance of {@link PumpType }
     */
    public PumpType createPumpType() {
        return new PumpType();
    }

    /**
     * Create an instance of {@link ClampType }
     * 
     * @return
     *     the new instance of {@link ClampType }
     */
    public ClampType createClampType() {
        return new ClampType();
    }

    /**
     * Create an instance of {@link LinearPositionFeedbackType }
     * 
     * @return
     *     the new instance of {@link LinearPositionFeedbackType }
     */
    public LinearPositionFeedbackType createLinearPositionFeedbackType() {
        return new LinearPositionFeedbackType();
    }

    /**
     * Create an instance of {@link WorkpieceType }
     * 
     * @return
     *     the new instance of {@link WorkpieceType }
     */
    public WorkpieceType createWorkpieceType() {
        return new WorkpieceType();
    }

    /**
     * Create an instance of {@link WorkEnvelopeType }
     * 
     * @return
     *     the new instance of {@link WorkEnvelopeType }
     */
    public WorkEnvelopeType createWorkEnvelopeType() {
        return new WorkEnvelopeType();
    }

    /**
     * Create an instance of {@link FeatureOccurrenceType }
     * 
     * @return
     *     the new instance of {@link FeatureOccurrenceType }
     */
    public FeatureOccurrenceType createFeatureOccurrenceType() {
        return new FeatureOccurrenceType();
    }

    /**
     * Create an instance of {@link AirHandlerType }
     * 
     * @return
     *     the new instance of {@link AirHandlerType }
     */
    public AirHandlerType createAirHandlerType() {
        return new AirHandlerType();
    }

    /**
     * Create an instance of {@link StructuresType }
     * 
     * @return
     *     the new instance of {@link StructuresType }
     */
    public StructuresType createStructuresType() {
        return new StructuresType();
    }

    /**
     * Create an instance of {@link InterfacesType }
     * 
     * @return
     *     the new instance of {@link InterfacesType }
     */
    public InterfacesType createInterfacesType() {
        return new InterfacesType();
    }

    /**
     * Create an instance of {@link AuxiliariesType }
     * 
     * @return
     *     the new instance of {@link AuxiliariesType }
     */
    public AuxiliariesType createAuxiliariesType() {
        return new AuxiliariesType();
    }

    /**
     * Create an instance of {@link SystemsType }
     * 
     * @return
     *     the new instance of {@link SystemsType }
     */
    public SystemsType createSystemsType() {
        return new SystemsType();
    }

    /**
     * Create an instance of {@link AdaptersType }
     * 
     * @return
     *     the new instance of {@link AdaptersType }
     */
    public AdaptersType createAdaptersType() {
        return new AdaptersType();
    }

    /**
     * Create an instance of {@link ResourcesType }
     * 
     * @return
     *     the new instance of {@link ResourcesType }
     */
    public ResourcesType createResourcesType() {
        return new ResourcesType();
    }

    /**
     * Create an instance of {@link AxesType }
     * 
     * @return
     *     the new instance of {@link AxesType }
     */
    public AxesType createAxesType() {
        return new AxesType();
    }

    /**
     * Create an instance of {@link ProcessesType }
     * 
     * @return
     *     the new instance of {@link ProcessesType }
     */
    public ProcessesType createProcessesType() {
        return new ProcessesType();
    }

    /**
     * Create an instance of {@link PartsType }
     * 
     * @return
     *     the new instance of {@link PartsType }
     */
    public PartsType createPartsType() {
        return new PartsType();
    }

    /**
     * Create an instance of {@link MaterialsType }
     * 
     * @return
     *     the new instance of {@link MaterialsType }
     */
    public MaterialsType createMaterialsType() {
        return new MaterialsType();
    }

    /**
     * Create an instance of {@link ControllersType }
     * 
     * @return
     *     the new instance of {@link ControllersType }
     */
    public ControllersType createControllersType() {
        return new ControllersType();
    }

    /**
     * Create an instance of {@link DataItemRefType }
     * 
     * @return
     *     the new instance of {@link DataItemRefType }
     */
    public DataItemRefType createDataItemRefType() {
        return new DataItemRefType();
    }

    /**
     * Create an instance of {@link ComponentRefType }
     * 
     * @return
     *     the new instance of {@link ComponentRefType }
     */
    public ComponentRefType createComponentRefType() {
        return new ComponentRefType();
    }

    /**
     * Create an instance of {@link SensorConfigurationType }
     * 
     * @return
     *     the new instance of {@link SensorConfigurationType }
     */
    public SensorConfigurationType createSensorConfigurationType() {
        return new SensorConfigurationType();
    }

    /**
     * Create an instance of {@link SpecificationsType }
     * 
     * @return
     *     the new instance of {@link SpecificationsType }
     */
    public SpecificationsType createSpecificationsType() {
        return new SpecificationsType();
    }

    /**
     * Create an instance of {@link SpecificationType }
     * 
     * @return
     *     the new instance of {@link SpecificationType }
     */
    public SpecificationType createSpecificationType() {
        return new SpecificationType();
    }

    /**
     * Create an instance of {@link MaximumType }
     * 
     * @return
     *     the new instance of {@link MaximumType }
     */
    public MaximumType createMaximumType() {
        return new MaximumType();
    }

    /**
     * Create an instance of {@link MinimumType }
     * 
     * @return
     *     the new instance of {@link MinimumType }
     */
    public MinimumType createMinimumType() {
        return new MinimumType();
    }

    /**
     * Create an instance of {@link NominalType }
     * 
     * @return
     *     the new instance of {@link NominalType }
     */
    public NominalType createNominalType() {
        return new NominalType();
    }

    /**
     * Create an instance of {@link UpperLimitType }
     * 
     * @return
     *     the new instance of {@link UpperLimitType }
     */
    public UpperLimitType createUpperLimitType() {
        return new UpperLimitType();
    }

    /**
     * Create an instance of {@link UpperWarningType }
     * 
     * @return
     *     the new instance of {@link UpperWarningType }
     */
    public UpperWarningType createUpperWarningType() {
        return new UpperWarningType();
    }

    /**
     * Create an instance of {@link LowerWarningType }
     * 
     * @return
     *     the new instance of {@link LowerWarningType }
     */
    public LowerWarningType createLowerWarningType() {
        return new LowerWarningType();
    }

    /**
     * Create an instance of {@link LowerLimitType }
     * 
     * @return
     *     the new instance of {@link LowerLimitType }
     */
    public LowerLimitType createLowerLimitType() {
        return new LowerLimitType();
    }

    /**
     * Create an instance of {@link ProcessSpecificationType }
     * 
     * @return
     *     the new instance of {@link ProcessSpecificationType }
     */
    public ProcessSpecificationType createProcessSpecificationType() {
        return new ProcessSpecificationType();
    }

    /**
     * Create an instance of {@link RelationshipsType }
     * 
     * @return
     *     the new instance of {@link RelationshipsType }
     */
    public RelationshipsType createRelationshipsType() {
        return new RelationshipsType();
    }

    /**
     * Create an instance of {@link ComponentRelationshipType }
     * 
     * @return
     *     the new instance of {@link ComponentRelationshipType }
     */
    public ComponentRelationshipType createComponentRelationshipType() {
        return new ComponentRelationshipType();
    }

    /**
     * Create an instance of {@link DeviceRelationshipType }
     * 
     * @return
     *     the new instance of {@link DeviceRelationshipType }
     */
    public DeviceRelationshipType createDeviceRelationshipType() {
        return new DeviceRelationshipType();
    }

    /**
     * Create an instance of {@link CoordinateSystemsType }
     * 
     * @return
     *     the new instance of {@link CoordinateSystemsType }
     */
    public CoordinateSystemsType createCoordinateSystemsType() {
        return new CoordinateSystemsType();
    }

    /**
     * Create an instance of {@link MotionType }
     * 
     * @return
     *     the new instance of {@link MotionType }
     */
    public MotionType createMotionType() {
        return new MotionType();
    }

    /**
     * Create an instance of {@link SolidModelType }
     * 
     * @return
     *     the new instance of {@link SolidModelType }
     */
    public SolidModelType createSolidModelType() {
        return new SolidModelType();
    }

    /**
     * Create an instance of {@link ImageFilesType }
     * 
     * @return
     *     the new instance of {@link ImageFilesType }
     */
    public ImageFilesType createImageFilesType() {
        return new ImageFilesType();
    }

    /**
     * Create an instance of {@link PowerSourcesType }
     * 
     * @return
     *     the new instance of {@link PowerSourcesType }
     */
    public PowerSourcesType createPowerSourcesType() {
        return new PowerSourcesType();
    }

    /**
     * Create an instance of {@link DataItemRelationshipType }
     * 
     * @return
     *     the new instance of {@link DataItemRelationshipType }
     */
    public DataItemRelationshipType createDataItemRelationshipType() {
        return new DataItemRelationshipType();
    }

    /**
     * Create an instance of {@link SpecificationRelationshipType }
     * 
     * @return
     *     the new instance of {@link SpecificationRelationshipType }
     */
    public SpecificationRelationshipType createSpecificationRelationshipType() {
        return new SpecificationRelationshipType();
    }

    /**
     * Create an instance of {@link AssetCountsType }
     * 
     * @return
     *     the new instance of {@link AssetCountsType }
     */
    public AssetCountsType createAssetCountsType() {
        return new AssetCountsType();
    }

    /**
     * Create an instance of {@link AssetCountType }
     * 
     * @return
     *     the new instance of {@link AssetCountType }
     */
    public AssetCountType createAssetCountType() {
        return new AssetCountType();
    }

    /**
     * Create an instance of {@link HeaderType }
     * 
     * @return
     *     the new instance of {@link HeaderType }
     */
    public HeaderType createHeaderType() {
        return new HeaderType();
    }

    /**
     * Create an instance of {@link DevicesType }
     * 
     * @return
     *     the new instance of {@link DevicesType }
     */
    public DevicesType createDevicesType() {
        return new DevicesType();
    }

    /**
     * Create an instance of {@link ComponentDescriptionType }
     * 
     * @return
     *     the new instance of {@link ComponentDescriptionType }
     */
    public ComponentDescriptionType createComponentDescriptionType() {
        return new ComponentDescriptionType();
    }

    /**
     * Create an instance of {@link ComponentsType }
     * 
     * @return
     *     the new instance of {@link ComponentsType }
     */
    public ComponentsType createComponentsType() {
        return new ComponentsType();
    }

    /**
     * Create an instance of {@link CompositionsType }
     * 
     * @return
     *     the new instance of {@link CompositionsType }
     */
    public CompositionsType createCompositionsType() {
        return new CompositionsType();
    }

    /**
     * Create an instance of {@link CompositionType }
     * 
     * @return
     *     the new instance of {@link CompositionType }
     */
    public CompositionType createCompositionType() {
        return new CompositionType();
    }

    /**
     * Create an instance of {@link ReferencesType }
     * 
     * @return
     *     the new instance of {@link ReferencesType }
     */
    public ReferencesType createReferencesType() {
        return new ReferencesType();
    }

    /**
     * Create an instance of {@link ComponentConfigurationType }
     * 
     * @return
     *     the new instance of {@link ComponentConfigurationType }
     */
    public ComponentConfigurationType createComponentConfigurationType() {
        return new ComponentConfigurationType();
    }

    /**
     * Create an instance of {@link ChannelsType }
     * 
     * @return
     *     the new instance of {@link ChannelsType }
     */
    public ChannelsType createChannelsType() {
        return new ChannelsType();
    }

    /**
     * Create an instance of {@link ChannelType }
     * 
     * @return
     *     the new instance of {@link ChannelType }
     */
    public ChannelType createChannelType() {
        return new ChannelType();
    }

    /**
     * Create an instance of {@link ControlLimitsType }
     * 
     * @return
     *     the new instance of {@link ControlLimitsType }
     */
    public ControlLimitsType createControlLimitsType() {
        return new ControlLimitsType();
    }

    /**
     * Create an instance of {@link AlarmLimitsType }
     * 
     * @return
     *     the new instance of {@link AlarmLimitsType }
     */
    public AlarmLimitsType createAlarmLimitsType() {
        return new AlarmLimitsType();
    }

    /**
     * Create an instance of {@link SpecificationLimitsType }
     * 
     * @return
     *     the new instance of {@link SpecificationLimitsType }
     */
    public SpecificationLimitsType createSpecificationLimitsType() {
        return new SpecificationLimitsType();
    }

    /**
     * Create an instance of {@link CoordinateSystemType }
     * 
     * @return
     *     the new instance of {@link CoordinateSystemType }
     */
    public CoordinateSystemType createCoordinateSystemType() {
        return new CoordinateSystemType();
    }

    /**
     * Create an instance of {@link OriginType }
     * 
     * @return
     *     the new instance of {@link OriginType }
     */
    public OriginType createOriginType() {
        return new OriginType();
    }

    /**
     * Create an instance of {@link TransformationType }
     * 
     * @return
     *     the new instance of {@link TransformationType }
     */
    public TransformationType createTransformationType() {
        return new TransformationType();
    }

    /**
     * Create an instance of {@link MotionAxisType }
     * 
     * @return
     *     the new instance of {@link MotionAxisType }
     */
    public MotionAxisType createMotionAxisType() {
        return new MotionAxisType();
    }

    /**
     * Create an instance of {@link MotionDescriptionType }
     * 
     * @return
     *     the new instance of {@link MotionDescriptionType }
     */
    public MotionDescriptionType createMotionDescriptionType() {
        return new MotionDescriptionType();
    }

    /**
     * Create an instance of {@link SolidModelScaleType }
     * 
     * @return
     *     the new instance of {@link SolidModelScaleType }
     */
    public SolidModelScaleType createSolidModelScaleType() {
        return new SolidModelScaleType();
    }

    /**
     * Create an instance of {@link ImageFileType }
     * 
     * @return
     *     the new instance of {@link ImageFileType }
     */
    public ImageFileType createImageFileType() {
        return new ImageFileType();
    }

    /**
     * Create an instance of {@link PowerSourceType }
     * 
     * @return
     *     the new instance of {@link PowerSourceType }
     */
    public PowerSourceType createPowerSourceType() {
        return new PowerSourceType();
    }

    /**
     * Create an instance of {@link DataItemDescriptionType }
     * 
     * @return
     *     the new instance of {@link DataItemDescriptionType }
     */
    public DataItemDescriptionType createDataItemDescriptionType() {
        return new DataItemDescriptionType();
    }

    /**
     * Create an instance of {@link DataItemsType }
     * 
     * @return
     *     the new instance of {@link DataItemsType }
     */
    public DataItemsType createDataItemsType() {
        return new DataItemsType();
    }

    /**
     * Create an instance of {@link DataItemType }
     * 
     * @return
     *     the new instance of {@link DataItemType }
     */
    public DataItemType createDataItemType() {
        return new DataItemType();
    }

    /**
     * Create an instance of {@link DataItemConstraintsType }
     * 
     * @return
     *     the new instance of {@link DataItemConstraintsType }
     */
    public DataItemConstraintsType createDataItemConstraintsType() {
        return new DataItemConstraintsType();
    }

    /**
     * Create an instance of {@link FiltersType }
     * 
     * @return
     *     the new instance of {@link FiltersType }
     */
    public FiltersType createFiltersType() {
        return new FiltersType();
    }

    /**
     * Create an instance of {@link DataItemBaseType }
     * 
     * @return
     *     the new instance of {@link DataItemBaseType }
     */
    public DataItemBaseType createDataItemBaseType() {
        return new DataItemBaseType();
    }

    /**
     * Create an instance of {@link DataItemValueElementType }
     * 
     * @return
     *     the new instance of {@link DataItemValueElementType }
     */
    public DataItemValueElementType createDataItemValueElementType() {
        return new DataItemValueElementType();
    }

    /**
     * Create an instance of {@link DataItemFilterType }
     * 
     * @return
     *     the new instance of {@link DataItemFilterType }
     */
    public DataItemFilterType createDataItemFilterType() {
        return new DataItemFilterType();
    }

    /**
     * Create an instance of {@link DataItemSourceType }
     * 
     * @return
     *     the new instance of {@link DataItemSourceType }
     */
    public DataItemSourceType createDataItemSourceType() {
        return new DataItemSourceType();
    }

    /**
     * Create an instance of {@link DataItemDefinitionType }
     * 
     * @return
     *     the new instance of {@link DataItemDefinitionType }
     */
    public DataItemDefinitionType createDataItemDefinitionType() {
        return new DataItemDefinitionType();
    }

    /**
     * Create an instance of {@link EntryDefinitionsType }
     * 
     * @return
     *     the new instance of {@link EntryDefinitionsType }
     */
    public EntryDefinitionsType createEntryDefinitionsType() {
        return new EntryDefinitionsType();
    }

    /**
     * Create an instance of {@link EntryDefinitionType }
     * 
     * @return
     *     the new instance of {@link EntryDefinitionType }
     */
    public EntryDefinitionType createEntryDefinitionType() {
        return new EntryDefinitionType();
    }

    /**
     * Create an instance of {@link CellDefinitionsType }
     * 
     * @return
     *     the new instance of {@link CellDefinitionsType }
     */
    public CellDefinitionsType createCellDefinitionsType() {
        return new CellDefinitionsType();
    }

    /**
     * Create an instance of {@link CellDefinitionType }
     * 
     * @return
     *     the new instance of {@link CellDefinitionType }
     */
    public CellDefinitionType createCellDefinitionType() {
        return new CellDefinitionType();
    }

    /**
     * Create an instance of {@link DataItemRelationshipsType }
     * 
     * @return
     *     the new instance of {@link DataItemRelationshipsType }
     */
    public DataItemRelationshipsType createDataItemRelationshipsType() {
        return new DataItemRelationshipsType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MTConnectDevicesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MTConnectDevicesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "MTConnectDevices")
    public JAXBElement<MTConnectDevicesType> createMTConnectDevices(MTConnectDevicesType value) {
        return new JAXBElement<>(_MTConnectDevices_QNAME, MTConnectDevicesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Component")
    public JAXBElement<ComponentType> createComponent(ComponentType value) {
        return new JAXBElement<>(_Component_QNAME, ComponentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommonComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CommonComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "CommonComponent", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Component")
    public JAXBElement<CommonComponentType> createCommonComponent(CommonComponentType value) {
        return new JAXBElement<>(_CommonComponent_QNAME, CommonComponentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeviceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DeviceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Device", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Component")
    public JAXBElement<DeviceType> createDevice(DeviceType value) {
        return new JAXBElement<>(_Device_QNAME, DeviceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AgentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AgentType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Agent", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Device")
    public JAXBElement<AgentType> createAgent(AgentType value) {
        return new JAXBElement<>(_Agent_QNAME, AgentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActuatorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ActuatorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Actuator", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<ActuatorType> createActuator(ActuatorType value) {
        return new JAXBElement<>(_Actuator_QNAME, ActuatorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SystemType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SystemType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "System", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<SystemType> createSystem(SystemType value) {
        return new JAXBElement<>(_System_QNAME, SystemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AuxiliaryType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AuxiliaryType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Auxiliary", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<AuxiliaryType> createAuxiliary(AuxiliaryType value) {
        return new JAXBElement<>(_Auxiliary_QNAME, AuxiliaryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AxisType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AxisType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Axis", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<AxisType> createAxis(AxisType value) {
        return new JAXBElement<>(_Axis_QNAME, AxisType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BarFeederType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BarFeederType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "BarFeeder", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Loader")
    public JAXBElement<BarFeederType> createBarFeeder(BarFeederType value) {
        return new JAXBElement<>(_BarFeeder_QNAME, BarFeederType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LoaderType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LoaderType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Loader", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Auxiliary")
    public JAXBElement<LoaderType> createLoader(LoaderType value) {
        return new JAXBElement<>(_Loader_QNAME, LoaderType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControllerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ControllerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Controller", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<ControllerType> createController(ControllerType value) {
        return new JAXBElement<>(_Controller_QNAME, ControllerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoolantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CoolantType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Coolant", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<CoolantType> createCoolant(CoolantType value) {
        return new JAXBElement<>(_Coolant_QNAME, CoolantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DepositionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DepositionType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Deposition", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Auxiliary")
    public JAXBElement<DepositionType> createDeposition(DepositionType value) {
        return new JAXBElement<>(_Deposition_QNAME, DepositionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DielectricType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DielectricType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Dielectric", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<DielectricType> createDielectric(DielectricType value) {
        return new JAXBElement<>(_Dielectric_QNAME, DielectricType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DoorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DoorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Door", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<DoorType> createDoor(DoorType value) {
        return new JAXBElement<>(_Door_QNAME, DoorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElectricType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ElectricType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Electric", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<ElectricType> createElectric(ElectricType value) {
        return new JAXBElement<>(_Electric_QNAME, ElectricType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EnclosureType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link EnclosureType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Enclosure", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<EnclosureType> createEnclosure(EnclosureType value) {
        return new JAXBElement<>(_Enclosure_QNAME, EnclosureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EndEffectorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link EndEffectorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "EndEffector", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<EndEffectorType> createEndEffector(EndEffectorType value) {
        return new JAXBElement<>(_EndEffector_QNAME, EndEffectorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EnvironmentalType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link EnvironmentalType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Environmental", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<EnvironmentalType> createEnvironmental(EnvironmentalType value) {
        return new JAXBElement<>(_Environmental_QNAME, EnvironmentalType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FeederType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FeederType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Feeder", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<FeederType> createFeeder(FeederType value) {
        return new JAXBElement<>(_Feeder_QNAME, FeederType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HydraulicType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link HydraulicType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Hydraulic", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Actuator")
    public JAXBElement<HydraulicType> createHydraulic(HydraulicType value) {
        return new JAXBElement<>(_Hydraulic_QNAME, HydraulicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinearType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LinearType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Linear", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Axis")
    public JAXBElement<LinearType> createLinear(LinearType value) {
        return new JAXBElement<>(_Linear_QNAME, LinearType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LubricationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LubricationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Lubrication", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<LubricationType> createLubrication(LubricationType value) {
        return new JAXBElement<>(_Lubrication_QNAME, LubricationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MaterialType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MaterialType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Material", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Resource")
    public JAXBElement<MaterialType> createMaterial(MaterialType value) {
        return new JAXBElement<>(_Material_QNAME, MaterialType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ResourceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ResourceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Resource", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ResourceType> createResource(ResourceType value) {
        return new JAXBElement<>(_Resource_QNAME, ResourceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PathType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PathType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Path", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PathType> createPath(PathType value) {
        return new JAXBElement<>(_Path_QNAME, PathType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PersonnelType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PersonnelType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Personnel", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Resource")
    public JAXBElement<PersonnelType> createPersonnel(PersonnelType value) {
        return new JAXBElement<>(_Personnel_QNAME, PersonnelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PneumaticType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PneumaticType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Pneumatic", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Actuator")
    public JAXBElement<PneumaticType> createPneumatic(PneumaticType value) {
        return new JAXBElement<>(_Pneumatic_QNAME, PneumaticType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PowerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PowerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Power", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PowerType> createPower(PowerType value) {
        return new JAXBElement<>(_Power_QNAME, PowerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessPowerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProcessPowerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ProcessPower", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<ProcessPowerType> createProcessPower(ProcessPowerType value) {
        return new JAXBElement<>(_ProcessPower_QNAME, ProcessPowerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProtectiveType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProtectiveType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Protective", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<ProtectiveType> createProtective(ProtectiveType value) {
        return new JAXBElement<>(_Protective_QNAME, ProtectiveType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RotaryType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link RotaryType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Rotary", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Axis")
    public JAXBElement<RotaryType> createRotary(RotaryType value) {
        return new JAXBElement<>(_Rotary_QNAME, RotaryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SensorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SensorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Sensor", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<SensorType> createSensor(SensorType value) {
        return new JAXBElement<>(_Sensor_QNAME, SensorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StockType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StockType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Stock", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Material")
    public JAXBElement<StockType> createStock(StockType value) {
        return new JAXBElement<>(_Stock_QNAME, StockType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ToolingDeliveryType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ToolingDeliveryType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ToolingDelivery", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Auxiliary")
    public JAXBElement<ToolingDeliveryType> createToolingDelivery(ToolingDeliveryType value) {
        return new JAXBElement<>(_ToolingDelivery_QNAME, ToolingDeliveryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WasteDisposalType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link WasteDisposalType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "WasteDisposal", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Auxiliary")
    public JAXBElement<WasteDisposalType> createWasteDisposal(WasteDisposalType value) {
        return new JAXBElement<>(_WasteDisposal_QNAME, WasteDisposalType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructureType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StructureType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Structure", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<StructureType> createStructure(StructureType value) {
        return new JAXBElement<>(_Structure_QNAME, StructureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LinkType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Link", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Structure")
    public JAXBElement<LinkType> createLink(LinkType value) {
        return new JAXBElement<>(_Link_QNAME, LinkType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GangToolBarType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link GangToolBarType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "GangToolBar", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "ToolingDelivery")
    public JAXBElement<GangToolBarType> createGangToolBar(GangToolBarType value) {
        return new JAXBElement<>(_GangToolBar_QNAME, GangToolBarType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HeatingType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link HeatingType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Heating", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<HeatingType> createHeating(HeatingType value) {
        return new JAXBElement<>(_Heating_QNAME, HeatingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AutomaticToolChangerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AutomaticToolChangerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "AutomaticToolChanger", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "ToolingDelivery")
    public JAXBElement<AutomaticToolChangerType> createAutomaticToolChanger(AutomaticToolChangerType value) {
        return new JAXBElement<>(_AutomaticToolChanger_QNAME, AutomaticToolChangerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProcessType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Process", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ProcessType> createProcess(ProcessType value) {
        return new JAXBElement<>(_Process_QNAME, ProcessType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ToolMagazineType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ToolMagazineType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ToolMagazine", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "ToolingDelivery")
    public JAXBElement<ToolMagazineType> createToolMagazine(ToolMagazineType value) {
        return new JAXBElement<>(_ToolMagazine_QNAME, ToolMagazineType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PartOccurrenceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PartOccurrenceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "PartOccurrence", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Part")
    public JAXBElement<PartOccurrenceType> createPartOccurrence(PartOccurrenceType value) {
        return new JAXBElement<>(_PartOccurrence_QNAME, PartOccurrenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PartType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PartType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Part", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PartType> createPart(PartType value) {
        return new JAXBElement<>(_Part_QNAME, PartType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdapterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AdapterType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Adapter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<AdapterType> createAdapter(AdapterType value) {
        return new JAXBElement<>(_Adapter_QNAME, AdapterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ToolRackType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ToolRackType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ToolRack", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "ToolingDelivery")
    public JAXBElement<ToolRackType> createToolRack(ToolRackType value) {
        return new JAXBElement<>(_ToolRack_QNAME, ToolRackType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TurretType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TurretType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Turret", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "ToolingDelivery")
    public JAXBElement<TurretType> createTurret(TurretType value) {
        return new JAXBElement<>(_Turret_QNAME, TurretType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VacuumType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VacuumType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Vacuum", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<VacuumType> createVacuum(VacuumType value) {
        return new JAXBElement<>(_Vacuum_QNAME, VacuumType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoolingType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CoolingType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Cooling", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<CoolingType> createCooling(CoolingType value) {
        return new JAXBElement<>(_Cooling_QNAME, CoolingType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessOccurrenceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProcessOccurrenceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ProcessOccurrence", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Process")
    public JAXBElement<ProcessOccurrenceType> createProcessOccurrence(ProcessOccurrenceType value) {
        return new JAXBElement<>(_ProcessOccurrence_QNAME, ProcessOccurrenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PressureType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PressureType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Pressure", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<PressureType> createPressure(PressureType value) {
        return new JAXBElement<>(_Pressure_QNAME, PressureType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LockType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LockType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Lock", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<LockType> createLock(LockType value) {
        return new JAXBElement<>(_Lock_QNAME, LockType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpindleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SpindleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Spindle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Axis")
    public JAXBElement<SpindleType> createSpindle(SpindleType value) {
        return new JAXBElement<>(_Spindle_QNAME, SpindleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ThermostatType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ThermostatType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Thermostat", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Sensor")
    public JAXBElement<ThermostatType> createThermostat(ThermostatType value) {
        return new JAXBElement<>(_Thermostat_QNAME, ThermostatType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VibrationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VibrationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Vibration", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Sensor")
    public JAXBElement<VibrationType> createVibration(VibrationType value) {
        return new JAXBElement<>(_Vibration_QNAME, VibrationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChuckType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ChuckType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Chuck", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ChuckType> createChuck(ChuckType value) {
        return new JAXBElement<>(_Chuck_QNAME, ChuckType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FanType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FanType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Fan", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<FanType> createFan(FanType value) {
        return new JAXBElement<>(_Fan_QNAME, FanType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpreaderType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SpreaderType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Spreader", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<SpreaderType> createSpreader(SpreaderType value) {
        return new JAXBElement<>(_Spreader_QNAME, SpreaderType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PulleyType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PulleyType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Pulley", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PulleyType> createPulley(PulleyType value) {
        return new JAXBElement<>(_Pulley_QNAME, PulleyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransferPotType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TransferPotType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "TransferPot", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<TransferPotType> createTransferPot(TransferPotType value) {
        return new JAXBElement<>(_TransferPot_QNAME, TransferPotType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PowerSupplyType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PowerSupplyType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "PowerSupply", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PowerSupplyType> createPowerSupply(PowerSupplyType value) {
        return new JAXBElement<>(_PowerSupply_QNAME, PowerSupplyType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DrainType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DrainType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Drain", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<DrainType> createDrain(DrainType value) {
        return new JAXBElement<>(_Drain_QNAME, DrainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BallscrewType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BallscrewType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Ballscrew", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<BallscrewType> createBallscrew(BallscrewType value) {
        return new JAXBElement<>(_Ballscrew_QNAME, BallscrewType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CompressorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CompressorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Compressor", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<CompressorType> createCompressor(CompressorType value) {
        return new JAXBElement<>(_Compressor_QNAME, CompressorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChuteType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ChuteType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Chute", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ChuteType> createChute(ChuteType value) {
        return new JAXBElement<>(_Chute_QNAME, ChuteType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SwitchType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SwitchType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Switch", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<SwitchType> createSwitch(SwitchType value) {
        return new JAXBElement<>(_Switch_QNAME, SwitchType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TensionerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TensionerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Tensioner", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<TensionerType> createTensioner(TensionerType value) {
        return new JAXBElement<>(_Tensioner_QNAME, TensionerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WaterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link WaterType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Water", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<WaterType> createWater(WaterType value) {
        return new JAXBElement<>(_Water_QNAME, WaterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WireType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link WireType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Wire", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<WireType> createWire(WireType value) {
        return new JAXBElement<>(_Wire_QNAME, WireType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SensingElementType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SensingElementType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "SensingElement", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<SensingElementType> createSensingElement(SensingElementType value) {
        return new JAXBElement<>(_SensingElement_QNAME, SensingElementType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoolingTowerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CoolingTowerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "CoolingTower", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<CoolingTowerType> createCoolingTower(CoolingTowerType value) {
        return new JAXBElement<>(_CoolingTower_QNAME, CoolingTowerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RemovalPotType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link RemovalPotType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "RemovalPot", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<RemovalPotType> createRemovalPot(RemovalPotType value) {
        return new JAXBElement<>(_RemovalPot_QNAME, RemovalPotType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GripperType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link GripperType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Gripper", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<GripperType> createGripper(GripperType value) {
        return new JAXBElement<>(_Gripper_QNAME, GripperType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StagingPotType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StagingPotType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "StagingPot", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<StagingPotType> createStagingPot(StagingPotType value) {
        return new JAXBElement<>(_StagingPot_QNAME, StagingPotType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BrakeType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BrakeType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Brake", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<BrakeType> createBrake(BrakeType value) {
        return new JAXBElement<>(_Brake_QNAME, BrakeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Station", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<StationType> createStation(StationType value) {
        return new JAXBElement<>(_Station_QNAME, StationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HopperType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link HopperType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Hopper", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<HopperType> createHopper(HopperType value) {
        return new JAXBElement<>(_Hopper_QNAME, HopperType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BeltType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link BeltType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Belt", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<BeltType> createBelt(BeltType value) {
        return new JAXBElement<>(_Belt_QNAME, BeltType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransferArmType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TransferArmType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "TransferArm", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<TransferArmType> createTransferArm(TransferArmType value) {
        return new JAXBElement<>(_TransferArm_QNAME, TransferArmType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReelType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ReelType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Reel", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ReelType> createReel(ReelType value) {
        return new JAXBElement<>(_Reel_QNAME, ReelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FilterType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FilterType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Filter", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<FilterType> createFilter(FilterType value) {
        return new JAXBElement<>(_Filter_QNAME, FilterType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReturnPotType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ReturnPotType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ReturnPot", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ReturnPotType> createReturnPot(ReturnPotType value) {
        return new JAXBElement<>(_ReturnPot_QNAME, ReturnPotType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChainType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ChainType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Chain", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ChainType> createChain(ChainType value) {
        return new JAXBElement<>(_Chain_QNAME, ChainType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AmplifierType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AmplifierType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Amplifier", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<AmplifierType> createAmplifier(AmplifierType value) {
        return new JAXBElement<>(_Amplifier_QNAME, AmplifierType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VatType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VatType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Vat", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<VatType> createVat(VatType value) {
        return new JAXBElement<>(_Vat_QNAME, VatType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExpiredPotType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ExpiredPotType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ExpiredPot", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ExpiredPotType> createExpiredPot(ExpiredPotType value) {
        return new JAXBElement<>(_ExpiredPot_QNAME, ExpiredPotType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OilType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link OilType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Oil", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<OilType> createOil(OilType value) {
        return new JAXBElement<>(_Oil_QNAME, OilType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TableType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TableType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Table", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<TableType> createTable(TableType value) {
        return new JAXBElement<>(_Table_QNAME, TableType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ChopperType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ChopperType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Chopper", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ChopperType> createChopper(ChopperType value) {
        return new JAXBElement<>(_Chopper_QNAME, ChopperType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ValveType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ValveType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Valve", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ValveType> createValve(ValveType value) {
        return new JAXBElement<>(_Valve_QNAME, ValveType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PotType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PotType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Pot", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PotType> createPot(PotType value) {
        return new JAXBElement<>(_Pot_QNAME, PotType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransformerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TransformerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Transformer", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<TransformerType> createTransformer(TransformerType value) {
        return new JAXBElement<>(_Transformer_QNAME, TransformerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExposureUnitType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ExposureUnitType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ExposureUnit", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ExposureUnitType> createExposureUnit(ExposureUnitType value) {
        return new JAXBElement<>(_ExposureUnit_QNAME, ExposureUnitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TankType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TankType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Tank", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<TankType> createTank(TankType value) {
        return new JAXBElement<>(_Tank_QNAME, TankType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link EncoderType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link EncoderType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Encoder", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<EncoderType> createEncoder(EncoderType value) {
        return new JAXBElement<>(_Encoder_QNAME, EncoderType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StorageBatteryType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StorageBatteryType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "StorageBattery", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<StorageBatteryType> createStorageBattery(StorageBatteryType value) {
        return new JAXBElement<>(_StorageBattery_QNAME, StorageBatteryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CircuitBreakerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CircuitBreakerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "CircuitBreaker", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<CircuitBreakerType> createCircuitBreaker(CircuitBreakerType value) {
        return new JAXBElement<>(_CircuitBreaker_QNAME, CircuitBreakerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MotorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MotorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Motor", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<MotorType> createMotor(MotorType value) {
        return new JAXBElement<>(_Motor_QNAME, MotorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ExtrusionUnitType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ExtrusionUnitType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ExtrusionUnit", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ExtrusionUnitType> createExtrusionUnit(ExtrusionUnitType value) {
        return new JAXBElement<>(_ExtrusionUnit_QNAME, ExtrusionUnitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link GalvanomotorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link GalvanomotorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Galvanomotor", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<GalvanomotorType> createGalvanomotor(GalvanomotorType value) {
        return new JAXBElement<>(_Galvanomotor_QNAME, GalvanomotorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PumpType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PumpType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Pump", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PumpType> createPump(PumpType value) {
        return new JAXBElement<>(_Pump_QNAME, PumpType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ClampType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ClampType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Clamp", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ClampType> createClamp(ClampType value) {
        return new JAXBElement<>(_Clamp_QNAME, ClampType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinearPositionFeedbackType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LinearPositionFeedbackType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "LinearPositionFeedback", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<LinearPositionFeedbackType> createLinearPositionFeedback(LinearPositionFeedbackType value) {
        return new JAXBElement<>(_LinearPositionFeedback_QNAME, LinearPositionFeedbackType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WorkpieceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link WorkpieceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Workpiece", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<WorkpieceType> createWorkpiece(WorkpieceType value) {
        return new JAXBElement<>(_Workpiece_QNAME, WorkpieceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WorkEnvelopeType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link WorkEnvelopeType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "WorkEnvelope", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<WorkEnvelopeType> createWorkEnvelope(WorkEnvelopeType value) {
        return new JAXBElement<>(_WorkEnvelope_QNAME, WorkEnvelopeType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FeatureOccurrenceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link FeatureOccurrenceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "FeatureOccurrence", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "PartOccurrence")
    public JAXBElement<FeatureOccurrenceType> createFeatureOccurrence(FeatureOccurrenceType value) {
        return new JAXBElement<>(_FeatureOccurrence_QNAME, FeatureOccurrenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AirHandlerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AirHandlerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "AirHandler", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "System")
    public JAXBElement<AirHandlerType> createAirHandler(AirHandlerType value) {
        return new JAXBElement<>(_AirHandler_QNAME, AirHandlerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link StructuresType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link StructuresType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Structures", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<StructuresType> createStructures(StructuresType value) {
        return new JAXBElement<>(_Structures_QNAME, StructuresType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterfacesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link InterfacesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Interfaces", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<InterfacesType> createInterfaces(InterfacesType value) {
        return new JAXBElement<>(_Interfaces_QNAME, InterfacesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AuxiliariesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AuxiliariesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Auxiliaries", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<AuxiliariesType> createAuxiliaries(AuxiliariesType value) {
        return new JAXBElement<>(_Auxiliaries_QNAME, AuxiliariesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SystemsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SystemsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Systems", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<SystemsType> createSystems(SystemsType value) {
        return new JAXBElement<>(_Systems_QNAME, SystemsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AdaptersType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AdaptersType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Adapters", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<AdaptersType> createAdapters(AdaptersType value) {
        return new JAXBElement<>(_Adapters_QNAME, AdaptersType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ResourcesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ResourcesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Resources", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ResourcesType> createResources(ResourcesType value) {
        return new JAXBElement<>(_Resources_QNAME, ResourcesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AxesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AxesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Axes", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<AxesType> createAxes(AxesType value) {
        return new JAXBElement<>(_Axes_QNAME, AxesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProcessesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Processes", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ProcessesType> createProcesses(ProcessesType value) {
        return new JAXBElement<>(_Processes_QNAME, ProcessesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PartsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PartsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Parts", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<PartsType> createParts(PartsType value) {
        return new JAXBElement<>(_Parts_QNAME, PartsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MaterialsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MaterialsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Materials", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<MaterialsType> createMaterials(MaterialsType value) {
        return new JAXBElement<>(_Materials_QNAME, MaterialsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControllersType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ControllersType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Controllers", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "CommonComponent")
    public JAXBElement<ControllersType> createControllers(ControllersType value) {
        return new JAXBElement<>(_Controllers_QNAME, ControllersType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ReferenceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Reference")
    public JAXBElement<ReferenceType> createReference(ReferenceType value) {
        return new JAXBElement<>(_Reference_QNAME, ReferenceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataItemRefType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DataItemRefType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "DataItemRef", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Reference")
    public JAXBElement<DataItemRefType> createDataItemRef(DataItemRefType value) {
        return new JAXBElement<>(_DataItemRef_QNAME, DataItemRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentRefType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ComponentRefType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ComponentRef", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Reference")
    public JAXBElement<ComponentRefType> createComponentRef(ComponentRefType value) {
        return new JAXBElement<>(_ComponentRef_QNAME, ComponentRefType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractConfigurationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AbstractConfigurationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "AbstractConfiguration")
    public JAXBElement<AbstractConfigurationType> createAbstractConfiguration(AbstractConfigurationType value) {
        return new JAXBElement<>(_AbstractConfiguration_QNAME, AbstractConfigurationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SensorConfigurationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SensorConfigurationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "SensorConfiguration", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<SensorConfigurationType> createSensorConfiguration(SensorConfigurationType value) {
        return new JAXBElement<>(_SensorConfiguration_QNAME, SensorConfigurationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpecificationsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SpecificationsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Specifications", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<SpecificationsType> createSpecifications(SpecificationsType value) {
        return new JAXBElement<>(_Specifications_QNAME, SpecificationsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractSpecificationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AbstractSpecificationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "AbstractSpecification")
    public JAXBElement<AbstractSpecificationType> createAbstractSpecification(AbstractSpecificationType value) {
        return new JAXBElement<>(_AbstractSpecification_QNAME, AbstractSpecificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpecificationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SpecificationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Specification", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractSpecification")
    public JAXBElement<SpecificationType> createSpecification(SpecificationType value) {
        return new JAXBElement<>(_Specification_QNAME, SpecificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstraintType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ConstraintType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Constraint")
    public JAXBElement<ConstraintType> createConstraint(ConstraintType value) {
        return new JAXBElement<>(_Constraint_QNAME, ConstraintType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MaximumType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MaximumType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Maximum", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Constraint")
    public JAXBElement<MaximumType> createMaximum(MaximumType value) {
        return new JAXBElement<>(_Maximum_QNAME, MaximumType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MinimumType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MinimumType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Minimum", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Constraint")
    public JAXBElement<MinimumType> createMinimum(MinimumType value) {
        return new JAXBElement<>(_Minimum_QNAME, MinimumType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NominalType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link NominalType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Nominal", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Constraint")
    public JAXBElement<NominalType> createNominal(NominalType value) {
        return new JAXBElement<>(_Nominal_QNAME, NominalType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UpperLimitType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link UpperLimitType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "UpperLimit", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Constraint")
    public JAXBElement<UpperLimitType> createUpperLimit(UpperLimitType value) {
        return new JAXBElement<>(_UpperLimit_QNAME, UpperLimitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UpperWarningType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link UpperWarningType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "UpperWarning", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Constraint")
    public JAXBElement<UpperWarningType> createUpperWarning(UpperWarningType value) {
        return new JAXBElement<>(_UpperWarning_QNAME, UpperWarningType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LowerWarningType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LowerWarningType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "LowerWarning", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Constraint")
    public JAXBElement<LowerWarningType> createLowerWarning(LowerWarningType value) {
        return new JAXBElement<>(_LowerWarning_QNAME, LowerWarningType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LowerLimitType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LowerLimitType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "LowerLimit", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Constraint")
    public JAXBElement<LowerLimitType> createLowerLimit(LowerLimitType value) {
        return new JAXBElement<>(_LowerLimit_QNAME, LowerLimitType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessSpecificationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ProcessSpecificationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ProcessSpecification", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractSpecification")
    public JAXBElement<ProcessSpecificationType> createProcessSpecification(ProcessSpecificationType value) {
        return new JAXBElement<>(_ProcessSpecification_QNAME, ProcessSpecificationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationshipsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link RelationshipsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Relationships", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<RelationshipsType> createRelationships(RelationshipsType value) {
        return new JAXBElement<>(_Relationships_QNAME, RelationshipsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RelationshipType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link RelationshipType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Relationship")
    public JAXBElement<RelationshipType> createRelationship(RelationshipType value) {
        return new JAXBElement<>(_Relationship_QNAME, RelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentRelationshipType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ComponentRelationshipType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ComponentRelationship", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Relationship")
    public JAXBElement<ComponentRelationshipType> createComponentRelationship(ComponentRelationshipType value) {
        return new JAXBElement<>(_ComponentRelationship_QNAME, ComponentRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeviceRelationshipType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DeviceRelationshipType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "DeviceRelationship", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "Relationship")
    public JAXBElement<DeviceRelationshipType> createDeviceRelationship(DeviceRelationshipType value) {
        return new JAXBElement<>(_DeviceRelationship_QNAME, DeviceRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoordinateSystemsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CoordinateSystemsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "CoordinateSystems", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<CoordinateSystemsType> createCoordinateSystems(CoordinateSystemsType value) {
        return new JAXBElement<>(_CoordinateSystems_QNAME, CoordinateSystemsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MotionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MotionType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Motion", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<MotionType> createMotion(MotionType value) {
        return new JAXBElement<>(_Motion_QNAME, MotionType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SolidModelType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SolidModelType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "SolidModel", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<SolidModelType> createSolidModel(SolidModelType value) {
        return new JAXBElement<>(_SolidModel_QNAME, SolidModelType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ImageFilesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ImageFilesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "ImageFiles", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<ImageFilesType> createImageFiles(ImageFilesType value) {
        return new JAXBElement<>(_ImageFiles_QNAME, ImageFilesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PowerSourcesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PowerSourcesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "PowerSources", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractConfiguration")
    public JAXBElement<PowerSourcesType> createPowerSources(PowerSourcesType value) {
        return new JAXBElement<>(_PowerSources_QNAME, PowerSourcesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AbstractDataItemRelationshipType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AbstractDataItemRelationshipType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "AbstractDataItemRelationship")
    public JAXBElement<AbstractDataItemRelationshipType> createAbstractDataItemRelationship(AbstractDataItemRelationshipType value) {
        return new JAXBElement<>(_AbstractDataItemRelationship_QNAME, AbstractDataItemRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataItemRelationshipType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DataItemRelationshipType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "DataItemRelationship", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractDataItemRelationship")
    public JAXBElement<DataItemRelationshipType> createDataItemRelationship(DataItemRelationshipType value) {
        return new JAXBElement<>(_DataItemRelationship_QNAME, DataItemRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpecificationRelationshipType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SpecificationRelationshipType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "SpecificationRelationship", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:2.4", substitutionHeadName = "AbstractDataItemRelationship")
    public JAXBElement<SpecificationRelationshipType> createSpecificationRelationship(SpecificationRelationshipType value) {
        return new JAXBElement<>(_SpecificationRelationship_QNAME, SpecificationRelationshipType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MotionDescriptionType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MotionDescriptionType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Description", scope = MotionType.class)
    public JAXBElement<MotionDescriptionType> createMotionTypeDescription(MotionDescriptionType value) {
        return new JAXBElement<>(_MotionTypeDescription_QNAME, MotionDescriptionType.class, MotionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OriginType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link OriginType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Origin", scope = MotionType.class)
    public JAXBElement<OriginType> createMotionTypeOrigin(OriginType value) {
        return new JAXBElement<>(_MotionTypeOrigin_QNAME, OriginType.class, MotionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TransformationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link TransformationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Transformation", scope = MotionType.class)
    public JAXBElement<TransformationType> createMotionTypeTransformation(TransformationType value) {
        return new JAXBElement<>(_MotionTypeTransformation_QNAME, TransformationType.class, MotionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MotionAxisType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MotionAxisType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "Axis", scope = MotionType.class)
    public JAXBElement<MotionAxisType> createMotionTypeAxis(MotionAxisType value) {
        return new JAXBElement<>(_Axis_QNAME, MotionAxisType.class, MotionType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoordinateSystemType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CoordinateSystemType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:2.4", name = "CoordinateSystem", scope = CoordinateSystemsType.class)
    public JAXBElement<CoordinateSystemType> createCoordinateSystemsTypeCoordinateSystem(CoordinateSystemType value) {
        return new JAXBElement<>(_CoordinateSystemsTypeCoordinateSystem_QNAME, CoordinateSystemType.class, CoordinateSystemsType.class, value);
    }

}
