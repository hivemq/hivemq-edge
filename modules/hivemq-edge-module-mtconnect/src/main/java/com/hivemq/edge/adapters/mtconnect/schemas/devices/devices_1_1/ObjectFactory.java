//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package com.hivemq.edge.adapters.mtconnect.schemas.devices.devices_1_1;

import javax.xml.namespace.QName;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlElementDecl;
import jakarta.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.hivemq.edge.adapters.mtconnect.schemas.devices.devices_1_1 package. 
 * <p>An ObjectFactory allows you to programmatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private static final QName _MTConnectDevices_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "MTConnectDevices");
    private static final QName _Component_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Component");
    private static final QName _CommonComponent_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "CommonComponent");
    private static final QName _Device_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Device");
    private static final QName _Controller_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Controller");
    private static final QName _Power_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Power");
    private static final QName _Sensor_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Sensor");
    private static final QName _Thermostat_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Thermostat");
    private static final QName _Vibration_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Vibration");
    private static final QName _Path_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Path");
    private static final QName _Actuator_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Actuator");
    private static final QName _Door_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Door");
    private static final QName _Axes_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Axes");
    private static final QName _Axis_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Axis");
    private static final QName _Linear_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Linear");
    private static final QName _Rotary_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Rotary");
    private static final QName _Spindle_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Spindle");
    private static final QName _Systems_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Systems");
    private static final QName _System_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "System");
    private static final QName _Pneumatic_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Pneumatic");
    private static final QName _Hydraulic_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Hydraulic");
    private static final QName _Lubrication_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Lubrication");
    private static final QName _Coolant_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Coolant");
    private static final QName _Electric_QNAME = new QName("urn:mtconnect.org:MTConnectDevices:1.1", "Electric");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.hivemq.edge.adapters.mtconnect.schemas.devices.devices_1_1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link MTConnectDevicesType }
     * 
     * @return
     *     the new instance of {@link MTConnectDevicesType }
     */
    public MTConnectDevicesType createMTConnectDevicesType() {
        return new MTConnectDevicesType();
    }

    /**
     * Create an instance of {@link CommonComponentType }
     * 
     * @return
     *     the new instance of {@link CommonComponentType }
     */
    public CommonComponentType createCommonComponentType() {
        return new CommonComponentType();
    }

    /**
     * Create an instance of {@link DeviceType }
     * 
     * @return
     *     the new instance of {@link DeviceType }
     */
    public DeviceType createDeviceType() {
        return new DeviceType();
    }

    /**
     * Create an instance of {@link ControllerType }
     * 
     * @return
     *     the new instance of {@link ControllerType }
     */
    public ControllerType createControllerType() {
        return new ControllerType();
    }

    /**
     * Create an instance of {@link PowerType }
     * 
     * @return
     *     the new instance of {@link PowerType }
     */
    public PowerType createPowerType() {
        return new PowerType();
    }

    /**
     * Create an instance of {@link SensorType }
     * 
     * @return
     *     the new instance of {@link SensorType }
     */
    public SensorType createSensorType() {
        return new SensorType();
    }

    /**
     * Create an instance of {@link ThermostatType }
     * 
     * @return
     *     the new instance of {@link ThermostatType }
     */
    public ThermostatType createThermostatType() {
        return new ThermostatType();
    }

    /**
     * Create an instance of {@link VibrationType }
     * 
     * @return
     *     the new instance of {@link VibrationType }
     */
    public VibrationType createVibrationType() {
        return new VibrationType();
    }

    /**
     * Create an instance of {@link PathType }
     * 
     * @return
     *     the new instance of {@link PathType }
     */
    public PathType createPathType() {
        return new PathType();
    }

    /**
     * Create an instance of {@link ActuatorType }
     * 
     * @return
     *     the new instance of {@link ActuatorType }
     */
    public ActuatorType createActuatorType() {
        return new ActuatorType();
    }

    /**
     * Create an instance of {@link DoorType }
     * 
     * @return
     *     the new instance of {@link DoorType }
     */
    public DoorType createDoorType() {
        return new DoorType();
    }

    /**
     * Create an instance of {@link AxesType }
     * 
     * @return
     *     the new instance of {@link AxesType }
     */
    public AxesType createAxesType() {
        return new AxesType();
    }

    /**
     * Create an instance of {@link LinearType }
     * 
     * @return
     *     the new instance of {@link LinearType }
     */
    public LinearType createLinearType() {
        return new LinearType();
    }

    /**
     * Create an instance of {@link RotaryType }
     * 
     * @return
     *     the new instance of {@link RotaryType }
     */
    public RotaryType createRotaryType() {
        return new RotaryType();
    }

    /**
     * Create an instance of {@link SpindleType }
     * 
     * @return
     *     the new instance of {@link SpindleType }
     */
    public SpindleType createSpindleType() {
        return new SpindleType();
    }

    /**
     * Create an instance of {@link SystemsType }
     * 
     * @return
     *     the new instance of {@link SystemsType }
     */
    public SystemsType createSystemsType() {
        return new SystemsType();
    }

    /**
     * Create an instance of {@link SystemType }
     * 
     * @return
     *     the new instance of {@link SystemType }
     */
    public SystemType createSystemType() {
        return new SystemType();
    }

    /**
     * Create an instance of {@link PneumaticType }
     * 
     * @return
     *     the new instance of {@link PneumaticType }
     */
    public PneumaticType createPneumaticType() {
        return new PneumaticType();
    }

    /**
     * Create an instance of {@link HydraulicType }
     * 
     * @return
     *     the new instance of {@link HydraulicType }
     */
    public HydraulicType createHydraulicType() {
        return new HydraulicType();
    }

    /**
     * Create an instance of {@link LubricationType }
     * 
     * @return
     *     the new instance of {@link LubricationType }
     */
    public LubricationType createLubricationType() {
        return new LubricationType();
    }

    /**
     * Create an instance of {@link CoolantType }
     * 
     * @return
     *     the new instance of {@link CoolantType }
     */
    public CoolantType createCoolantType() {
        return new CoolantType();
    }

    /**
     * Create an instance of {@link ElectricType }
     * 
     * @return
     *     the new instance of {@link ElectricType }
     */
    public ElectricType createElectricType() {
        return new ElectricType();
    }

    /**
     * Create an instance of {@link HeaderType }
     * 
     * @return
     *     the new instance of {@link HeaderType }
     */
    public HeaderType createHeaderType() {
        return new HeaderType();
    }

    /**
     * Create an instance of {@link DevicesType }
     * 
     * @return
     *     the new instance of {@link DevicesType }
     */
    public DevicesType createDevicesType() {
        return new DevicesType();
    }

    /**
     * Create an instance of {@link ComponentDescriptionType }
     * 
     * @return
     *     the new instance of {@link ComponentDescriptionType }
     */
    public ComponentDescriptionType createComponentDescriptionType() {
        return new ComponentDescriptionType();
    }

    /**
     * Create an instance of {@link ComponentsType }
     * 
     * @return
     *     the new instance of {@link ComponentsType }
     */
    public ComponentsType createComponentsType() {
        return new ComponentsType();
    }

    /**
     * Create an instance of {@link DataItemsType }
     * 
     * @return
     *     the new instance of {@link DataItemsType }
     */
    public DataItemsType createDataItemsType() {
        return new DataItemsType();
    }

    /**
     * Create an instance of {@link DataItemType }
     * 
     * @return
     *     the new instance of {@link DataItemType }
     */
    public DataItemType createDataItemType() {
        return new DataItemType();
    }

    /**
     * Create an instance of {@link DataItemLimitsType }
     * 
     * @return
     *     the new instance of {@link DataItemLimitsType }
     */
    public DataItemLimitsType createDataItemLimitsType() {
        return new DataItemLimitsType();
    }

    /**
     * Create an instance of {@link DataItemValueElementType }
     * 
     * @return
     *     the new instance of {@link DataItemValueElementType }
     */
    public DataItemValueElementType createDataItemValueElementType() {
        return new DataItemValueElementType();
    }

    /**
     * Create an instance of {@link SourceType }
     * 
     * @return
     *     the new instance of {@link SourceType }
     */
    public SourceType createSourceType() {
        return new SourceType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MTConnectDevicesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link MTConnectDevicesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "MTConnectDevices")
    public JAXBElement<MTConnectDevicesType> createMTConnectDevices(MTConnectDevicesType value) {
        return new JAXBElement<>(_MTConnectDevices_QNAME, MTConnectDevicesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Component")
    public JAXBElement<ComponentType> createComponent(ComponentType value) {
        return new JAXBElement<>(_Component_QNAME, ComponentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CommonComponentType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CommonComponentType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "CommonComponent", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "Component")
    public JAXBElement<CommonComponentType> createCommonComponent(CommonComponentType value) {
        return new JAXBElement<>(_CommonComponent_QNAME, CommonComponentType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeviceType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DeviceType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Device", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "Component")
    public JAXBElement<DeviceType> createDevice(DeviceType value) {
        return new JAXBElement<>(_Device_QNAME, DeviceType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ControllerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ControllerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Controller", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<ControllerType> createController(ControllerType value) {
        return new JAXBElement<>(_Controller_QNAME, ControllerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PowerType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PowerType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Power", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<PowerType> createPower(PowerType value) {
        return new JAXBElement<>(_Power_QNAME, PowerType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SensorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SensorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Sensor", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<SensorType> createSensor(SensorType value) {
        return new JAXBElement<>(_Sensor_QNAME, SensorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ThermostatType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ThermostatType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Thermostat", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "Sensor")
    public JAXBElement<ThermostatType> createThermostat(ThermostatType value) {
        return new JAXBElement<>(_Thermostat_QNAME, ThermostatType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VibrationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link VibrationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Vibration", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "Sensor")
    public JAXBElement<VibrationType> createVibration(VibrationType value) {
        return new JAXBElement<>(_Vibration_QNAME, VibrationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PathType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PathType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Path", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<PathType> createPath(PathType value) {
        return new JAXBElement<>(_Path_QNAME, PathType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ActuatorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ActuatorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Actuator", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<ActuatorType> createActuator(ActuatorType value) {
        return new JAXBElement<>(_Actuator_QNAME, ActuatorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DoorType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link DoorType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Door", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<DoorType> createDoor(DoorType value) {
        return new JAXBElement<>(_Door_QNAME, DoorType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AxesType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AxesType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Axes", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<AxesType> createAxes(AxesType value) {
        return new JAXBElement<>(_Axes_QNAME, AxesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AxisType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link AxisType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Axis", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<AxisType> createAxis(AxisType value) {
        return new JAXBElement<>(_Axis_QNAME, AxisType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinearType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LinearType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Linear", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "Axis")
    public JAXBElement<LinearType> createLinear(LinearType value) {
        return new JAXBElement<>(_Linear_QNAME, LinearType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RotaryType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link RotaryType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Rotary", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "Axis")
    public JAXBElement<RotaryType> createRotary(RotaryType value) {
        return new JAXBElement<>(_Rotary_QNAME, RotaryType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SpindleType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SpindleType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Spindle", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "Axis")
    public JAXBElement<SpindleType> createSpindle(SpindleType value) {
        return new JAXBElement<>(_Spindle_QNAME, SpindleType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SystemsType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SystemsType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Systems", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<SystemsType> createSystems(SystemsType value) {
        return new JAXBElement<>(_Systems_QNAME, SystemsType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SystemType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link SystemType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "System", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "CommonComponent")
    public JAXBElement<SystemType> createSystem(SystemType value) {
        return new JAXBElement<>(_System_QNAME, SystemType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PneumaticType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link PneumaticType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Pneumatic", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "System")
    public JAXBElement<PneumaticType> createPneumatic(PneumaticType value) {
        return new JAXBElement<>(_Pneumatic_QNAME, PneumaticType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link HydraulicType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link HydraulicType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Hydraulic", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "System")
    public JAXBElement<HydraulicType> createHydraulic(HydraulicType value) {
        return new JAXBElement<>(_Hydraulic_QNAME, HydraulicType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LubricationType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link LubricationType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Lubrication", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "System")
    public JAXBElement<LubricationType> createLubrication(LubricationType value) {
        return new JAXBElement<>(_Lubrication_QNAME, LubricationType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CoolantType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link CoolantType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Coolant", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "System")
    public JAXBElement<CoolantType> createCoolant(CoolantType value) {
        return new JAXBElement<>(_Coolant_QNAME, CoolantType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElectricType }{@code >}
     * 
     * @param value
     *     Java instance representing xml element's value.
     * @return
     *     the new instance of {@link JAXBElement }{@code <}{@link ElectricType }{@code >}
     */
    @XmlElementDecl(namespace = "urn:mtconnect.org:MTConnectDevices:1.1", name = "Electric", substitutionHeadNamespace = "urn:mtconnect.org:MTConnectDevices:1.1", substitutionHeadName = "System")
    public JAXBElement<ElectricType> createElectric(ElectricType value) {
        return new JAXBElement<>(_Electric_QNAME, ElectricType.class, null, value);
    }

}
